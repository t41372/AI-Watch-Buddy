/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/page";
exports.ids = ["app/page"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=export&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=export&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/module.compiled.js?cc4a\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/app-render/interop-default */ \"(rsc)/./node_modules/next/dist/server/app-render/interop-default.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/experimental/ppr */ \"(rsc)/./node_modules/next/dist/server/lib/experimental/ppr.js\");\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/request/fallback-params */ \"(rsc)/./node_modules/next/dist/server/request/fallback-params.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/app-render/encryption-utils */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption-utils.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/lib/streaming-metadata */ \"(rsc)/./node_modules/next/dist/server/lib/streaming-metadata.js\");\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/app-render/action-utils */ \"(rsc)/./node_modules/next/dist/server/app-render/action-utils.js\");\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/server/lib/server-action-request-meta */ \"(rsc)/./node_modules/next/dist/server/lib/server-action-request-meta.js\");\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/client/components/app-router-headers */ \"(rsc)/./node_modules/next/dist/client/components/app-router-headers.js\");\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/is-bot */ \"next/dist/shared/lib/router/utils/is-bot\");\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! next/dist/lib/fallback */ \"(rsc)/./node_modules/next/dist/lib/fallback.js\");\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! next/dist/server/render-result */ \"(rsc)/./node_modules/next/dist/server/render-result.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! next/dist/server/stream-utils/encoded-tags */ \"(rsc)/./node_modules/next/dist/server/stream-utils/encoded-tags.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! next/dist/server/send-payload */ \"(rsc)/./node_modules/next/dist/server/send-payload.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\");\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! next/dist/client/components/redirect-status-code */ \"(rsc)/./node_modules/next/dist/client/components/redirect-status-code.js\");\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\",\"handler\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst module0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\"));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\nconst module2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/not-found.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/not-found.js\", 23));\nconst module3 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/forbidden.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/forbidden.js\", 23));\nconst module4 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/unauthorized.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/unauthorized.js\", 23));\nconst page5 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(rsc)/./src/app/page.tsx\"));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page5, \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\"],\n          \n        }]\n      },\n        {\n        'layout': [module0, \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/layout.tsx\"],\n'global-error': [module1, \"next/dist/client/components/builtin/global-error.js\"],\n'not-found': [module2, \"next/dist/client/components/builtin/not-found.js\"],\n'forbidden': [module3, \"next/dist/client/components/builtin/forbidden.js\"],\n'unauthorized': [module4, \"next/dist/client/components/builtin/unauthorized.js\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\"];\n\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/page\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    },\n    distDir: \"dist\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    var _this;\n    let srcPage = \"/page\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const initialPostponed = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'postponed');\n    // TODO: replace with more specific flags\n    const minimalMode = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'minimalMode');\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, query, params, parsedUrl, pageIsDynamic, buildManifest, nextFontManifest, reactLoadableManifest, serverActionsManifest, clientReferenceManifest, subresourceIntegrityManifest, prerenderManifest, isDraftMode, resolvedPathname, revalidateOnlyGenerated, routerServerContext, nextConfig } = prepareResult;\n    const pathname = parsedUrl.pathname || '/';\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__.normalizeAppPath)(srcPage);\n    let { isOnDemandRevalidate } = prepareResult;\n    const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n    const isPrerendered = prerenderManifest.routes[resolvedPathname];\n    let isSSG = Boolean(prerenderInfo || isPrerendered || prerenderManifest.routes[normalizedSrcPage]);\n    const userAgent = req.headers['user-agent'] || '';\n    const botType = (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__.getBotType)(userAgent);\n    const isHtmlBot = (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__.isHtmlBotRequest)(req);\n    /**\n   * If true, this indicates that the request being made is for an app\n   * prefetch request.\n   */ const isPrefetchRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isPrefetchRSCRequest') ?? Boolean(req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_ROUTER_PREFETCH_HEADER]);\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n    const isRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isRSCRequest') ?? Boolean(req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.RSC_HEADER]);\n    const isPossibleServerAction = (0,next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__.getIsPossibleServerAction)(req);\n    /**\n   * If the route being rendered is an app page, and the ppr feature has been\n   * enabled, then the given route _could_ support PPR.\n   */ const couldSupportPPR = (0,next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__.checkIsAppPPREnabled)(nextConfig.experimental.ppr);\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery =  false && 0;\n    // When enabled, this will allow the use of the `?__nextppronly` query\n    // to enable debugging of the fallback shell.\n    const hasDebugFallbackShellQuery = hasDebugStaticShellQuery && query.__nextppronly === 'fallback';\n    // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled = couldSupportPPR && (((_this = prerenderManifest.routes[normalizedSrcPage] ?? prerenderManifest.dynamicRoutes[normalizedSrcPage]) == null ? void 0 : _this.renderingMode) === 'PARTIALLY_STATIC' || // Ideally we'd want to check the appConfig to see if this page has PPR\n    // enabled or not, but that would require plumbing the appConfig through\n    // to the server during development. We assume that the page supports it\n    // but only during development.\n    hasDebugStaticShellQuery && (routeModule.isDev === true || (routerServerContext == null ? void 0 : routerServerContext.experimentalTestProxy) === true));\n    const isDebugStaticShell = hasDebugStaticShellQuery && isRoutePPREnabled;\n    // We should enable debugging dynamic accesses when the static shell\n    // debugging has been enabled and we're also in development mode.\n    const isDebugDynamicAccesses = isDebugStaticShell && routeModule.isDev === true;\n    const isDebugFallbackShell = hasDebugFallbackShellQuery && isRoutePPREnabled;\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled ? initialPostponed : undefined;\n    // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n    // we can use this fact to only generate the flight data for the request\n    // because we can't cache the HTML (as it's also dynamic).\n    const isDynamicRSCRequest = isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest;\n    // Need to read this before it's stripped by stripFlightHeaders. We don't\n    // need to transfer it to the request meta because it's only read\n    // within this function; the static segment data should have already been\n    // generated, so we will always either return a static response or a 404.\n    const segmentPrefetchHeader = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'segmentPrefetchRSCRequest');\n    // TODO: investigate existing bug with shouldServeStreamingMetadata always\n    // being true for a revalidate due to modifying the base-server this.renderOpts\n    // when fixing this to correct logic it causes hydration issue since we set\n    // serveStreamingMetadata to true during export\n    let serveStreamingMetadata = !userAgent ? true : (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__.shouldServeStreamingMetadata)(userAgent, nextConfig.htmlLimitedBots);\n    if (isHtmlBot && isRoutePPREnabled) {\n        isSSG = false;\n        serveStreamingMetadata = false;\n    }\n    // In development, we always want to generate dynamic HTML.\n    let supportsDynamicResponse = // If we're in development, we always support dynamic HTML, unless it's\n    // a data request, in which case we only produce static HTML.\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isSSG || // If this request has provided postponed data, it supports dynamic\n    // HTML.\n    typeof initialPostponed === 'string' || // If this is a dynamic RSC request, then this render supports dynamic\n    // HTML (it's dynamic).\n    isDynamicRSCRequest;\n    // When html bots request PPR page, perform the full dynamic rendering.\n    const shouldWaitOnAllReady = isHtmlBot && isRoutePPREnabled;\n    let ssgCacheKey = null;\n    if (!isDraftMode && isSSG && !supportsDynamicResponse && !isPossibleServerAction && !minimalPostponed && !isDynamicRSCRequest) {\n        ssgCacheKey = resolvedPathname;\n    }\n    // the staticPathKey differs from ssgCacheKey since\n    // ssgCacheKey is null in dev since we're always in \"dynamic\"\n    // mode in dev to bypass the cache, but we still need to honor\n    // dynamicParams = false in dev mode\n    let staticPathKey = ssgCacheKey;\n    if (!staticPathKey && routeModule.isDev) {\n        staticPathKey = resolvedPathname;\n    }\n    const ComponentMod = {\n        ...next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__,\n        tree,\n        pages,\n        GlobalError: (next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default()),\n        handler,\n        routeModule,\n        __next_app__\n    };\n    // Before rendering (which initializes component tree modules), we have to\n    // set the reference manifests to our global store so Server Action's\n    // encryption util can access to them at the top level of the page module.\n    if (serverActionsManifest && clientReferenceManifest) {\n        (0,next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__.setReferenceManifestsSingleton)({\n            page: srcPage,\n            clientReferenceManifest,\n            serverActionsManifest,\n            serverModuleMap: (0,next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__.createServerModuleMap)({\n                serverActionsManifest\n            })\n        });\n    }\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    try {\n        const invokeRouteModule = async (span, context)=>{\n            const nextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__.NodeNextRequest(req);\n            const nextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__.NodeNextResponse(res);\n            // TODO: adapt for putting the RDC inside the postponed data\n            // If we're in dev, and this isn't a prefetch or a server action,\n            // we should seed the resume data cache.\n            if (true) {\n                if (nextConfig.experimental.dynamicIO && !isPrefetchRSCRequest && !context.renderOpts.isPossibleServerAction) {\n                    const warmup = await routeModule.warmup(nextReq, nextRes, context);\n                    // If the warmup is successful, we should use the resume data\n                    // cache from the warmup.\n                    if (warmup.metadata.renderResumeDataCache) {\n                        context.renderOpts.renderResumeDataCache = warmup.metadata.renderResumeDataCache;\n                    }\n                }\n            }\n            return routeModule.render(nextReq, nextRes, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const doRender = async ({ span, postponed, fallbackRouteParams })=>{\n            const context = {\n                query,\n                params,\n                page: normalizedSrcPage,\n                sharedContext: {\n                    buildId\n                },\n                serverComponentsHmrCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'serverComponentsHmrCache'),\n                fallbackRouteParams,\n                renderOpts: {\n                    App: ()=>null,\n                    Document: ()=>null,\n                    pageConfig: {},\n                    ComponentMod,\n                    Component: (0,next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__.interopDefault)(ComponentMod),\n                    params,\n                    routeModule,\n                    page: srcPage,\n                    postponed,\n                    shouldWaitOnAllReady,\n                    serveStreamingMetadata,\n                    supportsDynamicResponse: typeof postponed === 'string' || supportsDynamicResponse,\n                    buildManifest,\n                    nextFontManifest,\n                    reactLoadableManifest,\n                    subresourceIntegrityManifest,\n                    serverActionsManifest,\n                    clientReferenceManifest,\n                    setIsrStatus: routerServerContext == null ? void 0 : routerServerContext.setIsrStatus,\n                    dir: routeModule.projectDir,\n                    isDraftMode,\n                    isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n                    botType,\n                    isOnDemandRevalidate,\n                    isPossibleServerAction,\n                    assetPrefix: nextConfig.assetPrefix,\n                    nextConfigOutput: nextConfig.output,\n                    crossOrigin: nextConfig.crossOrigin,\n                    trailingSlash: nextConfig.trailingSlash,\n                    previewProps: prerenderManifest.preview,\n                    deploymentId: nextConfig.deploymentId,\n                    enableTainting: nextConfig.experimental.taint,\n                    htmlLimitedBots: nextConfig.htmlLimitedBots,\n                    devtoolSegmentExplorer: nextConfig.experimental.devtoolSegmentExplorer,\n                    reactMaxHeadersLength: nextConfig.reactMaxHeadersLength,\n                    multiZoneDraftMode,\n                    incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'incrementalCache'),\n                    cacheLifeProfiles: nextConfig.experimental.cacheLife,\n                    basePath: nextConfig.basePath,\n                    serverActions: nextConfig.experimental.serverActions,\n                    ...isDebugStaticShell || isDebugDynamicAccesses ? {\n                        nextExport: true,\n                        supportsDynamicResponse: false,\n                        isStaticGeneration: true,\n                        isRevalidate: true,\n                        isDebugDynamicAccesses: isDebugDynamicAccesses\n                    } : {},\n                    experimental: {\n                        isRoutePPREnabled,\n                        expireTime: nextConfig.expireTime,\n                        staleTimes: nextConfig.experimental.staleTimes,\n                        dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                        clientSegmentCache: Boolean(nextConfig.experimental.clientSegmentCache),\n                        dynamicOnHover: Boolean(nextConfig.experimental.dynamicOnHover),\n                        inlineCss: Boolean(nextConfig.experimental.inlineCss),\n                        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n                        clientTraceMetadata: nextConfig.experimental.clientTraceMetadata || []\n                    },\n                    waitUntil: ctx.waitUntil,\n                    onClose: (cb)=>{\n                        res.on('close', cb);\n                    },\n                    onAfterTaskError: ()=>{},\n                    onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext),\n                    err: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'invokeError'),\n                    dev: routeModule.isDev\n                }\n            };\n            const result = await invokeRouteModule(span, context);\n            const { metadata } = result;\n            const { cacheControl, headers = {}, // Add any fetch tags that were on the page to the response headers.\n            fetchTags: cacheTags } = metadata;\n            if (cacheTags) {\n                headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n            }\n            // Pull any fetch metrics from the render onto the request.\n            ;\n            req.fetchMetrics = metadata.fetchMetrics;\n            // we don't throw static to dynamic errors in dev as isSSG\n            // is a best guess in dev since we don't have the prerender pass\n            // to know whether the path is actually static or not\n            if (isSSG && (cacheControl == null ? void 0 : cacheControl.revalidate) === 0 && !routeModule.isDev && !isRoutePPREnabled) {\n                const staticBailoutInfo = metadata.staticBailoutInfo;\n                const err = Object.defineProperty(new Error(`Page changed from static to dynamic at runtime ${resolvedPathname}${(staticBailoutInfo == null ? void 0 : staticBailoutInfo.description) ? `, reason: ${staticBailoutInfo.description}` : ``}` + `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E132\",\n                    enumerable: false,\n                    configurable: true\n                });\n                if (staticBailoutInfo == null ? void 0 : staticBailoutInfo.stack) {\n                    const stack = staticBailoutInfo.stack;\n                    err.stack = err.message + stack.substring(stack.indexOf('\\n'));\n                }\n                throw err;\n            }\n            return {\n                value: {\n                    kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE,\n                    html: result,\n                    headers,\n                    rscData: metadata.flightData,\n                    postponed: metadata.postponed,\n                    status: metadata.statusCode,\n                    segmentData: metadata.segmentData\n                },\n                cacheControl\n            };\n        };\n        const responseGenerator = async ({ hasResolved, previousCacheEntry, isRevalidating, span })=>{\n            const isProduction = routeModule.isDev === false;\n            const didRespond = hasResolved || res.writableEnded;\n            // skip on-demand revalidate if cache is not present and\n            // revalidate-if-generated is set\n            if (isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry && !minimalMode) {\n                if (routerServerContext == null ? void 0 : routerServerContext.render404) {\n                    await routerServerContext.render404(req, res);\n                } else {\n                    res.statusCode = 404;\n                    res.end('This page could not be found');\n                }\n                return null;\n            }\n            let fallbackMode;\n            if (prerenderInfo) {\n                fallbackMode = (0,next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.parseFallbackField)(prerenderInfo.fallback);\n            }\n            // When serving a bot request, we want to serve a blocking render and not\n            // the prerendered page. This ensures that the correct content is served\n            // to the bot in the head.\n            if (fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.PRERENDER && (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__.isBot)(userAgent)) {\n                fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if ((previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) === -1) {\n                isOnDemandRevalidate = true;\n            }\n            // TODO: adapt for PPR\n            // only allow on-demand revalidate for fallback: true/blocking\n            // or for prerendered fallback: false paths\n            if (isOnDemandRevalidate && (fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.NOT_FOUND || previousCacheEntry)) {\n                fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if (!minimalMode && fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER && staticPathKey && !didRespond && !isDraftMode && pageIsDynamic && (isProduction || !isPrerendered)) {\n                // if the page has dynamicParams: false and this pathname wasn't\n                // prerendered trigger the no fallback handling\n                if (// In development, fall through to render to handle missing\n                // getStaticPaths.\n                (isProduction || prerenderInfo) && // When fallback isn't present, abort this render so we 404\n                fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.NOT_FOUND) {\n                    throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__.NoFallbackError();\n                }\n                let fallbackResponse;\n                if (isRoutePPREnabled && !isRSCRequest) {\n                    // We use the response cache here to handle the revalidation and\n                    // management of the fallback shell.\n                    fallbackResponse = await routeModule.handleResponse({\n                        cacheKey: isProduction ? normalizedSrcPage : null,\n                        req,\n                        nextConfig,\n                        routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                        isFallback: true,\n                        prerenderManifest,\n                        isRoutePPREnabled,\n                        responseGenerator: async ()=>doRender({\n                                span,\n                                // We pass `undefined` as rendering a fallback isn't resumed\n                                // here.\n                                postponed: undefined,\n                                fallbackRouteParams: // If we're in production or we're debugging the fallback\n                                // shell then we should postpone when dynamic params are\n                                // accessed.\n                                isProduction || isDebugFallbackShell ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__.getFallbackRouteParams)(normalizedSrcPage) : null\n                            }),\n                        waitUntil: ctx.waitUntil\n                    });\n                    // If the fallback response was set to null, then we should return null.\n                    if (fallbackResponse === null) return null;\n                    // Otherwise, if we did get a fallback response, we should return it.\n                    if (fallbackResponse) {\n                        // Remove the cache control from the response to prevent it from being\n                        // used in the surrounding cache.\n                        delete fallbackResponse.cacheControl;\n                        return fallbackResponse;\n                    }\n                }\n            }\n            // Only requests that aren't revalidating can be resumed. If we have the\n            // minimal postponed data, then we should resume the render with it.\n            const postponed = !isOnDemandRevalidate && !isRevalidating && minimalPostponed ? minimalPostponed : undefined;\n            // When we're in minimal mode, if we're trying to debug the static shell,\n            // we should just return nothing instead of resuming the dynamic render.\n            if ((isDebugStaticShell || isDebugDynamicAccesses) && typeof postponed !== 'undefined') {\n                return {\n                    cacheControl: {\n                        revalidate: 1,\n                        expire: undefined\n                    },\n                    value: {\n                        kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.PAGES,\n                        html: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(''),\n                        pageData: {},\n                        headers: undefined,\n                        status: undefined\n                    }\n                };\n            }\n            // If this is a dynamic route with PPR enabled and the default route\n            // matches were set, then we should pass the fallback route params to\n            // the renderer as this is a fallback revalidation request.\n            const fallbackRouteParams = pageIsDynamic && isRoutePPREnabled && ((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'renderFallbackShell') || isDebugFallbackShell) ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__.getFallbackRouteParams)(pathname) : null;\n            // Perform the render.\n            return doRender({\n                span,\n                postponed,\n                fallbackRouteParams\n            });\n        };\n        const handleResponse = async (span)=>{\n            var _cacheEntry_value, _cachedData_headers;\n            const cacheEntry = await routeModule.handleResponse({\n                cacheKey: ssgCacheKey,\n                responseGenerator: (c)=>responseGenerator({\n                        span,\n                        ...c\n                    }),\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                isOnDemandRevalidate,\n                isRoutePPREnabled,\n                req,\n                nextConfig,\n                prerenderManifest,\n                waitUntil: ctx.waitUntil\n            });\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            // In dev, we should not cache pages for any reason.\n            if (routeModule.isDev) {\n                res.setHeader('Cache-Control', 'no-store, must-revalidate');\n            }\n            if (!cacheEntry) {\n                if (ssgCacheKey) {\n                    // A cache entry might not be generated if a response is written\n                    // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n                    // have a cache key. If we do have a cache key but we don't end up\n                    // with a cache entry, then either Next.js or the application has a\n                    // bug that needs fixing.\n                    throw Object.defineProperty(new Error('invariant: cache entry required but not generated'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E62\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                return null;\n            }\n            if (((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant app-page handler received invalid cache entry ${(_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E707\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            const didPostpone = typeof cacheEntry.value.postponed === 'string';\n            if (isSSG && // We don't want to send a cache header for requests that contain dynamic\n            // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n            // request, then we should set the cache header.\n            !isDynamicRSCRequest && (!didPostpone || isPrefetchRSCRequest)) {\n                if (!minimalMode) {\n                    // set x-nextjs-cache header to match the header\n                    // we set for the image-optimizer\n                    res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n                }\n                // Set a header used by the client router to signal the response is static\n                // and should respect the `static` cache staleTime value.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_IS_PRERENDER_HEADER, '1');\n            }\n            const { value: cachedData } = cacheEntry;\n            // Coerce the cache control parameter from the render.\n            let cacheControl;\n            // If this is a resume request in minimal mode it is streamed with dynamic\n            // content and should not be cached.\n            if (minimalPostponed) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (minimalMode && isRSCRequest && !isPrefetchRSCRequest && isRoutePPREnabled) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (!routeModule.isDev) {\n                // If this is a preview mode request, we shouldn't cache it\n                if (isDraftMode) {\n                    cacheControl = {\n                        revalidate: 0,\n                        expire: undefined\n                    };\n                } else if (!isSSG) {\n                    if (!res.getHeader('Cache-Control')) {\n                        cacheControl = {\n                            revalidate: 0,\n                            expire: undefined\n                        };\n                    }\n                } else if (cacheEntry.cacheControl) {\n                    // If the cache entry has a cache control with a revalidate value that's\n                    // a number, use it.\n                    if (typeof cacheEntry.cacheControl.revalidate === 'number') {\n                        var _cacheEntry_cacheControl;\n                        if (cacheEntry.cacheControl.revalidate < 1) {\n                            throw Object.defineProperty(new Error(`Invalid revalidate configuration provided: ${cacheEntry.cacheControl.revalidate} < 1`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E22\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheControl = {\n                            revalidate: cacheEntry.cacheControl.revalidate,\n                            expire: ((_cacheEntry_cacheControl = cacheEntry.cacheControl) == null ? void 0 : _cacheEntry_cacheControl.expire) ?? nextConfig.expireTime\n                        };\n                    } else {\n                        cacheControl = {\n                            revalidate: next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.CACHE_ONE_YEAR,\n                            expire: undefined\n                        };\n                    }\n                }\n            }\n            cacheEntry.cacheControl = cacheControl;\n            if (typeof segmentPrefetchHeader === 'string' && (cachedData == null ? void 0 : cachedData.kind) === next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE && cachedData.segmentData) {\n                var _cachedData_headers1;\n                // This is a prefetch request issued by the client Segment Cache. These\n                // should never reach the application layer (lambda). We should either\n                // respond from the cache (HIT) or respond with 204 No Content (MISS).\n                // Set a header to indicate that PPR is enabled for this route. This\n                // lets the client distinguish between a regular cache miss and a cache\n                // miss due to PPR being disabled. In other contexts this header is used\n                // to indicate that the response contains dynamic data, but here we're\n                // only using it to indicate that the feature is enabled — the segment\n                // response itself contains whether the data is dynamic.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_DID_POSTPONE_HEADER, '2');\n                // Add the cache tags header to the response if it exists and we're in\n                // minimal mode while rendering a static page.\n                const tags = (_cachedData_headers1 = cachedData.headers) == null ? void 0 : _cachedData_headers1[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n                if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                    res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER, tags);\n                }\n                const matchedSegment = cachedData.segmentData.get(segmentPrefetchHeader);\n                if (matchedSegment !== undefined) {\n                    // Cache hit\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                        req,\n                        res,\n                        type: 'rsc',\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(matchedSegment),\n                        cacheControl: cacheEntry.cacheControl\n                    });\n                }\n                // Cache miss. Either a cache entry for this route has not been generated\n                // (which technically should not be possible when PPR is enabled, because\n                // at a minimum there should always be a fallback entry) or there's no\n                // match for the requested segment. Respond with a 204 No Content. We\n                // don't bother to respond with 404, because these requests are only\n                // issued as part of a prefetch.\n                res.statusCode = 204;\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'rsc',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(''),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If there's a callback for `onCacheEntry`, call it with the cache entry\n            // and the revalidate options.\n            const onCacheEntry = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'onCacheEntry');\n            if (onCacheEntry) {\n                const finished = await onCacheEntry({\n                    ...cacheEntry,\n                    // TODO: remove this when upstream doesn't\n                    // always expect this value to be \"PAGE\"\n                    value: {\n                        ...cacheEntry.value,\n                        kind: 'PAGE'\n                    }\n                }, {\n                    url: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'initURL')\n                });\n                if (finished) {\n                    // TODO: maybe we have to end the request?\n                    return null;\n                }\n            }\n            // If the request has a postponed state and it's a resume request we\n            // should error.\n            if (didPostpone && minimalPostponed) {\n                throw Object.defineProperty(new Error('Invariant: postponed state should not be present on a resume request'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E396\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (cachedData.headers) {\n                const headers = {\n                    ...cachedData.headers\n                };\n                if (!minimalMode || !isSSG) {\n                    delete headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n                }\n                for (let [key, value] of Object.entries(headers)){\n                    if (typeof value === 'undefined') continue;\n                    if (Array.isArray(value)) {\n                        for (const v of value){\n                            res.appendHeader(key, v);\n                        }\n                    } else if (typeof value === 'number') {\n                        value = value.toString();\n                        res.appendHeader(key, value);\n                    } else {\n                        res.appendHeader(key, value);\n                    }\n                }\n            }\n            // Add the cache tags header to the response if it exists and we're in\n            // minimal mode while rendering a static page.\n            const tags = (_cachedData_headers = cachedData.headers) == null ? void 0 : _cachedData_headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n            if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER, tags);\n            }\n            // If the request is a data request, then we shouldn't set the status code\n            // from the response because it should always be 200. This should be gated\n            // behind the experimental PPR flag.\n            if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n                res.statusCode = cachedData.status;\n            }\n            // Redirect information is encoded in RSC payload, so we don't need to use redirect status codes\n            if (!minimalMode && cachedData.status && next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__.RedirectStatusCode[cachedData.status] && isRSCRequest) {\n                res.statusCode = 200;\n            }\n            // Mark that the request did postpone.\n            if (didPostpone) {\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_DID_POSTPONE_HEADER, '1');\n            }\n            // we don't go through this block when preview mode is true\n            // as preview mode is a dynamic request (bypasses cache) and doesn't\n            // generate both HTML and payloads in the same request so continue to just\n            // return the generated payload\n            if (isRSCRequest && !isDraftMode) {\n                // If this is a dynamic RSC request, then stream the response.\n                if (typeof cachedData.rscData === 'undefined') {\n                    if (cachedData.postponed) {\n                        throw Object.defineProperty(new Error('Invariant: Expected postponed to be undefined'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E372\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                        req,\n                        res,\n                        type: 'rsc',\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: cachedData.html,\n                        // Dynamic RSC responses cannot be cached, even if they're\n                        // configured with `force-static` because we have no way of\n                        // distinguishing between `force-static` and pages that have no\n                        // postponed state.\n                        // TODO: distinguish `force-static` from pages with no postponed state (static)\n                        cacheControl: isDynamicRSCRequest ? {\n                            revalidate: 0,\n                            expire: undefined\n                        } : cacheEntry.cacheControl\n                    });\n                }\n                // As this isn't a prefetch request, we should serve the static flight\n                // data.\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'rsc',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(cachedData.rscData),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // This is a request for HTML data.\n            let body = cachedData.html;\n            // If there's no postponed state, we should just serve the HTML. This\n            // should also be the case for a resume request because it's completed\n            // as a server render (rather than a static render).\n            if (!didPostpone || minimalMode) {\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'html',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If we're debugging the static shell or the dynamic API accesses, we\n            // should just serve the HTML without resuming the render. The returned\n            // HTML will be the static shell so all the Dynamic API's will be used\n            // during static generation.\n            if (isDebugStaticShell || isDebugDynamicAccesses) {\n                // Since we're not resuming the render, we need to at least add the\n                // closing body and html tags to create valid HTML.\n                body.chain(new ReadableStream({\n                    start (controller) {\n                        controller.enqueue(next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_21__.ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n                        controller.close();\n                    }\n                }));\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'html',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: {\n                        revalidate: 0,\n                        expire: undefined\n                    }\n                });\n            }\n            // This request has postponed, so let's create a new transformer that the\n            // dynamic data can pipe to that will attach the dynamic data to the end\n            // of the response.\n            const transformer = new TransformStream();\n            body.chain(transformer.readable);\n            // Perform the render again, but this time, provide the postponed state.\n            // We don't await because we want the result to start streaming now, and\n            // we've already chained the transformer's readable to the render result.\n            doRender({\n                span,\n                postponed: cachedData.postponed,\n                // This is a resume render, not a fallback render, so we don't need to\n                // set this.\n                fallbackRouteParams: null\n            }).then(async (result)=>{\n                var _result_value;\n                if (!result) {\n                    throw Object.defineProperty(new Error('Invariant: expected a result to be returned'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E463\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                if (((_result_value = result.value) == null ? void 0 : _result_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE) {\n                    var _result_value1;\n                    throw Object.defineProperty(new Error(`Invariant: expected a page response, got ${(_result_value1 = result.value) == null ? void 0 : _result_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E305\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // Pipe the resume result to the transformer.\n                await result.value.html.pipeTo(transformer.writable);\n            }).catch((err)=>{\n                // An error occurred during piping or preparing the render, abort\n                // the transformers writer so we can terminate the stream.\n                transformer.writable.abort(err).catch((e)=>{\n                    console.error(\"couldn't abort transformer\", e);\n                });\n            });\n            return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                req,\n                res,\n                type: 'html',\n                generateEtags: nextConfig.generateEtags,\n                poweredByHeader: nextConfig.poweredByHeader,\n                result: body,\n                // We don't want to cache the response if it has postponed data because\n                // the response being sent to the client it's dynamic parts are streamed\n                // to the client on the same request.\n                cacheControl: {\n                    revalidate: 0,\n                    expire: undefined\n                }\n            });\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            return await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'render',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__.getRevalidateReason)({\n                    isRevalidate: isSSG,\n                    isOnDemandRevalidate\n                })\n            }, routerServerContext);\n        }\n        // rethrow so that we can handle serving error page\n        throw err;\n    }\n}\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=export&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(rsc)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(rsc)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/metadata-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/metadata/metadata-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(rsc)/./node_modules/next/dist/lib/metadata/generate/icon-mark.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(rsc)/./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGRXRoYW5MZWUlMkZEZXNrdG9wJTJGQWR2WCUyRkFJLVdhdGNoLUJ1ZGR5JTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZidWlsdGluJTJGZ2xvYmFsLWVycm9yLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGRXRoYW5MZWUlMkZEZXNrdG9wJTJGQWR2WCUyRkFJLVdhdGNoLUJ1ZGR5JTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZjbGllbnQtcGFnZS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRkV0aGFuTGVlJTJGRGVza3RvcCUyRkFkdlglMkZBSS1XYXRjaC1CdWRkeSUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmh0dHAtYWNjZXNzLWZhbGxiYWNrJTJGZXJyb3ItYm91bmRhcnkuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmxheW91dC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRm1ldGFkYXRhJTJGYXN5bmMtbWV0YWRhdGEuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRm1ldGFkYXRhJTJGbWV0YWRhdGEtYm91bmRhcnkuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRnJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGbGliJTJGbWV0YWRhdGElMkZnZW5lcmF0ZSUyRmljb24tbWFyay5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRkV0aGFuTGVlJTJGRGVza3RvcCUyRkFkdlglMkZBSS1XYXRjaC1CdWRkeSUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZuZXh0LWRldnRvb2xzJTJGdXNlcnNwYWNlJTJGYXBwJTJGc2VnbWVudC1leHBsb3Jlci1ub2RlLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxzUEFBMEo7QUFDMUo7QUFDQSxvT0FBaUo7QUFDako7QUFDQSwwT0FBb0o7QUFDcEo7QUFDQSxvUkFBeUs7QUFDeks7QUFDQSx3T0FBbUo7QUFDbko7QUFDQSw0UEFBNko7QUFDN0o7QUFDQSxrUUFBZ0s7QUFDaEs7QUFDQSxzUUFBa0s7QUFDbEs7QUFDQSx3T0FBbUo7QUFDbko7QUFDQSw0UUFBcUsiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9idWlsdGluL2dsb2JhbC1lcnJvci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LXNlZ21lbnQuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9odHRwLWFjY2Vzcy1mYWxsYmFjay9lcnJvci1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2xheW91dC1yb3V0ZXIuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9tZXRhZGF0YS9hc3luYy1tZXRhZGF0YS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL21ldGFkYXRhL21ldGFkYXRhLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9tZXRhZGF0YS9nZW5lcmF0ZS9pY29uLW1hcmsuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LWRldnRvb2xzL3VzZXJzcGFjZS9hcHAvc2VnbWVudC1leHBsb3Jlci1ub2RlLmpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!*******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \*******************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(rsc)/./src/app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGRXRoYW5MZWUlMkZEZXNrdG9wJTJGQWR2WCUyRkFJLVdhdGNoLUJ1ZGR5JTJGZnJvbnRlbmQlMkZzcmMlMkZhcHAlMkZwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsZ0pBQTBHIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL3NyYy9hcHAvcGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fchat-context.tsx%22%2C%22ids%22%3A%5B%22ChatProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Flive2d-config-context.tsx%22%2C%22ids%22%3A%5B%22Live2DConfigProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fmicrophone-context.tsx%22%2C%22ids%22%3A%5B%22MicrophoneProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fsettings-context.tsx%22%2C%22ids%22%3A%5B%22SettingsProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Findex.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fchat-context.tsx%22%2C%22ids%22%3A%5B%22ChatProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Flive2d-config-context.tsx%22%2C%22ids%22%3A%5B%22Live2DConfigProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fmicrophone-context.tsx%22%2C%22ids%22%3A%5B%22MicrophoneProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fsettings-context.tsx%22%2C%22ids%22%3A%5B%22SettingsProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Findex.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/context/chat-context.tsx */ \"(rsc)/./src/context/chat-context.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/context/live2d-config-context.tsx */ \"(rsc)/./src/context/live2d-config-context.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/context/microphone-context.tsx */ \"(rsc)/./src/context/microphone-context.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/context/settings-context.tsx */ \"(rsc)/./src/context/settings-context.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGRXRoYW5MZWUlMkZEZXNrdG9wJTJGQWR2WCUyRkFJLVdhdGNoLUJ1ZGR5JTJGZnJvbnRlbmQlMkZzcmMlMkZjb250ZXh0JTJGY2hhdC1jb250ZXh0LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMkNoYXRQcm92aWRlciUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRkV0aGFuTGVlJTJGRGVza3RvcCUyRkFkdlglMkZBSS1XYXRjaC1CdWRkeSUyRmZyb250ZW5kJTJGc3JjJTJGY29udGV4dCUyRmxpdmUyZC1jb25maWctY29udGV4dC50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJMaXZlMkRDb25maWdQcm92aWRlciUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRkV0aGFuTGVlJTJGRGVza3RvcCUyRkFkdlglMkZBSS1XYXRjaC1CdWRkeSUyRmZyb250ZW5kJTJGc3JjJTJGY29udGV4dCUyRm1pY3JvcGhvbmUtY29udGV4dC50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJNaWNyb3Bob25lUHJvdmlkZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRnNyYyUyRmNvbnRleHQlMkZzZXR0aW5ncy1jb250ZXh0LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlNldHRpbmdzUHJvdmlkZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRnNyYyUyRmluZGV4LmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsd0tBQXdKO0FBQ3hKO0FBQ0EsMExBQXlLO0FBQ3pLO0FBQ0Esb0xBQW9LO0FBQ3BLO0FBQ0EsZ0xBQWdLIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJDaGF0UHJvdmlkZXJcIl0gKi8gXCIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL3NyYy9jb250ZXh0L2NoYXQtY29udGV4dC50c3hcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcIkxpdmUyRENvbmZpZ1Byb3ZpZGVyXCJdICovIFwiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9zcmMvY29udGV4dC9saXZlMmQtY29uZmlnLWNvbnRleHQudHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJNaWNyb3Bob25lUHJvdmlkZXJcIl0gKi8gXCIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL3NyYy9jb250ZXh0L21pY3JvcGhvbmUtY29udGV4dC50c3hcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcIlNldHRpbmdzUHJvdmlkZXJcIl0gKi8gXCIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL3NyYy9jb250ZXh0L3NldHRpbmdzLWNvbnRleHQudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fchat-context.tsx%22%2C%22ids%22%3A%5B%22ChatProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Flive2d-config-context.tsx%22%2C%22ids%22%3A%5B%22Live2DConfigProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fmicrophone-context.tsx%22%2C%22ids%22%3A%5B%22MicrophoneProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fsettings-context.tsx%22%2C%22ids%22%3A%5B%22SettingsProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Findex.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _context_live2d_config_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../context/live2d-config-context */ \"(rsc)/./src/context/live2d-config-context.tsx\");\n/* harmony import */ var _context_settings_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/settings-context */ \"(rsc)/./src/context/settings-context.tsx\");\n/* harmony import */ var _context_chat_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/chat-context */ \"(rsc)/./src/context/chat-context.tsx\");\n/* harmony import */ var _context_microphone_context__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context/microphone-context */ \"(rsc)/./src/context/microphone-context.tsx\");\n/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../index.css */ \"(rsc)/./src/index.css\");\n\n\n\n\n\n\nconst metadata = {\n    title: 'AI Companion - Immersive Watch Together',\n    description: 'Experience videos with your AI companion in an immersive Live2D environment'\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"head\", {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                    src: \"/libs/live2dcubismcore.js\",\n                    async: true\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/layout.tsx\",\n                    lineNumber: 21,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/layout.tsx\",\n                lineNumber: 20,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n                className: \"min-h-screen bg-background font-sans antialiased\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_settings_context__WEBPACK_IMPORTED_MODULE_2__.SettingsProvider, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_live2d_config_context__WEBPACK_IMPORTED_MODULE_1__.Live2DConfigProvider, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_chat_context__WEBPACK_IMPORTED_MODULE_3__.ChatProvider, {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_microphone_context__WEBPACK_IMPORTED_MODULE_4__.MicrophoneProvider, {\n                                children: children\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/layout.tsx\",\n                                lineNumber: 27,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/layout.tsx\",\n                            lineNumber: 26,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/layout.tsx\",\n                        lineNumber: 25,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/layout.tsx\",\n                    lineNumber: 24,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/layout.tsx\",\n                lineNumber: 23,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/layout.tsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUN3RTtBQUNUO0FBQ1I7QUFDWTtBQUM3QztBQUVmLE1BQU1JLFdBQXFCO0lBQ2hDQyxPQUFPO0lBQ1BDLGFBQWE7QUFDZixFQUFFO0FBRWEsU0FBU0MsV0FBVyxFQUNqQ0MsUUFBUSxFQUdUO0lBQ0MscUJBQ0UsOERBQUNDO1FBQUtDLE1BQUs7OzBCQUNULDhEQUFDQzswQkFDQyw0RUFBQ0M7b0JBQU9DLEtBQUk7b0JBQTRCQyxLQUFLOzs7Ozs7Ozs7OzswQkFFL0MsOERBQUNDO2dCQUFLQyxXQUFVOzBCQUNkLDRFQUFDZix1RUFBZ0JBOzhCQUNmLDRFQUFDRCxnRkFBb0JBO2tDQUNuQiw0RUFBQ0UsK0RBQVlBO3NDQUNYLDRFQUFDQywyRUFBa0JBOzBDQUNoQks7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUWpCIiwic291cmNlcyI6WyIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL3NyYy9hcHAvbGF5b3V0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNZXRhZGF0YSB9IGZyb20gJ25leHQnO1xuaW1wb3J0IHsgTGl2ZTJEQ29uZmlnUHJvdmlkZXIgfSBmcm9tIFwiLi4vY29udGV4dC9saXZlMmQtY29uZmlnLWNvbnRleHRcIjtcbmltcG9ydCB7IFNldHRpbmdzUHJvdmlkZXIgfSBmcm9tIFwiLi4vY29udGV4dC9zZXR0aW5ncy1jb250ZXh0XCI7XG5pbXBvcnQgeyBDaGF0UHJvdmlkZXIgfSBmcm9tIFwiLi4vY29udGV4dC9jaGF0LWNvbnRleHRcIjtcbmltcG9ydCB7IE1pY3JvcGhvbmVQcm92aWRlciB9IGZyb20gXCIuLi9jb250ZXh0L21pY3JvcGhvbmUtY29udGV4dFwiO1xuaW1wb3J0ICcuLi9pbmRleC5jc3MnO1xuXG5leHBvcnQgY29uc3QgbWV0YWRhdGE6IE1ldGFkYXRhID0ge1xuICB0aXRsZTogJ0FJIENvbXBhbmlvbiAtIEltbWVyc2l2ZSBXYXRjaCBUb2dldGhlcicsXG4gIGRlc2NyaXB0aW9uOiAnRXhwZXJpZW5jZSB2aWRlb3Mgd2l0aCB5b3VyIEFJIGNvbXBhbmlvbiBpbiBhbiBpbW1lcnNpdmUgTGl2ZTJEIGVudmlyb25tZW50Jyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFJvb3RMYXlvdXQoe1xuICBjaGlsZHJlbixcbn06IHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8aHRtbCBsYW5nPVwiZW5cIj5cbiAgICAgIDxoZWFkPlxuICAgICAgICA8c2NyaXB0IHNyYz1cIi9saWJzL2xpdmUyZGN1YmlzbWNvcmUuanNcIiBhc3luYz48L3NjcmlwdD5cbiAgICAgIDwvaGVhZD5cbiAgICAgIDxib2R5IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBiZy1iYWNrZ3JvdW5kIGZvbnQtc2FucyBhbnRpYWxpYXNlZFwiPlxuICAgICAgICA8U2V0dGluZ3NQcm92aWRlcj5cbiAgICAgICAgICA8TGl2ZTJEQ29uZmlnUHJvdmlkZXI+XG4gICAgICAgICAgICA8Q2hhdFByb3ZpZGVyPlxuICAgICAgICAgICAgICA8TWljcm9waG9uZVByb3ZpZGVyPlxuICAgICAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICAgICAgPC9NaWNyb3Bob25lUHJvdmlkZXI+XG4gICAgICAgICAgICA8L0NoYXRQcm92aWRlcj5cbiAgICAgICAgICA8L0xpdmUyRENvbmZpZ1Byb3ZpZGVyPlxuICAgICAgICA8L1NldHRpbmdzUHJvdmlkZXI+XG4gICAgICA8L2JvZHk+XG4gICAgPC9odG1sPlxuICApO1xufSAiXSwibmFtZXMiOlsiTGl2ZTJEQ29uZmlnUHJvdmlkZXIiLCJTZXR0aW5nc1Byb3ZpZGVyIiwiQ2hhdFByb3ZpZGVyIiwiTWljcm9waG9uZVByb3ZpZGVyIiwibWV0YWRhdGEiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiUm9vdExheW91dCIsImNoaWxkcmVuIiwiaHRtbCIsImxhbmciLCJoZWFkIiwic2NyaXB0Iiwic3JjIiwiYXN5bmMiLCJib2R5IiwiY2xhc3NOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call the default export of \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx",
"default",
));


/***/ }),

/***/ "(rsc)/./src/context/chat-context.tsx":
/*!**************************************!*\
  !*** ./src/context/chat-context.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChatProvider: () => (/* binding */ ChatProvider),
/* harmony export */   useChat: () => (/* binding */ useChat)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

const ChatProvider = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call ChatProvider() from the server but ChatProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/chat-context.tsx",
"ChatProvider",
);const useChat = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call useChat() from the server but useChat is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/chat-context.tsx",
"useChat",
);

/***/ }),

/***/ "(rsc)/./src/context/live2d-config-context.tsx":
/*!***********************************************!*\
  !*** ./src/context/live2d-config-context.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Live2DConfigContext: () => (/* binding */ Live2DConfigContext),
/* harmony export */   Live2DConfigProvider: () => (/* binding */ Live2DConfigProvider),
/* harmony export */   useLive2DConfig: () => (/* binding */ useLive2DConfig)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

const Live2DConfigContext = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call Live2DConfigContext() from the server but Live2DConfigContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/live2d-config-context.tsx",
"Live2DConfigContext",
);const Live2DConfigProvider = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call Live2DConfigProvider() from the server but Live2DConfigProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/live2d-config-context.tsx",
"Live2DConfigProvider",
);const useLive2DConfig = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call useLive2DConfig() from the server but useLive2DConfig is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/live2d-config-context.tsx",
"useLive2DConfig",
);

/***/ }),

/***/ "(rsc)/./src/context/microphone-context.tsx":
/*!********************************************!*\
  !*** ./src/context/microphone-context.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MicrophoneProvider: () => (/* binding */ MicrophoneProvider),
/* harmony export */   useMicrophone: () => (/* binding */ useMicrophone)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

const MicrophoneProvider = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call MicrophoneProvider() from the server but MicrophoneProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/microphone-context.tsx",
"MicrophoneProvider",
);const useMicrophone = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call useMicrophone() from the server but useMicrophone is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/microphone-context.tsx",
"useMicrophone",
);

/***/ }),

/***/ "(rsc)/./src/context/settings-context.tsx":
/*!******************************************!*\
  !*** ./src/context/settings-context.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SettingsProvider: () => (/* binding */ SettingsProvider),
/* harmony export */   getApiBaseUrl: () => (/* binding */ getApiBaseUrl),
/* harmony export */   getWebSocketBaseUrl: () => (/* binding */ getWebSocketBaseUrl),
/* harmony export */   useSettings: () => (/* binding */ useSettings)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

const getApiBaseUrl = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call getApiBaseUrl() from the server but getApiBaseUrl is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/settings-context.tsx",
"getApiBaseUrl",
);const getWebSocketBaseUrl = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call getWebSocketBaseUrl() from the server but getWebSocketBaseUrl is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/settings-context.tsx",
"getWebSocketBaseUrl",
);const useSettings = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call useSettings() from the server but useSettings is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/settings-context.tsx",
"useSettings",
);const SettingsProvider = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call SettingsProvider() from the server but SettingsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/settings-context.tsx",
"SettingsProvider",
);

/***/ }),

/***/ "(rsc)/./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"afa0574ba51c\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvaW5kZXguY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL3NyYy9pbmRleC5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJhZmEwNTc0YmE1MWNcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/index.css\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/cubismdefaultparameterid.ts":
/*!**********************************************************!*\
  !*** ./WebSDK/Framework/src/cubismdefaultparameterid.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismDefaultParameterId: () => (/* binding */ CubismDefaultParameterId),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cubismdefaultparameterid */ \"(ssr)/./WebSDK/Framework/src/cubismdefaultparameterid.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ /**\n * @brief パラメータIDのデフォルト値を保持する定数<br>\n *         デフォルト値の仕様は以下のマニュアルに基づく<br>\n *         https://docs.live2d.com/cubism-editor-manual/standard-parametor-list/\n */ const CubismDefaultParameterId = Object.freeze({\n    // パーツID\n    HitAreaPrefix: 'HitArea',\n    HitAreaHead: 'Head',\n    HitAreaBody: 'Body',\n    PartsIdCore: 'Parts01Core',\n    PartsArmPrefix: 'Parts01Arm_',\n    PartsArmLPrefix: 'Parts01ArmL_',\n    PartsArmRPrefix: 'Parts01ArmR_',\n    // パラメータID\n    ParamAngleX: 'ParamAngleX',\n    ParamAngleY: 'ParamAngleY',\n    ParamAngleZ: 'ParamAngleZ',\n    ParamEyeLOpen: 'ParamEyeLOpen',\n    ParamEyeLSmile: 'ParamEyeLSmile',\n    ParamEyeROpen: 'ParamEyeROpen',\n    ParamEyeRSmile: 'ParamEyeRSmile',\n    ParamEyeBallX: 'ParamEyeBallX',\n    ParamEyeBallY: 'ParamEyeBallY',\n    ParamEyeBallForm: 'ParamEyeBallForm',\n    ParamBrowLY: 'ParamBrowLY',\n    ParamBrowRY: 'ParamBrowRY',\n    ParamBrowLX: 'ParamBrowLX',\n    ParamBrowRX: 'ParamBrowRX',\n    ParamBrowLAngle: 'ParamBrowLAngle',\n    ParamBrowRAngle: 'ParamBrowRAngle',\n    ParamBrowLForm: 'ParamBrowLForm',\n    ParamBrowRForm: 'ParamBrowRForm',\n    ParamMouthForm: 'ParamMouthForm',\n    ParamMouthOpenY: 'ParamMouthOpenY',\n    ParamCheek: 'ParamCheek',\n    ParamBodyAngleX: 'ParamBodyAngleX',\n    ParamBodyAngleY: 'ParamBodyAngleY',\n    ParamBodyAngleZ: 'ParamBodyAngleZ',\n    ParamBreath: 'ParamBreath',\n    ParamArmLA: 'ParamArmLA',\n    ParamArmRA: 'ParamArmRA',\n    ParamArmLB: 'ParamArmLB',\n    ParamArmRB: 'ParamArmRB',\n    ParamHandL: 'ParamHandL',\n    ParamHandR: 'ParamHandR',\n    ParamHairFront: 'ParamHairFront',\n    ParamHairSide: 'ParamHairSide',\n    ParamHairBack: 'ParamHairBack',\n    ParamHairFluffy: 'ParamHairFluffy',\n    ParamShoulderY: 'ParamShoulderY',\n    ParamBustX: 'ParamBustX',\n    ParamBustY: 'ParamBustY',\n    ParamBaseX: 'ParamBaseX',\n    ParamBaseY: 'ParamBaseY',\n    ParamNONE: 'NONE:'\n});\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.HitAreaBody = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.HitAreaBody;\n    Live2DCubismFramework.HitAreaHead = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.HitAreaHead;\n    Live2DCubismFramework.HitAreaPrefix = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.HitAreaPrefix;\n    Live2DCubismFramework.ParamAngleX = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamAngleX;\n    Live2DCubismFramework.ParamAngleY = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamAngleY;\n    Live2DCubismFramework.ParamAngleZ = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamAngleZ;\n    Live2DCubismFramework.ParamArmLA = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamArmLA;\n    Live2DCubismFramework.ParamArmLB = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamArmLB;\n    Live2DCubismFramework.ParamArmRA = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamArmRA;\n    Live2DCubismFramework.ParamArmRB = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamArmRB;\n    Live2DCubismFramework.ParamBaseX = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBaseX;\n    Live2DCubismFramework.ParamBaseY = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBaseY;\n    Live2DCubismFramework.ParamBodyAngleX = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBodyAngleX;\n    Live2DCubismFramework.ParamBodyAngleY = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBodyAngleY;\n    Live2DCubismFramework.ParamBodyAngleZ = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBodyAngleZ;\n    Live2DCubismFramework.ParamBreath = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBreath;\n    Live2DCubismFramework.ParamBrowLAngle = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBrowLAngle;\n    Live2DCubismFramework.ParamBrowLForm = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBrowLForm;\n    Live2DCubismFramework.ParamBrowLX = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBrowLX;\n    Live2DCubismFramework.ParamBrowLY = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBrowLY;\n    Live2DCubismFramework.ParamBrowRAngle = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBrowRAngle;\n    Live2DCubismFramework.ParamBrowRForm = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBrowRForm;\n    Live2DCubismFramework.ParamBrowRX = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBrowRX;\n    Live2DCubismFramework.ParamBrowRY = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBrowRY;\n    Live2DCubismFramework.ParamBustX = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBustX;\n    Live2DCubismFramework.ParamBustY = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBustY;\n    Live2DCubismFramework.ParamCheek = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamCheek;\n    Live2DCubismFramework.ParamEyeBallForm = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamEyeBallForm;\n    Live2DCubismFramework.ParamEyeBallX = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamEyeBallX;\n    Live2DCubismFramework.ParamEyeBallY = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamEyeBallY;\n    Live2DCubismFramework.ParamEyeLOpen = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamEyeLOpen;\n    Live2DCubismFramework.ParamEyeLSmile = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamEyeLSmile;\n    Live2DCubismFramework.ParamEyeROpen = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamEyeROpen;\n    Live2DCubismFramework.ParamEyeRSmile = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamEyeRSmile;\n    Live2DCubismFramework.ParamHairBack = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamHairBack;\n    Live2DCubismFramework.ParamHairFluffy = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamHairFluffy;\n    Live2DCubismFramework.ParamHairFront = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamHairFront;\n    Live2DCubismFramework.ParamHairSide = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamHairSide;\n    Live2DCubismFramework.ParamHandL = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamHandL;\n    Live2DCubismFramework.ParamHandR = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamHandR;\n    Live2DCubismFramework.ParamMouthForm = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamMouthForm;\n    Live2DCubismFramework.ParamMouthOpenY = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamMouthOpenY;\n    Live2DCubismFramework.ParamNONE = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamNONE;\n    Live2DCubismFramework.ParamShoulderY = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamShoulderY;\n    Live2DCubismFramework.PartsArmLPrefix = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.PartsArmLPrefix;\n    Live2DCubismFramework.PartsArmPrefix = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.PartsArmPrefix;\n    Live2DCubismFramework.PartsArmRPrefix = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.PartsArmRPrefix;\n    Live2DCubismFramework.PartsIdCore = _cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.PartsIdCore;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/cubismdefaultparameterid.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/cubismframeworkconfig.ts":
/*!*******************************************************!*\
  !*** ./WebSDK/Framework/src/cubismframeworkconfig.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CSM_LOG_LEVEL: () => (/* binding */ CSM_LOG_LEVEL),\n/* harmony export */   CSM_LOG_LEVEL_DEBUG: () => (/* binding */ CSM_LOG_LEVEL_DEBUG),\n/* harmony export */   CSM_LOG_LEVEL_ERROR: () => (/* binding */ CSM_LOG_LEVEL_ERROR),\n/* harmony export */   CSM_LOG_LEVEL_INFO: () => (/* binding */ CSM_LOG_LEVEL_INFO),\n/* harmony export */   CSM_LOG_LEVEL_OFF: () => (/* binding */ CSM_LOG_LEVEL_OFF),\n/* harmony export */   CSM_LOG_LEVEL_VERBOSE: () => (/* binding */ CSM_LOG_LEVEL_VERBOSE),\n/* harmony export */   CSM_LOG_LEVEL_WARNING: () => (/* binding */ CSM_LOG_LEVEL_WARNING)\n/* harmony export */ });\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ //========================================================\n//  ログ出力関数の設定\n//========================================================\n//---------- ログ出力レベル 選択項目 定義 ----------\n// 詳細ログ出力設定\nconst CSM_LOG_LEVEL_VERBOSE = 0;\n// デバッグログ出力設定\nconst CSM_LOG_LEVEL_DEBUG = 1;\n// Infoログ出力設定\nconst CSM_LOG_LEVEL_INFO = 2;\n// 警告ログ出力設定\nconst CSM_LOG_LEVEL_WARNING = 3;\n// エラーログ出力設定\nconst CSM_LOG_LEVEL_ERROR = 4;\n// ログ出力オフ設定\nconst CSM_LOG_LEVEL_OFF = 5;\n/**\n * ログ出力レベル設定。\n *\n * 強制的にログ出力レベルを変える時に定義を有効にする。\n * CSM_LOG_LEVEL_VERBOSE ～ CSM_LOG_LEVEL_OFF を選択する。\n */ const CSM_LOG_LEVEL = CSM_LOG_LEVEL_VERBOSE;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvRnJhbWV3b3JrL3NyYy9jdWJpc21mcmFtZXdvcmtjb25maWcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7OztDQUtDLEdBRUQsMERBQTBEO0FBQzFELGFBQWE7QUFDYiwwREFBMEQ7QUFFMUQsdUNBQXVDO0FBQ3ZDLFdBQVc7QUFDSixNQUFNQSx3QkFBd0IsRUFBRTtBQUN2QyxhQUFhO0FBQ04sTUFBTUMsc0JBQXNCLEVBQUU7QUFDckMsYUFBYTtBQUNOLE1BQU1DLHFCQUFxQixFQUFFO0FBQ3BDLFdBQVc7QUFDSixNQUFNQyx3QkFBd0IsRUFBRTtBQUN2QyxZQUFZO0FBQ0wsTUFBTUMsc0JBQXNCLEVBQUU7QUFDckMsV0FBVztBQUNKLE1BQU1DLG9CQUFvQixFQUFFO0FBRW5DOzs7OztDQUtDLEdBQ00sTUFBTUMsZ0JBQXdCTixzQkFBc0IiLCJzb3VyY2VzIjpbIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvV2ViU0RLL0ZyYW1ld29yay9zcmMvY3ViaXNtZnJhbWV3b3JrY29uZmlnLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICDjg63jgrDlh7rlipvplqLmlbDjga7oqK3lrppcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8tLS0tLS0tLS0tIOODreOCsOWHuuWKm+ODrOODmeODqyDpgbjmip7poIXnm64g5a6a576pIC0tLS0tLS0tLS1cbi8vIOips+e0sOODreOCsOWHuuWKm+ioreWumlxuZXhwb3J0IGNvbnN0IENTTV9MT0dfTEVWRUxfVkVSQk9TRSA9IDA7XG4vLyDjg4fjg5Djg4PjgrDjg63jgrDlh7rlipvoqK3lrppcbmV4cG9ydCBjb25zdCBDU01fTE9HX0xFVkVMX0RFQlVHID0gMTtcbi8vIEluZm/jg63jgrDlh7rlipvoqK3lrppcbmV4cG9ydCBjb25zdCBDU01fTE9HX0xFVkVMX0lORk8gPSAyO1xuLy8g6K2m5ZGK44Ot44Kw5Ye65Yqb6Kit5a6aXG5leHBvcnQgY29uc3QgQ1NNX0xPR19MRVZFTF9XQVJOSU5HID0gMztcbi8vIOOCqOODqeODvOODreOCsOWHuuWKm+ioreWumlxuZXhwb3J0IGNvbnN0IENTTV9MT0dfTEVWRUxfRVJST1IgPSA0O1xuLy8g44Ot44Kw5Ye65Yqb44Kq44OV6Kit5a6aXG5leHBvcnQgY29uc3QgQ1NNX0xPR19MRVZFTF9PRkYgPSA1O1xuXG4vKipcbiAqIOODreOCsOWHuuWKm+ODrOODmeODq+ioreWumuOAglxuICpcbiAqIOW8t+WItueahOOBq+ODreOCsOWHuuWKm+ODrOODmeODq+OCkuWkieOBiOOCi+aZguOBq+Wumue+qeOCkuacieWKueOBq+OBmeOCi+OAglxuICogQ1NNX0xPR19MRVZFTF9WRVJCT1NFIO+9niBDU01fTE9HX0xFVkVMX09GRiDjgpLpgbjmip7jgZnjgovjgIJcbiAqL1xuZXhwb3J0IGNvbnN0IENTTV9MT0dfTEVWRUw6IG51bWJlciA9IENTTV9MT0dfTEVWRUxfVkVSQk9TRTtcbiJdLCJuYW1lcyI6WyJDU01fTE9HX0xFVkVMX1ZFUkJPU0UiLCJDU01fTE9HX0xFVkVMX0RFQlVHIiwiQ1NNX0xPR19MRVZFTF9JTkZPIiwiQ1NNX0xPR19MRVZFTF9XQVJOSU5HIiwiQ1NNX0xPR19MRVZFTF9FUlJPUiIsIkNTTV9MT0dfTEVWRUxfT0ZGIiwiQ1NNX0xPR19MRVZFTCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/cubismframeworkconfig.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/cubismmodelsettingjson.ts":
/*!********************************************************!*\
  !*** ./WebSDK/Framework/src/cubismmodelsettingjson.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismModelSettingJson: () => (/* binding */ CubismModelSettingJson),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _icubismmodelsetting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icubismmodelsetting */ \"(ssr)/./WebSDK/Framework/src/icubismmodelsetting.ts\");\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _utils_cubismjson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/cubismjson */ \"(ssr)/./WebSDK/Framework/src/utils/cubismjson.ts\");\n/* harmony import */ var _cubismmodelsettingjson__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cubismmodelsettingjson */ \"(ssr)/./WebSDK/Framework/src/cubismmodelsettingjson.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n/**\n * Model3Jsonのキー文字列\n */ // JSON Keys\nconst Version = 'Version';\nconst FileReferences = 'FileReferences';\nconst Groups = 'Groups';\nconst Layout = 'Layout';\nconst HitAreas = 'HitAreas';\nconst Moc = 'Moc';\nconst Textures = 'Textures';\nconst Physics = 'Physics';\nconst Pose = 'Pose';\nconst Expressions = 'Expressions';\nconst Motions = 'Motions';\nconst UserData = 'UserData';\nconst Name = 'Name';\nconst FilePath = 'File';\nconst Id = 'Id';\nconst Ids = 'Ids';\nconst Target = 'Target';\n// Motions\nconst Idle = 'Idle';\nconst TapBody = 'TapBody';\nconst PinchIn = 'PinchIn';\nconst PinchOut = 'PinchOut';\nconst Shake = 'Shake';\nconst FlickHead = 'FlickHead';\nconst Parameter = 'Parameter';\nconst SoundPath = 'Sound';\nconst FadeInTime = 'FadeInTime';\nconst FadeOutTime = 'FadeOutTime';\n// Layout\nconst CenterX = 'CenterX';\nconst CenterY = 'CenterY';\nconst X = 'X';\nconst Y = 'Y';\nconst Width = 'Width';\nconst Height = 'Height';\nconst LipSync = 'LipSync';\nconst EyeBlink = 'EyeBlink';\nconst InitParameter = 'init_param';\nconst InitPartsVisible = 'init_parts_visible';\nconst Val = 'val';\nvar FrequestNode = /*#__PURE__*/ function(FrequestNode) {\n    FrequestNode[FrequestNode[\"FrequestNode_Groups\"] = 0] = \"FrequestNode_Groups\";\n    FrequestNode[FrequestNode[\"FrequestNode_Moc\"] = 1] = \"FrequestNode_Moc\";\n    FrequestNode[FrequestNode[\"FrequestNode_Motions\"] = 2] = \"FrequestNode_Motions\";\n    FrequestNode[FrequestNode[\"FrequestNode_Expressions\"] = 3] = \"FrequestNode_Expressions\";\n    FrequestNode[FrequestNode[\"FrequestNode_Textures\"] = 4] = \"FrequestNode_Textures\";\n    FrequestNode[FrequestNode[\"FrequestNode_Physics\"] = 5] = \"FrequestNode_Physics\";\n    FrequestNode[FrequestNode[\"FrequestNode_Pose\"] = 6] = \"FrequestNode_Pose\";\n    FrequestNode[FrequestNode[\"FrequestNode_HitAreas\"] = 7] = \"FrequestNode_HitAreas\"; // getRoot().getValueByString(HitAreas)\n    return FrequestNode;\n}(FrequestNode || {});\n/**\n * Model3Jsonパーサー\n *\n * model3.jsonファイルをパースして値を取得する\n */ class CubismModelSettingJson extends _icubismmodelsetting__WEBPACK_IMPORTED_MODULE_0__.ICubismModelSetting {\n    /**\n   * 引数付きコンストラクタ\n   *\n   * @param buffer    Model3Jsonをバイト配列として読み込んだデータバッファ\n   * @param size      Model3Jsonのデータサイズ\n   */ constructor(buffer, size){\n        super();\n        this._json = _utils_cubismjson__WEBPACK_IMPORTED_MODULE_3__.CubismJson.create(buffer, size);\n        if (this.getJson()) {\n            this._jsonValue = new _type_csmvector__WEBPACK_IMPORTED_MODULE_2__.csmVector();\n            // 順番はenum FrequestNodeと一致させる\n            this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(Groups));\n            this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(FileReferences).getValueByString(Moc));\n            this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(FileReferences).getValueByString(Motions));\n            this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(FileReferences).getValueByString(Expressions));\n            this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(FileReferences).getValueByString(Textures));\n            this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(FileReferences).getValueByString(Physics));\n            this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(FileReferences).getValueByString(Pose));\n            this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(HitAreas));\n        }\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        _utils_cubismjson__WEBPACK_IMPORTED_MODULE_3__.CubismJson.delete(this._json);\n        this._jsonValue = null;\n    }\n    /**\n   * CubismJsonオブジェクトを取得する\n   *\n   * @return CubismJson\n   */ getJson() {\n        return this._json;\n    }\n    /**\n   * Mocファイルの名前を取得する\n   * @return Mocファイルの名前\n   */ getModelFileName() {\n        if (!this.isExistModelFile()) {\n            return '';\n        }\n        return this._jsonValue.at(1).getRawString();\n    }\n    /**\n   * モデルが使用するテクスチャの数を取得する\n   * テクスチャの数\n   */ getTextureCount() {\n        if (!this.isExistTextureFiles()) {\n            return 0;\n        }\n        return this._jsonValue.at(4).getSize();\n    }\n    /**\n   * テクスチャが配置されたディレクトリの名前を取得する\n   * @return テクスチャが配置されたディレクトリの名前\n   */ getTextureDirectory() {\n        const texturePath = this._jsonValue.at(4).getValueByIndex(0).getRawString();\n        const pathArray = texturePath.split('/');\n        // 最後の要素はテクスチャ名なので不要\n        const arrayLength = pathArray.length - 1;\n        let textureDirectoryStr = '';\n        // 分割したパスを結合\n        for(let i = 0; i < arrayLength; i++){\n            textureDirectoryStr += pathArray[i];\n            if (i < arrayLength - 1) {\n                textureDirectoryStr += '/';\n            }\n        }\n        return textureDirectoryStr;\n    }\n    /**\n   * モデルが使用するテクスチャの名前を取得する\n   * @param index 配列のインデックス値\n   * @return テクスチャの名前\n   */ getTextureFileName(index) {\n        return this._jsonValue.at(4).getValueByIndex(index).getRawString();\n    }\n    /**\n   * モデルに設定された当たり判定の数を取得する\n   * @return モデルに設定された当たり判定の数\n   */ getHitAreasCount() {\n        if (!this.isExistHitAreas()) {\n            return 0;\n        }\n        return this._jsonValue.at(7).getSize();\n    }\n    /**\n   * 当たり判定に設定されたIDを取得する\n   *\n   * @param index 配列のindex\n   * @return 当たり判定に設定されたID\n   */ getHitAreaId(index) {\n        return _live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.CubismFramework.getIdManager().getId(this._jsonValue.at(7).getValueByIndex(index).getValueByString(Id).getRawString());\n    }\n    /**\n   * 当たり判定に設定された名前を取得する\n   * @param index 配列のインデックス値\n   * @return 当たり判定に設定された名前\n   */ getHitAreaName(index) {\n        return this._jsonValue.at(7).getValueByIndex(index).getValueByString(Name).getRawString();\n    }\n    /**\n   * 物理演算設定ファイルの名前を取得する\n   * @return 物理演算設定ファイルの名前\n   */ getPhysicsFileName() {\n        if (!this.isExistPhysicsFile()) {\n            return '';\n        }\n        return this._jsonValue.at(5).getRawString();\n    }\n    /**\n   * パーツ切り替え設定ファイルの名前を取得する\n   * @return パーツ切り替え設定ファイルの名前\n   */ getPoseFileName() {\n        if (!this.isExistPoseFile()) {\n            return '';\n        }\n        return this._jsonValue.at(6).getRawString();\n    }\n    /**\n   * 表情設定ファイルの数を取得する\n   * @return 表情設定ファイルの数\n   */ getExpressionCount() {\n        if (!this.isExistExpressionFile()) {\n            return 0;\n        }\n        return this._jsonValue.at(3).getSize();\n    }\n    /**\n   * 表情設定ファイルを識別する名前（別名）を取得する\n   * @param index 配列のインデックス値\n   * @return 表情の名前\n   */ getExpressionName(index) {\n        return this._jsonValue.at(3).getValueByIndex(index).getValueByString(Name).getRawString();\n    }\n    /**\n   * 表情設定ファイルの名前を取得する\n   * @param index 配列のインデックス値\n   * @return 表情設定ファイルの名前\n   */ getExpressionFileName(index) {\n        return this._jsonValue.at(3).getValueByIndex(index).getValueByString(FilePath).getRawString();\n    }\n    /**\n   * モーショングループの数を取得する\n   * @return モーショングループの数\n   */ getMotionGroupCount() {\n        if (!this.isExistMotionGroups()) {\n            return 0;\n        }\n        return this._jsonValue.at(2).getKeys().getSize();\n    }\n    /**\n   * モーショングループの名前を取得する\n   * @param index 配列のインデックス値\n   * @return モーショングループの名前\n   */ getMotionGroupName(index) {\n        if (!this.isExistMotionGroups()) {\n            return null;\n        }\n        return this._jsonValue.at(2).getKeys().at(index);\n    }\n    /**\n   * モーショングループに含まれるモーションの数を取得する\n   * @param groupName モーショングループの名前\n   * @return モーショングループの数\n   */ getMotionCount(groupName) {\n        if (!this.isExistMotionGroupName(groupName)) {\n            return 0;\n        }\n        return this._jsonValue.at(2).getValueByString(groupName).getSize();\n    }\n    /**\n   * グループ名とインデックス値からモーションファイル名を取得する\n   * @param groupName モーショングループの名前\n   * @param index     配列のインデックス値\n   * @return モーションファイルの名前\n   */ getMotionFileName(groupName, index) {\n        if (!this.isExistMotionGroupName(groupName)) {\n            return '';\n        }\n        return this._jsonValue.at(2).getValueByString(groupName).getValueByIndex(index).getValueByString(FilePath).getRawString();\n    }\n    /**\n   * モーションに対応するサウンドファイルの名前を取得する\n   * @param groupName モーショングループの名前\n   * @param index 配列のインデックス値\n   * @return サウンドファイルの名前\n   */ getMotionSoundFileName(groupName, index) {\n        if (!this.isExistMotionSoundFile(groupName, index)) {\n            return '';\n        }\n        return this._jsonValue.at(2).getValueByString(groupName).getValueByIndex(index).getValueByString(SoundPath).getRawString();\n    }\n    /**\n   * モーション開始時のフェードイン処理時間を取得する\n   * @param groupName モーショングループの名前\n   * @param index 配列のインデックス値\n   * @return フェードイン処理時間[秒]\n   */ getMotionFadeInTimeValue(groupName, index) {\n        if (!this.isExistMotionFadeIn(groupName, index)) {\n            return -1.0;\n        }\n        return this._jsonValue.at(2).getValueByString(groupName).getValueByIndex(index).getValueByString(FadeInTime).toFloat();\n    }\n    /**\n   * モーション終了時のフェードアウト処理時間を取得する\n   * @param groupName モーショングループの名前\n   * @param index 配列のインデックス値\n   * @return フェードアウト処理時間[秒]\n   */ getMotionFadeOutTimeValue(groupName, index) {\n        if (!this.isExistMotionFadeOut(groupName, index)) {\n            return -1.0;\n        }\n        return this._jsonValue.at(2).getValueByString(groupName).getValueByIndex(index).getValueByString(FadeOutTime).toFloat();\n    }\n    /**\n   * ユーザーデータのファイル名を取得する\n   * @return ユーザーデータのファイル名\n   */ getUserDataFile() {\n        if (!this.isExistUserDataFile()) {\n            return '';\n        }\n        return this.getJson().getRoot().getValueByString(FileReferences).getValueByString(UserData).getRawString();\n    }\n    /**\n   * レイアウト情報を取得する\n   * @param outLayoutMap csmMapクラスのインスタンス\n   * @return true レイアウト情報が存在する\n   * @return false レイアウト情報が存在しない\n   */ getLayoutMap(outLayoutMap) {\n        // 存在しない要素にアクセスするとエラーになるためValueがnullの場合はnullを代入する\n        const map = this.getJson().getRoot().getValueByString(Layout).getMap();\n        if (map == null) {\n            return false;\n        }\n        let ret = false;\n        for(const ite = map.begin(); ite.notEqual(map.end()); ite.preIncrement()){\n            outLayoutMap.setValue(ite.ptr().first, ite.ptr().second.toFloat());\n            ret = true;\n        }\n        return ret;\n    }\n    /**\n   * 目パチに関連付けられたパラメータの数を取得する\n   * @return 目パチに関連付けられたパラメータの数\n   */ getEyeBlinkParameterCount() {\n        if (!this.isExistEyeBlinkParameters()) {\n            return 0;\n        }\n        let num = 0;\n        for(let i = 0; i < this._jsonValue.at(0).getSize(); i++){\n            const refI = this._jsonValue.at(0).getValueByIndex(i);\n            if (refI.isNull() || refI.isError()) {\n                continue;\n            }\n            if (refI.getValueByString(Name).getRawString() == EyeBlink) {\n                num = refI.getValueByString(Ids).getVector().getSize();\n                break;\n            }\n        }\n        return num;\n    }\n    /**\n   * 目パチに関連付けられたパラメータのIDを取得する\n   * @param index 配列のインデックス値\n   * @return パラメータID\n   */ getEyeBlinkParameterId(index) {\n        if (!this.isExistEyeBlinkParameters()) {\n            return null;\n        }\n        for(let i = 0; i < this._jsonValue.at(0).getSize(); i++){\n            const refI = this._jsonValue.at(0).getValueByIndex(i);\n            if (refI.isNull() || refI.isError()) {\n                continue;\n            }\n            if (refI.getValueByString(Name).getRawString() == EyeBlink) {\n                return _live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.CubismFramework.getIdManager().getId(refI.getValueByString(Ids).getValueByIndex(index).getRawString());\n            }\n        }\n        return null;\n    }\n    /**\n   * リップシンクに関連付けられたパラメータの数を取得する\n   * @return リップシンクに関連付けられたパラメータの数\n   */ getLipSyncParameterCount() {\n        if (!this.isExistLipSyncParameters()) {\n            return 0;\n        }\n        let num = 0;\n        for(let i = 0; i < this._jsonValue.at(0).getSize(); i++){\n            const refI = this._jsonValue.at(0).getValueByIndex(i);\n            if (refI.isNull() || refI.isError()) {\n                continue;\n            }\n            if (refI.getValueByString(Name).getRawString() == LipSync) {\n                num = refI.getValueByString(Ids).getVector().getSize();\n                break;\n            }\n        }\n        return num;\n    }\n    /**\n   * リップシンクに関連付けられたパラメータの数を取得する\n   * @param index 配列のインデックス値\n   * @return パラメータID\n   */ getLipSyncParameterId(index) {\n        if (!this.isExistLipSyncParameters()) {\n            return null;\n        }\n        for(let i = 0; i < this._jsonValue.at(0).getSize(); i++){\n            const refI = this._jsonValue.at(0).getValueByIndex(i);\n            if (refI.isNull() || refI.isError()) {\n                continue;\n            }\n            if (refI.getValueByString(Name).getRawString() == LipSync) {\n                return _live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.CubismFramework.getIdManager().getId(refI.getValueByString(Ids).getValueByIndex(index).getRawString());\n            }\n        }\n        return null;\n    }\n    /**\n   * モデルファイルのキーが存在するかどうかを確認する\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistModelFile() {\n        const node = this._jsonValue.at(1);\n        return !node.isNull() && !node.isError();\n    }\n    /**\n   * テクスチャファイルのキーが存在するかどうかを確認する\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistTextureFiles() {\n        const node = this._jsonValue.at(4);\n        return !node.isNull() && !node.isError();\n    }\n    /**\n   * 当たり判定のキーが存在するかどうかを確認する\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistHitAreas() {\n        const node = this._jsonValue.at(7);\n        return !node.isNull() && !node.isError();\n    }\n    /**\n   * 物理演算ファイルのキーが存在するかどうかを確認する\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistPhysicsFile() {\n        const node = this._jsonValue.at(5);\n        return !node.isNull() && !node.isError();\n    }\n    /**\n   * ポーズ設定ファイルのキーが存在するかどうかを確認する\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistPoseFile() {\n        const node = this._jsonValue.at(6);\n        return !node.isNull() && !node.isError();\n    }\n    /**\n   * 表情設定ファイルのキーが存在するかどうかを確認する\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistExpressionFile() {\n        const node = this._jsonValue.at(3);\n        return !node.isNull() && !node.isError();\n    }\n    /**\n   * モーショングループのキーが存在するかどうかを確認する\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistMotionGroups() {\n        const node = this._jsonValue.at(2);\n        return !node.isNull() && !node.isError();\n    }\n    /**\n   * 引数で指定したモーショングループのキーが存在するかどうかを確認する\n   * @param groupName  グループ名\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistMotionGroupName(groupName) {\n        const node = this._jsonValue.at(2).getValueByString(groupName);\n        return !node.isNull() && !node.isError();\n    }\n    /**\n   * 引数で指定したモーションに対応するサウンドファイルのキーが存在するかどうかを確認する\n   * @param groupName  グループ名\n   * @param index 配列のインデックス値\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistMotionSoundFile(groupName, index) {\n        const node = this._jsonValue.at(2).getValueByString(groupName).getValueByIndex(index).getValueByString(SoundPath);\n        return !node.isNull() && !node.isError();\n    }\n    /**\n   * 引数で指定したモーションに対応するフェードイン時間のキーが存在するかどうかを確認する\n   * @param groupName  グループ名\n   * @param index 配列のインデックス値\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistMotionFadeIn(groupName, index) {\n        const node = this._jsonValue.at(2).getValueByString(groupName).getValueByIndex(index).getValueByString(FadeInTime);\n        return !node.isNull() && !node.isError();\n    }\n    /**\n   * 引数で指定したモーションに対応するフェードアウト時間のキーが存在するかどうかを確認する\n   * @param groupName  グループ名\n   * @param index 配列のインデックス値\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistMotionFadeOut(groupName, index) {\n        const node = this._jsonValue.at(2).getValueByString(groupName).getValueByIndex(index).getValueByString(FadeOutTime);\n        return !node.isNull() && !node.isError();\n    }\n    /**\n   * UserDataのファイル名が存在するかどうかを確認する\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistUserDataFile() {\n        const node = this.getJson().getRoot().getValueByString(FileReferences).getValueByString(UserData);\n        return !node.isNull() && !node.isError();\n    }\n    /**\n   * 目ぱちに対応付けられたパラメータが存在するかどうかを確認する\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistEyeBlinkParameters() {\n        if (this._jsonValue.at(0).isNull() || this._jsonValue.at(0).isError()) {\n            return false;\n        }\n        for(let i = 0; i < this._jsonValue.at(0).getSize(); ++i){\n            if (this._jsonValue.at(0).getValueByIndex(i).getValueByString(Name).getRawString() == EyeBlink) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n   * リップシンクに対応付けられたパラメータが存在するかどうかを確認する\n   * @return true キーが存在する\n   * @return false キーが存在しない\n   */ isExistLipSyncParameters() {\n        if (this._jsonValue.at(0).isNull() || this._jsonValue.at(0).isError()) {\n            return false;\n        }\n        for(let i = 0; i < this._jsonValue.at(0).getSize(); ++i){\n            if (this._jsonValue.at(0).getValueByIndex(i).getValueByString(Name).getRawString() == LipSync) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModelSettingJson = _cubismmodelsettingjson__WEBPACK_IMPORTED_MODULE_4__.CubismModelSettingJson;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/cubismmodelsettingjson.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/effect/cubismbreath.ts":
/*!*****************************************************!*\
  !*** ./WebSDK/Framework/src/effect/cubismbreath.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BreathParameterData: () => (/* binding */ BreathParameterData),\n/* harmony export */   CubismBreath: () => (/* binding */ CubismBreath),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _cubismbreath__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cubismbreath */ \"(ssr)/./WebSDK/Framework/src/effect/cubismbreath.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ /**\n * 呼吸機能\n *\n * 呼吸機能を提供する。\n */ class CubismBreath {\n    /**\n   * インスタンスの作成\n   */ static create() {\n        return new CubismBreath();\n    }\n    /**\n   * インスタンスの破棄\n   * @param instance 対象のCubismBreath\n   */ static delete(instance) {\n        if (instance != null) {\n            instance = null;\n        }\n    }\n    /**\n   * 呼吸のパラメータの紐づけ\n   * @param breathParameters 呼吸を紐づけたいパラメータのリスト\n   */ setParameters(breathParameters) {\n        this._breathParameters = breathParameters;\n    }\n    /**\n   * 呼吸に紐づいているパラメータの取得\n   * @return 呼吸に紐づいているパラメータのリスト\n   */ getParameters() {\n        return this._breathParameters;\n    }\n    /**\n   * モデルのパラメータの更新\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */ updateParameters(model, deltaTimeSeconds) {\n        this._currentTime += deltaTimeSeconds;\n        const t = this._currentTime * 2.0 * 3.14159;\n        for(let i = 0; i < this._breathParameters.getSize(); ++i){\n            const data = this._breathParameters.at(i);\n            model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n        }\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        this._currentTime = 0.0;\n    }\n}\n/**\n * 呼吸のパラメータ情報\n */ class BreathParameterData {\n    /**\n   * コンストラクタ\n   * @param parameterId   呼吸をひもづけるパラメータID\n   * @param offset        呼吸を正弦波としたときの、波のオフセット\n   * @param peak          呼吸を正弦波としたときの、波の高さ\n   * @param cycle         呼吸を正弦波としたときの、波の周期\n   * @param weight        パラメータへの重み\n   */ constructor(parameterId, offset, peak, cycle, weight){\n        this.parameterId = parameterId == undefined ? null : parameterId;\n        this.offset = offset == undefined ? 0.0 : offset;\n        this.peak = peak == undefined ? 0.0 : peak;\n        this.cycle = cycle == undefined ? 0.0 : cycle;\n        this.weight = weight == undefined ? 0.0 : weight;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.BreathParameterData = _cubismbreath__WEBPACK_IMPORTED_MODULE_0__.BreathParameterData;\n    Live2DCubismFramework.CubismBreath = _cubismbreath__WEBPACK_IMPORTED_MODULE_0__.CubismBreath;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvRnJhbWV3b3JrL3NyYy9lZmZlY3QvY3ViaXNtYnJlYXRoLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Q0FLQyxHQU1EOzs7O0NBSUMsR0FDTSxNQUFNQTtJQUNYOztHQUVDLEdBQ0QsT0FBY0MsU0FBdUI7UUFDbkMsT0FBTyxJQUFJRDtJQUNiO0lBRUE7OztHQUdDLEdBQ0QsT0FBY0UsT0FBT0MsUUFBc0IsRUFBUTtRQUNqRCxJQUFJQSxZQUFZLE1BQU07WUFDcEJBLFdBQVc7UUFDYjtJQUNGO0lBRUE7OztHQUdDLEdBQ0QsY0FBcUJFLGdCQUFnRCxFQUFRO1FBQzNFLElBQUksQ0FBQ0MsaUJBQWlCLEdBQUdEO0lBQzNCO0lBRUE7OztHQUdDLEdBQ0QsZ0JBQXVEO1FBQ3JELE9BQU8sSUFBSSxDQUFDQyxpQkFBaUI7SUFDL0I7SUFFQTs7OztHQUlDLEdBQ0QsaUJBQXdCRyxLQUFrQixFQUFFQyxnQkFBd0IsRUFBUTtRQUMxRSxJQUFJLENBQUNDLFlBQVksSUFBSUQ7UUFFckIsTUFBTUUsSUFBWSxJQUFJLENBQUNELFlBQVksR0FBRyxNQUFNO1FBRTVDLElBQUssSUFBSUUsSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ1AsaUJBQWlCLENBQUNRLE9BQU8sSUFBSSxFQUFFRCxFQUFHO1lBQ3pELE1BQU1FLE9BQTRCLElBQUksQ0FBQ1QsaUJBQWlCLENBQUNVLEVBQUUsQ0FBQ0g7WUFFNURKLE1BQU1RLHFCQUFxQixDQUN6QkYsS0FBS0csV0FBVyxFQUNoQkgsS0FBS0ksTUFBTSxHQUFHSixLQUFLSyxJQUFJLEdBQUdDLEtBQUtDLEdBQUcsQ0FBQ1YsSUFBSUcsS0FBS1EsS0FBSyxHQUNqRFIsS0FBS1MsTUFBTTtRQUVmO0lBQ0Y7SUFFQTs7R0FFQyxHQUNELGFBQXFCO1FBQ25CLElBQUksQ0FBQ2IsWUFBWSxHQUFHO0lBQ3RCO0FBSUY7QUFFQTs7Q0FFQyxHQUNNLE1BQU1jO0lBQ1g7Ozs7Ozs7R0FPQyxHQUNELFlBQ0VQLFdBQTRCLEVBQzVCQyxNQUFlLEVBQ2ZDLElBQWEsRUFDYkcsS0FBYyxFQUNkQyxNQUFlLENBQ2Y7UUFDQSxJQUFJLENBQUNOLFdBQVcsR0FBR0EsZUFBZVEsWUFBWSxPQUFPUjtRQUNyRCxJQUFJLENBQUNDLE1BQU0sR0FBR0EsVUFBVU8sWUFBWSxNQUFNUDtRQUMxQyxJQUFJLENBQUNDLElBQUksR0FBR0EsUUFBUU0sWUFBWSxNQUFNTjtRQUN0QyxJQUFJLENBQUNHLEtBQUssR0FBR0EsU0FBU0csWUFBWSxNQUFNSDtRQUN4QyxJQUFJLENBQUNDLE1BQU0sR0FBR0EsVUFBVUUsWUFBWSxNQUFNRjtJQUM1QztBQU9GO0FBRUEsMENBQTBDO0FBQ047VUFFbkJJOzBCQUNGSCxzQkFBc0JFLDhEQUFxQjswQkFFM0MzQixlQUFlMkIsdURBQWM7QUFFNUMsR0FMaUJDLDBCQUFBQSIsInNvdXJjZXMiOlsiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9XZWJTREsvRnJhbWV3b3JrL3NyYy9lZmZlY3QvY3ViaXNtYnJlYXRoLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IEN1YmlzbUlkSGFuZGxlIH0gZnJvbSAnLi4vaWQvY3ViaXNtaWQnO1xuaW1wb3J0IHsgQ3ViaXNtTW9kZWwgfSBmcm9tICcuLi9tb2RlbC9jdWJpc21tb2RlbCc7XG5pbXBvcnQgeyBjc21WZWN0b3IgfSBmcm9tICcuLi90eXBlL2NzbXZlY3Rvcic7XG5cbi8qKlxuICog5ZG85ZC45qmf6IO9XG4gKlxuICog5ZG85ZC45qmf6IO944KS5o+Q5L6b44GZ44KL44CCXG4gKi9cbmV4cG9ydCBjbGFzcyBDdWJpc21CcmVhdGgge1xuICAvKipcbiAgICog44Kk44Oz44K544K/44Oz44K544Gu5L2c5oiQXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIGNyZWF0ZSgpOiBDdWJpc21CcmVhdGgge1xuICAgIHJldHVybiBuZXcgQ3ViaXNtQnJlYXRoKCk7XG4gIH1cblxuICAvKipcbiAgICog44Kk44Oz44K544K/44Oz44K544Gu56C05qOEXG4gICAqIEBwYXJhbSBpbnN0YW5jZSDlr77osaHjga5DdWJpc21CcmVhdGhcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgZGVsZXRlKGluc3RhbmNlOiBDdWJpc21CcmVhdGgpOiB2b2lkIHtcbiAgICBpZiAoaW5zdGFuY2UgIT0gbnVsbCkge1xuICAgICAgaW5zdGFuY2UgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDlkbzlkLjjga7jg5Hjg6njg6Hjg7zjgr/jga7ntJDjgaXjgZFcbiAgICogQHBhcmFtIGJyZWF0aFBhcmFtZXRlcnMg5ZG85ZC444KS57SQ44Gl44GR44Gf44GE44OR44Op44Oh44O844K/44Gu44Oq44K544OIXG4gICAqL1xuICBwdWJsaWMgc2V0UGFyYW1ldGVycyhicmVhdGhQYXJhbWV0ZXJzOiBjc21WZWN0b3I8QnJlYXRoUGFyYW1ldGVyRGF0YT4pOiB2b2lkIHtcbiAgICB0aGlzLl9icmVhdGhQYXJhbWV0ZXJzID0gYnJlYXRoUGFyYW1ldGVycztcbiAgfVxuXG4gIC8qKlxuICAgKiDlkbzlkLjjgavntJDjgaXjgYTjgabjgYTjgovjg5Hjg6njg6Hjg7zjgr/jga7lj5blvpdcbiAgICogQHJldHVybiDlkbzlkLjjgavntJDjgaXjgYTjgabjgYTjgovjg5Hjg6njg6Hjg7zjgr/jga7jg6rjgrnjg4hcbiAgICovXG4gIHB1YmxpYyBnZXRQYXJhbWV0ZXJzKCk6IGNzbVZlY3RvcjxCcmVhdGhQYXJhbWV0ZXJEYXRhPiB7XG4gICAgcmV0dXJuIHRoaXMuX2JyZWF0aFBhcmFtZXRlcnM7XG4gIH1cblxuICAvKipcbiAgICog44Oi44OH44Or44Gu44OR44Op44Oh44O844K/44Gu5pu05pawXG4gICAqIEBwYXJhbSBtb2RlbCDlr77osaHjga7jg6Ljg4fjg6tcbiAgICogQHBhcmFtIGRlbHRhVGltZVNlY29uZHMg44OH44Or44K/5pmC6ZaTW+enkl1cbiAgICovXG4gIHB1YmxpYyB1cGRhdGVQYXJhbWV0ZXJzKG1vZGVsOiBDdWJpc21Nb2RlbCwgZGVsdGFUaW1lU2Vjb25kczogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5fY3VycmVudFRpbWUgKz0gZGVsdGFUaW1lU2Vjb25kcztcblxuICAgIGNvbnN0IHQ6IG51bWJlciA9IHRoaXMuX2N1cnJlbnRUaW1lICogMi4wICogMy4xNDE1OTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fYnJlYXRoUGFyYW1ldGVycy5nZXRTaXplKCk7ICsraSkge1xuICAgICAgY29uc3QgZGF0YTogQnJlYXRoUGFyYW1ldGVyRGF0YSA9IHRoaXMuX2JyZWF0aFBhcmFtZXRlcnMuYXQoaSk7XG5cbiAgICAgIG1vZGVsLmFkZFBhcmFtZXRlclZhbHVlQnlJZChcbiAgICAgICAgZGF0YS5wYXJhbWV0ZXJJZCxcbiAgICAgICAgZGF0YS5vZmZzZXQgKyBkYXRhLnBlYWsgKiBNYXRoLnNpbih0IC8gZGF0YS5jeWNsZSksXG4gICAgICAgIGRhdGEud2VpZ2h0XG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICovXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLl9jdXJyZW50VGltZSA9IDAuMDtcbiAgfVxuXG4gIF9icmVhdGhQYXJhbWV0ZXJzOiBjc21WZWN0b3I8QnJlYXRoUGFyYW1ldGVyRGF0YT47IC8vIOWRvOWQuOOBq+OBsuOCguOBpeOBhOOBpuOBhOOCi+ODkeODqeODoeODvOOCv+OBruODquOCueODiFxuICBfY3VycmVudFRpbWU6IG51bWJlcjsgLy8g56mN566X5pmC6ZaTW+enkl1cbn1cblxuLyoqXG4gKiDlkbzlkLjjga7jg5Hjg6njg6Hjg7zjgr/mg4XloLFcbiAqL1xuZXhwb3J0IGNsYXNzIEJyZWF0aFBhcmFtZXRlckRhdGEge1xuICAvKipcbiAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAqIEBwYXJhbSBwYXJhbWV0ZXJJZCAgIOWRvOWQuOOCkuOBsuOCguOBpeOBkeOCi+ODkeODqeODoeODvOOCv0lEXG4gICAqIEBwYXJhbSBvZmZzZXQgICAgICAgIOWRvOWQuOOCkuato+W8puazouOBqOOBl+OBn+OBqOOBjeOBruOAgeazouOBruOCquODleOCu+ODg+ODiFxuICAgKiBAcGFyYW0gcGVhayAgICAgICAgICDlkbzlkLjjgpLmraPlvKbms6LjgajjgZfjgZ/jgajjgY3jga7jgIHms6Ljga7pq5jjgZVcbiAgICogQHBhcmFtIGN5Y2xlICAgICAgICAg5ZG85ZC444KS5q2j5bym5rOi44Go44GX44Gf44Go44GN44Gu44CB5rOi44Gu5ZGo5pyfXG4gICAqIEBwYXJhbSB3ZWlnaHQgICAgICAgIOODkeODqeODoeODvOOCv+OBuOOBrumHjeOBv1xuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgcGFyYW1ldGVySWQ/OiBDdWJpc21JZEhhbmRsZSxcbiAgICBvZmZzZXQ/OiBudW1iZXIsXG4gICAgcGVhaz86IG51bWJlcixcbiAgICBjeWNsZT86IG51bWJlcixcbiAgICB3ZWlnaHQ/OiBudW1iZXJcbiAgKSB7XG4gICAgdGhpcy5wYXJhbWV0ZXJJZCA9IHBhcmFtZXRlcklkID09IHVuZGVmaW5lZCA/IG51bGwgOiBwYXJhbWV0ZXJJZDtcbiAgICB0aGlzLm9mZnNldCA9IG9mZnNldCA9PSB1bmRlZmluZWQgPyAwLjAgOiBvZmZzZXQ7XG4gICAgdGhpcy5wZWFrID0gcGVhayA9PSB1bmRlZmluZWQgPyAwLjAgOiBwZWFrO1xuICAgIHRoaXMuY3ljbGUgPSBjeWNsZSA9PSB1bmRlZmluZWQgPyAwLjAgOiBjeWNsZTtcbiAgICB0aGlzLndlaWdodCA9IHdlaWdodCA9PSB1bmRlZmluZWQgPyAwLjAgOiB3ZWlnaHQ7XG4gIH1cblxuICBwYXJhbWV0ZXJJZDogQ3ViaXNtSWRIYW5kbGU7IC8vIOWRvOWQuOOCkuOBsuOCguOBpeOBkeOCi+ODkeODqeODoeODvOOCv0lEXFxcbiAgb2Zmc2V0OiBudW1iZXI7IC8vIOWRvOWQuOOCkuato+W8puazouOBqOOBl+OBn+OBqOOBjeOBruOAgeazouOBruOCquODleOCu+ODg+ODiFxuICBwZWFrOiBudW1iZXI7IC8vIOWRvOWQuOOCkuato+W8puazouOBqOOBl+OBn+OBqOOBjeOBruOAgeazouOBrumrmOOBlVxuICBjeWNsZTogbnVtYmVyOyAvLyDlkbzlkLjjgpLmraPlvKbms6LjgajjgZfjgZ/jgajjgY3jga7jgIHms6Ljga7lkajmnJ9cbiAgd2VpZ2h0OiBudW1iZXI7IC8vIOODkeODqeODoeODvOOCv+OBuOOBrumHjeOBv1xufVxuXG4vLyBOYW1lc3BhY2UgZGVmaW5pdGlvbiBmb3IgY29tcGF0aWJpbGl0eS5cbmltcG9ydCAqIGFzICQgZnJvbSAnLi9jdWJpc21icmVhdGgnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2VcbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgZXhwb3J0IGNvbnN0IEJyZWF0aFBhcmFtZXRlckRhdGEgPSAkLkJyZWF0aFBhcmFtZXRlckRhdGE7XG4gIGV4cG9ydCB0eXBlIEJyZWF0aFBhcmFtZXRlckRhdGEgPSAkLkJyZWF0aFBhcmFtZXRlckRhdGE7XG4gIGV4cG9ydCBjb25zdCBDdWJpc21CcmVhdGggPSAkLkN1YmlzbUJyZWF0aDtcbiAgZXhwb3J0IHR5cGUgQ3ViaXNtQnJlYXRoID0gJC5DdWJpc21CcmVhdGg7XG59XG4iXSwibmFtZXMiOlsiQ3ViaXNtQnJlYXRoIiwiY3JlYXRlIiwiZGVsZXRlIiwiaW5zdGFuY2UiLCJzZXRQYXJhbWV0ZXJzIiwiYnJlYXRoUGFyYW1ldGVycyIsIl9icmVhdGhQYXJhbWV0ZXJzIiwiZ2V0UGFyYW1ldGVycyIsInVwZGF0ZVBhcmFtZXRlcnMiLCJtb2RlbCIsImRlbHRhVGltZVNlY29uZHMiLCJfY3VycmVudFRpbWUiLCJ0IiwiaSIsImdldFNpemUiLCJkYXRhIiwiYXQiLCJhZGRQYXJhbWV0ZXJWYWx1ZUJ5SWQiLCJwYXJhbWV0ZXJJZCIsIm9mZnNldCIsInBlYWsiLCJNYXRoIiwic2luIiwiY3ljbGUiLCJ3ZWlnaHQiLCJCcmVhdGhQYXJhbWV0ZXJEYXRhIiwidW5kZWZpbmVkIiwiJCIsIkxpdmUyREN1YmlzbUZyYW1ld29yayJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/effect/cubismbreath.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/effect/cubismeyeblink.ts":
/*!*******************************************************!*\
  !*** ./WebSDK/Framework/src/effect/cubismeyeblink.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismEyeBlink: () => (/* binding */ CubismEyeBlink),\n/* harmony export */   EyeState: () => (/* binding */ EyeState),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _cubismeyeblink__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cubismeyeblink */ \"(ssr)/./WebSDK/Framework/src/effect/cubismeyeblink.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n/**\n * 自動まばたき機能\n *\n * 自動まばたき機能を提供する。\n */ class CubismEyeBlink {\n    /**\n   * インスタンスを作成する\n   * @param modelSetting モデルの設定情報\n   * @return 作成されたインスタンス\n   * @note 引数がNULLの場合、パラメータIDが設定されていない空のインスタンスを作成する。\n   */ static create(modelSetting = null) {\n        return new CubismEyeBlink(modelSetting);\n    }\n    /**\n   * インスタンスの破棄\n   * @param eyeBlink 対象のCubismEyeBlink\n   */ static delete(eyeBlink) {\n        if (eyeBlink != null) {\n            eyeBlink = null;\n        }\n    }\n    /**\n   * まばたきの間隔の設定\n   * @param blinkingInterval まばたきの間隔の時間[秒]\n   */ setBlinkingInterval(blinkingInterval) {\n        this._blinkingIntervalSeconds = blinkingInterval;\n    }\n    /**\n   * まばたきのモーションの詳細設定\n   * @param closing   まぶたを閉じる動作の所要時間[秒]\n   * @param closed    まぶたを閉じている動作の所要時間[秒]\n   * @param opening   まぶたを開く動作の所要時間[秒]\n   */ setBlinkingSetting(closing, closed, opening) {\n        this._closingSeconds = closing;\n        this._closedSeconds = closed;\n        this._openingSeconds = opening;\n    }\n    /**\n   * まばたきさせるパラメータIDのリストの設定\n   * @param parameterIds パラメータのIDのリスト\n   */ setParameterIds(parameterIds) {\n        this._parameterIds = parameterIds;\n    }\n    /**\n   * まばたきさせるパラメータIDのリストの取得\n   * @return パラメータIDのリスト\n   */ getParameterIds() {\n        return this._parameterIds;\n    }\n    /**\n   * モデルのパラメータの更新\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */ updateParameters(model, deltaTimeSeconds) {\n        this._userTimeSeconds += deltaTimeSeconds;\n        let parameterValue;\n        let t = 0.0;\n        const blinkingState = this._blinkingState;\n        switch(blinkingState){\n            case 2:\n                t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n                if (t >= 1.0) {\n                    t = 1.0;\n                    this._blinkingState = 3;\n                    this._stateStartTimeSeconds = this._userTimeSeconds;\n                }\n                parameterValue = 1.0 - t;\n                break;\n            case 3:\n                t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n                if (t >= 1.0) {\n                    this._blinkingState = 4;\n                    this._stateStartTimeSeconds = this._userTimeSeconds;\n                }\n                parameterValue = 0.0;\n                break;\n            case 4:\n                t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n                if (t >= 1.0) {\n                    t = 1.0;\n                    this._blinkingState = 1;\n                    this._nextBlinkingTime = this.determinNextBlinkingTiming();\n                }\n                parameterValue = t;\n                break;\n            case 1:\n                if (this._nextBlinkingTime < this._userTimeSeconds) {\n                    this._blinkingState = 2;\n                    this._stateStartTimeSeconds = this._userTimeSeconds;\n                }\n                parameterValue = 1.0;\n                break;\n            case 0:\n            default:\n                this._blinkingState = 1;\n                this._nextBlinkingTime = this.determinNextBlinkingTiming();\n                parameterValue = 1.0;\n                break;\n        }\n        if (!CubismEyeBlink.CloseIfZero) {\n            parameterValue = -parameterValue;\n        }\n        for(let i = 0; i < this._parameterIds.getSize(); ++i){\n            model.setParameterValueById(this._parameterIds.at(i), parameterValue);\n        }\n    }\n    /**\n   * コンストラクタ\n   * @param modelSetting モデルの設定情報\n   */ constructor(modelSetting){\n        this._blinkingState = 0;\n        this._nextBlinkingTime = 0.0;\n        this._stateStartTimeSeconds = 0.0;\n        this._blinkingIntervalSeconds = 4.0;\n        this._closingSeconds = 0.1;\n        this._closedSeconds = 0.05;\n        this._openingSeconds = 0.15;\n        this._userTimeSeconds = 0.0;\n        this._parameterIds = new _type_csmvector__WEBPACK_IMPORTED_MODULE_0__.csmVector();\n        if (modelSetting == null) {\n            return;\n        }\n        for(let i = 0; i < modelSetting.getEyeBlinkParameterCount(); ++i){\n            this._parameterIds.pushBack(modelSetting.getEyeBlinkParameterId(i));\n        }\n    }\n    /**\n   * 次の瞬きのタイミングの決定\n   *\n   * @return 次のまばたきを行う時刻[秒]\n   */ determinNextBlinkingTiming() {\n        const r = Math.random();\n        return this._userTimeSeconds + r * (2.0 * this._blinkingIntervalSeconds - 1.0);\n    }\n    static{\n        /**\n   * IDで指定された目のパラメータが、0のときに閉じるなら true 、1の時に閉じるなら false 。\n   */ this.CloseIfZero = true;\n    }\n}\n/**\n * まばたきの状態\n *\n * まばたきの状態を表す列挙型\n */ var EyeState = /*#__PURE__*/ function(EyeState) {\n    EyeState[EyeState[\"EyeState_First\"] = 0] = \"EyeState_First\";\n    EyeState[EyeState[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n    EyeState[EyeState[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n    EyeState[EyeState[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n    EyeState[EyeState[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\"; // まぶたが開いていく途中の状態\n    return EyeState;\n}({});\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismEyeBlink = _cubismeyeblink__WEBPACK_IMPORTED_MODULE_1__.CubismEyeBlink;\n    Live2DCubismFramework.EyeState = _cubismeyeblink__WEBPACK_IMPORTED_MODULE_1__.EyeState;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/effect/cubismeyeblink.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/effect/cubismpose.ts":
/*!***************************************************!*\
  !*** ./WebSDK/Framework/src/effect/cubismpose.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismPose: () => (/* binding */ CubismPose),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework),\n/* harmony export */   PartData: () => (/* binding */ PartData)\n/* harmony export */ });\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _utils_cubismjson__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/cubismjson */ \"(ssr)/./WebSDK/Framework/src/utils/cubismjson.ts\");\n/* harmony import */ var _cubismpose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cubismpose */ \"(ssr)/./WebSDK/Framework/src/effect/cubismpose.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\nconst Epsilon = 0.001;\nconst DefaultFadeInSeconds = 0.5;\n// Pose.jsonのタグ\nconst FadeIn = 'FadeInTime';\nconst Link = 'Link';\nconst Groups = 'Groups';\nconst Id = 'Id';\n/**\n * パーツの不透明度の設定\n *\n * パーツの不透明度の管理と設定を行う。\n */ class CubismPose {\n    /**\n   * インスタンスの作成\n   * @param pose3json pose3.jsonのデータ\n   * @param size pose3.jsonのデータのサイズ[byte]\n   * @return 作成されたインスタンス\n   */ static create(pose3json, size) {\n        const json = _utils_cubismjson__WEBPACK_IMPORTED_MODULE_2__.CubismJson.create(pose3json, size);\n        if (!json) {\n            return null;\n        }\n        const ret = new CubismPose();\n        const root = json.getRoot();\n        // フェード時間の指定\n        if (!root.getValueByString(FadeIn).isNull()) {\n            ret._fadeTimeSeconds = root.getValueByString(FadeIn).toFloat(DefaultFadeInSeconds);\n            if (ret._fadeTimeSeconds <= 0.0) {\n                ret._fadeTimeSeconds = DefaultFadeInSeconds;\n            }\n        }\n        // パーツグループ\n        const poseListInfo = root.getValueByString(Groups);\n        const poseCount = poseListInfo.getSize();\n        for(let poseIndex = 0; poseIndex < poseCount; ++poseIndex){\n            const idListInfo = poseListInfo.getValueByIndex(poseIndex);\n            const idCount = idListInfo.getSize();\n            let groupCount = 0;\n            for(let groupIndex = 0; groupIndex < idCount; ++groupIndex){\n                const partInfo = idListInfo.getValueByIndex(groupIndex);\n                const partData = new PartData();\n                const parameterId = _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(partInfo.getValueByString(Id).getRawString());\n                partData.partId = parameterId;\n                // リンクするパーツの設定\n                if (!partInfo.getValueByString(Link).isNull()) {\n                    const linkListInfo = partInfo.getValueByString(Link);\n                    const linkCount = linkListInfo.getSize();\n                    for(let linkIndex = 0; linkIndex < linkCount; ++linkIndex){\n                        const linkPart = new PartData();\n                        const linkId = _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(linkListInfo.getValueByIndex(linkIndex).getString());\n                        linkPart.partId = linkId;\n                        partData.link.pushBack(linkPart);\n                    }\n                }\n                ret._partGroups.pushBack(partData.clone());\n                ++groupCount;\n            }\n            ret._partGroupCounts.pushBack(groupCount);\n        }\n        _utils_cubismjson__WEBPACK_IMPORTED_MODULE_2__.CubismJson.delete(json);\n        return ret;\n    }\n    /**\n   * インスタンスを破棄する\n   * @param pose 対象のCubismPose\n   */ static delete(pose) {\n        if (pose != null) {\n            pose = null;\n        }\n    }\n    /**\n   * モデルのパラメータの更新\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */ updateParameters(model, deltaTimeSeconds) {\n        // 前回のモデルと同じでない場合は初期化が必要\n        if (model != this._lastModel) {\n            // パラメータインデックスの初期化\n            this.reset(model);\n        }\n        this._lastModel = model;\n        // 設定から時間を変更すると、経過時間がマイナスになる事があるので、経過時間0として対応\n        if (deltaTimeSeconds < 0.0) {\n            deltaTimeSeconds = 0.0;\n        }\n        let beginIndex = 0;\n        for(let i = 0; i < this._partGroupCounts.getSize(); i++){\n            const partGroupCount = this._partGroupCounts.at(i);\n            this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n            beginIndex += partGroupCount;\n        }\n        this.copyPartOpacities(model);\n    }\n    /**\n   * 表示を初期化\n   * @param model 対象のモデル\n   * @note 不透明度の初期値が0でないパラメータは、不透明度を１に設定する\n   */ reset(model) {\n        let beginIndex = 0;\n        for(let i = 0; i < this._partGroupCounts.getSize(); ++i){\n            const groupCount = this._partGroupCounts.at(i);\n            for(let j = beginIndex; j < beginIndex + groupCount; ++j){\n                this._partGroups.at(j).initialize(model);\n                const partsIndex = this._partGroups.at(j).partIndex;\n                const paramIndex = this._partGroups.at(j).parameterIndex;\n                if (partsIndex < 0) {\n                    continue;\n                }\n                model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1.0 : 0.0);\n                model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1.0 : 0.0);\n                for(let k = 0; k < this._partGroups.at(j).link.getSize(); ++k){\n                    this._partGroups.at(j).link.at(k).initialize(model);\n                }\n            }\n            beginIndex += groupCount;\n        }\n    }\n    /**\n   * パーツの不透明度をコピー\n   *\n   * @param model 対象のモデル\n   */ copyPartOpacities(model) {\n        for(let groupIndex = 0; groupIndex < this._partGroups.getSize(); ++groupIndex){\n            const partData = this._partGroups.at(groupIndex);\n            if (partData.link.getSize() == 0) {\n                continue; // 連動するパラメータはない\n            }\n            const partIndex = this._partGroups.at(groupIndex).partIndex;\n            const opacity = model.getPartOpacityByIndex(partIndex);\n            for(let linkIndex = 0; linkIndex < partData.link.getSize(); ++linkIndex){\n                const linkPart = partData.link.at(linkIndex);\n                const linkPartIndex = linkPart.partIndex;\n                if (linkPartIndex < 0) {\n                    continue;\n                }\n                model.setPartOpacityByIndex(linkPartIndex, opacity);\n            }\n        }\n    }\n    /**\n   * パーツのフェード操作を行う。\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   * @param beginIndex フェード操作を行うパーツグループの先頭インデックス\n   * @param partGroupCount フェード操作を行うパーツグループの個数\n   */ doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n        let visiblePartIndex = -1;\n        let newOpacity = 1.0;\n        const phi = 0.5;\n        const backOpacityThreshold = 0.15;\n        // 現在、表示状態になっているパーツを取得\n        for(let i = beginIndex; i < beginIndex + partGroupCount; ++i){\n            const partIndex = this._partGroups.at(i).partIndex;\n            const paramIndex = this._partGroups.at(i).parameterIndex;\n            if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n                if (visiblePartIndex >= 0) {\n                    break;\n                }\n                visiblePartIndex = i;\n                newOpacity = model.getPartOpacityByIndex(partIndex);\n                // 新しい不透明度を計算\n                newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n                if (newOpacity > 1.0) {\n                    newOpacity = 1.0;\n                }\n            }\n        }\n        if (visiblePartIndex < 0) {\n            visiblePartIndex = 0;\n            newOpacity = 1.0;\n        }\n        // 表示パーツ、非表示パーツの不透明度を設定する\n        for(let i = beginIndex; i < beginIndex + partGroupCount; ++i){\n            const partsIndex = this._partGroups.at(i).partIndex;\n            // 表示パーツの設定\n            if (visiblePartIndex == i) {\n                model.setPartOpacityByIndex(partsIndex, newOpacity); // 先に設定\n            } else {\n                let opacity = model.getPartOpacityByIndex(partsIndex);\n                let a1; // 計算によって求められる不透明度\n                if (newOpacity < phi) {\n                    a1 = newOpacity * (phi - 1) / phi + 1.0; // (0,1),(phi,phi)を通る直線式\n                } else {\n                    a1 = (1 - newOpacity) * phi / (1.0 - phi); // (1,0),(phi,phi)を通る直線式\n                }\n                // 背景の見える割合を制限する場合\n                const backOpacity = (1.0 - a1) * (1.0 - newOpacity);\n                if (backOpacity > backOpacityThreshold) {\n                    a1 = 1.0 - backOpacityThreshold / (1.0 - newOpacity);\n                }\n                if (opacity > a1) {\n                    opacity = a1; // 計算の不透明度よりも大きければ（濃ければ）不透明度を上げる\n                }\n                model.setPartOpacityByIndex(partsIndex, opacity);\n            }\n        }\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        this._fadeTimeSeconds = DefaultFadeInSeconds;\n        this._lastModel = null;\n        this._partGroups = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        this._partGroupCounts = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n    }\n}\n/**\n * パーツにまつわるデータを管理\n */ class PartData {\n    /**\n   * コンストラクタ\n   */ constructor(v){\n        this.parameterIndex = 0;\n        this.partIndex = 0;\n        this.link = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        if (v != undefined) {\n            this.partId = v.partId;\n            for(const ite = v.link.begin(); ite.notEqual(v.link.end()); ite.preIncrement()){\n                this.link.pushBack(ite.ptr().clone());\n            }\n        }\n    }\n    /**\n   * =演算子のオーバーロード\n   */ assignment(v) {\n        this.partId = v.partId;\n        for(const ite = v.link.begin(); ite.notEqual(v.link.end()); ite.preIncrement()){\n            this.link.pushBack(ite.ptr().clone());\n        }\n        return this;\n    }\n    /**\n   * 初期化\n   * @param model 初期化に使用するモデル\n   */ initialize(model) {\n        this.parameterIndex = model.getParameterIndex(this.partId);\n        this.partIndex = model.getPartIndex(this.partId);\n        model.setParameterValueByIndex(this.parameterIndex, 1);\n    }\n    /**\n   * オブジェクトのコピーを生成する\n   */ clone() {\n        const clonePartData = new PartData();\n        clonePartData.partId = this.partId;\n        clonePartData.parameterIndex = this.parameterIndex;\n        clonePartData.partIndex = this.partIndex;\n        clonePartData.link = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        for(let ite = this.link.begin(); ite.notEqual(this.link.end()); ite.increment()){\n            clonePartData.link.pushBack(ite.ptr().clone());\n        }\n        return clonePartData;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismPose = _cubismpose__WEBPACK_IMPORTED_MODULE_3__.CubismPose;\n    Live2DCubismFramework.PartData = _cubismpose__WEBPACK_IMPORTED_MODULE_3__.PartData;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/effect/cubismpose.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/icubismmodelsetting.ts":
/*!*****************************************************!*\
  !*** ./WebSDK/Framework/src/icubismmodelsetting.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ICubismModelSetting: () => (/* binding */ ICubismModelSetting),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _icubismmodelsetting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icubismmodelsetting */ \"(ssr)/./WebSDK/Framework/src/icubismmodelsetting.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ /**\n * モデル設定情報を取り扱う関数を宣言した純粋仮想クラス。\n *\n * このクラスを継承することで、モデル設定情報を取り扱うクラスになる。\n */ class ICubismModelSetting {\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.ICubismModelSetting = _icubismmodelsetting__WEBPACK_IMPORTED_MODULE_0__.ICubismModelSetting;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/icubismmodelsetting.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/id/cubismid.ts":
/*!*********************************************!*\
  !*** ./WebSDK/Framework/src/id/cubismid.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismId: () => (/* binding */ CubismId),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _type_csmstring__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/csmstring */ \"(ssr)/./WebSDK/Framework/src/type/csmstring.ts\");\n/* harmony import */ var _cubismid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cubismid */ \"(ssr)/./WebSDK/Framework/src/id/cubismid.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n/**\n * パラメータ名・パーツ名・Drawable名を保持\n *\n * パラメータ名・パーツ名・Drawable名を保持するクラス。\n *\n * @note 指定したID文字列からCubismIdを取得する際はこのクラスの生成メソッドを呼ばず、\n *       CubismIdManager().getId(id)を使用してください\n */ class CubismId {\n    /**\n   * 内部で使用するCubismIdクラス生成メソッド\n   *\n   * @param id ID文字列\n   * @returns CubismId\n   * @note 指定したID文字列からCubismIdを取得する際は\n   *       CubismIdManager().getId(id)を使用してください\n   */ static createIdInternal(id) {\n        return new CubismId(id);\n    }\n    /**\n   * ID名を取得する\n   */ getString() {\n        return this._id;\n    }\n    /**\n   * idを比較\n   * @param c 比較するid\n   * @return 同じならばtrue,異なっていればfalseを返す\n   */ isEqual(c) {\n        if (typeof c === 'string') {\n            return this._id.isEqual(c);\n        } else if (c instanceof _type_csmstring__WEBPACK_IMPORTED_MODULE_0__.csmString) {\n            return this._id.isEqual(c.s);\n        } else if (c instanceof CubismId) {\n            return this._id.isEqual(c._id.s);\n        }\n        return false;\n    }\n    /**\n   * idを比較\n   * @param c 比較するid\n   * @return 同じならばtrue,異なっていればfalseを返す\n   */ isNotEqual(c) {\n        if (typeof c == 'string') {\n            return !this._id.isEqual(c);\n        } else if (c instanceof _type_csmstring__WEBPACK_IMPORTED_MODULE_0__.csmString) {\n            return !this._id.isEqual(c.s);\n        } else if (c instanceof CubismId) {\n            return !this._id.isEqual(c._id.s);\n        }\n        return false;\n    }\n    /**\n   * プライベートコンストラクタ\n   *\n   * @note ユーザーによる生成は許可しません\n   */ constructor(id){\n        if (typeof id === 'string') {\n            this._id = new _type_csmstring__WEBPACK_IMPORTED_MODULE_0__.csmString(id);\n            return;\n        }\n        this._id = id;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismId = _cubismid__WEBPACK_IMPORTED_MODULE_1__.CubismId;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvRnJhbWV3b3JrL3NyYy9pZC9jdWJpc21pZC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7O0NBS0MsR0FFNkM7QUFFOUM7Ozs7Ozs7Q0FPQyxHQUNNLE1BQU1DO0lBQ1g7Ozs7Ozs7R0FPQyxHQUNELE9BQWNDLGlCQUFpQkMsRUFBc0IsRUFBRTtRQUNyRCxPQUFPLElBQUlGLFNBQVNFO0lBQ3RCO0lBRUE7O0dBRUMsR0FDRCxZQUE4QjtRQUM1QixPQUFPLElBQUksQ0FBQ0UsR0FBRztJQUNqQjtJQUVBOzs7O0dBSUMsR0FDRCxRQUFlRSxDQUFnQyxFQUFXO1FBQ3hELElBQUksT0FBT0EsTUFBTSxVQUFVO1lBQ3pCLE9BQU8sSUFBSSxDQUFDRixHQUFHLENBQUNDLE9BQU8sQ0FBQ0M7UUFDMUIsT0FBTyxJQUFJQSxhQUFhUCxzREFBU0EsRUFBRTtZQUNqQyxPQUFPLElBQUksQ0FBQ0ssR0FBRyxDQUFDQyxPQUFPLENBQUNDLEVBQUVDLENBQUM7UUFDN0IsT0FBTyxJQUFJRCxhQUFhTixVQUFVO1lBQ2hDLE9BQU8sSUFBSSxDQUFDSSxHQUFHLENBQUNDLE9BQU8sQ0FBQ0MsRUFBRUYsR0FBRyxDQUFDRyxDQUFDO1FBQ2pDO1FBQ0EsT0FBTztJQUNUO0lBRUE7Ozs7R0FJQyxHQUNELFdBQWtCRCxDQUFnQyxFQUFXO1FBQzNELElBQUksT0FBT0EsS0FBSyxVQUFVO1lBQ3hCLE9BQU8sQ0FBQyxJQUFJLENBQUNGLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDQztRQUMzQixPQUFPLElBQUlBLGFBQWFQLHNEQUFTQSxFQUFFO1lBQ2pDLE9BQU8sQ0FBQyxJQUFJLENBQUNLLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDQyxFQUFFQyxDQUFDO1FBQzlCLE9BQU8sSUFBSUQsYUFBYU4sVUFBVTtZQUNoQyxPQUFPLENBQUMsSUFBSSxDQUFDSSxHQUFHLENBQUNDLE9BQU8sQ0FBQ0MsRUFBRUYsR0FBRyxDQUFDRyxDQUFDO1FBQ2xDO1FBQ0EsT0FBTztJQUNUO0lBRUE7Ozs7R0FJQyxHQUNELFlBQW9CTCxFQUFzQixDQUFFO1FBQzFDLElBQUksT0FBT0EsT0FBTyxVQUFVO1lBQzFCLElBQUksQ0FBQ0UsR0FBRyxHQUFHLElBQUlMLHNEQUFTQSxDQUFDRztZQUN6QjtRQUNGO1FBRUEsSUFBSSxDQUFDRSxHQUFHLEdBQUdGO0lBQ2I7QUFHRjtBQUlBLDBDQUEwQztBQUNWO1VBRWZROzBCQUNGVixXQUFXUywrQ0FBVTtBQUdwQyxHQUppQkMsMEJBQUFBIiwic291cmNlcyI6WyIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL1dlYlNESy9GcmFtZXdvcmsvc3JjL2lkL2N1YmlzbWlkLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IGNzbVN0cmluZyB9IGZyb20gJy4uL3R5cGUvY3Ntc3RyaW5nJztcblxuLyoqXG4gKiDjg5Hjg6njg6Hjg7zjgr/lkI3jg7vjg5Hjg7zjg4TlkI3jg7tEcmF3YWJsZeWQjeOCkuS/neaMgVxuICpcbiAqIOODkeODqeODoeODvOOCv+WQjeODu+ODkeODvOODhOWQjeODu0RyYXdhYmxl5ZCN44KS5L+d5oyB44GZ44KL44Kv44Op44K544CCXG4gKlxuICogQG5vdGUg5oyH5a6a44GX44GfSUTmloflrZfliJfjgYvjgolDdWJpc21JZOOCkuWPluW+l+OBmeOCi+mam+OBr+OBk+OBruOCr+ODqeOCueOBrueUn+aIkOODoeOCveODg+ODieOCkuWRvOOBsOOBmuOAgVxuICogICAgICAgQ3ViaXNtSWRNYW5hZ2VyKCkuZ2V0SWQoaWQp44KS5L2/55So44GX44Gm44GP44Gg44GV44GEXG4gKi9cbmV4cG9ydCBjbGFzcyBDdWJpc21JZCB7XG4gIC8qKlxuICAgKiDlhoXpg6jjgafkvb/nlKjjgZnjgotDdWJpc21JZOOCr+ODqeOCueeUn+aIkOODoeOCveODg+ODiVxuICAgKlxuICAgKiBAcGFyYW0gaWQgSUTmloflrZfliJdcbiAgICogQHJldHVybnMgQ3ViaXNtSWRcbiAgICogQG5vdGUg5oyH5a6a44GX44GfSUTmloflrZfliJfjgYvjgolDdWJpc21JZOOCkuWPluW+l+OBmeOCi+mam+OBr1xuICAgKiAgICAgICBDdWJpc21JZE1hbmFnZXIoKS5nZXRJZChpZCnjgpLkvb/nlKjjgZfjgabjgY/jgaDjgZXjgYRcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgY3JlYXRlSWRJbnRlcm5hbChpZDogc3RyaW5nIHwgY3NtU3RyaW5nKSB7XG4gICAgcmV0dXJuIG5ldyBDdWJpc21JZChpZCk7XG4gIH1cblxuICAvKipcbiAgICogSUTlkI3jgpLlj5blvpfjgZnjgotcbiAgICovXG4gIHB1YmxpYyBnZXRTdHJpbmcoKTogY3NtU3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5faWQ7XG4gIH1cblxuICAvKipcbiAgICogaWTjgpLmr5TovINcbiAgICogQHBhcmFtIGMg5q+U6LyD44GZ44KLaWRcbiAgICogQHJldHVybiDlkIzjgZjjgarjgonjgbB0cnVlLOeVsOOBquOBo+OBpuOBhOOCjOOBsGZhbHNl44KS6L+U44GZXG4gICAqL1xuICBwdWJsaWMgaXNFcXVhbChjOiBzdHJpbmcgfCBjc21TdHJpbmcgfCBDdWJpc21JZCk6IGJvb2xlYW4ge1xuICAgIGlmICh0eXBlb2YgYyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJldHVybiB0aGlzLl9pZC5pc0VxdWFsKGMpO1xuICAgIH0gZWxzZSBpZiAoYyBpbnN0YW5jZW9mIGNzbVN0cmluZykge1xuICAgICAgcmV0dXJuIHRoaXMuX2lkLmlzRXF1YWwoYy5zKTtcbiAgICB9IGVsc2UgaWYgKGMgaW5zdGFuY2VvZiBDdWJpc21JZCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2lkLmlzRXF1YWwoYy5faWQucyk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBpZOOCkuavlOi8g1xuICAgKiBAcGFyYW0gYyDmr5TovIPjgZnjgotpZFxuICAgKiBAcmV0dXJuIOWQjOOBmOOBquOCieOBsHRydWUs55Ww44Gq44Gj44Gm44GE44KM44GwZmFsc2XjgpLov5TjgZlcbiAgICovXG4gIHB1YmxpYyBpc05vdEVxdWFsKGM6IHN0cmluZyB8IGNzbVN0cmluZyB8IEN1YmlzbUlkKTogYm9vbGVhbiB7XG4gICAgaWYgKHR5cGVvZiBjID09ICdzdHJpbmcnKSB7XG4gICAgICByZXR1cm4gIXRoaXMuX2lkLmlzRXF1YWwoYyk7XG4gICAgfSBlbHNlIGlmIChjIGluc3RhbmNlb2YgY3NtU3RyaW5nKSB7XG4gICAgICByZXR1cm4gIXRoaXMuX2lkLmlzRXF1YWwoYy5zKTtcbiAgICB9IGVsc2UgaWYgKGMgaW5zdGFuY2VvZiBDdWJpc21JZCkge1xuICAgICAgcmV0dXJuICF0aGlzLl9pZC5pc0VxdWFsKGMuX2lkLnMpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICog44OX44Op44Kk44OZ44O844OI44Kz44Oz44K544OI44Op44Kv44K/XG4gICAqXG4gICAqIEBub3RlIOODpuODvOOCtuODvOOBq+OCiOOCi+eUn+aIkOOBr+ioseWPr+OBl+OBvuOBm+OCk1xuICAgKi9cbiAgcHJpdmF0ZSBjb25zdHJ1Y3RvcihpZDogc3RyaW5nIHwgY3NtU3RyaW5nKSB7XG4gICAgaWYgKHR5cGVvZiBpZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRoaXMuX2lkID0gbmV3IGNzbVN0cmluZyhpZCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5faWQgPSBpZDtcbiAgfVxuXG4gIHByaXZhdGUgX2lkOiBjc21TdHJpbmc7IC8vIElE5ZCNXG59XG5cbmV4cG9ydCBkZWNsYXJlIHR5cGUgQ3ViaXNtSWRIYW5kbGUgPSBDdWJpc21JZDtcblxuLy8gTmFtZXNwYWNlIGRlZmluaXRpb24gZm9yIGNvbXBhdGliaWxpdHkuXG5pbXBvcnQgKiBhcyAkIGZyb20gJy4vY3ViaXNtaWQnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2VcbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgZXhwb3J0IGNvbnN0IEN1YmlzbUlkID0gJC5DdWJpc21JZDtcbiAgZXhwb3J0IHR5cGUgQ3ViaXNtSWQgPSAkLkN1YmlzbUlkO1xuICBleHBvcnQgdHlwZSBDdWJpc21JZEhhbmRsZSA9ICQuQ3ViaXNtSWRIYW5kbGU7XG59XG4iXSwibmFtZXMiOlsiY3NtU3RyaW5nIiwiQ3ViaXNtSWQiLCJjcmVhdGVJZEludGVybmFsIiwiaWQiLCJnZXRTdHJpbmciLCJfaWQiLCJpc0VxdWFsIiwiYyIsInMiLCJpc05vdEVxdWFsIiwiJCIsIkxpdmUyREN1YmlzbUZyYW1ld29yayJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/id/cubismid.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/id/cubismidmanager.ts":
/*!****************************************************!*\
  !*** ./WebSDK/Framework/src/id/cubismidmanager.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismIdManager: () => (/* binding */ CubismIdManager),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _cubismid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cubismid */ \"(ssr)/./WebSDK/Framework/src/id/cubismid.ts\");\n/* harmony import */ var _cubismidmanager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubismidmanager */ \"(ssr)/./WebSDK/Framework/src/id/cubismidmanager.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n/**\n * ID名の管理\n *\n * ID名を管理する。\n */ class CubismIdManager {\n    /**\n   * コンストラクタ\n   */ constructor(){\n        this._ids = new _type_csmvector__WEBPACK_IMPORTED_MODULE_0__.csmVector();\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        for(let i = 0; i < this._ids.getSize(); ++i){\n            this._ids.set(i, void 0);\n        }\n        this._ids = null;\n    }\n    /**\n   * ID名をリストから登録\n   *\n   * @param ids ID名リスト\n   * @param count IDの個数\n   */ registerIds(ids) {\n        for(let i = 0; i < ids.length; i++){\n            this.registerId(ids[i]);\n        }\n    }\n    /**\n   * ID名を登録\n   *\n   * @param id ID名\n   */ registerId(id) {\n        let result = null;\n        if ('string' == typeof id) {\n            if ((result = this.findId(id)) != null) {\n                return result;\n            }\n            result = _cubismid__WEBPACK_IMPORTED_MODULE_1__.CubismId.createIdInternal(id);\n            this._ids.pushBack(result);\n        } else {\n            return this.registerId(id.s);\n        }\n        return result;\n    }\n    /**\n   * ID名からIDを取得する\n   *\n   * @param id ID名\n   */ getId(id) {\n        return this.registerId(id);\n    }\n    /**\n   * ID名からIDの確認\n   *\n   * @return true 存在する\n   * @return false 存在しない\n   */ isExist(id) {\n        if ('string' == typeof id) {\n            return this.findId(id) != null;\n        }\n        return this.isExist(id.s);\n    }\n    /**\n   * ID名からIDを検索する。\n   *\n   * @param id ID名\n   * @return 登録されているID。なければNULL。\n   */ findId(id) {\n        for(let i = 0; i < this._ids.getSize(); ++i){\n            if (this._ids.at(i).getString().isEqual(id)) {\n                return this._ids.at(i);\n            }\n        }\n        return null;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismIdManager = _cubismidmanager__WEBPACK_IMPORTED_MODULE_2__.CubismIdManager;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvRnJhbWV3b3JrL3NyYy9pZC9jdWJpc21pZG1hbmFnZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUc2QztBQUNSO0FBRXRDOzs7O0NBSUMsR0FDTSxNQUFNRTtJQUNYOztHQUVDLEdBQ0QsYUFBcUI7UUFDbkIsSUFBSSxDQUFDQyxJQUFJLEdBQUcsSUFBSUgsc0RBQVNBO0lBQzNCO0lBRUE7O0dBRUMsR0FDRCxVQUF1QjtRQUNyQixJQUFLLElBQUlLLElBQUksR0FBR0EsSUFBSSxJQUFJLENBQUNGLElBQUksQ0FBQ0csT0FBTyxJQUFJLEVBQUVELEVBQUc7WUFDNUMsSUFBSSxDQUFDRixJQUFJLENBQUNJLEdBQUcsQ0FBQ0YsR0FBRyxLQUFLO1FBQ3hCO1FBQ0EsSUFBSSxDQUFDRixJQUFJLEdBQUc7SUFDZDtJQUVBOzs7OztHQUtDLEdBQ0QsWUFBbUJNLEdBQTJCLEVBQVE7UUFDcEQsSUFBSyxJQUFJSixJQUFJLEdBQUdBLElBQUlJLElBQUlDLE1BQU0sRUFBRUwsSUFBSztZQUNuQyxJQUFJLENBQUNNLFVBQVUsQ0FBQ0YsR0FBRyxDQUFDSixFQUFFO1FBQ3hCO0lBQ0Y7SUFFQTs7OztHQUlDLEdBQ0QsV0FBa0JPLEVBQXNCLEVBQVk7UUFDbEQsSUFBSUMsU0FBbUI7UUFFdkIsSUFBSSxZQUFZLE9BQU9ELElBQUk7WUFDekIsSUFBSSxDQUFDQyxTQUFTLElBQUksQ0FBQ0MsTUFBTSxDQUFDRixHQUFFLEtBQU0sTUFBTTtnQkFDdEMsT0FBT0M7WUFDVDtZQUVBQSxTQUFTWiwrQ0FBUUEsQ0FBQ2MsZ0JBQWdCLENBQUNIO1lBQ25DLElBQUksQ0FBQ1QsSUFBSSxDQUFDYSxRQUFRLENBQUNIO1FBQ3JCLE9BQU87WUFDTCxPQUFPLElBQUksQ0FBQ0YsVUFBVSxDQUFDQyxHQUFHSyxDQUFDO1FBQzdCO1FBRUEsT0FBT0o7SUFDVDtJQUVBOzs7O0dBSUMsR0FDRCxNQUFhRCxFQUFzQixFQUFZO1FBQzdDLE9BQU8sSUFBSSxDQUFDRCxVQUFVLENBQUNDO0lBQ3pCO0lBRUE7Ozs7O0dBS0MsR0FDRCxRQUFlQSxFQUFzQixFQUFXO1FBQzlDLElBQUksWUFBWSxPQUFPQSxJQUFJO1lBQ3pCLE9BQU8sSUFBSSxDQUFDRSxNQUFNLENBQUNGLE9BQU87UUFDNUI7UUFDQSxPQUFPLElBQUksQ0FBQ08sT0FBTyxDQUFDUCxHQUFHSyxDQUFDO0lBQzFCO0lBRUE7Ozs7O0dBS0MsR0FDRCxPQUFlTCxFQUFVLEVBQVk7UUFDbkMsSUFBSyxJQUFJUCxJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDRixJQUFJLENBQUNHLE9BQU8sSUFBSSxFQUFFRCxFQUFHO1lBQzVDLElBQUksSUFBSSxDQUFDRixJQUFJLENBQUNpQixFQUFFLENBQUNmLEdBQUdnQixTQUFTLEdBQUdDLE9BQU8sQ0FBQ1YsS0FBSztnQkFDM0MsT0FBTyxJQUFJLENBQUNULElBQUksQ0FBQ2lCLEVBQUUsQ0FBQ2Y7WUFDdEI7UUFDRjtRQUVBLE9BQU87SUFDVDtBQUdGO0FBRUEsMENBQTBDO0FBQ0g7VUFFdEJtQjswQkFDRnRCLGtCQUFrQnFCLDZEQUFpQjtBQUVsRCxHQUhpQkMsMEJBQUFBIiwic291cmNlcyI6WyIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL1dlYlNESy9GcmFtZXdvcmsvc3JjL2lkL2N1YmlzbWlkbWFuYWdlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IHRoZSBMaXZlMkQgT3BlbiBTb2Z0d2FyZSBsaWNlbnNlXG4gKiB0aGF0IGNhbiBiZSBmb3VuZCBhdCBodHRwczovL3d3dy5saXZlMmQuY29tL2V1bGEvbGl2ZTJkLW9wZW4tc29mdHdhcmUtbGljZW5zZS1hZ3JlZW1lbnRfZW4uaHRtbC5cbiAqL1xuXG5pbXBvcnQgeyBjc21TdHJpbmcgfSBmcm9tICcuLi90eXBlL2NzbXN0cmluZyc7XG5pbXBvcnQgeyBjc21WZWN0b3IgfSBmcm9tICcuLi90eXBlL2NzbXZlY3Rvcic7XG5pbXBvcnQgeyBDdWJpc21JZCB9IGZyb20gJy4vY3ViaXNtaWQnO1xuXG4vKipcbiAqIElE5ZCN44Gu566h55CGXG4gKlxuICogSUTlkI3jgpLnrqHnkIbjgZnjgovjgIJcbiAqL1xuZXhwb3J0IGNsYXNzIEN1YmlzbUlkTWFuYWdlciB7XG4gIC8qKlxuICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICovXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLl9pZHMgPSBuZXcgY3NtVmVjdG9yPEN1YmlzbUlkPigpO1xuICB9XG5cbiAgLyoqXG4gICAqIOODh+OCueODiOODqeOCr+OCv+ebuOW9k+OBruWHpueQhlxuICAgKi9cbiAgcHVibGljIHJlbGVhc2UoKTogdm9pZCB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9pZHMuZ2V0U2l6ZSgpOyArK2kpIHtcbiAgICAgIHRoaXMuX2lkcy5zZXQoaSwgdm9pZCAwKTtcbiAgICB9XG4gICAgdGhpcy5faWRzID0gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBJROWQjeOCkuODquOCueODiOOBi+OCieeZu+mMslxuICAgKlxuICAgKiBAcGFyYW0gaWRzIElE5ZCN44Oq44K544OIXG4gICAqIEBwYXJhbSBjb3VudCBJROOBruWAi+aVsFxuICAgKi9cbiAgcHVibGljIHJlZ2lzdGVySWRzKGlkczogc3RyaW5nW10gfCBjc21TdHJpbmdbXSk6IHZvaWQge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaWRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLnJlZ2lzdGVySWQoaWRzW2ldKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogSUTlkI3jgpLnmbvpjLJcbiAgICpcbiAgICogQHBhcmFtIGlkIElE5ZCNXG4gICAqL1xuICBwdWJsaWMgcmVnaXN0ZXJJZChpZDogc3RyaW5nIHwgY3NtU3RyaW5nKTogQ3ViaXNtSWQge1xuICAgIGxldCByZXN1bHQ6IEN1YmlzbUlkID0gbnVsbDtcblxuICAgIGlmICgnc3RyaW5nJyA9PSB0eXBlb2YgaWQpIHtcbiAgICAgIGlmICgocmVzdWx0ID0gdGhpcy5maW5kSWQoaWQpKSAhPSBudWxsKSB7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9XG5cbiAgICAgIHJlc3VsdCA9IEN1YmlzbUlkLmNyZWF0ZUlkSW50ZXJuYWwoaWQpO1xuICAgICAgdGhpcy5faWRzLnB1c2hCYWNrKHJlc3VsdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLnJlZ2lzdGVySWQoaWQucyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBJROWQjeOBi+OCiUlE44KS5Y+W5b6X44GZ44KLXG4gICAqXG4gICAqIEBwYXJhbSBpZCBJROWQjVxuICAgKi9cbiAgcHVibGljIGdldElkKGlkOiBjc21TdHJpbmcgfCBzdHJpbmcpOiBDdWJpc21JZCB7XG4gICAgcmV0dXJuIHRoaXMucmVnaXN0ZXJJZChpZCk7XG4gIH1cblxuICAvKipcbiAgICogSUTlkI3jgYvjgolJROOBrueiuuiqjVxuICAgKlxuICAgKiBAcmV0dXJuIHRydWUg5a2Y5Zyo44GZ44KLXG4gICAqIEByZXR1cm4gZmFsc2Ug5a2Y5Zyo44GX44Gq44GEXG4gICAqL1xuICBwdWJsaWMgaXNFeGlzdChpZDogY3NtU3RyaW5nIHwgc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgaWYgKCdzdHJpbmcnID09IHR5cGVvZiBpZCkge1xuICAgICAgcmV0dXJuIHRoaXMuZmluZElkKGlkKSAhPSBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5pc0V4aXN0KGlkLnMpO1xuICB9XG5cbiAgLyoqXG4gICAqIElE5ZCN44GL44KJSUTjgpLmpJzntKLjgZnjgovjgIJcbiAgICpcbiAgICogQHBhcmFtIGlkIElE5ZCNXG4gICAqIEByZXR1cm4g55m76Yyy44GV44KM44Gm44GE44KLSUTjgILjgarjgZHjgozjgbBOVUxM44CCXG4gICAqL1xuICBwcml2YXRlIGZpbmRJZChpZDogc3RyaW5nKTogQ3ViaXNtSWQge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5faWRzLmdldFNpemUoKTsgKytpKSB7XG4gICAgICBpZiAodGhpcy5faWRzLmF0KGkpLmdldFN0cmluZygpLmlzRXF1YWwoaWQpKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pZHMuYXQoaSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBwcml2YXRlIF9pZHM6IGNzbVZlY3RvcjxDdWJpc21JZD47IC8vIOeZu+mMsuOBleOCjOOBpuOBhOOCi0lE44Gu44Oq44K544OIXG59XG5cbi8vIE5hbWVzcGFjZSBkZWZpbml0aW9uIGZvciBjb21wYXRpYmlsaXR5LlxuaW1wb3J0ICogYXMgJCBmcm9tICcuL2N1YmlzbWlkbWFuYWdlcic7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZVxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICBleHBvcnQgY29uc3QgQ3ViaXNtSWRNYW5hZ2VyID0gJC5DdWJpc21JZE1hbmFnZXI7XG4gIGV4cG9ydCB0eXBlIEN1YmlzbUlkTWFuYWdlciA9ICQuQ3ViaXNtSWRNYW5hZ2VyO1xufVxuIl0sIm5hbWVzIjpbImNzbVZlY3RvciIsIkN1YmlzbUlkIiwiQ3ViaXNtSWRNYW5hZ2VyIiwiX2lkcyIsInJlbGVhc2UiLCJpIiwiZ2V0U2l6ZSIsInNldCIsInJlZ2lzdGVySWRzIiwiaWRzIiwibGVuZ3RoIiwicmVnaXN0ZXJJZCIsImlkIiwicmVzdWx0IiwiZmluZElkIiwiY3JlYXRlSWRJbnRlcm5hbCIsInB1c2hCYWNrIiwicyIsImdldElkIiwiaXNFeGlzdCIsImF0IiwiZ2V0U3RyaW5nIiwiaXNFcXVhbCIsIiQiLCJMaXZlMkRDdWJpc21GcmFtZXdvcmsiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/id/cubismidmanager.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts":
/*!*******************************************************!*\
  !*** ./WebSDK/Framework/src/live2dcubismframework.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Constant: () => (/* binding */ Constant),\n/* harmony export */   CubismFramework: () => (/* binding */ CubismFramework),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework),\n/* harmony export */   LogLevel: () => (/* binding */ LogLevel),\n/* harmony export */   Option: () => (/* binding */ Option),\n/* harmony export */   csmDelete: () => (/* binding */ csmDelete),\n/* harmony export */   strtod: () => (/* binding */ strtod)\n/* harmony export */ });\n/* harmony import */ var _id_cubismidmanager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./id/cubismidmanager */ \"(ssr)/./WebSDK/Framework/src/id/cubismidmanager.ts\");\n/* harmony import */ var _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rendering/cubismrenderer */ \"(ssr)/./WebSDK/Framework/src/rendering/cubismrenderer.ts\");\n/* harmony import */ var _utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/cubismdebug */ \"(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\");\n/* harmony import */ var _utils_cubismjson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/cubismjson */ \"(ssr)/./WebSDK/Framework/src/utils/cubismjson.ts\");\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\nfunction strtod(s, endPtr) {\n    let index = 0;\n    for(let i = 1;; i++){\n        const testC = s.slice(i - 1, i);\n        // 指数・マイナスの可能性があるのでスキップする\n        if (testC == 'e' || testC == '-' || testC == 'E') {\n            continue;\n        } // 文字列の範囲を広げていく\n        const test = s.substring(0, i);\n        const number = Number(test);\n        if (isNaN(number)) {\n            break;\n        } // 最後に数値としてできたindexを格納しておく\n        index = i;\n    }\n    let d = parseFloat(s); // パースした数値\n    if (isNaN(d)) {\n        // 数値として認識できなくなったので終了\n        d = NaN;\n    }\n    endPtr[0] = s.slice(index); // 後続の文字列\n    return d;\n}\n// ファイルスコープの変数を初期化\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option = null;\nlet s_cubismIdManager = null;\n/**\n * Framework内で使う定数の宣言\n */ const Constant = Object.freeze({\n    vertexOffset: 0,\n    vertexStep: 2 // メッシュ頂点のステップ値\n});\nfunction csmDelete(address) {\n    if (!address) {\n        return;\n    }\n    address = void 0;\n}\n/**\n * Live2D Cubism SDK Original Workflow SDKのエントリポイント\n * 利用開始時はCubismFramework.initialize()を呼び、CubismFramework.dispose()で終了する。\n */ class CubismFramework {\n    /**\n   * Cubism FrameworkのAPIを使用可能にする。\n   *  APIを実行する前に必ずこの関数を実行すること。\n   *  一度準備が完了して以降は、再び実行しても内部処理がスキップされます。\n   *\n   * @param    option      Optionクラスのインスタンス\n   *\n   * @return   準備処理が完了したらtrueが返ります。\n   */ static startUp(option = null) {\n        if (s_isStarted) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismLogInfo)('CubismFramework.startUp() is already done.');\n            return s_isStarted;\n        }\n        s_option = option;\n        if (s_option != null) {\n            Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n        }\n        s_isStarted = true;\n        // Live2D Cubism Coreバージョン情報を表示\n        if (s_isStarted) {\n            const version = Live2DCubismCore.Version.csmGetVersion();\n            const major = (version & 0xff000000) >> 24;\n            const minor = (version & 0x00ff0000) >> 16;\n            const patch = version & 0x0000ffff;\n            const versionNumber = version;\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismLogInfo)(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, ('00' + major).slice(-2), ('00' + minor).slice(-2), ('0000' + patch).slice(-4), versionNumber);\n        }\n        (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismLogInfo)('CubismFramework.startUp() is complete.');\n        return s_isStarted;\n    }\n    /**\n   * StartUp()で初期化したCubismFrameworkの各パラメータをクリアします。\n   * Dispose()したCubismFrameworkを再利用する際に利用してください。\n   */ static cleanUp() {\n        s_isStarted = false;\n        s_isInitialized = false;\n        s_option = null;\n        s_cubismIdManager = null;\n    }\n    /**\n   * Cubism Framework内のリソースを初期化してモデルを表示可能な状態にします。<br>\n   *     再度Initialize()するには先にDispose()を実行する必要があります。\n   *\n   * @param memorySize 初期化時メモリ量 [byte(s)]\n   *    複数モデル表示時などにモデルが更新されない際に使用してください。\n   *    指定する際は必ず1024*1024*16 byte(16MB)以上の値を指定してください。\n   *    それ以外はすべて1024*1024*16 byteに丸めます。\n   */ static initialize(memorySize = 0) {\n        (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CSM_ASSERT)(s_isStarted);\n        if (!s_isStarted) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismLogWarning)('CubismFramework is not started.');\n            return;\n        }\n        // --- s_isInitializedによる連続初期化ガード ---\n        // 連続してリソース確保が行われないようにする。\n        // 再度Initialize()するには先にDispose()を実行する必要がある。\n        if (s_isInitialized) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismLogWarning)('CubismFramework.initialize() skipped, already initialized.');\n            return;\n        }\n        //---- static 初期化 ----\n        _utils_cubismjson__WEBPACK_IMPORTED_MODULE_3__.Value.staticInitializeNotForClientCall();\n        s_cubismIdManager = new _id_cubismidmanager__WEBPACK_IMPORTED_MODULE_0__.CubismIdManager();\n        // --- HACK: 初期化時メモリ量の拡張(単位byte) ---\n        // 複数モデル表示時などにモデルが更新されない際に使用してください。\n        // 指定する際は必ず1024*1024*16 byte(16MB)以上の値を指定してください。\n        // それ以外はすべて1024*1024*16 byteに丸めます。\n        Live2DCubismCore.Memory.initializeAmountOfMemory(memorySize);\n        s_isInitialized = true;\n        (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismLogInfo)('CubismFramework.initialize() is complete.');\n    }\n    /**\n   * Cubism Framework内の全てのリソースを解放します。\n   *      ただし、外部で確保されたリソースについては解放しません。\n   *      外部で適切に破棄する必要があります。\n   */ static dispose() {\n        (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CSM_ASSERT)(s_isStarted);\n        if (!s_isStarted) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismLogWarning)('CubismFramework is not started.');\n            return;\n        }\n        // --- s_isInitializedによる未初期化解放ガード ---\n        // dispose()するには先にinitialize()を実行する必要がある。\n        if (!s_isInitialized) {\n            // false...リソース未確保の場合\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismLogWarning)('CubismFramework.dispose() skipped, not initialized.');\n            return;\n        }\n        _utils_cubismjson__WEBPACK_IMPORTED_MODULE_3__.Value.staticReleaseNotForClientCall();\n        s_cubismIdManager.release();\n        s_cubismIdManager = null;\n        // レンダラの静的リソース（シェーダプログラム他）を解放する\n        _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__.CubismRenderer.staticRelease();\n        s_isInitialized = false;\n        (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismLogInfo)('CubismFramework.dispose() is complete.');\n    }\n    /**\n   * Cubism FrameworkのAPIを使用する準備が完了したかどうか\n   * @return APIを使用する準備が完了していればtrueが返ります。\n   */ static isStarted() {\n        return s_isStarted;\n    }\n    /**\n   * Cubism Frameworkのリソース初期化がすでに行われているかどうか\n   * @return リソース確保が完了していればtrueが返ります\n   */ static isInitialized() {\n        return s_isInitialized;\n    }\n    /**\n   * Core APIにバインドしたログ関数を実行する\n   *\n   * @praram message ログメッセージ\n   */ static coreLogFunction(message) {\n        // Return if logging not possible.\n        if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n            return;\n        }\n        Live2DCubismCore.Logging.csmGetLogFunction()(message);\n    }\n    /**\n   * 現在のログ出力レベル設定の値を返す。\n   *\n   * @return  現在のログ出力レベル設定の値\n   */ static getLoggingLevel() {\n        if (s_option != null) {\n            return s_option.loggingLevel;\n        }\n        return 5;\n    }\n    /**\n   * IDマネージャのインスタンスを取得する\n   * @return CubismManagerクラスのインスタンス\n   */ static getIdManager() {\n        return s_cubismIdManager;\n    }\n    /**\n   * 静的クラスとして使用する\n   * インスタンス化させない\n   */ constructor(){}\n}\nclass Option {\n}\n/**\n * ログ出力のレベル\n */ var LogLevel = /*#__PURE__*/ function(LogLevel) {\n    LogLevel[LogLevel[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n    LogLevel[LogLevel[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n    LogLevel[LogLevel[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n    LogLevel[LogLevel[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n    LogLevel[LogLevel[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n    LogLevel[LogLevel[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\"; // ログ出力無効\n    return LogLevel;\n}({});\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.Constant = _live2dcubismframework__WEBPACK_IMPORTED_MODULE_4__.Constant;\n    Live2DCubismFramework.csmDelete = _live2dcubismframework__WEBPACK_IMPORTED_MODULE_4__.csmDelete;\n    Live2DCubismFramework.CubismFramework = _live2dcubismframework__WEBPACK_IMPORTED_MODULE_4__.CubismFramework;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/math/cubismmath.ts":
/*!*************************************************!*\
  !*** ./WebSDK/Framework/src/math/cubismmath.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismMath: () => (/* binding */ CubismMath),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _cubismvector2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cubismvector2 */ \"(ssr)/./WebSDK/Framework/src/math/cubismvector2.ts\");\n/* harmony import */ var _cubismmath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cubismmath */ \"(ssr)/./WebSDK/Framework/src/math/cubismmath.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n/**\n * 数値計算などに使用するユーティリティクラス\n */ class CubismMath {\n    static{\n        this.Epsilon = 0.00001;\n    }\n    /**\n   * 第一引数の値を最小値と最大値の範囲に収めた値を返す\n   *\n   * @param value 収められる値\n   * @param min   範囲の最小値\n   * @param max   範囲の最大値\n   * @return 最小値と最大値の範囲に収めた値\n   */ static range(value, min, max) {\n        if (value < min) {\n            value = min;\n        } else if (value > max) {\n            value = max;\n        }\n        return value;\n    }\n    /**\n   * サイン関数の値を求める\n   *\n   * @param x 角度値（ラジアン）\n   * @return サイン関数sin(x)の値\n   */ static sin(x) {\n        return Math.sin(x);\n    }\n    /**\n   * コサイン関数の値を求める\n   *\n   * @param x 角度値(ラジアン)\n   * @return コサイン関数cos(x)の値\n   */ static cos(x) {\n        return Math.cos(x);\n    }\n    /**\n   * 値の絶対値を求める\n   *\n   * @param x 絶対値を求める値\n   * @return 値の絶対値\n   */ static abs(x) {\n        return Math.abs(x);\n    }\n    /**\n   * 平方根(ルート)を求める\n   * @param x -> 平方根を求める値\n   * @return 値の平方根\n   */ static sqrt(x) {\n        return Math.sqrt(x);\n    }\n    /**\n   * 立方根を求める\n   * @param x -> 立方根を求める値\n   * @return 値の立方根\n   */ static cbrt(x) {\n        if (x === 0) {\n            return x;\n        }\n        let cx = x;\n        const isNegativeNumber = cx < 0;\n        if (isNegativeNumber) {\n            cx = -cx;\n        }\n        let ret;\n        if (cx === Infinity) {\n            ret = Infinity;\n        } else {\n            ret = Math.exp(Math.log(cx) / 3);\n            ret = (cx / (ret * ret) + 2 * ret) / 3;\n        }\n        return isNegativeNumber ? -ret : ret;\n    }\n    /**\n   * イージング処理されたサインを求める\n   * フェードイン・アウト時のイージングに利用できる\n   *\n   * @param value イージングを行う値\n   * @return イージング処理されたサイン値\n   */ static getEasingSine(value) {\n        if (value < 0.0) {\n            return 0.0;\n        } else if (value > 1.0) {\n            return 1.0;\n        }\n        return 0.5 - 0.5 * this.cos(value * Math.PI);\n    }\n    /**\n   * 大きい方の値を返す\n   *\n   * @param left 左辺の値\n   * @param right 右辺の値\n   * @return 大きい方の値\n   */ static max(left, right) {\n        return left > right ? left : right;\n    }\n    /**\n   * 小さい方の値を返す\n   *\n   * @param left  左辺の値\n   * @param right 右辺の値\n   * @return 小さい方の値\n   */ static min(left, right) {\n        return left > right ? right : left;\n    }\n    /**\n   * 角度値をラジアン値に変換する\n   *\n   * @param degrees   角度値\n   * @return 角度値から変換したラジアン値\n   */ static degreesToRadian(degrees) {\n        return degrees / 180.0 * Math.PI;\n    }\n    /**\n   * ラジアン値を角度値に変換する\n   *\n   * @param radian    ラジアン値\n   * @return ラジアン値から変換した角度値\n   */ static radianToDegrees(radian) {\n        return radian * 180.0 / Math.PI;\n    }\n    /**\n   * ２つのベクトルからラジアン値を求める\n   *\n   * @param from  始点ベクトル\n   * @param to    終点ベクトル\n   * @return ラジアン値から求めた方向ベクトル\n   */ static directionToRadian(from, to) {\n        const q1 = Math.atan2(to.y, to.x);\n        const q2 = Math.atan2(from.y, from.x);\n        let ret = q1 - q2;\n        while(ret < -Math.PI){\n            ret += Math.PI * 2.0;\n        }\n        while(ret > Math.PI){\n            ret -= Math.PI * 2.0;\n        }\n        return ret;\n    }\n    /**\n   * ２つのベクトルから角度値を求める\n   *\n   * @param from  始点ベクトル\n   * @param to    終点ベクトル\n   * @return 角度値から求めた方向ベクトル\n   */ static directionToDegrees(from, to) {\n        const radian = this.directionToRadian(from, to);\n        let degree = this.radianToDegrees(radian);\n        if (to.x - from.x > 0.0) {\n            degree = -degree;\n        }\n        return degree;\n    }\n    /**\n   * ラジアン値を方向ベクトルに変換する。\n   *\n   * @param totalAngle    ラジアン値\n   * @return ラジアン値から変換した方向ベクトル\n   */ static radianToDirection(totalAngle) {\n        const ret = new _cubismvector2__WEBPACK_IMPORTED_MODULE_0__.CubismVector2();\n        ret.x = this.sin(totalAngle);\n        ret.y = this.cos(totalAngle);\n        return ret;\n    }\n    /**\n   * 三次方程式の三次項の係数が0になったときに補欠的に二次方程式の解をもとめる。\n   * a * x^2 + b * x + c = 0\n   *\n   * @param   a -> 二次項の係数値\n   * @param   b -> 一次項の係数値\n   * @param   c -> 定数項の値\n   * @return  二次方程式の解\n   */ static quadraticEquation(a, b, c) {\n        if (this.abs(a) < CubismMath.Epsilon) {\n            if (this.abs(b) < CubismMath.Epsilon) {\n                return -c;\n            }\n            return -c / b;\n        }\n        return -(b + this.sqrt(b * b - 4.0 * a * c)) / (2.0 * a);\n    }\n    /**\n   * カルダノの公式によってベジェのt値に該当する３次方程式の解を求める。\n   * 重解になったときには0.0～1.0の値になる解を返す。\n   *\n   * a * x^3 + b * x^2 + c * x + d = 0\n   *\n   * @param   a -> 三次項の係数値\n   * @param   b -> 二次項の係数値\n   * @param   c -> 一次項の係数値\n   * @param   d -> 定数項の値\n   * @return  0.0～1.0の間にある解\n   */ static cardanoAlgorithmForBezier(a, b, c, d) {\n        if (this.sqrt(a) < CubismMath.Epsilon) {\n            return this.range(this.quadraticEquation(b, c, d), 0.0, 1.0);\n        }\n        const ba = b / a;\n        const ca = c / a;\n        const da = d / a;\n        const p = (3.0 * ca - ba * ba) / 3.0;\n        const p3 = p / 3.0;\n        const q = (2.0 * ba * ba * ba - 9.0 * ba * ca + 27.0 * da) / 27.0;\n        const q2 = q / 2.0;\n        const discriminant = q2 * q2 + p3 * p3 * p3;\n        const center = 0.5;\n        const threshold = center + 0.01;\n        if (discriminant < 0.0) {\n            const mp3 = -p / 3.0;\n            const mp33 = mp3 * mp3 * mp3;\n            const r = this.sqrt(mp33);\n            const t = -q / (2.0 * r);\n            const cosphi = this.range(t, -1.0, 1.0);\n            const phi = Math.acos(cosphi);\n            const crtr = this.cbrt(r);\n            const t1 = 2.0 * crtr;\n            const root1 = t1 * this.cos(phi / 3.0) - ba / 3.0;\n            if (this.abs(root1 - center) < threshold) {\n                return this.range(root1, 0.0, 1.0);\n            }\n            const root2 = t1 * this.cos((phi + 2.0 * Math.PI) / 3.0) - ba / 3.0;\n            if (this.abs(root2 - center) < threshold) {\n                return this.range(root2, 0.0, 1.0);\n            }\n            const root3 = t1 * this.cos((phi + 4.0 * Math.PI) / 3.0) - ba / 3.0;\n            return this.range(root3, 0.0, 1.0);\n        }\n        if (discriminant == 0.0) {\n            let u1;\n            if (q2 < 0.0) {\n                u1 = this.cbrt(-q2);\n            } else {\n                u1 = -this.cbrt(q2);\n            }\n            const root1 = 2.0 * u1 - ba / 3.0;\n            if (this.abs(root1 - center) < threshold) {\n                return this.range(root1, 0.0, 1.0);\n            }\n            const root2 = -u1 - ba / 3.0;\n            return this.range(root2, 0.0, 1.0);\n        }\n        const sd = this.sqrt(discriminant);\n        const u1 = this.cbrt(sd - q2);\n        const v1 = this.cbrt(sd + q2);\n        const root1 = u1 - v1 - ba / 3.0;\n        return this.range(root1, 0.0, 1.0);\n    }\n    /**\n   * 浮動小数点の余りを求める。\n   *\n   * @param dividend 被除数（割られる値）\n   * @param divisor 除数（割る値）\n   * @returns 余り\n   */ static mod(dividend, divisor) {\n        if (!isFinite(dividend) || divisor === 0 || isNaN(dividend) || isNaN(divisor)) {\n            console.warn(`divided: ${dividend}, divisor: ${divisor} mod() returns 'NaN'.`);\n            return NaN;\n        }\n        // 絶対値に変換する。\n        const absDividend = Math.abs(dividend);\n        const absDivisor = Math.abs(divisor);\n        // 絶対値で割り算する。\n        let result = absDividend - Math.floor(absDividend / absDivisor) * absDivisor;\n        // 符号を被除数のものに指定する。\n        result *= Math.sign(dividend);\n        return result;\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){}\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMath = _cubismmath__WEBPACK_IMPORTED_MODULE_1__.CubismMath;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/math/cubismmath.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/math/cubismmatrix44.ts":
/*!*****************************************************!*\
  !*** ./WebSDK/Framework/src/math/cubismmatrix44.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismMatrix44: () => (/* binding */ CubismMatrix44),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cubismmatrix44 */ \"(ssr)/./WebSDK/Framework/src/math/cubismmatrix44.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ /**\n * 4x4の行列\n *\n * 4x4行列の便利クラス。\n */ class CubismMatrix44 {\n    /**\n   * コンストラクタ\n   */ constructor(){\n        this._tr = new Float32Array(16); // 4 * 4のサイズ\n        this.loadIdentity();\n    }\n    /**\n   * 受け取った２つの行列の乗算を行う。\n   *\n   * @param a 行列a\n   * @param b 行列b\n   * @return 乗算結果の行列\n   */ static multiply(a, b, dst) {\n        const c = new Float32Array([\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0\n        ]);\n        const n = 4;\n        for(let i = 0; i < n; ++i){\n            for(let j = 0; j < n; ++j){\n                for(let k = 0; k < n; ++k){\n                    c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n                }\n            }\n        }\n        for(let i = 0; i < 16; ++i){\n            dst[i] = c[i];\n        }\n    }\n    /**\n   * 単位行列に初期化する\n   */ loadIdentity() {\n        const c = new Float32Array([\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0\n        ]);\n        this.setMatrix(c);\n    }\n    /**\n   * 行列を設定\n   *\n   * @param tr 16個の浮動小数点数で表される4x4の行列\n   */ setMatrix(tr) {\n        for(let i = 0; i < 16; ++i){\n            this._tr[i] = tr[i];\n        }\n    }\n    /**\n   * 行列を浮動小数点数の配列で取得\n   *\n   * @return 16個の浮動小数点数で表される4x4の行列\n   */ getArray() {\n        return this._tr;\n    }\n    /**\n   * X軸の拡大率を取得\n   * @return X軸の拡大率\n   */ getScaleX() {\n        return this._tr[0];\n    }\n    /**\n   * Y軸の拡大率を取得する\n   *\n   * @return Y軸の拡大率\n   */ getScaleY() {\n        return this._tr[5];\n    }\n    /**\n   * X軸の移動量を取得\n   * @return X軸の移動量\n   */ getTranslateX() {\n        return this._tr[12];\n    }\n    /**\n   * Y軸の移動量を取得\n   * @return Y軸の移動量\n   */ getTranslateY() {\n        return this._tr[13];\n    }\n    /**\n   * X軸の値を現在の行列で計算\n   *\n   * @param src X軸の値\n   * @return 現在の行列で計算されたX軸の値\n   */ transformX(src) {\n        return this._tr[0] * src + this._tr[12];\n    }\n    /**\n   * Y軸の値を現在の行列で計算\n   *\n   * @param src Y軸の値\n   * @return 現在の行列で計算されたY軸の値\n   */ transformY(src) {\n        return this._tr[5] * src + this._tr[13];\n    }\n    /**\n   * X軸の値を現在の行列で逆計算\n   */ invertTransformX(src) {\n        return (src - this._tr[12]) / this._tr[0];\n    }\n    /**\n   * Y軸の値を現在の行列で逆計算\n   */ invertTransformY(src) {\n        return (src - this._tr[13]) / this._tr[5];\n    }\n    /**\n   * 現在の行列の位置を起点にして移動\n   *\n   * 現在の行列の位置を起点にして相対的に移動する。\n   *\n   * @param x X軸の移動量\n   * @param y Y軸の移動量\n   */ translateRelative(x, y) {\n        const tr1 = new Float32Array([\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            x,\n            y,\n            0.0,\n            1.0\n        ]);\n        CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    /**\n   * 現在の行列の位置を移動\n   *\n   * 現在の行列の位置を指定した位置へ移動する\n   *\n   * @param x X軸の移動量\n   * @param y y軸の移動量\n   */ translate(x, y) {\n        this._tr[12] = x;\n        this._tr[13] = y;\n    }\n    /**\n   * 現在の行列のX軸の位置を指定した位置へ移動する\n   *\n   * @param x X軸の移動量\n   */ translateX(x) {\n        this._tr[12] = x;\n    }\n    /**\n   * 現在の行列のY軸の位置を指定した位置へ移動する\n   *\n   * @param y Y軸の移動量\n   */ translateY(y) {\n        this._tr[13] = y;\n    }\n    /**\n   * 現在の行列の拡大率を相対的に設定する\n   *\n   * @param x X軸の拡大率\n   * @param y Y軸の拡大率\n   */ scaleRelative(x, y) {\n        const tr1 = new Float32Array([\n            x,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            y,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0\n        ]);\n        CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    /**\n   * 現在の行列の拡大率を指定した倍率に設定する\n   *\n   * @param x X軸の拡大率\n   * @param y Y軸の拡大率\n   */ scale(x, y) {\n        this._tr[0] = x;\n        this._tr[5] = y;\n    }\n    /**\n   * 引数で与えられた行列にこの行列を乗算する。\n   * (引数で与えられた行列) * (この行列)\n   *\n   * @note 関数名と実際の計算内容に乖離があるため、今後計算順が修正される可能性があります。\n   * @param m 行列\n   */ multiplyByMatrix(m) {\n        CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n    }\n    /**\n   * オブジェクトのコピーを生成する\n   */ clone() {\n        const cloneMatrix = new CubismMatrix44();\n        for(let i = 0; i < this._tr.length; i++){\n            cloneMatrix._tr[i] = this._tr[i];\n        }\n        return cloneMatrix;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMatrix44 = _cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__.CubismMatrix44;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/math/cubismmatrix44.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/math/cubismmodelmatrix.ts":
/*!********************************************************!*\
  !*** ./WebSDK/Framework/src/math/cubismmodelmatrix.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismModelMatrix: () => (/* binding */ CubismModelMatrix),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cubismmatrix44 */ \"(ssr)/./WebSDK/Framework/src/math/cubismmatrix44.ts\");\n/* harmony import */ var _cubismmodelmatrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cubismmodelmatrix */ \"(ssr)/./WebSDK/Framework/src/math/cubismmodelmatrix.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n/**\n * モデル座標設定用の4x4行列\n *\n * モデル座標設定用の4x4行列クラス\n */ class CubismModelMatrix extends _cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__.CubismMatrix44 {\n    /**\n   * コンストラクタ\n   *\n   * @param w 横幅\n   * @param h 縦幅\n   */ constructor(w, h){\n        super();\n        this._width = w !== undefined ? w : 0.0;\n        this._height = h !== undefined ? h : 0.0;\n        this.setHeight(2.0);\n    }\n    /**\n   * 横幅を設定\n   *\n   * @param w 横幅\n   */ setWidth(w) {\n        const scaleX = w / this._width;\n        const scaleY = scaleX;\n        this.scale(scaleX, scaleY);\n    }\n    /**\n   * 縦幅を設定\n   * @param h 縦幅\n   */ setHeight(h) {\n        const scaleX = h / this._height;\n        const scaleY = scaleX;\n        this.scale(scaleX, scaleY);\n    }\n    /**\n   * 位置を設定\n   *\n   * @param x X軸の位置\n   * @param y Y軸の位置\n   */ setPosition(x, y) {\n        this.translate(x, y);\n    }\n    /**\n   * 中心位置を設定\n   *\n   * @param x X軸の中心位置\n   * @param y Y軸の中心位置\n   *\n   * @note widthかheightを設定したあとでないと、拡大率が正しく取得できないためずれる。\n   */ setCenterPosition(x, y) {\n        this.centerX(x);\n        this.centerY(y);\n    }\n    /**\n   * 上辺の位置を設定する\n   *\n   * @param y 上辺のY軸位置\n   */ top(y) {\n        this.setY(y);\n    }\n    /**\n   * 下辺の位置を設定する\n   *\n   * @param y 下辺のY軸位置\n   */ bottom(y) {\n        const h = this._height * this.getScaleY();\n        this.translateY(y - h);\n    }\n    /**\n   * 左辺の位置を設定\n   *\n   * @param x 左辺のX軸位置\n   */ left(x) {\n        this.setX(x);\n    }\n    /**\n   * 右辺の位置を設定\n   *\n   * @param x 右辺のX軸位置\n   */ right(x) {\n        const w = this._width * this.getScaleX();\n        this.translateX(x - w);\n    }\n    /**\n   * X軸の中心位置を設定\n   *\n   * @param x X軸の中心位置\n   */ centerX(x) {\n        const w = this._width * this.getScaleX();\n        this.translateX(x - w / 2.0);\n    }\n    /**\n   * X軸の位置を設定\n   *\n   * @param x X軸の位置\n   */ setX(x) {\n        this.translateX(x);\n    }\n    /**\n   * Y軸の中心位置を設定\n   *\n   * @param y Y軸の中心位置\n   */ centerY(y) {\n        const h = this._height * this.getScaleY();\n        this.translateY(y - h / 2.0);\n    }\n    /**\n   * Y軸の位置を設定する\n   *\n   * @param y Y軸の位置\n   */ setY(y) {\n        this.translateY(y);\n    }\n    /**\n   * レイアウト情報から位置を設定\n   *\n   * @param layout レイアウト情報\n   */ setupFromLayout(layout) {\n        const keyWidth = 'width';\n        const keyHeight = 'height';\n        const keyX = 'x';\n        const keyY = 'y';\n        const keyCenterX = 'center_x';\n        const keyCenterY = 'center_y';\n        const keyTop = 'top';\n        const keyBottom = 'bottom';\n        const keyLeft = 'left';\n        const keyRight = 'right';\n        for(const ite = layout.begin(); ite.notEqual(layout.end()); ite.preIncrement()){\n            const key = ite.ptr().first;\n            const value = ite.ptr().second;\n            if (key == keyWidth) {\n                this.setWidth(value);\n            } else if (key == keyHeight) {\n                this.setHeight(value);\n            }\n        }\n        for(const ite = layout.begin(); ite.notEqual(layout.end()); ite.preIncrement()){\n            const key = ite.ptr().first;\n            const value = ite.ptr().second;\n            if (key == keyX) {\n                this.setX(value);\n            } else if (key == keyY) {\n                this.setY(value);\n            } else if (key == keyCenterX) {\n                this.centerX(value);\n            } else if (key == keyCenterY) {\n                this.centerY(value);\n            } else if (key == keyTop) {\n                this.top(value);\n            } else if (key == keyBottom) {\n                this.bottom(value);\n            } else if (key == keyLeft) {\n                this.left(value);\n            } else if (key == keyRight) {\n                this.right(value);\n            }\n        }\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModelMatrix = _cubismmodelmatrix__WEBPACK_IMPORTED_MODULE_1__.CubismModelMatrix;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/math/cubismmodelmatrix.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/math/cubismtargetpoint.ts":
/*!********************************************************!*\
  !*** ./WebSDK/Framework/src/math/cubismtargetpoint.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismTargetPoint: () => (/* binding */ CubismTargetPoint),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _cubismmath__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cubismmath */ \"(ssr)/./WebSDK/Framework/src/math/cubismmath.ts\");\n/* harmony import */ var _cubismtargetpoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cubismtargetpoint */ \"(ssr)/./WebSDK/Framework/src/math/cubismtargetpoint.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \nconst FrameRate = 30;\nconst Epsilon = 0.01;\n/**\n * 顔の向きの制御機能\n *\n * 顔の向きの制御機能を提供するクラス。\n */ class CubismTargetPoint {\n    /**\n   * コンストラクタ\n   */ constructor(){\n        this._faceTargetX = 0.0;\n        this._faceTargetY = 0.0;\n        this._faceX = 0.0;\n        this._faceY = 0.0;\n        this._faceVX = 0.0;\n        this._faceVY = 0.0;\n        this._lastTimeSeconds = 0.0;\n        this._userTimeSeconds = 0.0;\n    }\n    /**\n   * 更新処理\n   */ update(deltaTimeSeconds) {\n        // デルタ時間を加算する\n        this._userTimeSeconds += deltaTimeSeconds;\n        // 首を中央から左右に振るときの平均的な速さは 秒速度。加速・減速を考慮して、その２倍を最高速度とする\n        // 顔の振り具合を、中央（0.0）から、左右は（+-1.0）とする\n        const faceParamMaxV = 40.0 / 10.0; // 7.5秒間に40分移動(5.3/sc)\n        const maxV = faceParamMaxV * 1.0 / FrameRate; // 1frameあたりに変化できる速度の上限\n        if (this._lastTimeSeconds == 0.0) {\n            this._lastTimeSeconds = this._userTimeSeconds;\n            return;\n        }\n        const deltaTimeWeight = (this._userTimeSeconds - this._lastTimeSeconds) * FrameRate;\n        this._lastTimeSeconds = this._userTimeSeconds;\n        // 最高速度になるまでの時間を\n        const timeToMaxSpeed = 0.15;\n        const frameToMaxSpeed = timeToMaxSpeed * FrameRate; // sec * frame/sec\n        const maxA = deltaTimeWeight * maxV / frameToMaxSpeed; // 1frameあたりの加速度\n        // 目指す向きは、（dx, dy）方向のベクトルとなる\n        const dx = this._faceTargetX - this._faceX;\n        const dy = this._faceTargetY - this._faceY;\n        if (_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.abs(dx) <= Epsilon && _cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.abs(dy) <= Epsilon) {\n            return; // 変化なし\n        }\n        // 速度の最大よりも大きい場合は、速度を落とす\n        const d = _cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.sqrt(dx * dx + dy * dy);\n        // 進行方向の最大速度ベクトル\n        const vx = maxV * dx / d;\n        const vy = maxV * dy / d;\n        // 現在の速度から、新規速度への変化（加速度）を求める\n        let ax = vx - this._faceVX;\n        let ay = vy - this._faceVY;\n        const a = _cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.sqrt(ax * ax + ay * ay);\n        // 加速のとき\n        if (a < -maxA || a > maxA) {\n            ax *= maxA / a;\n            ay *= maxA / a;\n        }\n        // 加速度を元の速度に足して、新速度とする\n        this._faceVX += ax;\n        this._faceVY += ay;\n        // 目的の方向に近づいたとき、滑らかに減速するための処理\n        // 設定された加速度で止まる事の出来る距離と速度の関係から\n        // 現在とりうる最高速度を計算し、それ以上の時は速度を落とす\n        // ※本来、人間は筋力で力（加速度）を調整できるため、より自由度が高いが、簡単な処理で済ませている\n        {\n            // 加速度、速度、距離の関係式。\n            //            2  6           2               3\n            //      sqrt(a  t  + 16 a h t  - 8 a h) - a t\n            // v = --------------------------------------\n            //                    2\n            //                 4 t  - 2\n            // (t=1)\n            // \t時刻tは、あらかじめ加速度、速度を1/60(フレームレート、単位なし)で\n            // \t考えているので、t＝１として消してよい（※未検証）\n            const maxV = 0.5 * (_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.sqrt(maxA * maxA + 16.0 * maxA * d - 8.0 * maxA * d) - maxA);\n            const curV = _cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.sqrt(this._faceVX * this._faceVX + this._faceVY * this._faceVY);\n            if (curV > maxV) {\n                // 現在の速度 > 最高速度のとき、最高速度まで減速\n                this._faceVX *= maxV / curV;\n                this._faceVY *= maxV / curV;\n            }\n        }\n        this._faceX += this._faceVX;\n        this._faceY += this._faceVY;\n    }\n    /**\n   * X軸の顔の向きの値を取得\n   *\n   * @return X軸の顔の向きの値（-1.0 ~ 1.0）\n   */ getX() {\n        return this._faceX;\n    }\n    /**\n   * Y軸の顔の向きの値を取得\n   *\n   * @return Y軸の顔の向きの値（-1.0 ~ 1.0）\n   */ getY() {\n        return this._faceY;\n    }\n    /**\n   * 顔の向きの目標値を設定\n   *\n   * @param x X軸の顔の向きの値（-1.0 ~ 1.0）\n   * @param y Y軸の顔の向きの値（-1.0 ~ 1.0）\n   */ set(x, y) {\n        this._faceTargetX = x;\n        this._faceTargetY = y;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismTargetPoint = _cubismtargetpoint__WEBPACK_IMPORTED_MODULE_1__.CubismTargetPoint;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/math/cubismtargetpoint.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/math/cubismvector2.ts":
/*!****************************************************!*\
  !*** ./WebSDK/Framework/src/math/cubismvector2.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismVector2: () => (/* binding */ CubismVector2),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _cubismvector2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cubismvector2 */ \"(ssr)/./WebSDK/Framework/src/math/cubismvector2.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ /**\n * 2次元ベクトル型\n *\n * 2次元ベクトル型の機能を提供する。\n */ class CubismVector2 {\n    /**\n   * コンストラクタ\n   */ constructor(x, y){\n        this.x = x;\n        this.y = y;\n        this.x = x == undefined ? 0.0 : x;\n        this.y = y == undefined ? 0.0 : y;\n    }\n    /**\n   * ベクトルの加算\n   *\n   * @param vector2 加算するベクトル値\n   * @return 加算結果 ベクトル値\n   */ add(vector2) {\n        const ret = new CubismVector2(0.0, 0.0);\n        ret.x = this.x + vector2.x;\n        ret.y = this.y + vector2.y;\n        return ret;\n    }\n    /**\n   * ベクトルの減算\n   *\n   * @param vector2 減算するベクトル値\n   * @return 減算結果 ベクトル値\n   */ substract(vector2) {\n        const ret = new CubismVector2(0.0, 0.0);\n        ret.x = this.x - vector2.x;\n        ret.y = this.y - vector2.y;\n        return ret;\n    }\n    /**\n   * ベクトルの乗算\n   *\n   * @param vector2 乗算するベクトル値\n   * @return 乗算結果 ベクトル値\n   */ multiply(vector2) {\n        const ret = new CubismVector2(0.0, 0.0);\n        ret.x = this.x * vector2.x;\n        ret.y = this.y * vector2.y;\n        return ret;\n    }\n    /**\n   * ベクトルの乗算(スカラー)\n   *\n   * @param scalar 乗算するスカラー値\n   * @return 乗算結果 ベクトル値\n   */ multiplyByScaler(scalar) {\n        return this.multiply(new CubismVector2(scalar, scalar));\n    }\n    /**\n   * ベクトルの除算\n   *\n   * @param vector2 除算するベクトル値\n   * @return 除算結果 ベクトル値\n   */ division(vector2) {\n        const ret = new CubismVector2(0.0, 0.0);\n        ret.x = this.x / vector2.x;\n        ret.y = this.y / vector2.y;\n        return ret;\n    }\n    /**\n   * ベクトルの除算(スカラー)\n   *\n   * @param scalar 除算するスカラー値\n   * @return 除算結果 ベクトル値\n   */ divisionByScalar(scalar) {\n        return this.division(new CubismVector2(scalar, scalar));\n    }\n    /**\n   * ベクトルの長さを取得する\n   *\n   * @return ベクトルの長さ\n   */ getLength() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    /**\n   * ベクトルの距離の取得\n   *\n   * @param a 点\n   * @return ベクトルの距離\n   */ getDistanceWith(a) {\n        return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n    }\n    /**\n   * ドット積の計算\n   *\n   * @param a 値\n   * @return 結果\n   */ dot(a) {\n        return this.x * a.x + this.y * a.y;\n    }\n    /**\n   * 正規化の適用\n   */ normalize() {\n        const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n        this.x = this.x / length;\n        this.y = this.y / length;\n    }\n    /**\n   * 等しさの確認（等しいか？）\n   *\n   * 値が等しいか？\n   *\n   * @param rhs 確認する値\n   * @return true 値は等しい\n   * @return false 値は等しくない\n   */ isEqual(rhs) {\n        return this.x == rhs.x && this.y == rhs.y;\n    }\n    /**\n   * 等しさの確認（等しくないか？）\n   *\n   * 値が等しくないか？\n   *\n   * @param rhs 確認する値\n   * @return true 値は等しくない\n   * @return false 値は等しい\n   */ isNotEqual(rhs) {\n        return !this.isEqual(rhs);\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismVector2 = _cubismvector2__WEBPACK_IMPORTED_MODULE_0__.CubismVector2;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/math/cubismvector2.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/math/cubismviewmatrix.ts":
/*!*******************************************************!*\
  !*** ./WebSDK/Framework/src/math/cubismviewmatrix.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismViewMatrix: () => (/* binding */ CubismViewMatrix),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cubismmatrix44 */ \"(ssr)/./WebSDK/Framework/src/math/cubismmatrix44.ts\");\n/* harmony import */ var _cubismviewmatrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cubismviewmatrix */ \"(ssr)/./WebSDK/Framework/src/math/cubismviewmatrix.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n/**\n * カメラの位置変更に使うと便利な4x4行列\n *\n * カメラの位置変更に使うと便利な4x4行列のクラス。\n */ class CubismViewMatrix extends _cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__.CubismMatrix44 {\n    /**\n   * コンストラクタ\n   */ constructor(){\n        super();\n        this._screenLeft = 0.0;\n        this._screenRight = 0.0;\n        this._screenTop = 0.0;\n        this._screenBottom = 0.0;\n        this._maxLeft = 0.0;\n        this._maxRight = 0.0;\n        this._maxTop = 0.0;\n        this._maxBottom = 0.0;\n        this._maxScale = 0.0;\n        this._minScale = 0.0;\n    }\n    /**\n   * 移動を調整\n   *\n   * @param x X軸の移動量\n   * @param y Y軸の移動量\n   */ adjustTranslate(x, y) {\n        if (this._tr[0] * this._maxLeft + (this._tr[12] + x) > this._screenLeft) {\n            x = this._screenLeft - this._tr[0] * this._maxLeft - this._tr[12];\n        }\n        if (this._tr[0] * this._maxRight + (this._tr[12] + x) < this._screenRight) {\n            x = this._screenRight - this._tr[0] * this._maxRight - this._tr[12];\n        }\n        if (this._tr[5] * this._maxTop + (this._tr[13] + y) < this._screenTop) {\n            y = this._screenTop - this._tr[5] * this._maxTop - this._tr[13];\n        }\n        if (this._tr[5] * this._maxBottom + (this._tr[13] + y) > this._screenBottom) {\n            y = this._screenBottom - this._tr[5] * this._maxBottom - this._tr[13];\n        }\n        const tr1 = new Float32Array([\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            x,\n            y,\n            0.0,\n            1.0\n        ]);\n        _cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__.CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    /**\n   * 拡大率を調整\n   *\n   * @param cx 拡大を行うX軸の中心位置\n   * @param cy 拡大を行うY軸の中心位置\n   * @param scale 拡大率\n   */ adjustScale(cx, cy, scale) {\n        const maxScale = this.getMaxScale();\n        const minScale = this.getMinScale();\n        const targetScale = scale * this._tr[0];\n        if (targetScale < minScale) {\n            if (this._tr[0] > 0.0) {\n                scale = minScale / this._tr[0];\n            }\n        } else if (targetScale > maxScale) {\n            if (this._tr[0] > 0.0) {\n                scale = maxScale / this._tr[0];\n            }\n        }\n        const tr1 = new Float32Array([\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            cx,\n            cy,\n            0.0,\n            1.0\n        ]);\n        const tr2 = new Float32Array([\n            scale,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            scale,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0\n        ]);\n        const tr3 = new Float32Array([\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            -cx,\n            -cy,\n            0.0,\n            1.0\n        ]);\n        _cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__.CubismMatrix44.multiply(tr3, this._tr, this._tr);\n        _cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__.CubismMatrix44.multiply(tr2, this._tr, this._tr);\n        _cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__.CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    /**\n   * デバイスに対応する論理座養生の範囲の設定\n   *\n   * @param left      左辺のX軸の位置\n   * @param right     右辺のX軸の位置\n   * @param bottom    下辺のY軸の位置\n   * @param top       上辺のY軸の位置\n   */ setScreenRect(left, right, bottom, top) {\n        this._screenLeft = left;\n        this._screenRight = right;\n        this._screenBottom = bottom;\n        this._screenTop = top;\n    }\n    /**\n   * デバイスに対応する論理座標上の移動可能範囲の設定\n   * @param left      左辺のX軸の位置\n   * @param right     右辺のX軸の位置\n   * @param bottom    下辺のY軸の位置\n   * @param top       上辺のY軸の位置\n   */ setMaxScreenRect(left, right, bottom, top) {\n        this._maxLeft = left;\n        this._maxRight = right;\n        this._maxTop = top;\n        this._maxBottom = bottom;\n    }\n    /**\n   * 最大拡大率の設定\n   * @param maxScale 最大拡大率\n   */ setMaxScale(maxScale) {\n        this._maxScale = maxScale;\n    }\n    /**\n   * 最小拡大率の設定\n   * @param minScale 最小拡大率\n   */ setMinScale(minScale) {\n        this._minScale = minScale;\n    }\n    /**\n   * 最大拡大率の取得\n   * @return 最大拡大率\n   */ getMaxScale() {\n        return this._maxScale;\n    }\n    /**\n   * 最小拡大率の取得\n   * @return 最小拡大率\n   */ getMinScale() {\n        return this._minScale;\n    }\n    /**\n   * 拡大率が最大になっているかを確認する\n   *\n   * @return true 拡大率は最大\n   * @return false 拡大率は最大ではない\n   */ isMaxScale() {\n        return this.getScaleX() >= this._maxScale;\n    }\n    /**\n   * 拡大率が最小になっているかを確認する\n   *\n   * @return true 拡大率は最小\n   * @return false 拡大率は最小ではない\n   */ isMinScale() {\n        return this.getScaleX() <= this._minScale;\n    }\n    /**\n   * デバイスに対応する論理座標の左辺のＸ軸位置を取得する\n   * @return デバイスに対応する論理座標の左辺のX軸位置\n   */ getScreenLeft() {\n        return this._screenLeft;\n    }\n    /**\n   * デバイスに対応する論理座標の右辺のＸ軸位置を取得する\n   * @return デバイスに対応する論理座標の右辺のX軸位置\n   */ getScreenRight() {\n        return this._screenRight;\n    }\n    /**\n   * デバイスに対応する論理座標の下辺のY軸位置を取得する\n   * @return デバイスに対応する論理座標の下辺のY軸位置\n   */ getScreenBottom() {\n        return this._screenBottom;\n    }\n    /**\n   * デバイスに対応する論理座標の上辺のY軸位置を取得する\n   * @return デバイスに対応する論理座標の上辺のY軸位置\n   */ getScreenTop() {\n        return this._screenTop;\n    }\n    /**\n   * 左辺のX軸位置の最大値の取得\n   * @return 左辺のX軸位置の最大値\n   */ getMaxLeft() {\n        return this._maxLeft;\n    }\n    /**\n   * 右辺のX軸位置の最大値の取得\n   * @return 右辺のX軸位置の最大値\n   */ getMaxRight() {\n        return this._maxRight;\n    }\n    /**\n   * 下辺のY軸位置の最大値の取得\n   * @return 下辺のY軸位置の最大値\n   */ getMaxBottom() {\n        return this._maxBottom;\n    }\n    /**\n   * 上辺のY軸位置の最大値の取得\n   * @return 上辺のY軸位置の最大値\n   */ getMaxTop() {\n        return this._maxTop;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismViewMatrix = _cubismviewmatrix__WEBPACK_IMPORTED_MODULE_1__.CubismViewMatrix;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/math/cubismviewmatrix.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/model/cubismmoc.ts":
/*!*************************************************!*\
  !*** ./WebSDK/Framework/src/model/cubismmoc.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismMoc: () => (/* binding */ CubismMoc),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _utils_cubismdebug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubismdebug */ \"(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\");\n/* harmony import */ var _cubismmodel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cubismmodel */ \"(ssr)/./WebSDK/Framework/src/model/cubismmodel.ts\");\n/* harmony import */ var _cubismmoc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubismmoc */ \"(ssr)/./WebSDK/Framework/src/model/cubismmoc.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n/**\n * Mocデータの管理\n *\n * Mocデータの管理を行うクラス。\n */ class CubismMoc {\n    /**\n   * Mocデータの作成\n   */ static create(mocBytes, shouldCheckMocConsistency) {\n        let cubismMoc = null;\n        if (shouldCheckMocConsistency) {\n            // .moc3の整合性を確認\n            const consistency = this.hasMocConsistency(mocBytes);\n            if (!consistency) {\n                // 整合性が確認できなければ処理しない\n                (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_0__.CubismLogError)(`Inconsistent MOC3.`);\n                return cubismMoc;\n            }\n        }\n        const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n        if (moc) {\n            cubismMoc = new CubismMoc(moc);\n            cubismMoc._mocVersion = Live2DCubismCore.Version.csmGetMocVersion(moc, mocBytes);\n        }\n        return cubismMoc;\n    }\n    /**\n   * Mocデータを削除\n   *\n   * Mocデータを削除する\n   */ static delete(moc) {\n        moc._moc._release();\n        moc._moc = null;\n        moc = null;\n    }\n    /**\n   * モデルを作成する\n   *\n   * @return Mocデータから作成されたモデル\n   */ createModel() {\n        let cubismModel = null;\n        const model = Live2DCubismCore.Model.fromMoc(this._moc);\n        if (model) {\n            cubismModel = new _cubismmodel__WEBPACK_IMPORTED_MODULE_1__.CubismModel(model);\n            cubismModel.initialize();\n            ++this._modelCount;\n        }\n        return cubismModel;\n    }\n    /**\n   * モデルを削除する\n   */ deleteModel(model) {\n        if (model != null) {\n            model.release();\n            model = null;\n            --this._modelCount;\n        }\n    }\n    /**\n   * コンストラクタ\n   */ constructor(moc){\n        this._moc = moc;\n        this._modelCount = 0;\n        this._mocVersion = 0;\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_0__.CSM_ASSERT)(this._modelCount == 0);\n        this._moc._release();\n        this._moc = null;\n    }\n    /**\n   * 最新の.moc3 Versionを取得\n   */ getLatestMocVersion() {\n        return Live2DCubismCore.Version.csmGetLatestMocVersion();\n    }\n    /**\n   * 読み込んだモデルの.moc3 Versionを取得\n   */ getMocVersion() {\n        return this._mocVersion;\n    }\n    /**\n   * .moc3 の整合性を検証する\n   */ static hasMocConsistency(mocBytes) {\n        const isConsistent = Live2DCubismCore.Moc.prototype.hasMocConsistency(mocBytes);\n        return isConsistent === 1 ? true : false;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMoc = _cubismmoc__WEBPACK_IMPORTED_MODULE_2__.CubismMoc;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvRnJhbWV3b3JrL3NyYy9tb2RlbC9jdWJpc21tb2MudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUVpRTtBQUN0QjtBQUU1Qzs7OztDQUlDLEdBQ00sTUFBTUc7SUFDWDs7R0FFQyxHQUNELE9BQWNDLE9BQ1pDLFFBQXFCLEVBQ3JCQyx5QkFBa0MsRUFDdkI7UUFDWCxJQUFJQyxZQUF1QjtRQUUzQixJQUFJRCwyQkFBMkI7WUFDN0IsZUFBZTtZQUNmLE1BQU1FLGNBQWMsSUFBSSxDQUFDQyxpQkFBaUIsQ0FBQ0o7WUFFM0MsSUFBSSxDQUFDRyxhQUFhO2dCQUNoQixvQkFBb0I7Z0JBQ3BCUCxrRUFBY0EsQ0FBQyxDQUFDLGtCQUFrQixDQUFDO2dCQUNuQyxPQUFPTTtZQUNUO1FBQ0Y7UUFFQSxNQUFNRyxNQUNKQyxpQkFBaUJDLEdBQUcsQ0FBQ0MsZUFBZSxDQUFDUjtRQUV2QyxJQUFJSyxLQUFLO1lBQ1BILFlBQVksSUFBSUosVUFBVU87WUFDMUJILFVBQVVPLFdBQVcsR0FBR0gsaUJBQWlCSSxPQUFPLENBQUNDLGdCQUFnQixDQUMvRE4sS0FDQUw7UUFFSjtRQUVBLE9BQU9FO0lBQ1Q7SUFFQTs7OztHQUlDLEdBQ0QsT0FBY1UsT0FBT1AsR0FBYyxFQUFRO1FBQ3pDQSxJQUFJUSxJQUFJLENBQUNDLFFBQVE7UUFDakJULElBQUlRLElBQUksR0FBRztRQUNYUixNQUFNO0lBQ1I7SUFFQTs7OztHQUlDLEdBQ0RVLGNBQTJCO1FBQ3pCLElBQUlDLGNBQTJCO1FBRS9CLE1BQU1DLFFBQWdDWCxpQkFBaUJZLEtBQUssQ0FBQ0MsT0FBTyxDQUNsRSxJQUFJLENBQUNOLElBQUk7UUFHWCxJQUFJSSxPQUFPO1lBQ1RELGNBQWMsSUFBSW5CLHFEQUFXQSxDQUFDb0I7WUFDOUJELFlBQVlJLFVBQVU7WUFFdEIsRUFBRSxJQUFJLENBQUNDLFdBQVc7UUFDcEI7UUFFQSxPQUFPTDtJQUNUO0lBRUE7O0dBRUMsR0FDRE0sWUFBWUwsS0FBa0IsRUFBUTtRQUNwQyxJQUFJQSxTQUFTLE1BQU07WUFDakJBLE1BQU1NLE9BQU87WUFDYk4sUUFBUTtZQUNSLEVBQUUsSUFBSSxDQUFDSSxXQUFXO1FBQ3BCO0lBQ0Y7SUFFQTs7R0FFQyxHQUNELFlBQW9CaEIsR0FBeUIsQ0FBRTtRQUM3QyxJQUFJLENBQUNRLElBQUksR0FBR1I7UUFDWixJQUFJLENBQUNnQixXQUFXLEdBQUc7UUFDbkIsSUFBSSxDQUFDWixXQUFXLEdBQUc7SUFDckI7SUFFQTs7R0FFQyxHQUNELFVBQXVCO1FBQ3JCZCw4REFBVUEsQ0FBQyxJQUFJLENBQUMwQixXQUFXLElBQUk7UUFFL0IsSUFBSSxDQUFDUixJQUFJLENBQUNDLFFBQVE7UUFDbEIsSUFBSSxDQUFDRCxJQUFJLEdBQUc7SUFDZDtJQUVBOztHQUVDLEdBQ0Qsc0JBQXFDO1FBQ25DLE9BQU9QLGlCQUFpQkksT0FBTyxDQUFDZSxzQkFBc0I7SUFDeEQ7SUFFQTs7R0FFQyxHQUNELGdCQUErQjtRQUM3QixPQUFPLElBQUksQ0FBQ2hCLFdBQVc7SUFDekI7SUFFQTs7R0FFQyxHQUNELE9BQWNMLGtCQUFrQkosUUFBcUIsRUFBVztRQUM5RCxNQUFNMkIsZUFDSnJCLGlCQUFpQkMsR0FBRyxDQUFDcUIsU0FBUyxDQUFDeEIsaUJBQWlCLENBQUNKO1FBQ25ELE9BQU8yQixpQkFBaUIsSUFBSSxPQUFPO0lBQ3JDO0FBS0Y7QUFFQSwwQ0FBMEM7QUFDVDtVQUVoQkc7MEJBQ0ZoQyxZQUFZK0IsaURBQVc7QUFFdEMsR0FIaUJDLDBCQUFBQSIsInNvdXJjZXMiOlsiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9XZWJTREsvRnJhbWV3b3JrL3NyYy9tb2RlbC9jdWJpc21tb2MudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgQ1NNX0FTU0VSVCwgQ3ViaXNtTG9nRXJyb3IgfSBmcm9tICcuLi91dGlscy9jdWJpc21kZWJ1Zyc7XG5pbXBvcnQgeyBDdWJpc21Nb2RlbCB9IGZyb20gJy4vY3ViaXNtbW9kZWwnO1xuXG4vKipcbiAqIE1vY+ODh+ODvOOCv+OBrueuoeeQhlxuICpcbiAqIE1vY+ODh+ODvOOCv+OBrueuoeeQhuOCkuihjOOBhuOCr+ODqeOCueOAglxuICovXG5leHBvcnQgY2xhc3MgQ3ViaXNtTW9jIHtcbiAgLyoqXG4gICAqIE1vY+ODh+ODvOOCv+OBruS9nOaIkFxuICAgKi9cbiAgcHVibGljIHN0YXRpYyBjcmVhdGUoXG4gICAgbW9jQnl0ZXM6IEFycmF5QnVmZmVyLFxuICAgIHNob3VsZENoZWNrTW9jQ29uc2lzdGVuY3k6IGJvb2xlYW5cbiAgKTogQ3ViaXNtTW9jIHtcbiAgICBsZXQgY3ViaXNtTW9jOiBDdWJpc21Nb2MgPSBudWxsO1xuXG4gICAgaWYgKHNob3VsZENoZWNrTW9jQ29uc2lzdGVuY3kpIHtcbiAgICAgIC8vIC5tb2Mz44Gu5pW05ZCI5oCn44KS56K66KqNXG4gICAgICBjb25zdCBjb25zaXN0ZW5jeSA9IHRoaXMuaGFzTW9jQ29uc2lzdGVuY3kobW9jQnl0ZXMpO1xuXG4gICAgICBpZiAoIWNvbnNpc3RlbmN5KSB7XG4gICAgICAgIC8vIOaVtOWQiOaAp+OBjOeiuuiqjeOBp+OBjeOBquOBkeOCjOOBsOWHpueQhuOBl+OBquOBhFxuICAgICAgICBDdWJpc21Mb2dFcnJvcihgSW5jb25zaXN0ZW50IE1PQzMuYCk7XG4gICAgICAgIHJldHVybiBjdWJpc21Nb2M7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgbW9jOiBMaXZlMkRDdWJpc21Db3JlLk1vYyA9XG4gICAgICBMaXZlMkRDdWJpc21Db3JlLk1vYy5mcm9tQXJyYXlCdWZmZXIobW9jQnl0ZXMpO1xuXG4gICAgaWYgKG1vYykge1xuICAgICAgY3ViaXNtTW9jID0gbmV3IEN1YmlzbU1vYyhtb2MpO1xuICAgICAgY3ViaXNtTW9jLl9tb2NWZXJzaW9uID0gTGl2ZTJEQ3ViaXNtQ29yZS5WZXJzaW9uLmNzbUdldE1vY1ZlcnNpb24oXG4gICAgICAgIG1vYyxcbiAgICAgICAgbW9jQnl0ZXNcbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGN1YmlzbU1vYztcbiAgfVxuXG4gIC8qKlxuICAgKiBNb2Pjg4fjg7zjgr/jgpLliYrpmaRcbiAgICpcbiAgICogTW9j44OH44O844K/44KS5YmK6Zmk44GZ44KLXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIGRlbGV0ZShtb2M6IEN1YmlzbU1vYyk6IHZvaWQge1xuICAgIG1vYy5fbW9jLl9yZWxlYXNlKCk7XG4gICAgbW9jLl9tb2MgPSBudWxsO1xuICAgIG1vYyA9IG51bGw7XG4gIH1cblxuICAvKipcbiAgICog44Oi44OH44Or44KS5L2c5oiQ44GZ44KLXG4gICAqXG4gICAqIEByZXR1cm4gTW9j44OH44O844K/44GL44KJ5L2c5oiQ44GV44KM44Gf44Oi44OH44OrXG4gICAqL1xuICBjcmVhdGVNb2RlbCgpOiBDdWJpc21Nb2RlbCB7XG4gICAgbGV0IGN1YmlzbU1vZGVsOiBDdWJpc21Nb2RlbCA9IG51bGw7XG5cbiAgICBjb25zdCBtb2RlbDogTGl2ZTJEQ3ViaXNtQ29yZS5Nb2RlbCA9IExpdmUyREN1YmlzbUNvcmUuTW9kZWwuZnJvbU1vYyhcbiAgICAgIHRoaXMuX21vY1xuICAgICk7XG5cbiAgICBpZiAobW9kZWwpIHtcbiAgICAgIGN1YmlzbU1vZGVsID0gbmV3IEN1YmlzbU1vZGVsKG1vZGVsKTtcbiAgICAgIGN1YmlzbU1vZGVsLmluaXRpYWxpemUoKTtcblxuICAgICAgKyt0aGlzLl9tb2RlbENvdW50O1xuICAgIH1cblxuICAgIHJldHVybiBjdWJpc21Nb2RlbDtcbiAgfVxuXG4gIC8qKlxuICAgKiDjg6Ljg4fjg6vjgpLliYrpmaTjgZnjgotcbiAgICovXG4gIGRlbGV0ZU1vZGVsKG1vZGVsOiBDdWJpc21Nb2RlbCk6IHZvaWQge1xuICAgIGlmIChtb2RlbCAhPSBudWxsKSB7XG4gICAgICBtb2RlbC5yZWxlYXNlKCk7XG4gICAgICBtb2RlbCA9IG51bGw7XG4gICAgICAtLXRoaXMuX21vZGVsQ291bnQ7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgKi9cbiAgcHJpdmF0ZSBjb25zdHJ1Y3Rvcihtb2M6IExpdmUyREN1YmlzbUNvcmUuTW9jKSB7XG4gICAgdGhpcy5fbW9jID0gbW9jO1xuICAgIHRoaXMuX21vZGVsQ291bnQgPSAwO1xuICAgIHRoaXMuX21vY1ZlcnNpb24gPSAwO1xuICB9XG5cbiAgLyoqXG4gICAqIOODh+OCueODiOODqeOCr+OCv+ebuOW9k+OBruWHpueQhlxuICAgKi9cbiAgcHVibGljIHJlbGVhc2UoKTogdm9pZCB7XG4gICAgQ1NNX0FTU0VSVCh0aGlzLl9tb2RlbENvdW50ID09IDApO1xuXG4gICAgdGhpcy5fbW9jLl9yZWxlYXNlKCk7XG4gICAgdGhpcy5fbW9jID0gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiDmnIDmlrDjga4ubW9jMyBWZXJzaW9u44KS5Y+W5b6XXG4gICAqL1xuICBwdWJsaWMgZ2V0TGF0ZXN0TW9jVmVyc2lvbigpOiBudW1iZXIge1xuICAgIHJldHVybiBMaXZlMkRDdWJpc21Db3JlLlZlcnNpb24uY3NtR2V0TGF0ZXN0TW9jVmVyc2lvbigpO1xuICB9XG5cbiAgLyoqXG4gICAqIOiqreOBv+i+vOOCk+OBoOODouODh+ODq+OBri5tb2MzIFZlcnNpb27jgpLlj5blvpdcbiAgICovXG4gIHB1YmxpYyBnZXRNb2NWZXJzaW9uKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX21vY1ZlcnNpb247XG4gIH1cblxuICAvKipcbiAgICogLm1vYzMg44Gu5pW05ZCI5oCn44KS5qSc6Ki844GZ44KLXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIGhhc01vY0NvbnNpc3RlbmN5KG1vY0J5dGVzOiBBcnJheUJ1ZmZlcik6IGJvb2xlYW4ge1xuICAgIGNvbnN0IGlzQ29uc2lzdGVudCA9XG4gICAgICBMaXZlMkRDdWJpc21Db3JlLk1vYy5wcm90b3R5cGUuaGFzTW9jQ29uc2lzdGVuY3kobW9jQnl0ZXMpO1xuICAgIHJldHVybiBpc0NvbnNpc3RlbnQgPT09IDEgPyB0cnVlIDogZmFsc2U7XG4gIH1cblxuICBfbW9jOiBMaXZlMkRDdWJpc21Db3JlLk1vYzsgLy8gTW9j44OH44O844K/XG4gIF9tb2RlbENvdW50OiBudW1iZXI7IC8vIE1vY+ODh+ODvOOCv+OBi+OCieS9nOOCieOCjOOBn+ODouODh+ODq+OBruWAi+aVsFxuICBfbW9jVmVyc2lvbjogbnVtYmVyOyAvLyDoqq3jgb/ovrzjgpPjgaDjg6Ljg4fjg6vjga4ubW9jMyBWZXJzaW9uXG59XG5cbi8vIE5hbWVzcGFjZSBkZWZpbml0aW9uIGZvciBjb21wYXRpYmlsaXR5LlxuaW1wb3J0ICogYXMgJCBmcm9tICcuL2N1YmlzbW1vYyc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZVxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICBleHBvcnQgY29uc3QgQ3ViaXNtTW9jID0gJC5DdWJpc21Nb2M7XG4gIGV4cG9ydCB0eXBlIEN1YmlzbU1vYyA9ICQuQ3ViaXNtTW9jO1xufVxuIl0sIm5hbWVzIjpbIkNTTV9BU1NFUlQiLCJDdWJpc21Mb2dFcnJvciIsIkN1YmlzbU1vZGVsIiwiQ3ViaXNtTW9jIiwiY3JlYXRlIiwibW9jQnl0ZXMiLCJzaG91bGRDaGVja01vY0NvbnNpc3RlbmN5IiwiY3ViaXNtTW9jIiwiY29uc2lzdGVuY3kiLCJoYXNNb2NDb25zaXN0ZW5jeSIsIm1vYyIsIkxpdmUyREN1YmlzbUNvcmUiLCJNb2MiLCJmcm9tQXJyYXlCdWZmZXIiLCJfbW9jVmVyc2lvbiIsIlZlcnNpb24iLCJjc21HZXRNb2NWZXJzaW9uIiwiZGVsZXRlIiwiX21vYyIsIl9yZWxlYXNlIiwiY3JlYXRlTW9kZWwiLCJjdWJpc21Nb2RlbCIsIm1vZGVsIiwiTW9kZWwiLCJmcm9tTW9jIiwiaW5pdGlhbGl6ZSIsIl9tb2RlbENvdW50IiwiZGVsZXRlTW9kZWwiLCJyZWxlYXNlIiwiZ2V0TGF0ZXN0TW9jVmVyc2lvbiIsImNzbUdldExhdGVzdE1vY1ZlcnNpb24iLCJnZXRNb2NWZXJzaW9uIiwiaXNDb25zaXN0ZW50IiwicHJvdG90eXBlIiwiJCIsIkxpdmUyREN1YmlzbUZyYW1ld29yayJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/model/cubismmoc.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/model/cubismmodel.ts":
/*!***************************************************!*\
  !*** ./WebSDK/Framework/src/model/cubismmodel.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismModel: () => (/* binding */ CubismModel),\n/* harmony export */   DrawableColorData: () => (/* binding */ DrawableColorData),\n/* harmony export */   DrawableCullingData: () => (/* binding */ DrawableCullingData),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework),\n/* harmony export */   PartColorData: () => (/* binding */ PartColorData)\n/* harmony export */ });\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rendering/cubismrenderer */ \"(ssr)/./WebSDK/Framework/src/rendering/cubismrenderer.ts\");\n/* harmony import */ var _type_csmmap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/csmmap */ \"(ssr)/./WebSDK/Framework/src/type/csmmap.ts\");\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _utils_cubismdebug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/cubismdebug */ \"(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\");\n/* harmony import */ var _cubismmodel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cubismmodel */ \"(ssr)/./WebSDK/Framework/src/model/cubismmodel.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n\n/**\n * SDK側から与えられたDrawableの乗算色・スクリーン色上書きフラグと\n * その色を保持する構造体\n */ class DrawableColorData {\n    constructor(isOverwritten = false, color = new _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__.CubismTextureColor()){\n        this.isOverwritten = isOverwritten;\n        this.color = color;\n    }\n}\n/**\n * @brief テクスチャの色をRGBAで扱うための構造体\n */ class PartColorData {\n    constructor(isOverwritten = false, color = new _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__.CubismTextureColor()){\n        this.isOverwritten = isOverwritten;\n        this.color = color;\n    }\n}\n/**\n * テクスチャのカリング設定を管理するための構造体\n */ class DrawableCullingData {\n    /**\n   * コンストラクタ\n   *\n   * @param isOverwritten\n   * @param isCulling\n   */ constructor(isOverwritten = false, isCulling = false){\n        this.isOverwritten = isOverwritten;\n        this.isCulling = isCulling;\n    }\n}\n/**\n * モデル\n *\n * Mocデータから生成されるモデルのクラス。\n */ class CubismModel {\n    /**\n   * モデルのパラメータの更新\n   */ update() {\n        // Update model\n        this._model.update();\n        this._model.drawables.resetDynamicFlags();\n    }\n    /**\n   * PixelsPerUnitを取得する\n   * @returns PixelsPerUnit\n   */ getPixelsPerUnit() {\n        if (this._model == null) {\n            return 0.0;\n        }\n        return this._model.canvasinfo.PixelsPerUnit;\n    }\n    /**\n   * キャンバスの幅を取得する\n   */ getCanvasWidth() {\n        if (this._model == null) {\n            return 0.0;\n        }\n        return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n    }\n    /**\n   * キャンバスの高さを取得する\n   */ getCanvasHeight() {\n        if (this._model == null) {\n            return 0.0;\n        }\n        return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n    }\n    /**\n   * パラメータを保存する\n   */ saveParameters() {\n        const parameterCount = this._model.parameters.count;\n        const savedParameterCount = this._savedParameters.getSize();\n        for(let i = 0; i < parameterCount; ++i){\n            if (i < savedParameterCount) {\n                this._savedParameters.set(i, this._parameterValues[i]);\n            } else {\n                this._savedParameters.pushBack(this._parameterValues[i]);\n            }\n        }\n    }\n    /**\n   * 乗算色を取得する\n   * @param index Drawablesのインデックス\n   * @returns 指定したdrawableの乗算色(RGBA)\n   */ getMultiplyColor(index) {\n        // Drawableとモデル全体の乗算色上書きフラグがどちらもtrueな場合、モデル全体の上書きフラグが優先される\n        if (this.getOverwriteFlagForModelMultiplyColors() || this.getOverwriteFlagForDrawableMultiplyColors(index)) {\n            return this._userMultiplyColors.at(index).color;\n        }\n        const color = this.getDrawableMultiplyColor(index);\n        return color;\n    }\n    /**\n   * スクリーン色を取得する\n   * @param index Drawablesのインデックス\n   * @returns 指定したdrawableのスクリーン色(RGBA)\n   */ getScreenColor(index) {\n        // Drawableとモデル全体のスクリーン色上書きフラグがどちらもtrueな場合、モデル全体の上書きフラグが優先される\n        if (this.getOverwriteFlagForModelScreenColors() || this.getOverwriteFlagForDrawableScreenColors(index)) {\n            return this._userScreenColors.at(index).color;\n        }\n        const color = this.getDrawableScreenColor(index);\n        return color;\n    }\n    /**\n   * 乗算色をセットする\n   * @param index Drawablesのインデックス\n   * @param color 設定する乗算色(CubismTextureColor)\n   */ setMultiplyColorByTextureColor(index, color) {\n        this.setMultiplyColorByRGBA(index, color.r, color.g, color.b, color.a);\n    }\n    /**\n   * 乗算色をセットする\n   * @param index Drawablesのインデックス\n   * @param r 設定する乗算色のR値\n   * @param g 設定する乗算色のG値\n   * @param b 設定する乗算色のB値\n   * @param a 設定する乗算色のA値\n   */ setMultiplyColorByRGBA(index, r, g, b, a = 1.0) {\n        this._userMultiplyColors.at(index).color.r = r;\n        this._userMultiplyColors.at(index).color.g = g;\n        this._userMultiplyColors.at(index).color.b = b;\n        this._userMultiplyColors.at(index).color.a = a;\n    }\n    /**\n   * スクリーン色をセットする\n   * @param index Drawablesのインデックス\n   * @param color 設定するスクリーン色(CubismTextureColor)\n   */ setScreenColorByTextureColor(index, color) {\n        this.setScreenColorByRGBA(index, color.r, color.g, color.b, color.a);\n    }\n    /**\n   * スクリーン色をセットする\n   * @param index Drawablesのインデックス\n   * @param r 設定するスクリーン色のR値\n   * @param g 設定するスクリーン色のG値\n   * @param b 設定するスクリーン色のB値\n   * @param a 設定するスクリーン色のA値\n   */ setScreenColorByRGBA(index, r, g, b, a = 1.0) {\n        this._userScreenColors.at(index).color.r = r;\n        this._userScreenColors.at(index).color.g = g;\n        this._userScreenColors.at(index).color.b = b;\n        this._userScreenColors.at(index).color.a = a;\n    }\n    /**\n   * partの乗算色を取得する\n   * @param partIndex partのインデックス\n   * @returns 指定したpartの乗算色\n   */ getPartMultiplyColor(partIndex) {\n        return this._userPartMultiplyColors.at(partIndex).color;\n    }\n    /**\n   * partのスクリーン色を取得する\n   * @param partIndex partのインデックス\n   * @returns 指定したpartのスクリーン色\n   */ getPartScreenColor(partIndex) {\n        return this._userPartScreenColors.at(partIndex).color;\n    }\n    /**\n   * partのOverwriteColor setter関数\n   * @param partIndex partのインデックス\n   * @param r 設定する色のR値\n   * @param g 設定する色のG値\n   * @param b 設定する色のB値\n   * @param a 設定する色のA値\n   * @param partColors 設定するpartのカラーデータ配列\n   * @param drawableColors partに関連するDrawableのカラーデータ配列\n   */ setPartColor(partIndex, r, g, b, a, partColors, drawableColors) {\n        partColors.at(partIndex).color.r = r;\n        partColors.at(partIndex).color.g = g;\n        partColors.at(partIndex).color.b = b;\n        partColors.at(partIndex).color.a = a;\n        if (partColors.at(partIndex).isOverwritten) {\n            for(let i = 0; i < this._partChildDrawables.at(partIndex).getSize(); ++i){\n                const drawableIndex = this._partChildDrawables.at(partIndex).at(i);\n                drawableColors.at(drawableIndex).color.r = r;\n                drawableColors.at(drawableIndex).color.g = g;\n                drawableColors.at(drawableIndex).color.b = b;\n                drawableColors.at(drawableIndex).color.a = a;\n            }\n        }\n    }\n    /**\n   * 乗算色をセットする\n   * @param partIndex partのインデックス\n   * @param color 設定する乗算色(CubismTextureColor)\n   */ setPartMultiplyColorByTextureColor(partIndex, color) {\n        this.setPartMultiplyColorByRGBA(partIndex, color.r, color.g, color.b, color.a);\n    }\n    /**\n   * 乗算色をセットする\n   * @param partIndex partのインデックス\n   * @param r 設定する乗算色のR値\n   * @param g 設定する乗算色のG値\n   * @param b 設定する乗算色のB値\n   * @param a 設定する乗算色のA値\n   */ setPartMultiplyColorByRGBA(partIndex, r, g, b, a) {\n        this.setPartColor(partIndex, r, g, b, a, this._userPartMultiplyColors, this._userMultiplyColors);\n    }\n    /**\n   * スクリーン色をセットする\n   * @param partIndex partのインデックス\n   * @param color 設定するスクリーン色(CubismTextureColor)\n   */ setPartScreenColorByTextureColor(partIndex, color) {\n        this.setPartScreenColorByRGBA(partIndex, color.r, color.g, color.b, color.a);\n    }\n    /**\n   * スクリーン色をセットする\n   * @param partIndex partのインデックス\n   * @param r 設定するスクリーン色のR値\n   * @param g 設定するスクリーン色のG値\n   * @param b 設定するスクリーン色のB値\n   * @param a 設定するスクリーン色のA値\n   */ setPartScreenColorByRGBA(partIndex, r, g, b, a) {\n        this.setPartColor(partIndex, r, g, b, a, this._userPartScreenColors, this._userScreenColors);\n    }\n    /**\n   * SDKから指定したモデルの乗算色を上書きするか\n   * @returns true -> SDKからの情報を優先する\n   *          false -> モデルに設定されている色情報を使用\n   */ getOverwriteFlagForModelMultiplyColors() {\n        return this._isOverwrittenModelMultiplyColors;\n    }\n    /**\n   * SDKから指定したモデルのスクリーン色を上書きするか\n   * @returns true -> SDKからの情報を優先する\n   *          false -> モデルに設定されている色情報を使用\n   */ getOverwriteFlagForModelScreenColors() {\n        return this._isOverwrittenModelScreenColors;\n    }\n    /**\n   * SDKから指定したモデルの乗算色を上書きするかセットする\n   * @param value true -> SDKからの情報を優先する\n   *              false -> モデルに設定されている色情報を使用\n   */ setOverwriteFlagForModelMultiplyColors(value) {\n        this._isOverwrittenModelMultiplyColors = value;\n    }\n    /**\n   * SDKから指定したモデルのスクリーン色を上書きするかセットする\n   * @param value true -> SDKからの情報を優先する\n   *              false -> モデルに設定されている色情報を使用\n   */ setOverwriteFlagForModelScreenColors(value) {\n        this._isOverwrittenModelScreenColors = value;\n    }\n    /**\n   * SDKから指定したDrawableIndexの乗算色を上書きするか\n   * @returns true -> SDKからの情報を優先する\n   *          false -> モデルに設定されている色情報を使用\n   */ getOverwriteFlagForDrawableMultiplyColors(drawableindex) {\n        return this._userMultiplyColors.at(drawableindex).isOverwritten;\n    }\n    /**\n   * SDKから指定したDrawableIndexのスクリーン色を上書きするか\n   * @returns true -> SDKからの情報を優先する\n   *          false -> モデルに設定されている色情報を使用\n   */ getOverwriteFlagForDrawableScreenColors(drawableindex) {\n        return this._userScreenColors.at(drawableindex).isOverwritten;\n    }\n    /**\n   * SDKから指定したDrawableIndexの乗算色を上書きするかセットする\n   * @param value true -> SDKからの情報を優先する\n   *              false -> モデルに設定されている色情報を使用\n   */ setOverwriteFlagForDrawableMultiplyColors(drawableindex, value) {\n        this._userMultiplyColors.at(drawableindex).isOverwritten = value;\n    }\n    /**\n   * SDKから指定したDrawableIndexのスクリーン色を上書きするかセットする\n   * @param value true -> SDKからの情報を優先する\n   *              false -> モデルに設定されている色情報を使用\n   */ setOverwriteFlagForDrawableScreenColors(drawableindex, value) {\n        this._userScreenColors.at(drawableindex).isOverwritten = value;\n    }\n    /**\n   * SDKからpartの乗算色を上書きするか\n   * @param partIndex partのインデックス\n   * @returns true    ->  SDKからの情報を優先する\n   *          false   ->  モデルに設定されている色情報を使用\n   */ getOverwriteColorForPartMultiplyColors(partIndex) {\n        return this._userPartMultiplyColors.at(partIndex).isOverwritten;\n    }\n    /**\n   * SDKからpartのスクリーン色を上書きするか\n   * @param partIndex partのインデックス\n   * @returns true    ->  SDKからの情報を優先する\n   *          false   ->  モデルに設定されている色情報を使用\n   */ getOverwriteColorForPartScreenColors(partIndex) {\n        return this._userPartScreenColors.at(partIndex).isOverwritten;\n    }\n    /**\n   * partのOverwriteFlag setter関数\n   * @param partIndex partのインデックス\n   * @param value true -> SDKからの情報を優先する\n   *              false -> モデルに設定されている色情報を使用\n   * @param partColors 設定するpartのカラーデータ配列\n   * @param drawableColors partに関連するDrawableのカラーデータ配列\n   */ setOverwriteColorForPartColors(partIndex, value, partColors, drawableColors) {\n        partColors.at(partIndex).isOverwritten = value;\n        for(let i = 0; i < this._partChildDrawables.at(partIndex).getSize(); ++i){\n            const drawableIndex = this._partChildDrawables.at(partIndex).at(i);\n            drawableColors.at(drawableIndex).isOverwritten = value;\n            if (value) {\n                drawableColors.at(drawableIndex).color.r = partColors.at(partIndex).color.r;\n                drawableColors.at(drawableIndex).color.g = partColors.at(partIndex).color.g;\n                drawableColors.at(drawableIndex).color.b = partColors.at(partIndex).color.b;\n                drawableColors.at(drawableIndex).color.a = partColors.at(partIndex).color.a;\n            }\n        }\n    }\n    /**\n   * SDKからpartのスクリーン色を上書きするかをセットする\n   * @param partIndex partのインデックス\n   * @param value true -> SDKからの情報を優先する\n   *              false -> モデルに設定されている色情報を使用\n   */ setOverwriteColorForPartMultiplyColors(partIndex, value) {\n        this._userPartMultiplyColors.at(partIndex).isOverwritten = value;\n        this.setOverwriteColorForPartColors(partIndex, value, this._userPartMultiplyColors, this._userMultiplyColors);\n    }\n    /**\n   * SDKからpartのスクリーン色を上書きするかをセットする\n   * @param partIndex partのインデックス\n   * @param value true -> SDKからの情報を優先する\n   *              false -> モデルに設定されている色情報を使用\n   */ setOverwriteColorForPartScreenColors(partIndex, value) {\n        this._userPartScreenColors.at(partIndex).isOverwritten = value;\n        this.setOverwriteColorForPartColors(partIndex, value, this._userPartScreenColors, this._userScreenColors);\n    }\n    /**\n   * Drawableのカリング情報を取得する。\n   *\n   * @param   drawableIndex   Drawableのインデックス\n   * @return  Drawableのカリング情報\n   */ getDrawableCulling(drawableIndex) {\n        if (this.getOverwriteFlagForModelCullings() || this.getOverwriteFlagForDrawableCullings(drawableIndex)) {\n            return this._userCullings.at(drawableIndex).isCulling;\n        }\n        const constantFlags = this._model.drawables.constantFlags;\n        return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n    }\n    /**\n   * Drawableのカリング情報を設定する。\n   *\n   * @param drawableIndex Drawableのインデックス\n   * @param isCulling カリング情報\n   */ setDrawableCulling(drawableIndex, isCulling) {\n        this._userCullings.at(drawableIndex).isCulling = isCulling;\n    }\n    /**\n   * SDKからモデル全体のカリング設定を上書きするか。\n   *\n   * @retval  true    ->  SDK上のカリング設定を使用\n   * @retval  false   ->  モデルのカリング設定を使用\n   */ getOverwriteFlagForModelCullings() {\n        return this._isOverwrittenCullings;\n    }\n    /**\n   * SDKからモデル全体のカリング設定を上書きするかを設定する。\n   *\n   * @param isOverwrittenCullings SDK上のカリング設定を使うならtrue、モデルのカリング設定を使うならfalse\n   */ setOverwriteFlagForModelCullings(isOverwrittenCullings) {\n        this._isOverwrittenCullings = isOverwrittenCullings;\n    }\n    /**\n   *\n   * @param drawableIndex Drawableのインデックス\n   * @retval  true    ->  SDK上のカリング設定を使用\n   * @retval  false   ->  モデルのカリング設定を使用\n   */ getOverwriteFlagForDrawableCullings(drawableIndex) {\n        return this._userCullings.at(drawableIndex).isOverwritten;\n    }\n    /**\n   *\n   * @param drawableIndex Drawableのインデックス\n   * @param isOverwrittenCullings SDK上のカリング設定を使うならtrue、モデルのカリング設定を使うならfalse\n   */ setOverwriteFlagForDrawableCullings(drawableIndex, isOverwrittenCullings) {\n        this._userCullings.at(drawableIndex).isOverwritten = isOverwrittenCullings;\n    }\n    /**\n   * モデルの不透明度を取得する\n   *\n   * @returns 不透明度の値\n   */ getModelOapcity() {\n        return this._modelOpacity;\n    }\n    /**\n   * モデルの不透明度を設定する\n   *\n   * @param value 不透明度の値\n   */ setModelOapcity(value) {\n        this._modelOpacity = value;\n    }\n    /**\n   * モデルを取得\n   */ getModel() {\n        return this._model;\n    }\n    /**\n   * パーツのインデックスを取得\n   * @param partId パーツのID\n   * @return パーツのインデックス\n   */ getPartIndex(partId) {\n        let partIndex;\n        const partCount = this._model.parts.count;\n        for(partIndex = 0; partIndex < partCount; ++partIndex){\n            if (partId == this._partIds.at(partIndex)) {\n                return partIndex;\n            }\n        }\n        // モデルに存在していない場合、非存在パーツIDリスト内にあるかを検索し、そのインデックスを返す\n        if (this._notExistPartId.isExist(partId)) {\n            return this._notExistPartId.getValue(partId);\n        }\n        // 非存在パーツIDリストにない場合、新しく要素を追加する\n        partIndex = partCount + this._notExistPartId.getSize();\n        this._notExistPartId.setValue(partId, partIndex);\n        this._notExistPartOpacities.appendKey(partIndex);\n        return partIndex;\n    }\n    /**\n   * パーツのIDを取得する。\n   *\n   * @param partIndex 取得するパーツのインデックス\n   * @return パーツのID\n   */ getPartId(partIndex) {\n        const partId = this._model.parts.ids[partIndex];\n        return _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(partId);\n    }\n    /**\n   * パーツの個数の取得\n   * @return パーツの個数\n   */ getPartCount() {\n        const partCount = this._model.parts.count;\n        return partCount;\n    }\n    /**\n   * パーツの不透明度の設定(Index)\n   * @param partIndex パーツのインデックス\n   * @param opacity 不透明度\n   */ setPartOpacityByIndex(partIndex, opacity) {\n        if (this._notExistPartOpacities.isExist(partIndex)) {\n            this._notExistPartOpacities.setValue(partIndex, opacity);\n            return;\n        }\n        // インデックスの範囲内検知\n        (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_4__.CSM_ASSERT)(0 <= partIndex && partIndex < this.getPartCount());\n        this._partOpacities[partIndex] = opacity;\n    }\n    /**\n   * パーツの不透明度の設定(Id)\n   * @param partId パーツのID\n   * @param opacity パーツの不透明度\n   */ setPartOpacityById(partId, opacity) {\n        // 高速化のためにPartIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\n        const index = this.getPartIndex(partId);\n        if (index < 0) {\n            return; // パーツがないのでスキップ\n        }\n        this.setPartOpacityByIndex(index, opacity);\n    }\n    /**\n   * パーツの不透明度の取得(index)\n   * @param partIndex パーツのインデックス\n   * @return パーツの不透明度\n   */ getPartOpacityByIndex(partIndex) {\n        if (this._notExistPartOpacities.isExist(partIndex)) {\n            // モデルに存在しないパーツIDの場合、非存在パーツリストから不透明度を返す。\n            return this._notExistPartOpacities.getValue(partIndex);\n        }\n        // インデックスの範囲内検知\n        (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_4__.CSM_ASSERT)(0 <= partIndex && partIndex < this.getPartCount());\n        return this._partOpacities[partIndex];\n    }\n    /**\n   * パーツの不透明度の取得(id)\n   * @param partId パーツのＩｄ\n   * @return パーツの不透明度\n   */ getPartOpacityById(partId) {\n        // 高速化のためにPartIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\n        const index = this.getPartIndex(partId);\n        if (index < 0) {\n            return 0; // パーツが無いのでスキップ\n        }\n        return this.getPartOpacityByIndex(index);\n    }\n    /**\n   * パラメータのインデックスの取得\n   * @param パラメータID\n   * @return パラメータのインデックス\n   */ getParameterIndex(parameterId) {\n        let parameterIndex;\n        const idCount = this._model.parameters.count;\n        for(parameterIndex = 0; parameterIndex < idCount; ++parameterIndex){\n            if (parameterId != this._parameterIds.at(parameterIndex)) {\n                continue;\n            }\n            return parameterIndex;\n        }\n        // モデルに存在していない場合、非存在パラメータIDリスト内を検索し、そのインデックスを返す\n        if (this._notExistParameterId.isExist(parameterId)) {\n            return this._notExistParameterId.getValue(parameterId);\n        }\n        // 非存在パラメータIDリストにない場合新しく要素を追加する\n        parameterIndex = this._model.parameters.count + this._notExistParameterId.getSize();\n        this._notExistParameterId.setValue(parameterId, parameterIndex);\n        this._notExistParameterValues.appendKey(parameterIndex);\n        return parameterIndex;\n    }\n    /**\n   * パラメータの個数の取得\n   * @return パラメータの個数\n   */ getParameterCount() {\n        return this._model.parameters.count;\n    }\n    /**\n   * パラメータの種類の取得\n   * @param parameterIndex パラメータのインデックス\n   * @return csmParameterType_Normal -> 通常のパラメータ\n   *          csmParameterType_BlendShape -> ブレンドシェイプパラメータ\n   */ getParameterType(parameterIndex) {\n        return this._model.parameters.types[parameterIndex];\n    }\n    /**\n   * パラメータの最大値の取得\n   * @param parameterIndex パラメータのインデックス\n   * @return パラメータの最大値\n   */ getParameterMaximumValue(parameterIndex) {\n        return this._model.parameters.maximumValues[parameterIndex];\n    }\n    /**\n   * パラメータの最小値の取得\n   * @param parameterIndex パラメータのインデックス\n   * @return パラメータの最小値\n   */ getParameterMinimumValue(parameterIndex) {\n        return this._model.parameters.minimumValues[parameterIndex];\n    }\n    /**\n   * パラメータのデフォルト値の取得\n   * @param parameterIndex パラメータのインデックス\n   * @return パラメータのデフォルト値\n   */ getParameterDefaultValue(parameterIndex) {\n        return this._model.parameters.defaultValues[parameterIndex];\n    }\n    /**\n   * 指定したパラメータindexのIDを取得\n   *\n   * @param parameterIndex パラメータのインデックス\n   * @returns パラメータID\n   */ getParameterId(parameterIndex) {\n        return _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(this._model.parameters.ids[parameterIndex]);\n    }\n    /**\n   * パラメータの値の取得\n   * @param parameterIndex    パラメータのインデックス\n   * @return パラメータの値\n   */ getParameterValueByIndex(parameterIndex) {\n        if (this._notExistParameterValues.isExist(parameterIndex)) {\n            return this._notExistParameterValues.getValue(parameterIndex);\n        }\n        // インデックスの範囲内検知\n        (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_4__.CSM_ASSERT)(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n        return this._parameterValues[parameterIndex];\n    }\n    /**\n   * パラメータの値の取得\n   * @param parameterId    パラメータのID\n   * @return パラメータの値\n   */ getParameterValueById(parameterId) {\n        // 高速化のためにparameterIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\n        const parameterIndex = this.getParameterIndex(parameterId);\n        return this.getParameterValueByIndex(parameterIndex);\n    }\n    /**\n   * パラメータの値の設定\n   * @param parameterIndex パラメータのインデックス\n   * @param value パラメータの値\n   * @param weight 重み\n   */ setParameterValueByIndex(parameterIndex, value, weight = 1.0) {\n        if (this._notExistParameterValues.isExist(parameterIndex)) {\n            this._notExistParameterValues.setValue(parameterIndex, weight == 1 ? value : this._notExistParameterValues.getValue(parameterIndex) * (1 - weight) + value * weight);\n            return;\n        }\n        // インデックスの範囲内検知\n        (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_4__.CSM_ASSERT)(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n        if (this._model.parameters.maximumValues[parameterIndex] < value) {\n            value = this._model.parameters.maximumValues[parameterIndex];\n        }\n        if (this._model.parameters.minimumValues[parameterIndex] > value) {\n            value = this._model.parameters.minimumValues[parameterIndex];\n        }\n        this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n    }\n    /**\n   * パラメータの値の設定\n   * @param parameterId パラメータのID\n   * @param value パラメータの値\n   * @param weight 重み\n   */ setParameterValueById(parameterId, value, weight = 1.0) {\n        const index = this.getParameterIndex(parameterId);\n        this.setParameterValueByIndex(index, value, weight);\n    }\n    /**\n   * パラメータの値の加算(index)\n   * @param parameterIndex パラメータインデックス\n   * @param value 加算する値\n   * @param weight 重み\n   */ addParameterValueByIndex(parameterIndex, value, weight = 1.0) {\n        this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n    }\n    /**\n   * パラメータの値の加算(id)\n   * @param parameterId パラメータＩＤ\n   * @param value 加算する値\n   * @param weight 重み\n   */ addParameterValueById(parameterId, value, weight = 1.0) {\n        const index = this.getParameterIndex(parameterId);\n        this.addParameterValueByIndex(index, value, weight);\n    }\n    /**\n   * パラメータの値の乗算\n   * @param parameterId パラメータのID\n   * @param value 乗算する値\n   * @param weight 重み\n   */ multiplyParameterValueById(parameterId, value, weight = 1.0) {\n        const index = this.getParameterIndex(parameterId);\n        this.multiplyParameterValueByIndex(index, value, weight);\n    }\n    /**\n   * パラメータの値の乗算\n   * @param parameterIndex パラメータのインデックス\n   * @param value 乗算する値\n   * @param weight 重み\n   */ multiplyParameterValueByIndex(parameterIndex, value, weight = 1.0) {\n        this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1.0 + (value - 1.0) * weight));\n    }\n    /**\n   * Drawableのインデックスの取得\n   * @param drawableId DrawableのID\n   * @return Drawableのインデックス\n   */ getDrawableIndex(drawableId) {\n        const drawableCount = this._model.drawables.count;\n        for(let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex){\n            if (this._drawableIds.at(drawableIndex) == drawableId) {\n                return drawableIndex;\n            }\n        }\n        return -1;\n    }\n    /**\n   * Drawableの個数の取得\n   * @return drawableの個数\n   */ getDrawableCount() {\n        const drawableCount = this._model.drawables.count;\n        return drawableCount;\n    }\n    /**\n   * DrawableのIDを取得する\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableのID\n   */ getDrawableId(drawableIndex) {\n        const parameterIds = this._model.drawables.ids;\n        return _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(parameterIds[drawableIndex]);\n    }\n    /**\n   * Drawableの描画順リストの取得\n   * @return Drawableの描画順リスト\n   */ getDrawableRenderOrders() {\n        const renderOrders = this._model.drawables.renderOrders;\n        return renderOrders;\n    }\n    /**\n   * @deprecated\n   * 関数名が誤っていたため、代替となる getDrawableTextureIndex を追加し、この関数は非推奨となりました。\n   *\n   * Drawableのテクスチャインデックスリストの取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableのテクスチャインデックスリスト\n   */ getDrawableTextureIndices(drawableIndex) {\n        return this.getDrawableTextureIndex(drawableIndex);\n    }\n    /**\n   * Drawableのテクスチャインデックスの取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableのテクスチャインデックス\n   */ getDrawableTextureIndex(drawableIndex) {\n        const textureIndices = this._model.drawables.textureIndices;\n        return textureIndices[drawableIndex];\n    }\n    /**\n   * DrawableのVertexPositionsの変化情報の取得\n   *\n   * 直近のCubismModel.update関数でDrawableの頂点情報が変化したかを取得する。\n   *\n   * @param   drawableIndex   Drawableのインデックス\n   * @retval  true    Drawableの頂点情報が直近のCubismModel.update関数で変化した\n   * @retval  false   Drawableの頂点情報が直近のCubismModel.update関数で変化していない\n   */ getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    /**\n   * Drawableの頂点インデックスの個数の取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの頂点インデックスの個数\n   */ getDrawableVertexIndexCount(drawableIndex) {\n        const indexCounts = this._model.drawables.indexCounts;\n        return indexCounts[drawableIndex];\n    }\n    /**\n   * Drawableの頂点の個数の取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの頂点の個数\n   */ getDrawableVertexCount(drawableIndex) {\n        const vertexCounts = this._model.drawables.vertexCounts;\n        return vertexCounts[drawableIndex];\n    }\n    /**\n   * Drawableの頂点リストの取得\n   * @param drawableIndex drawableのインデックス\n   * @return drawableの頂点リスト\n   */ getDrawableVertices(drawableIndex) {\n        return this.getDrawableVertexPositions(drawableIndex);\n    }\n    /**\n   * Drawableの頂点インデックスリストの取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの頂点インデックスリスト\n   */ getDrawableVertexIndices(drawableIndex) {\n        const indicesArray = this._model.drawables.indices;\n        return indicesArray[drawableIndex];\n    }\n    /**\n   * Drawableの頂点リストの取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの頂点リスト\n   */ getDrawableVertexPositions(drawableIndex) {\n        const verticesArray = this._model.drawables.vertexPositions;\n        return verticesArray[drawableIndex];\n    }\n    /**\n   * Drawableの頂点のUVリストの取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの頂点UVリスト\n   */ getDrawableVertexUvs(drawableIndex) {\n        const uvsArray = this._model.drawables.vertexUvs;\n        return uvsArray[drawableIndex];\n    }\n    /**\n   * Drawableの不透明度の取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの不透明度\n   */ getDrawableOpacity(drawableIndex) {\n        const opacities = this._model.drawables.opacities;\n        return opacities[drawableIndex];\n    }\n    /**\n   * Drawableの乗算色の取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの乗算色(RGBA)\n   * スクリーン色はRGBAで取得されるが、Aは必ず0\n   */ getDrawableMultiplyColor(drawableIndex) {\n        const multiplyColors = this._model.drawables.multiplyColors;\n        const index = drawableIndex * 4;\n        const multiplyColor = new _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__.CubismTextureColor();\n        multiplyColor.r = multiplyColors[index];\n        multiplyColor.g = multiplyColors[index + 1];\n        multiplyColor.b = multiplyColors[index + 2];\n        multiplyColor.a = multiplyColors[index + 3];\n        return multiplyColor;\n    }\n    /**\n   * Drawableのスクリーン色の取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableのスクリーン色(RGBA)\n   * スクリーン色はRGBAで取得されるが、Aは必ず0\n   */ getDrawableScreenColor(drawableIndex) {\n        const screenColors = this._model.drawables.screenColors;\n        const index = drawableIndex * 4;\n        const screenColor = new _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__.CubismTextureColor();\n        screenColor.r = screenColors[index];\n        screenColor.g = screenColors[index + 1];\n        screenColor.b = screenColors[index + 2];\n        screenColor.a = screenColors[index + 3];\n        return screenColor;\n    }\n    /**\n   * Drawableの親パーツのインデックスの取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの親パーツのインデックス\n   */ getDrawableParentPartIndex(drawableIndex) {\n        return this._model.drawables.parentPartIndices[drawableIndex];\n    }\n    /**\n   * Drawableのブレンドモードを取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableのブレンドモード\n   */ getDrawableBlendMode(drawableIndex) {\n        const constantFlags = this._model.drawables.constantFlags;\n        return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__.CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__.CubismBlendMode.CubismBlendMode_Multiplicative : _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__.CubismBlendMode.CubismBlendMode_Normal;\n    }\n    /**\n   * Drawableのマスクの反転使用の取得\n   *\n   * Drawableのマスク使用時の反転設定を取得する。\n   * マスクを使用しない場合は無視される。\n   *\n   * @param drawableIndex Drawableのインデックス\n   * @return Drawableの反転設定\n   */ getDrawableInvertedMaskBit(drawableIndex) {\n        const constantFlags = this._model.drawables.constantFlags;\n        return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n    }\n    /**\n   * Drawableのクリッピングマスクリストの取得\n   * @return Drawableのクリッピングマスクリスト\n   */ getDrawableMasks() {\n        const masks = this._model.drawables.masks;\n        return masks;\n    }\n    /**\n   * Drawableのクリッピングマスクの個数リストの取得\n   * @return Drawableのクリッピングマスクの個数リスト\n   */ getDrawableMaskCounts() {\n        const maskCounts = this._model.drawables.maskCounts;\n        return maskCounts;\n    }\n    /**\n   * クリッピングマスクの使用状態\n   *\n   * @return true クリッピングマスクを使用している\n   * @return false クリッピングマスクを使用していない\n   */ isUsingMasking() {\n        for(let d = 0; d < this._model.drawables.count; ++d){\n            if (this._model.drawables.maskCounts[d] <= 0) {\n                continue;\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n   * Drawableの表示情報を取得する\n   *\n   * @param drawableIndex Drawableのインデックス\n   * @return true Drawableが表示\n   * @return false Drawableが非表示\n   */ getDrawableDynamicFlagIsVisible(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n    }\n    /**\n   * DrawableのDrawOrderの変化情報の取得\n   *\n   * 直近のCubismModel.update関数でdrawableのdrawOrderが変化したかを取得する。\n   * drawOrderはartMesh上で指定する0から1000の情報\n   * @param drawableIndex drawableのインデックス\n   * @return true drawableの不透明度が直近のCubismModel.update関数で変化した\n   * @return false drawableの不透明度が直近のCubismModel.update関数で変化している\n   */ getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    /**\n   * Drawableの不透明度の変化情報の取得\n   *\n   * 直近のCubismModel.update関数でdrawableの不透明度が変化したかを取得する。\n   *\n   * @param drawableIndex drawableのインデックス\n   * @return true Drawableの不透明度が直近のCubismModel.update関数で変化した\n   * @return false Drawableの不透明度が直近のCubismModel.update関数で変化してない\n   */ getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    /**\n   * Drawableの描画順序の変化情報の取得\n   *\n   * 直近のCubismModel.update関数でDrawableの描画の順序が変化したかを取得する。\n   *\n   * @param drawableIndex Drawableのインデックス\n   * @return true Drawableの描画の順序が直近のCubismModel.update関数で変化した\n   * @return false Drawableの描画の順序が直近のCubismModel.update関数で変化してない\n   */ getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    /**\n   * Drawableの乗算色・スクリーン色の変化情報の取得\n   *\n   * 直近のCubismModel.update関数でDrawableの乗算色・スクリーン色が変化したかを取得する。\n   *\n   * @param drawableIndex Drawableのインデックス\n   * @return true Drawableの乗算色・スクリーン色が直近のCubismModel.update関数で変化した\n   * @return false Drawableの乗算色・スクリーン色が直近のCubismModel.update関数で変化してない\n   */ getDrawableDynamicFlagBlendColorDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasBlendColorDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    /**\n   * 保存されたパラメータの読み込み\n   */ loadParameters() {\n        let parameterCount = this._model.parameters.count;\n        const savedParameterCount = this._savedParameters.getSize();\n        if (parameterCount > savedParameterCount) {\n            parameterCount = savedParameterCount;\n        }\n        for(let i = 0; i < parameterCount; ++i){\n            this._parameterValues[i] = this._savedParameters.at(i);\n        }\n    }\n    /**\n   * 初期化する\n   */ initialize() {\n        (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_4__.CSM_ASSERT)(this._model);\n        this._parameterValues = this._model.parameters.values;\n        this._partOpacities = this._model.parts.opacities;\n        this._parameterMaximumValues = this._model.parameters.maximumValues;\n        this._parameterMinimumValues = this._model.parameters.minimumValues;\n        {\n            const parameterIds = this._model.parameters.ids;\n            const parameterCount = this._model.parameters.count;\n            this._parameterIds.prepareCapacity(parameterCount);\n            for(let i = 0; i < parameterCount; ++i)if (_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager()) {\n                this._parameterIds.pushBack(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(parameterIds[i]));\n            }\n        }\n        const partCount = this._model.parts.count;\n        {\n            const partIds = this._model.parts.ids;\n            this._partIds.prepareCapacity(partCount);\n            for(let i = 0; i < partCount; ++i){\n                this._partIds.pushBack(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(partIds[i]));\n            }\n            this._userPartMultiplyColors.prepareCapacity(partCount);\n            this._userPartScreenColors.prepareCapacity(partCount);\n            this._partChildDrawables.prepareCapacity(partCount);\n        }\n        {\n            const drawableIds = this._model.drawables.ids;\n            const drawableCount = this._model.drawables.count;\n            this._userMultiplyColors.prepareCapacity(drawableCount);\n            this._userScreenColors.prepareCapacity(drawableCount);\n            // カリング設定\n            this._userCullings.prepareCapacity(drawableCount);\n            const userCulling = new DrawableCullingData(false, false);\n            // Part\n            {\n                for(let i = 0; i < partCount; ++i){\n                    const multiplyColor = new _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__.CubismTextureColor(1.0, 1.0, 1.0, 1.0);\n                    const screenColor = new _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__.CubismTextureColor(0.0, 0.0, 0.0, 1.0);\n                    const userMultiplyColor = new PartColorData(false, multiplyColor);\n                    const userScreenColor = new PartColorData(false, screenColor);\n                    this._userPartMultiplyColors.pushBack(userMultiplyColor);\n                    this._userPartScreenColors.pushBack(userScreenColor);\n                    this._partChildDrawables.pushBack(new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector());\n                    this._partChildDrawables.at(i).prepareCapacity(drawableCount);\n                }\n            }\n            // Drawables\n            {\n                for(let i = 0; i < drawableCount; ++i){\n                    const multiplyColor = new _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__.CubismTextureColor(1.0, 1.0, 1.0, 1.0);\n                    const screenColor = new _rendering_cubismrenderer__WEBPACK_IMPORTED_MODULE_1__.CubismTextureColor(0.0, 0.0, 0.0, 1.0);\n                    const userMultiplyColor = new DrawableColorData(false, multiplyColor);\n                    const userScreenColor = new DrawableColorData(false, screenColor);\n                    this._drawableIds.pushBack(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(drawableIds[i]));\n                    this._userMultiplyColors.pushBack(userMultiplyColor);\n                    this._userScreenColors.pushBack(userScreenColor);\n                    this._userCullings.pushBack(userCulling);\n                    const parentIndex = this.getDrawableParentPartIndex(i);\n                    if (parentIndex >= 0) {\n                        this._partChildDrawables.at(parentIndex).pushBack(i);\n                    }\n                }\n            }\n        }\n    }\n    /**\n   * コンストラクタ\n   * @param model モデル\n   */ constructor(model){\n        this._model = model;\n        this._parameterValues = null;\n        this._parameterMaximumValues = null;\n        this._parameterMinimumValues = null;\n        this._partOpacities = null;\n        this._savedParameters = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector();\n        this._parameterIds = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector();\n        this._drawableIds = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector();\n        this._partIds = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector();\n        this._isOverwrittenModelMultiplyColors = false;\n        this._isOverwrittenModelScreenColors = false;\n        this._isOverwrittenCullings = false;\n        this._modelOpacity = 1.0;\n        this._userMultiplyColors = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector();\n        this._userScreenColors = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector();\n        this._userCullings = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector();\n        this._userPartMultiplyColors = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector();\n        this._userPartScreenColors = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector();\n        this._partChildDrawables = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector();\n        this._notExistPartId = new _type_csmmap__WEBPACK_IMPORTED_MODULE_2__.csmMap();\n        this._notExistParameterId = new _type_csmmap__WEBPACK_IMPORTED_MODULE_2__.csmMap();\n        this._notExistParameterValues = new _type_csmmap__WEBPACK_IMPORTED_MODULE_2__.csmMap();\n        this._notExistPartOpacities = new _type_csmmap__WEBPACK_IMPORTED_MODULE_2__.csmMap();\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        this._model.release();\n        this._model = null;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModel = _cubismmodel__WEBPACK_IMPORTED_MODULE_5__.CubismModel;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/model/cubismmodel.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/model/cubismmodeluserdata.ts":
/*!***********************************************************!*\
  !*** ./WebSDK/Framework/src/model/cubismmodeluserdata.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismModelUserData: () => (/* binding */ CubismModelUserData),\n/* harmony export */   CubismModelUserDataNode: () => (/* binding */ CubismModelUserDataNode),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _type_csmstring__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/csmstring */ \"(ssr)/./WebSDK/Framework/src/type/csmstring.ts\");\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _cubismmodeluserdatajson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cubismmodeluserdatajson */ \"(ssr)/./WebSDK/Framework/src/model/cubismmodeluserdatajson.ts\");\n/* harmony import */ var _cubismmodeluserdata__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cubismmodeluserdata */ \"(ssr)/./WebSDK/Framework/src/model/cubismmodeluserdata.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\nconst ArtMesh = 'ArtMesh';\n/**\n * ユーザーデータインターフェース\n *\n * Jsonから読み込んだユーザーデータを記録しておくための構造体\n */ class CubismModelUserDataNode {\n}\n/**\n * ユーザデータの管理クラス\n *\n * ユーザデータをロード、管理、検索インターフェイス、解放までを行う。\n */ class CubismModelUserData {\n    /**\n   * インスタンスの作成\n   *\n   * @param buffer    userdata3.jsonが読み込まれているバッファ\n   * @param size      バッファのサイズ\n   * @return 作成されたインスタンス\n   */ static create(buffer, size) {\n        const ret = new CubismModelUserData();\n        ret.parseUserData(buffer, size);\n        return ret;\n    }\n    /**\n   * インスタンスを破棄する\n   *\n   * @param modelUserData 破棄するインスタンス\n   */ static delete(modelUserData) {\n        if (modelUserData != null) {\n            modelUserData.release();\n            modelUserData = null;\n        }\n    }\n    /**\n   * ArtMeshのユーザーデータのリストの取得\n   *\n   * @return ユーザーデータリスト\n   */ getArtMeshUserDatas() {\n        return this._artMeshUserDataNode;\n    }\n    /**\n   * userdata3.jsonのパース\n   *\n   * @param buffer    userdata3.jsonが読み込まれているバッファ\n   * @param size      バッファのサイズ\n   */ parseUserData(buffer, size) {\n        let json = new _cubismmodeluserdatajson__WEBPACK_IMPORTED_MODULE_3__.CubismModelUserDataJson(buffer, size);\n        if (!json) {\n            json.release();\n            json = void 0;\n            return;\n        }\n        const typeOfArtMesh = _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(ArtMesh);\n        const nodeCount = json.getUserDataCount();\n        for(let i = 0; i < nodeCount; i++){\n            const addNode = new CubismModelUserDataNode();\n            addNode.targetId = json.getUserDataId(i);\n            addNode.targetType = _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(json.getUserDataTargetType(i));\n            addNode.value = new _type_csmstring__WEBPACK_IMPORTED_MODULE_1__.csmString(json.getUserDataValue(i));\n            this._userDataNodes.pushBack(addNode);\n            if (addNode.targetType == typeOfArtMesh) {\n                this._artMeshUserDataNode.pushBack(addNode);\n            }\n        }\n        json.release();\n        json = void 0;\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        this._userDataNodes = new _type_csmvector__WEBPACK_IMPORTED_MODULE_2__.csmVector();\n        this._artMeshUserDataNode = new _type_csmvector__WEBPACK_IMPORTED_MODULE_2__.csmVector();\n    }\n    /**\n   * デストラクタ相当の処理\n   *\n   * ユーザーデータ構造体配列を解放する\n   */ release() {\n        for(let i = 0; i < this._userDataNodes.getSize(); ++i){\n            this._userDataNodes.set(i, null);\n        }\n        this._userDataNodes = null;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModelUserData = _cubismmodeluserdata__WEBPACK_IMPORTED_MODULE_4__.CubismModelUserData;\n    Live2DCubismFramework.CubismModelUserDataNode = _cubismmodeluserdata__WEBPACK_IMPORTED_MODULE_4__.CubismModelUserDataNode;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/model/cubismmodeluserdata.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/model/cubismmodeluserdatajson.ts":
/*!***************************************************************!*\
  !*** ./WebSDK/Framework/src/model/cubismmodeluserdatajson.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismModelUserDataJson: () => (/* binding */ CubismModelUserDataJson),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _utils_cubismjson__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/cubismjson */ \"(ssr)/./WebSDK/Framework/src/utils/cubismjson.ts\");\n/* harmony import */ var _cubismmodeluserdatajson__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubismmodeluserdatajson */ \"(ssr)/./WebSDK/Framework/src/model/cubismmodeluserdatajson.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\nconst Meta = 'Meta';\nconst UserDataCount = 'UserDataCount';\nconst TotalUserDataSize = 'TotalUserDataSize';\nconst UserData = 'UserData';\nconst Target = 'Target';\nconst Id = 'Id';\nconst Value = 'Value';\nclass CubismModelUserDataJson {\n    /**\n   * コンストラクタ\n   * @param buffer    userdata3.jsonが読み込まれているバッファ\n   * @param size      バッファのサイズ\n   */ constructor(buffer, size){\n        this._json = _utils_cubismjson__WEBPACK_IMPORTED_MODULE_1__.CubismJson.create(buffer, size);\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        _utils_cubismjson__WEBPACK_IMPORTED_MODULE_1__.CubismJson.delete(this._json);\n    }\n    /**\n   * ユーザーデータ個数の取得\n   * @return ユーザーデータの個数\n   */ getUserDataCount() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(UserDataCount).toInt();\n    }\n    /**\n   * ユーザーデータ総文字列数の取得\n   *\n   * @return ユーザーデータ総文字列数\n   */ getTotalUserDataSize() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(TotalUserDataSize).toInt();\n    }\n    /**\n   * ユーザーデータのタイプの取得\n   *\n   * @return ユーザーデータのタイプ\n   */ getUserDataTargetType(i) {\n        return this._json.getRoot().getValueByString(UserData).getValueByIndex(i).getValueByString(Target).getRawString();\n    }\n    /**\n   * ユーザーデータのターゲットIDの取得\n   *\n   * @param i インデックス\n   * @return ユーザーデータターゲットID\n   */ getUserDataId(i) {\n        return _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(this._json.getRoot().getValueByString(UserData).getValueByIndex(i).getValueByString(Id).getRawString());\n    }\n    /**\n   * ユーザーデータの文字列の取得\n   *\n   * @param i インデックス\n   * @return ユーザーデータ\n   */ getUserDataValue(i) {\n        return this._json.getRoot().getValueByString(UserData).getValueByIndex(i).getValueByString(Value).getRawString();\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModelUserDataJson = _cubismmodeluserdatajson__WEBPACK_IMPORTED_MODULE_2__.CubismModelUserDataJson;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvRnJhbWV3b3JrL3NyYy9tb2RlbC9jdWJpc21tb2RlbHVzZXJkYXRhanNvbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7OztDQUtDLEdBRzBEO0FBQ1Y7QUFFakQsTUFBTUUsT0FBTztBQUNiLE1BQU1DLGdCQUFnQjtBQUN0QixNQUFNQyxvQkFBb0I7QUFDMUIsTUFBTUMsV0FBVztBQUNqQixNQUFNQyxTQUFTO0FBQ2YsTUFBTUMsS0FBSztBQUNYLE1BQU1DLFFBQVE7QUFFUCxNQUFNQztJQUNYOzs7O0dBSUMsR0FDRCxZQUFtQkMsTUFBbUIsRUFBRUMsSUFBWSxDQUFFO1FBQ3BELElBQUksQ0FBQ0MsS0FBSyxHQUFHWCx5REFBVUEsQ0FBQ1ksTUFBTSxDQUFDSCxRQUFRQztJQUN6QztJQUVBOztHQUVDLEdBQ0QsVUFBdUI7UUFDckJWLHlEQUFVQSxDQUFDYyxNQUFNLENBQUMsSUFBSSxDQUFDSCxLQUFLO0lBQzlCO0lBRUE7OztHQUdDLEdBQ0QsbUJBQWtDO1FBQ2hDLE9BQU8sSUFBSSxDQUFDQSxLQUFLLENBQ2RLLE9BQU8sR0FDUEMsZ0JBQWdCLENBQUNoQixNQUNqQmdCLGdCQUFnQixDQUFDZixlQUNqQmdCLEtBQUs7SUFDVjtJQUVBOzs7O0dBSUMsR0FDRCx1QkFBc0M7UUFDcEMsT0FBTyxJQUFJLENBQUNQLEtBQUssQ0FDZEssT0FBTyxHQUNQQyxnQkFBZ0IsQ0FBQ2hCLE1BQ2pCZ0IsZ0JBQWdCLENBQUNkLG1CQUNqQmUsS0FBSztJQUNWO0lBRUE7Ozs7R0FJQyxHQUNELHNCQUE2QkcsQ0FBUyxFQUFVO1FBQzlDLE9BQU8sSUFBSSxDQUFDVixLQUFLLENBQ2RLLE9BQU8sR0FDUEMsZ0JBQWdCLENBQUNiLFVBQ2pCa0IsZUFBZSxDQUFDRCxHQUNoQkosZ0JBQWdCLENBQUNaLFFBQ2pCa0IsWUFBWTtJQUNqQjtJQUVBOzs7OztHQUtDLEdBQ0QsY0FBcUJGLENBQVMsRUFBa0I7UUFDOUMsT0FBT3RCLG1FQUFlQSxDQUFDMEIsWUFBWSxHQUFHQyxLQUFLLENBQ3pDLElBQUksQ0FBQ2YsS0FBSyxDQUNQSyxPQUFPLEdBQ1BDLGdCQUFnQixDQUFDYixVQUNqQmtCLGVBQWUsQ0FBQ0QsR0FDaEJKLGdCQUFnQixDQUFDWCxJQUNqQmlCLFlBQVk7SUFFbkI7SUFFQTs7Ozs7R0FLQyxHQUNELGlCQUF3QkYsQ0FBUyxFQUFVO1FBQ3pDLE9BQU8sSUFBSSxDQUFDVixLQUFLLENBQ2RLLE9BQU8sR0FDUEMsZ0JBQWdCLENBQUNiLFVBQ2pCa0IsZUFBZSxDQUFDRCxHQUNoQkosZ0JBQWdCLENBQUNWLE9BQ2pCZ0IsWUFBWTtJQUNqQjtBQUdGO0FBRUEsMENBQTBDO0FBQ0s7VUFFOUJNOzBCQUNGckIsMEJBQTBCb0IsNkVBQXlCO0FBRWxFLEdBSGlCQywwQkFBQUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvV2ViU0RLL0ZyYW1ld29yay9zcmMvbW9kZWwvY3ViaXNtbW9kZWx1c2VyZGF0YWpzb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgQ3ViaXNtSWRIYW5kbGUgfSBmcm9tICcuLi9pZC9jdWJpc21pZCc7XG5pbXBvcnQgeyBDdWJpc21GcmFtZXdvcmsgfSBmcm9tICcuLi9saXZlMmRjdWJpc21mcmFtZXdvcmsnO1xuaW1wb3J0IHsgQ3ViaXNtSnNvbiB9IGZyb20gJy4uL3V0aWxzL2N1YmlzbWpzb24nO1xuXG5jb25zdCBNZXRhID0gJ01ldGEnO1xuY29uc3QgVXNlckRhdGFDb3VudCA9ICdVc2VyRGF0YUNvdW50JztcbmNvbnN0IFRvdGFsVXNlckRhdGFTaXplID0gJ1RvdGFsVXNlckRhdGFTaXplJztcbmNvbnN0IFVzZXJEYXRhID0gJ1VzZXJEYXRhJztcbmNvbnN0IFRhcmdldCA9ICdUYXJnZXQnO1xuY29uc3QgSWQgPSAnSWQnO1xuY29uc3QgVmFsdWUgPSAnVmFsdWUnO1xuXG5leHBvcnQgY2xhc3MgQ3ViaXNtTW9kZWxVc2VyRGF0YUpzb24ge1xuICAvKipcbiAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAqIEBwYXJhbSBidWZmZXIgICAgdXNlcmRhdGEzLmpzb27jgYzoqq3jgb/ovrzjgb7jgozjgabjgYTjgovjg5Djg4Pjg5XjgqFcbiAgICogQHBhcmFtIHNpemUgICAgICDjg5Djg4Pjg5XjgqHjga7jgrXjgqTjgrpcbiAgICovXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihidWZmZXI6IEFycmF5QnVmZmVyLCBzaXplOiBudW1iZXIpIHtcbiAgICB0aGlzLl9qc29uID0gQ3ViaXNtSnNvbi5jcmVhdGUoYnVmZmVyLCBzaXplKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDjg4fjgrnjg4jjg6njgq/jgr/nm7jlvZPjga7lh6bnkIZcbiAgICovXG4gIHB1YmxpYyByZWxlYXNlKCk6IHZvaWQge1xuICAgIEN1YmlzbUpzb24uZGVsZXRlKHRoaXMuX2pzb24pO1xuICB9XG5cbiAgLyoqXG4gICAqIOODpuODvOOCtuODvOODh+ODvOOCv+WAi+aVsOOBruWPluW+l1xuICAgKiBAcmV0dXJuIOODpuODvOOCtuODvOODh+ODvOOCv+OBruWAi+aVsFxuICAgKi9cbiAgcHVibGljIGdldFVzZXJEYXRhQ291bnQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fanNvblxuICAgICAgLmdldFJvb3QoKVxuICAgICAgLmdldFZhbHVlQnlTdHJpbmcoTWV0YSlcbiAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKFVzZXJEYXRhQ291bnQpXG4gICAgICAudG9JbnQoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDjg6bjg7zjgrbjg7zjg4fjg7zjgr/nt4/mloflrZfliJfmlbDjga7lj5blvpdcbiAgICpcbiAgICogQHJldHVybiDjg6bjg7zjgrbjg7zjg4fjg7zjgr/nt4/mloflrZfliJfmlbBcbiAgICovXG4gIHB1YmxpYyBnZXRUb3RhbFVzZXJEYXRhU2l6ZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9qc29uXG4gICAgICAuZ2V0Um9vdCgpXG4gICAgICAuZ2V0VmFsdWVCeVN0cmluZyhNZXRhKVxuICAgICAgLmdldFZhbHVlQnlTdHJpbmcoVG90YWxVc2VyRGF0YVNpemUpXG4gICAgICAudG9JbnQoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDjg6bjg7zjgrbjg7zjg4fjg7zjgr/jga7jgr/jgqTjg5fjga7lj5blvpdcbiAgICpcbiAgICogQHJldHVybiDjg6bjg7zjgrbjg7zjg4fjg7zjgr/jga7jgr/jgqTjg5dcbiAgICovXG4gIHB1YmxpYyBnZXRVc2VyRGF0YVRhcmdldFR5cGUoaTogbnVtYmVyKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fanNvblxuICAgICAgLmdldFJvb3QoKVxuICAgICAgLmdldFZhbHVlQnlTdHJpbmcoVXNlckRhdGEpXG4gICAgICAuZ2V0VmFsdWVCeUluZGV4KGkpXG4gICAgICAuZ2V0VmFsdWVCeVN0cmluZyhUYXJnZXQpXG4gICAgICAuZ2V0UmF3U3RyaW5nKCk7XG4gIH1cblxuICAvKipcbiAgICog44Om44O844K244O844OH44O844K/44Gu44K/44O844Ky44OD44OISUTjga7lj5blvpdcbiAgICpcbiAgICogQHBhcmFtIGkg44Kk44Oz44OH44OD44Kv44K5XG4gICAqIEByZXR1cm4g44Om44O844K244O844OH44O844K/44K/44O844Ky44OD44OISURcbiAgICovXG4gIHB1YmxpYyBnZXRVc2VyRGF0YUlkKGk6IG51bWJlcik6IEN1YmlzbUlkSGFuZGxlIHtcbiAgICByZXR1cm4gQ3ViaXNtRnJhbWV3b3JrLmdldElkTWFuYWdlcigpLmdldElkKFxuICAgICAgdGhpcy5fanNvblxuICAgICAgICAuZ2V0Um9vdCgpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKFVzZXJEYXRhKVxuICAgICAgICAuZ2V0VmFsdWVCeUluZGV4KGkpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKElkKVxuICAgICAgICAuZ2V0UmF3U3RyaW5nKClcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIOODpuODvOOCtuODvOODh+ODvOOCv+OBruaWh+Wtl+WIl+OBruWPluW+l1xuICAgKlxuICAgKiBAcGFyYW0gaSDjgqTjg7Pjg4fjg4Pjgq/jgrlcbiAgICogQHJldHVybiDjg6bjg7zjgrbjg7zjg4fjg7zjgr9cbiAgICovXG4gIHB1YmxpYyBnZXRVc2VyRGF0YVZhbHVlKGk6IG51bWJlcik6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2pzb25cbiAgICAgIC5nZXRSb290KClcbiAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKFVzZXJEYXRhKVxuICAgICAgLmdldFZhbHVlQnlJbmRleChpKVxuICAgICAgLmdldFZhbHVlQnlTdHJpbmcoVmFsdWUpXG4gICAgICAuZ2V0UmF3U3RyaW5nKCk7XG4gIH1cblxuICBwcml2YXRlIF9qc29uOiBDdWJpc21Kc29uO1xufVxuXG4vLyBOYW1lc3BhY2UgZGVmaW5pdGlvbiBmb3IgY29tcGF0aWJpbGl0eS5cbmltcG9ydCAqIGFzICQgZnJvbSAnLi9jdWJpc21tb2RlbHVzZXJkYXRhanNvbic7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZVxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICBleHBvcnQgY29uc3QgQ3ViaXNtTW9kZWxVc2VyRGF0YUpzb24gPSAkLkN1YmlzbU1vZGVsVXNlckRhdGFKc29uO1xuICBleHBvcnQgdHlwZSBDdWJpc21Nb2RlbFVzZXJEYXRhSnNvbiA9ICQuQ3ViaXNtTW9kZWxVc2VyRGF0YUpzb247XG59XG4iXSwibmFtZXMiOlsiQ3ViaXNtRnJhbWV3b3JrIiwiQ3ViaXNtSnNvbiIsIk1ldGEiLCJVc2VyRGF0YUNvdW50IiwiVG90YWxVc2VyRGF0YVNpemUiLCJVc2VyRGF0YSIsIlRhcmdldCIsIklkIiwiVmFsdWUiLCJDdWJpc21Nb2RlbFVzZXJEYXRhSnNvbiIsImJ1ZmZlciIsInNpemUiLCJfanNvbiIsImNyZWF0ZSIsInJlbGVhc2UiLCJkZWxldGUiLCJnZXRVc2VyRGF0YUNvdW50IiwiZ2V0Um9vdCIsImdldFZhbHVlQnlTdHJpbmciLCJ0b0ludCIsImdldFRvdGFsVXNlckRhdGFTaXplIiwiZ2V0VXNlckRhdGFUYXJnZXRUeXBlIiwiaSIsImdldFZhbHVlQnlJbmRleCIsImdldFJhd1N0cmluZyIsImdldFVzZXJEYXRhSWQiLCJnZXRJZE1hbmFnZXIiLCJnZXRJZCIsImdldFVzZXJEYXRhVmFsdWUiLCIkIiwiTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/model/cubismmodeluserdatajson.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/model/cubismusermodel.ts":
/*!*******************************************************!*\
  !*** ./WebSDK/Framework/src/model/cubismusermodel.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismUserModel: () => (/* binding */ CubismUserModel),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _effect_cubismbreath__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../effect/cubismbreath */ \"(ssr)/./WebSDK/Framework/src/effect/cubismbreath.ts\");\n/* harmony import */ var _effect_cubismeyeblink__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../effect/cubismeyeblink */ \"(ssr)/./WebSDK/Framework/src/effect/cubismeyeblink.ts\");\n/* harmony import */ var _effect_cubismpose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../effect/cubismpose */ \"(ssr)/./WebSDK/Framework/src/effect/cubismpose.ts\");\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _math_cubismmodelmatrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../math/cubismmodelmatrix */ \"(ssr)/./WebSDK/Framework/src/math/cubismmodelmatrix.ts\");\n/* harmony import */ var _math_cubismtargetpoint__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../math/cubismtargetpoint */ \"(ssr)/./WebSDK/Framework/src/math/cubismtargetpoint.ts\");\n/* harmony import */ var _motion_cubismexpressionmotion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../motion/cubismexpressionmotion */ \"(ssr)/./WebSDK/Framework/src/motion/cubismexpressionmotion.ts\");\n/* harmony import */ var _motion_cubismexpressionmotionmanager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../motion/cubismexpressionmotionmanager */ \"(ssr)/./WebSDK/Framework/src/motion/cubismexpressionmotionmanager.ts\");\n/* harmony import */ var _motion_cubismmotion__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../motion/cubismmotion */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotion.ts\");\n/* harmony import */ var _motion_cubismmotionmanager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../motion/cubismmotionmanager */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotionmanager.ts\");\n/* harmony import */ var _physics_cubismphysics__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../physics/cubismphysics */ \"(ssr)/./WebSDK/Framework/src/physics/cubismphysics.ts\");\n/* harmony import */ var _rendering_cubismrenderer_webgl__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../rendering/cubismrenderer_webgl */ \"(ssr)/./WebSDK/Framework/src/rendering/cubismrenderer_webgl.ts\");\n/* harmony import */ var _utils_cubismdebug__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/cubismdebug */ \"(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\");\n/* harmony import */ var _cubismmoc__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./cubismmoc */ \"(ssr)/./WebSDK/Framework/src/model/cubismmoc.ts\");\n/* harmony import */ var _cubismmodeluserdata__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./cubismmodeluserdata */ \"(ssr)/./WebSDK/Framework/src/model/cubismmodeluserdata.ts\");\n/* harmony import */ var _cubismusermodel__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./cubismusermodel */ \"(ssr)/./WebSDK/Framework/src/model/cubismusermodel.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * ユーザーが実際に使用するモデル\n *\n * ユーザーが実際に使用するモデルの基底クラス。これを継承してユーザーが実装する。\n */ class CubismUserModel {\n    /**\n   * 初期化状態の取得\n   *\n   * 初期化されている状態か？\n   *\n   * @return true     初期化されている\n   * @return false    初期化されていない\n   */ isInitialized() {\n        return this._initialized;\n    }\n    /**\n   * 初期化状態の設定\n   *\n   * 初期化状態を設定する。\n   *\n   * @param v 初期化状態\n   */ setInitialized(v) {\n        this._initialized = v;\n    }\n    /**\n   * 更新状態の取得\n   *\n   * 更新されている状態か？\n   *\n   * @return true     更新されている\n   * @return false    更新されていない\n   */ isUpdating() {\n        return this._updating;\n    }\n    /**\n   * 更新状態の設定\n   *\n   * 更新状態を設定する\n   *\n   * @param v 更新状態\n   */ setUpdating(v) {\n        this._updating = v;\n    }\n    /**\n   * マウスドラッグ情報の設定\n   * @param ドラッグしているカーソルのX位置\n   * @param ドラッグしているカーソルのY位置\n   */ setDragging(x, y) {\n        this._dragManager.set(x, y);\n    }\n    /**\n   * 加速度の情報を設定する\n   * @param x X軸方向の加速度\n   * @param y Y軸方向の加速度\n   * @param z Z軸方向の加速度\n   */ setAcceleration(x, y, z) {\n        this._accelerationX = x;\n        this._accelerationY = y;\n        this._accelerationZ = z;\n    }\n    /**\n   * モデル行列を取得する\n   * @return モデル行列\n   */ getModelMatrix() {\n        return this._modelMatrix;\n    }\n    /**\n   * 不透明度の設定\n   * @param a 不透明度\n   */ setOpacity(a) {\n        this._opacity = a;\n    }\n    /**\n   * 不透明度の取得\n   * @return 不透明度\n   */ getOpacity() {\n        return this._opacity;\n    }\n    /**\n   * モデルデータを読み込む\n   *\n   * @param buffer    moc3ファイルが読み込まれているバッファ\n   */ loadModel(buffer, shouldCheckMocConsistency = false, kScale = 1.0) {\n        this._moc = _cubismmoc__WEBPACK_IMPORTED_MODULE_13__.CubismMoc.create(buffer, shouldCheckMocConsistency);\n        if (this._moc == null) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_12__.CubismLogError)('Failed to CubismMoc.create().');\n            return;\n        }\n        this._model = this._moc.createModel();\n        if (this._model == null) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_12__.CubismLogError)('Failed to CreateModel().');\n            return;\n        }\n        this._model.saveParameters();\n        this._modelMatrix = new _math_cubismmodelmatrix__WEBPACK_IMPORTED_MODULE_4__.CubismModelMatrix(this._model.getCanvasWidth(), this._model.getCanvasHeight());\n        this._modelMatrix.scale(kScale, kScale);\n    }\n    /**\n   * モーションデータを読み込む\n   * @param buffer motion3.jsonファイルが読み込まれているバッファ\n   * @param size バッファのサイズ\n   * @param name モーションの名前\n   * @param onFinishedMotionHandler モーション再生終了時に呼び出されるコールバック関数\n   * @return モーションクラス\n   */ loadMotion(buffer, size, name, onFinishedMotionHandler) {\n        if (buffer == null || size == 0) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_12__.CubismLogError)('Failed to loadMotion().');\n            return null;\n        }\n        return _motion_cubismmotion__WEBPACK_IMPORTED_MODULE_8__.CubismMotion.create(buffer, size, onFinishedMotionHandler);\n    }\n    /**\n   * 表情データの読み込み\n   * @param buffer expファイルが読み込まれているバッファ\n   * @param size バッファのサイズ\n   * @param name 表情の名前\n   */ loadExpression(buffer, size, name) {\n        if (buffer == null || size == 0) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_12__.CubismLogError)('Failed to loadExpression().');\n            return null;\n        }\n        return _motion_cubismexpressionmotion__WEBPACK_IMPORTED_MODULE_6__.CubismExpressionMotion.create(buffer, size);\n    }\n    /**\n   * ポーズデータの読み込み\n   * @param buffer pose3.jsonが読み込まれているバッファ\n   * @param size バッファのサイズ\n   */ loadPose(buffer, size) {\n        if (buffer == null || size == 0) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_12__.CubismLogError)('Failed to loadPose().');\n            return;\n        }\n        this._pose = _effect_cubismpose__WEBPACK_IMPORTED_MODULE_2__.CubismPose.create(buffer, size);\n    }\n    /**\n   * モデルに付属するユーザーデータを読み込む\n   * @param buffer userdata3.jsonが読み込まれているバッファ\n   * @param size バッファのサイズ\n   */ loadUserData(buffer, size) {\n        if (buffer == null || size == 0) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_12__.CubismLogError)('Failed to loadUserData().');\n            return;\n        }\n        this._modelUserData = _cubismmodeluserdata__WEBPACK_IMPORTED_MODULE_14__.CubismModelUserData.create(buffer, size);\n    }\n    /**\n   * 物理演算データの読み込み\n   * @param buffer  physics3.jsonが読み込まれているバッファ\n   * @param size    バッファのサイズ\n   */ loadPhysics(buffer, size) {\n        if (buffer == null || size == 0) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_12__.CubismLogError)('Failed to loadPhysics().');\n            return;\n        }\n        this._physics = _physics_cubismphysics__WEBPACK_IMPORTED_MODULE_10__.CubismPhysics.create(buffer, size);\n    }\n    /**\n   * 当たり判定の取得\n   * @param drawableId 検証したいDrawableのID\n   * @param pointX X位置\n   * @param pointY Y位置\n   * @return true ヒットしている\n   * @return false ヒットしていない\n   */ isHit(drawableId, pointX, pointY) {\n        const drawIndex = this._model.getDrawableIndex(drawableId);\n        if (drawIndex < 0) {\n            return false; // 存在しない場合はfalse\n        }\n        const count = this._model.getDrawableVertexCount(drawIndex);\n        const vertices = this._model.getDrawableVertices(drawIndex);\n        let left = vertices[0];\n        let right = vertices[0];\n        let top = vertices[1];\n        let bottom = vertices[1];\n        for(let j = 1; j < count; ++j){\n            const x = vertices[_live2dcubismframework__WEBPACK_IMPORTED_MODULE_3__.Constant.vertexOffset + j * _live2dcubismframework__WEBPACK_IMPORTED_MODULE_3__.Constant.vertexStep];\n            const y = vertices[_live2dcubismframework__WEBPACK_IMPORTED_MODULE_3__.Constant.vertexOffset + j * _live2dcubismframework__WEBPACK_IMPORTED_MODULE_3__.Constant.vertexStep + 1];\n            if (x < left) {\n                left = x; // Min x\n            }\n            if (x > right) {\n                right = x; // Max x\n            }\n            if (y < top) {\n                top = y; // Min y\n            }\n            if (y > bottom) {\n                bottom = y; // Max y\n            }\n        }\n        const tx = this._modelMatrix.invertTransformX(pointX);\n        const ty = this._modelMatrix.invertTransformY(pointY);\n        return left <= tx && tx <= right && top <= ty && ty <= bottom;\n    }\n    /**\n   * モデルの取得\n   * @return モデル\n   */ getModel() {\n        return this._model;\n    }\n    /**\n   * レンダラの取得\n   * @return レンダラ\n   */ getRenderer() {\n        return this._renderer;\n    }\n    /**\n   * レンダラを作成して初期化を実行する\n   * @param maskBufferCount バッファの生成数\n   */ createRenderer(maskBufferCount = 1) {\n        if (this._renderer) {\n            this.deleteRenderer();\n        }\n        this._renderer = new _rendering_cubismrenderer_webgl__WEBPACK_IMPORTED_MODULE_11__.CubismRenderer_WebGL();\n        this._renderer.initialize(this._model, maskBufferCount);\n    }\n    /**\n   * レンダラの解放\n   */ deleteRenderer() {\n        if (this._renderer != null) {\n            this._renderer.release();\n            this._renderer = null;\n        }\n    }\n    /**\n   * イベント発火時の標準処理\n   *\n   * Eventが再生処理時にあった場合の処理をする。\n   * 継承で上書きすることを想定している。\n   * 上書きしない場合はログ出力をする。\n   *\n   * @param eventValue 発火したイベントの文字列データ\n   */ motionEventFired(eventValue) {\n        (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_12__.CubismLogInfo)('{0}', eventValue.s);\n    }\n    /**\n   * イベント用のコールバック\n   *\n   * CubismMotionQueueManagerにイベント用に登録するためのCallback。\n   * CubismUserModelの継承先のEventFiredを呼ぶ。\n   *\n   * @param caller 発火したイベントを管理していたモーションマネージャー、比較用\n   * @param eventValue 発火したイベントの文字列データ\n   * @param customData CubismUserModelを継承したインスタンスを想定\n   */ static cubismDefaultMotionEventCallback(caller, eventValue, customData) {\n        const model = customData;\n        if (model != null) {\n            model.motionEventFired(eventValue);\n        }\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        // 各変数初期化\n        this._moc = null;\n        this._model = null;\n        this._motionManager = null;\n        this._expressionManager = null;\n        this._eyeBlink = null;\n        this._breath = null;\n        this._modelMatrix = null;\n        this._pose = null;\n        this._dragManager = null;\n        this._physics = null;\n        this._modelUserData = null;\n        this._initialized = false;\n        this._updating = false;\n        this._opacity = 1.0;\n        this._lipsync = true;\n        this._lastLipSyncValue = 0.0;\n        this._dragX = 0.0;\n        this._dragY = 0.0;\n        this._accelerationX = 0.0;\n        this._accelerationY = 0.0;\n        this._accelerationZ = 0.0;\n        this._mocConsistency = false;\n        this._debugMode = false;\n        this._renderer = null;\n        // モーションマネージャーを作成\n        this._motionManager = new _motion_cubismmotionmanager__WEBPACK_IMPORTED_MODULE_9__.CubismMotionManager();\n        this._motionManager.setEventCallback(CubismUserModel.cubismDefaultMotionEventCallback, this);\n        // 表情マネージャーを作成\n        this._expressionManager = new _motion_cubismexpressionmotionmanager__WEBPACK_IMPORTED_MODULE_7__.CubismExpressionMotionManager();\n        // ドラッグによるアニメーション\n        this._dragManager = new _math_cubismtargetpoint__WEBPACK_IMPORTED_MODULE_5__.CubismTargetPoint();\n    }\n    /**\n   * デストラクタに相当する処理\n   */ release() {\n        if (this._motionManager != null) {\n            this._motionManager.release();\n            this._motionManager = null;\n        }\n        if (this._expressionManager != null) {\n            this._expressionManager.release();\n            this._expressionManager = null;\n        }\n        if (this._moc != null) {\n            this._moc.deleteModel(this._model);\n            this._moc.release();\n            this._moc = null;\n        }\n        this._modelMatrix = null;\n        _effect_cubismpose__WEBPACK_IMPORTED_MODULE_2__.CubismPose.delete(this._pose);\n        _effect_cubismeyeblink__WEBPACK_IMPORTED_MODULE_1__.CubismEyeBlink.delete(this._eyeBlink);\n        _effect_cubismbreath__WEBPACK_IMPORTED_MODULE_0__.CubismBreath.delete(this._breath);\n        this._dragManager = null;\n        _physics_cubismphysics__WEBPACK_IMPORTED_MODULE_10__.CubismPhysics.delete(this._physics);\n        _cubismmodeluserdata__WEBPACK_IMPORTED_MODULE_14__.CubismModelUserData.delete(this._modelUserData);\n        this.deleteRenderer();\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismUserModel = _cubismusermodel__WEBPACK_IMPORTED_MODULE_15__.CubismUserModel;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvRnJhbWV3b3JrL3NyYy9tb2RlbC9jdWJpc211c2VybW9kZWwudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7O0NBS0MsR0FFcUQ7QUFDSTtBQUNSO0FBRUU7QUFDVTtBQUNBO0FBRVk7QUFDYztBQUNsQztBQUNjO0FBRVg7QUFDZ0I7QUFFSjtBQUM3QjtBQUVvQjtBQUU1RDs7OztDQUlDLEdBQ00sTUFBTWdCO0lBQ1g7Ozs7Ozs7R0FPQyxHQUNELGdCQUFnQztRQUM5QixPQUFPLElBQUksQ0FBQ0UsWUFBWTtJQUMxQjtJQUVBOzs7Ozs7R0FNQyxHQUNELGVBQXNCRSxDQUFVLEVBQVE7UUFDdEMsSUFBSSxDQUFDRixZQUFZLEdBQUdFO0lBQ3RCO0lBRUE7Ozs7Ozs7R0FPQyxHQUNELGFBQTZCO1FBQzNCLE9BQU8sSUFBSSxDQUFDRSxTQUFTO0lBQ3ZCO0lBRUE7Ozs7OztHQU1DLEdBQ0QsWUFBbUJGLENBQVUsRUFBUTtRQUNuQyxJQUFJLENBQUNFLFNBQVMsR0FBR0Y7SUFDbkI7SUFFQTs7OztHQUlDLEdBQ0QsWUFBbUJLLENBQVMsRUFBRUMsQ0FBUyxFQUFRO1FBQzdDLElBQUksQ0FBQ0MsWUFBWSxDQUFDQyxHQUFHLENBQUNILEdBQUdDO0lBQzNCO0lBRUE7Ozs7O0dBS0MsR0FDRCxnQkFBdUJELENBQVMsRUFBRUMsQ0FBUyxFQUFFSSxDQUFTLEVBQVE7UUFDNUQsSUFBSSxDQUFDQyxjQUFjLEdBQUdOO1FBQ3RCLElBQUksQ0FBQ08sY0FBYyxHQUFHTjtRQUN0QixJQUFJLENBQUNPLGNBQWMsR0FBR0g7SUFDeEI7SUFFQTs7O0dBR0MsR0FDRCxpQkFBMkM7UUFDekMsT0FBTyxJQUFJLENBQUNLLFlBQVk7SUFDMUI7SUFFQTs7O0dBR0MsR0FDRCxXQUFrQkUsQ0FBUyxFQUFRO1FBQ2pDLElBQUksQ0FBQ0MsUUFBUSxHQUFHRDtJQUNsQjtJQUVBOzs7R0FHQyxHQUNELGFBQTRCO1FBQzFCLE9BQU8sSUFBSSxDQUFDQyxRQUFRO0lBQ3RCO0lBRUE7Ozs7R0FJQyxHQUNELFVBQWlCRyxNQUFtQixFQUFFQyw0QkFBNEIsS0FBSyxFQUFFQyxTQUFpQixHQUFHLEVBQUU7UUFDN0YsSUFBSSxDQUFDQyxJQUFJLEdBQUc5QixrREFBU0EsQ0FBQytCLE1BQU0sQ0FBQ0osUUFBUUM7UUFFckMsSUFBSSxJQUFJLENBQUNFLElBQUksSUFBSSxNQUFNO1lBQ3JCaEMsbUVBQWNBLENBQUM7WUFDZjtRQUNGO1FBRUEsSUFBSSxDQUFDa0MsTUFBTSxHQUFHLElBQUksQ0FBQ0YsSUFBSSxDQUFDRyxXQUFXO1FBRW5DLElBQUksSUFBSSxDQUFDRCxNQUFNLElBQUksTUFBTTtZQUN2QmxDLG1FQUFjQSxDQUFDO1lBQ2Y7UUFDRjtRQUVBLElBQUksQ0FBQ2tDLE1BQU0sQ0FBQ0UsY0FBYztRQUMxQixJQUFJLENBQUNiLFlBQVksR0FBRyxJQUFJL0Isc0VBQWlCQSxDQUN2QyxJQUFJLENBQUMwQyxNQUFNLENBQUNHLGNBQWMsSUFDMUIsSUFBSSxDQUFDSCxNQUFNLENBQUNJLGVBQWU7UUFFN0IsSUFBSSxDQUFDZixZQUFZLENBQUNnQixLQUFLLENBQUNSLFFBQVFBO0lBQ2xDO0lBRUE7Ozs7Ozs7R0FPQyxHQUNELFdBQ0VGLE1BQW1CLEVBQ25CWSxJQUFZLEVBQ1pDLElBQVksRUFDWkMsdUJBQWdELEVBQ2xDO1FBQ2QsSUFBSWQsVUFBVSxRQUFRWSxRQUFRLEdBQUc7WUFDL0J6QyxtRUFBY0EsQ0FBQztZQUNmLE9BQU87UUFDVDtRQUNBLE9BQU9KLDhEQUFZQSxDQUFDcUMsTUFBTSxDQUFDSixRQUFRWSxNQUFNRTtJQUMzQztJQUVBOzs7OztHQUtDLEdBQ0QsZUFDRWQsTUFBbUIsRUFDbkJZLElBQVksRUFDWkMsSUFBWSxFQUNHO1FBQ2YsSUFBSWIsVUFBVSxRQUFRWSxRQUFRLEdBQUc7WUFDL0J6QyxtRUFBY0EsQ0FBQztZQUNmLE9BQU87UUFDVDtRQUNBLE9BQU9OLGtGQUFzQkEsQ0FBQ3VDLE1BQU0sQ0FBQ0osUUFBUVk7SUFDL0M7SUFFQTs7OztHQUlDLEdBQ0QsU0FBZ0JaLE1BQW1CLEVBQUVZLElBQVksRUFBUTtRQUN2RCxJQUFJWixVQUFVLFFBQVFZLFFBQVEsR0FBRztZQUMvQnpDLG1FQUFjQSxDQUFDO1lBQ2Y7UUFDRjtRQUNBLElBQUksQ0FBQzhDLEtBQUssR0FBR3hELDBEQUFVQSxDQUFDMkMsTUFBTSxDQUFDSixRQUFRWTtJQUN6QztJQUVBOzs7O0dBSUMsR0FDRCxhQUFvQlosTUFBbUIsRUFBRVksSUFBWSxFQUFRO1FBQzNELElBQUlaLFVBQVUsUUFBUVksUUFBUSxHQUFHO1lBQy9CekMsbUVBQWNBLENBQUM7WUFDZjtRQUNGO1FBQ0EsSUFBSSxDQUFDZ0QsY0FBYyxHQUFHN0Msc0VBQW1CQSxDQUFDOEIsTUFBTSxDQUFDSixRQUFRWTtJQUMzRDtJQUVBOzs7O0dBSUMsR0FDRCxZQUFtQlosTUFBbUIsRUFBRVksSUFBWSxFQUFRO1FBQzFELElBQUlaLFVBQVUsUUFBUVksUUFBUSxHQUFHO1lBQy9CekMsbUVBQWNBLENBQUM7WUFDZjtRQUNGO1FBQ0EsSUFBSSxDQUFDa0QsUUFBUSxHQUFHcEQsa0VBQWFBLENBQUNtQyxNQUFNLENBQUNKLFFBQVFZO0lBQy9DO0lBRUE7Ozs7Ozs7R0FPQyxHQUNELE1BQ0VXLFVBQTBCLEVBQzFCQyxNQUFjLEVBQ2RDLE1BQWMsRUFDTDtRQUNULE1BQU1DLFlBQW9CLElBQUksQ0FBQ3JCLE1BQU0sQ0FBQ3NCLGdCQUFnQixDQUFDSjtRQUV2RCxJQUFJRyxZQUFZLEdBQUc7WUFDakIsT0FBTyxPQUFPLGdCQUFnQjtRQUNoQztRQUVBLE1BQU1FLFFBQWdCLElBQUksQ0FBQ3ZCLE1BQU0sQ0FBQ3dCLHNCQUFzQixDQUFDSDtRQUN6RCxNQUFNSSxXQUF5QixJQUFJLENBQUN6QixNQUFNLENBQUMwQixtQkFBbUIsQ0FBQ0w7UUFFL0QsSUFBSU0sT0FBZUYsUUFBUSxDQUFDLEVBQUU7UUFDOUIsSUFBSUcsUUFBZ0JILFFBQVEsQ0FBQyxFQUFFO1FBQy9CLElBQUlJLE1BQWNKLFFBQVEsQ0FBQyxFQUFFO1FBQzdCLElBQUlLLFNBQWlCTCxRQUFRLENBQUMsRUFBRTtRQUVoQyxJQUFLLElBQUlNLElBQUksR0FBR0EsSUFBSVIsT0FBTyxFQUFFUSxFQUFHO1lBQzlCLE1BQU1wRCxJQUFJOEMsUUFBUSxDQUFDcEUsNERBQVFBLENBQUMyRSxZQUFZLEdBQUdELElBQUkxRSw0REFBUUEsQ0FBQzRFLFVBQVUsQ0FBQztZQUNuRSxNQUFNckQsSUFBSTZDLFFBQVEsQ0FBQ3BFLDREQUFRQSxDQUFDMkUsWUFBWSxHQUFHRCxJQUFJMUUsNERBQVFBLENBQUM0RSxVQUFVLEdBQUcsRUFBRTtZQUV2RSxJQUFJdEQsSUFBSWdELE1BQU07Z0JBQ1pBLE9BQU9oRCxHQUFHLFFBQVE7WUFDcEI7WUFFQSxJQUFJQSxJQUFJaUQsT0FBTztnQkFDYkEsUUFBUWpELEdBQUcsUUFBUTtZQUNyQjtZQUVBLElBQUlDLElBQUlpRCxLQUFLO2dCQUNYQSxNQUFNakQsR0FBRyxRQUFRO1lBQ25CO1lBRUEsSUFBSUEsSUFBSWtELFFBQVE7Z0JBQ2RBLFNBQVNsRCxHQUFHLFFBQVE7WUFDdEI7UUFDRjtRQUVBLE1BQU1zRCxLQUFhLElBQUksQ0FBQzdDLFlBQVksQ0FBQzhDLGdCQUFnQixDQUFDaEI7UUFDdEQsTUFBTWlCLEtBQWEsSUFBSSxDQUFDL0MsWUFBWSxDQUFDZ0QsZ0JBQWdCLENBQUNqQjtRQUV0RCxPQUFPTyxRQUFRTyxNQUFNQSxNQUFNTixTQUFTQyxPQUFPTyxNQUFNQSxNQUFNTjtJQUN6RDtJQUVBOzs7R0FHQyxHQUNELFdBQStCO1FBQzdCLE9BQU8sSUFBSSxDQUFDOUIsTUFBTTtJQUNwQjtJQUVBOzs7R0FHQyxHQUNELGNBQTJDO1FBQ3pDLE9BQU8sSUFBSSxDQUFDd0MsU0FBUztJQUN2QjtJQUVBOzs7R0FHQyxHQUNELGVBQXNCRSxrQkFBa0IsQ0FBQyxFQUFRO1FBQy9DLElBQUksSUFBSSxDQUFDRixTQUFTLEVBQUU7WUFDbEIsSUFBSSxDQUFDRyxjQUFjO1FBQ3JCO1FBRUEsSUFBSSxDQUFDSCxTQUFTLEdBQUcsSUFBSTNFLGtGQUFvQkE7UUFDekMsSUFBSSxDQUFDMkUsU0FBUyxDQUFDSSxVQUFVLENBQUMsSUFBSSxDQUFDNUMsTUFBTSxFQUFFMEM7SUFDekM7SUFFQTs7R0FFQyxHQUNELGlCQUE4QjtRQUM1QixJQUFJLElBQUksQ0FBQ0YsU0FBUyxJQUFJLE1BQU07WUFDMUIsSUFBSSxDQUFDQSxTQUFTLENBQUNLLE9BQU87WUFDdEIsSUFBSSxDQUFDTCxTQUFTLEdBQUc7UUFDbkI7SUFDRjtJQUVBOzs7Ozs7OztHQVFDLEdBQ0QsaUJBQXdCTyxVQUFxQixFQUFRO1FBQ25EaEYsa0VBQWFBLENBQUMsT0FBT2dGLFdBQVdDLENBQUM7SUFDbkM7SUFFQTs7Ozs7Ozs7O0dBU0MsR0FDRCxPQUFjQyxpQ0FDWkMsTUFBZ0MsRUFDaENILFVBQXFCLEVBQ3JCSSxVQUEyQixFQUNyQjtRQUNOLE1BQU1DLFFBQXlCRDtRQUUvQixJQUFJQyxTQUFTLE1BQU07WUFDakJBLE1BQU1OLGdCQUFnQixDQUFDQztRQUN6QjtJQUNGO0lBRUE7O0dBRUMsR0FDRCxhQUFxQjtRQUNuQixTQUFTO1FBQ1QsSUFBSSxDQUFDakQsSUFBSSxHQUFHO1FBQ1osSUFBSSxDQUFDRSxNQUFNLEdBQUc7UUFDZCxJQUFJLENBQUNxRCxjQUFjLEdBQUc7UUFDdEIsSUFBSSxDQUFDQyxrQkFBa0IsR0FBRztRQUMxQixJQUFJLENBQUNDLFNBQVMsR0FBRztRQUNqQixJQUFJLENBQUNDLE9BQU8sR0FBRztRQUNmLElBQUksQ0FBQ25FLFlBQVksR0FBRztRQUNwQixJQUFJLENBQUN1QixLQUFLLEdBQUc7UUFDYixJQUFJLENBQUMvQixZQUFZLEdBQUc7UUFDcEIsSUFBSSxDQUFDbUMsUUFBUSxHQUFHO1FBQ2hCLElBQUksQ0FBQ0YsY0FBYyxHQUFHO1FBQ3RCLElBQUksQ0FBQzFDLFlBQVksR0FBRztRQUNwQixJQUFJLENBQUNJLFNBQVMsR0FBRztRQUNqQixJQUFJLENBQUNnQixRQUFRLEdBQUc7UUFDaEIsSUFBSSxDQUFDaUUsUUFBUSxHQUFHO1FBQ2hCLElBQUksQ0FBQ0MsaUJBQWlCLEdBQUc7UUFDekIsSUFBSSxDQUFDQyxNQUFNLEdBQUc7UUFDZCxJQUFJLENBQUNDLE1BQU0sR0FBRztRQUNkLElBQUksQ0FBQzNFLGNBQWMsR0FBRztRQUN0QixJQUFJLENBQUNDLGNBQWMsR0FBRztRQUN0QixJQUFJLENBQUNDLGNBQWMsR0FBRztRQUN0QixJQUFJLENBQUMwRSxlQUFlLEdBQUc7UUFDdkIsSUFBSSxDQUFDQyxVQUFVLEdBQUc7UUFDbEIsSUFBSSxDQUFDdEIsU0FBUyxHQUFHO1FBRWpCLGlCQUFpQjtRQUNqQixJQUFJLENBQUNhLGNBQWMsR0FBRyxJQUFJMUYsNEVBQW1CQTtRQUM3QyxJQUFJLENBQUMwRixjQUFjLENBQUNVLGdCQUFnQixDQUNsQzdGLGdCQUFnQitFLGdDQUFnQyxFQUNoRCxJQUFJO1FBR04sY0FBYztRQUNkLElBQUksQ0FBQ0ssa0JBQWtCLEdBQUcsSUFBSTdGLGdHQUE2QkE7UUFFM0QsaUJBQWlCO1FBQ2pCLElBQUksQ0FBQ29CLFlBQVksR0FBRyxJQUFJdEIsc0VBQWlCQTtJQUMzQztJQUVBOztHQUVDLEdBQ0QsVUFBaUI7UUFDZixJQUFJLElBQUksQ0FBQzhGLGNBQWMsSUFBSSxNQUFNO1lBQy9CLElBQUksQ0FBQ0EsY0FBYyxDQUFDUixPQUFPO1lBQzNCLElBQUksQ0FBQ1EsY0FBYyxHQUFHO1FBQ3hCO1FBRUEsSUFBSSxJQUFJLENBQUNDLGtCQUFrQixJQUFJLE1BQU07WUFDbkMsSUFBSSxDQUFDQSxrQkFBa0IsQ0FBQ1QsT0FBTztZQUMvQixJQUFJLENBQUNTLGtCQUFrQixHQUFHO1FBQzVCO1FBRUEsSUFBSSxJQUFJLENBQUN4RCxJQUFJLElBQUksTUFBTTtZQUNyQixJQUFJLENBQUNBLElBQUksQ0FBQ2tFLFdBQVcsQ0FBQyxJQUFJLENBQUNoRSxNQUFNO1lBQ2pDLElBQUksQ0FBQ0YsSUFBSSxDQUFDK0MsT0FBTztZQUNqQixJQUFJLENBQUMvQyxJQUFJLEdBQUc7UUFDZDtRQUVBLElBQUksQ0FBQ1QsWUFBWSxHQUFHO1FBRXBCakMsMERBQVVBLENBQUM2RyxNQUFNLENBQUMsSUFBSSxDQUFDckQsS0FBSztRQUM1QnpELGtFQUFjQSxDQUFDOEcsTUFBTSxDQUFDLElBQUksQ0FBQ1YsU0FBUztRQUNwQ3JHLDhEQUFZQSxDQUFDK0csTUFBTSxDQUFDLElBQUksQ0FBQ1QsT0FBTztRQUVoQyxJQUFJLENBQUMzRSxZQUFZLEdBQUc7UUFFcEJqQixrRUFBYUEsQ0FBQ3FHLE1BQU0sQ0FBQyxJQUFJLENBQUNqRCxRQUFRO1FBQ2xDL0Msc0VBQW1CQSxDQUFDZ0csTUFBTSxDQUFDLElBQUksQ0FBQ25ELGNBQWM7UUFFOUMsSUFBSSxDQUFDNkIsY0FBYztJQUNyQjtBQTZCRjtBQUVBLDBDQUEwQztBQUNIO1VBRXRCd0I7MEJBQ0ZqRyxrQkFBa0JnRyw4REFBaUI7QUFFbEQsR0FIaUJDLDBCQUFBQSIsInNvdXJjZXMiOlsiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9XZWJTREsvRnJhbWV3b3JrL3NyYy9tb2RlbC9jdWJpc211c2VybW9kZWwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgQ3ViaXNtQnJlYXRoIH0gZnJvbSAnLi4vZWZmZWN0L2N1YmlzbWJyZWF0aCc7XG5pbXBvcnQgeyBDdWJpc21FeWVCbGluayB9IGZyb20gJy4uL2VmZmVjdC9jdWJpc21leWVibGluayc7XG5pbXBvcnQgeyBDdWJpc21Qb3NlIH0gZnJvbSAnLi4vZWZmZWN0L2N1YmlzbXBvc2UnO1xuaW1wb3J0IHsgQ3ViaXNtSWRIYW5kbGUgfSBmcm9tICcuLi9pZC9jdWJpc21pZCc7XG5pbXBvcnQgeyBDb25zdGFudCB9IGZyb20gJy4uL2xpdmUyZGN1YmlzbWZyYW1ld29yayc7XG5pbXBvcnQgeyBDdWJpc21Nb2RlbE1hdHJpeCB9IGZyb20gJy4uL21hdGgvY3ViaXNtbW9kZWxtYXRyaXgnO1xuaW1wb3J0IHsgQ3ViaXNtVGFyZ2V0UG9pbnQgfSBmcm9tICcuLi9tYXRoL2N1YmlzbXRhcmdldHBvaW50JztcbmltcG9ydCB7IEFDdWJpc21Nb3Rpb24sIEZpbmlzaGVkTW90aW9uQ2FsbGJhY2sgfSBmcm9tICcuLi9tb3Rpb24vYWN1YmlzbW1vdGlvbic7XG5pbXBvcnQgeyBDdWJpc21FeHByZXNzaW9uTW90aW9uIH0gZnJvbSAnLi4vbW90aW9uL2N1YmlzbWV4cHJlc3Npb25tb3Rpb24nO1xuaW1wb3J0IHsgQ3ViaXNtRXhwcmVzc2lvbk1vdGlvbk1hbmFnZXIgfSBmcm9tICcuLi9tb3Rpb24vY3ViaXNtZXhwcmVzc2lvbm1vdGlvbm1hbmFnZXInO1xuaW1wb3J0IHsgQ3ViaXNtTW90aW9uIH0gZnJvbSAnLi4vbW90aW9uL2N1YmlzbW1vdGlvbic7XG5pbXBvcnQgeyBDdWJpc21Nb3Rpb25NYW5hZ2VyIH0gZnJvbSAnLi4vbW90aW9uL2N1YmlzbW1vdGlvbm1hbmFnZXInO1xuaW1wb3J0IHsgQ3ViaXNtTW90aW9uUXVldWVNYW5hZ2VyIH0gZnJvbSAnLi4vbW90aW9uL2N1YmlzbW1vdGlvbnF1ZXVlbWFuYWdlcic7XG5pbXBvcnQgeyBDdWJpc21QaHlzaWNzIH0gZnJvbSAnLi4vcGh5c2ljcy9jdWJpc21waHlzaWNzJztcbmltcG9ydCB7IEN1YmlzbVJlbmRlcmVyX1dlYkdMIH0gZnJvbSAnLi4vcmVuZGVyaW5nL2N1YmlzbXJlbmRlcmVyX3dlYmdsJztcbmltcG9ydCB7IGNzbVN0cmluZyB9IGZyb20gJy4uL3R5cGUvY3Ntc3RyaW5nJztcbmltcG9ydCB7IEN1YmlzbUxvZ0Vycm9yLCBDdWJpc21Mb2dJbmZvIH0gZnJvbSAnLi4vdXRpbHMvY3ViaXNtZGVidWcnO1xuaW1wb3J0IHsgQ3ViaXNtTW9jIH0gZnJvbSAnLi9jdWJpc21tb2MnO1xuaW1wb3J0IHsgQ3ViaXNtTW9kZWwgfSBmcm9tICcuL2N1YmlzbW1vZGVsJztcbmltcG9ydCB7IEN1YmlzbU1vZGVsVXNlckRhdGEgfSBmcm9tICcuL2N1YmlzbW1vZGVsdXNlcmRhdGEnO1xuXG4vKipcbiAqIOODpuODvOOCtuODvOOBjOWun+mam+OBq+S9v+eUqOOBmeOCi+ODouODh+ODq1xuICpcbiAqIOODpuODvOOCtuODvOOBjOWun+mam+OBq+S9v+eUqOOBmeOCi+ODouODh+ODq+OBruWfuuW6leOCr+ODqeOCueOAguOBk+OCjOOCkue2meaJv+OBl+OBpuODpuODvOOCtuODvOOBjOWun+ijheOBmeOCi+OAglxuICovXG5leHBvcnQgY2xhc3MgQ3ViaXNtVXNlck1vZGVsIHtcbiAgLyoqXG4gICAqIOWIneacn+WMlueKtuaFi+OBruWPluW+l1xuICAgKlxuICAgKiDliJ3mnJ/ljJbjgZXjgozjgabjgYTjgovnirbmhYvjgYvvvJ9cbiAgICpcbiAgICogQHJldHVybiB0cnVlICAgICDliJ3mnJ/ljJbjgZXjgozjgabjgYTjgotcbiAgICogQHJldHVybiBmYWxzZSAgICDliJ3mnJ/ljJbjgZXjgozjgabjgYTjgarjgYRcbiAgICovXG4gIHB1YmxpYyBpc0luaXRpYWxpemVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9pbml0aWFsaXplZDtcbiAgfVxuXG4gIC8qKlxuICAgKiDliJ3mnJ/ljJbnirbmhYvjga7oqK3lrppcbiAgICpcbiAgICog5Yid5pyf5YyW54q25oWL44KS6Kit5a6a44GZ44KL44CCXG4gICAqXG4gICAqIEBwYXJhbSB2IOWIneacn+WMlueKtuaFi1xuICAgKi9cbiAgcHVibGljIHNldEluaXRpYWxpemVkKHY6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICB0aGlzLl9pbml0aWFsaXplZCA9IHY7XG4gIH1cblxuICAvKipcbiAgICog5pu05paw54q25oWL44Gu5Y+W5b6XXG4gICAqXG4gICAqIOabtOaWsOOBleOCjOOBpuOBhOOCi+eKtuaFi+OBi++8n1xuICAgKlxuICAgKiBAcmV0dXJuIHRydWUgICAgIOabtOaWsOOBleOCjOOBpuOBhOOCi1xuICAgKiBAcmV0dXJuIGZhbHNlICAgIOabtOaWsOOBleOCjOOBpuOBhOOBquOBhFxuICAgKi9cbiAgcHVibGljIGlzVXBkYXRpbmcoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX3VwZGF0aW5nO1xuICB9XG5cbiAgLyoqXG4gICAqIOabtOaWsOeKtuaFi+OBruioreWumlxuICAgKlxuICAgKiDmm7TmlrDnirbmhYvjgpLoqK3lrprjgZnjgotcbiAgICpcbiAgICogQHBhcmFtIHYg5pu05paw54q25oWLXG4gICAqL1xuICBwdWJsaWMgc2V0VXBkYXRpbmcodjogYm9vbGVhbik6IHZvaWQge1xuICAgIHRoaXMuX3VwZGF0aW5nID0gdjtcbiAgfVxuXG4gIC8qKlxuICAgKiDjg57jgqbjgrnjg4njg6njg4PjgrDmg4XloLHjga7oqK3lrppcbiAgICogQHBhcmFtIOODieODqeODg+OCsOOBl+OBpuOBhOOCi+OCq+ODvOOCveODq+OBrljkvY3nva5cbiAgICogQHBhcmFtIOODieODqeODg+OCsOOBl+OBpuOBhOOCi+OCq+ODvOOCveODq+OBrlnkvY3nva5cbiAgICovXG4gIHB1YmxpYyBzZXREcmFnZ2luZyh4OiBudW1iZXIsIHk6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuX2RyYWdNYW5hZ2VyLnNldCh4LCB5KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDliqDpgJ/luqbjga7mg4XloLHjgpLoqK3lrprjgZnjgotcbiAgICogQHBhcmFtIHggWOi7uOaWueWQkeOBruWKoOmAn+W6plxuICAgKiBAcGFyYW0geSBZ6Lu45pa55ZCR44Gu5Yqg6YCf5bqmXG4gICAqIEBwYXJhbSB6IFrou7jmlrnlkJHjga7liqDpgJ/luqZcbiAgICovXG4gIHB1YmxpYyBzZXRBY2NlbGVyYXRpb24oeDogbnVtYmVyLCB5OiBudW1iZXIsIHo6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuX2FjY2VsZXJhdGlvblggPSB4O1xuICAgIHRoaXMuX2FjY2VsZXJhdGlvblkgPSB5O1xuICAgIHRoaXMuX2FjY2VsZXJhdGlvblogPSB6O1xuICB9XG5cbiAgLyoqXG4gICAqIOODouODh+ODq+ihjOWIl+OCkuWPluW+l+OBmeOCi1xuICAgKiBAcmV0dXJuIOODouODh+ODq+ihjOWIl1xuICAgKi9cbiAgcHVibGljIGdldE1vZGVsTWF0cml4KCk6IEN1YmlzbU1vZGVsTWF0cml4IHtcbiAgICByZXR1cm4gdGhpcy5fbW9kZWxNYXRyaXg7XG4gIH1cblxuICAvKipcbiAgICog5LiN6YCP5piO5bqm44Gu6Kit5a6aXG4gICAqIEBwYXJhbSBhIOS4jemAj+aYjuW6plxuICAgKi9cbiAgcHVibGljIHNldE9wYWNpdHkoYTogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5fb3BhY2l0eSA9IGE7XG4gIH1cblxuICAvKipcbiAgICog5LiN6YCP5piO5bqm44Gu5Y+W5b6XXG4gICAqIEByZXR1cm4g5LiN6YCP5piO5bqmXG4gICAqL1xuICBwdWJsaWMgZ2V0T3BhY2l0eSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9vcGFjaXR5O1xuICB9XG5cbiAgLyoqXG4gICAqIOODouODh+ODq+ODh+ODvOOCv+OCkuiqreOBv+i+vOOCgFxuICAgKlxuICAgKiBAcGFyYW0gYnVmZmVyICAgIG1vYzPjg5XjgqHjgqTjg6vjgYzoqq3jgb/ovrzjgb7jgozjgabjgYTjgovjg5Djg4Pjg5XjgqFcbiAgICovXG4gIHB1YmxpYyBsb2FkTW9kZWwoYnVmZmVyOiBBcnJheUJ1ZmZlciwgc2hvdWxkQ2hlY2tNb2NDb25zaXN0ZW5jeSA9IGZhbHNlLCBrU2NhbGU6IG51bWJlciA9IDEuMCkge1xuICAgIHRoaXMuX21vYyA9IEN1YmlzbU1vYy5jcmVhdGUoYnVmZmVyLCBzaG91bGRDaGVja01vY0NvbnNpc3RlbmN5KTtcblxuICAgIGlmICh0aGlzLl9tb2MgPT0gbnVsbCkge1xuICAgICAgQ3ViaXNtTG9nRXJyb3IoJ0ZhaWxlZCB0byBDdWJpc21Nb2MuY3JlYXRlKCkuJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5fbW9kZWwgPSB0aGlzLl9tb2MuY3JlYXRlTW9kZWwoKTtcblxuICAgIGlmICh0aGlzLl9tb2RlbCA9PSBudWxsKSB7XG4gICAgICBDdWJpc21Mb2dFcnJvcignRmFpbGVkIHRvIENyZWF0ZU1vZGVsKCkuJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5fbW9kZWwuc2F2ZVBhcmFtZXRlcnMoKTtcbiAgICB0aGlzLl9tb2RlbE1hdHJpeCA9IG5ldyBDdWJpc21Nb2RlbE1hdHJpeChcbiAgICAgIHRoaXMuX21vZGVsLmdldENhbnZhc1dpZHRoKCksXG4gICAgICB0aGlzLl9tb2RlbC5nZXRDYW52YXNIZWlnaHQoKVxuICAgICk7XG4gICAgdGhpcy5fbW9kZWxNYXRyaXguc2NhbGUoa1NjYWxlLCBrU2NhbGUpO1xuICB9XG5cbiAgLyoqXG4gICAqIOODouODvOOCt+ODp+ODs+ODh+ODvOOCv+OCkuiqreOBv+i+vOOCgFxuICAgKiBAcGFyYW0gYnVmZmVyIG1vdGlvbjMuanNvbuODleOCoeOCpOODq+OBjOiqreOBv+i+vOOBvuOCjOOBpuOBhOOCi+ODkOODg+ODleOCoVxuICAgKiBAcGFyYW0gc2l6ZSDjg5Djg4Pjg5XjgqHjga7jgrXjgqTjgrpcbiAgICogQHBhcmFtIG5hbWUg44Oi44O844K344On44Oz44Gu5ZCN5YmNXG4gICAqIEBwYXJhbSBvbkZpbmlzaGVkTW90aW9uSGFuZGxlciDjg6Ljg7zjgrfjg6fjg7Plho3nlJ/ntYLkuobmmYLjgavlkbzjgbPlh7rjgZXjgozjgovjgrPjg7zjg6vjg5Djg4Pjgq/plqLmlbBcbiAgICogQHJldHVybiDjg6Ljg7zjgrfjg6fjg7Pjgq/jg6njgrlcbiAgICovXG4gIHB1YmxpYyBsb2FkTW90aW9uKFxuICAgIGJ1ZmZlcjogQXJyYXlCdWZmZXIsXG4gICAgc2l6ZTogbnVtYmVyLFxuICAgIG5hbWU6IHN0cmluZyxcbiAgICBvbkZpbmlzaGVkTW90aW9uSGFuZGxlcj86IEZpbmlzaGVkTW90aW9uQ2FsbGJhY2tcbiAgKTogQ3ViaXNtTW90aW9uIHtcbiAgICBpZiAoYnVmZmVyID09IG51bGwgfHwgc2l6ZSA9PSAwKSB7XG4gICAgICBDdWJpc21Mb2dFcnJvcignRmFpbGVkIHRvIGxvYWRNb3Rpb24oKS4nKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gQ3ViaXNtTW90aW9uLmNyZWF0ZShidWZmZXIsIHNpemUsIG9uRmluaXNoZWRNb3Rpb25IYW5kbGVyKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDooajmg4Xjg4fjg7zjgr/jga7oqq3jgb/ovrzjgb9cbiAgICogQHBhcmFtIGJ1ZmZlciBleHDjg5XjgqHjgqTjg6vjgYzoqq3jgb/ovrzjgb7jgozjgabjgYTjgovjg5Djg4Pjg5XjgqFcbiAgICogQHBhcmFtIHNpemUg44OQ44OD44OV44Kh44Gu44K144Kk44K6XG4gICAqIEBwYXJhbSBuYW1lIOihqOaDheOBruWQjeWJjVxuICAgKi9cbiAgcHVibGljIGxvYWRFeHByZXNzaW9uKFxuICAgIGJ1ZmZlcjogQXJyYXlCdWZmZXIsXG4gICAgc2l6ZTogbnVtYmVyLFxuICAgIG5hbWU6IHN0cmluZ1xuICApOiBBQ3ViaXNtTW90aW9uIHtcbiAgICBpZiAoYnVmZmVyID09IG51bGwgfHwgc2l6ZSA9PSAwKSB7XG4gICAgICBDdWJpc21Mb2dFcnJvcignRmFpbGVkIHRvIGxvYWRFeHByZXNzaW9uKCkuJyk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIEN1YmlzbUV4cHJlc3Npb25Nb3Rpb24uY3JlYXRlKGJ1ZmZlciwgc2l6ZSk7XG4gIH1cblxuICAvKipcbiAgICog44Od44O844K644OH44O844K/44Gu6Kqt44G/6L6844G/XG4gICAqIEBwYXJhbSBidWZmZXIgcG9zZTMuanNvbuOBjOiqreOBv+i+vOOBvuOCjOOBpuOBhOOCi+ODkOODg+ODleOCoVxuICAgKiBAcGFyYW0gc2l6ZSDjg5Djg4Pjg5XjgqHjga7jgrXjgqTjgrpcbiAgICovXG4gIHB1YmxpYyBsb2FkUG9zZShidWZmZXI6IEFycmF5QnVmZmVyLCBzaXplOiBudW1iZXIpOiB2b2lkIHtcbiAgICBpZiAoYnVmZmVyID09IG51bGwgfHwgc2l6ZSA9PSAwKSB7XG4gICAgICBDdWJpc21Mb2dFcnJvcignRmFpbGVkIHRvIGxvYWRQb3NlKCkuJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuX3Bvc2UgPSBDdWJpc21Qb3NlLmNyZWF0ZShidWZmZXIsIHNpemUpO1xuICB9XG5cbiAgLyoqXG4gICAqIOODouODh+ODq+OBq+S7mOWxnuOBmeOCi+ODpuODvOOCtuODvOODh+ODvOOCv+OCkuiqreOBv+i+vOOCgFxuICAgKiBAcGFyYW0gYnVmZmVyIHVzZXJkYXRhMy5qc29u44GM6Kqt44G/6L6844G+44KM44Gm44GE44KL44OQ44OD44OV44KhXG4gICAqIEBwYXJhbSBzaXplIOODkOODg+ODleOCoeOBruOCteOCpOOCulxuICAgKi9cbiAgcHVibGljIGxvYWRVc2VyRGF0YShidWZmZXI6IEFycmF5QnVmZmVyLCBzaXplOiBudW1iZXIpOiB2b2lkIHtcbiAgICBpZiAoYnVmZmVyID09IG51bGwgfHwgc2l6ZSA9PSAwKSB7XG4gICAgICBDdWJpc21Mb2dFcnJvcignRmFpbGVkIHRvIGxvYWRVc2VyRGF0YSgpLicpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLl9tb2RlbFVzZXJEYXRhID0gQ3ViaXNtTW9kZWxVc2VyRGF0YS5jcmVhdGUoYnVmZmVyLCBzaXplKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDniannkIbmvJTnrpfjg4fjg7zjgr/jga7oqq3jgb/ovrzjgb9cbiAgICogQHBhcmFtIGJ1ZmZlciAgcGh5c2ljczMuanNvbuOBjOiqreOBv+i+vOOBvuOCjOOBpuOBhOOCi+ODkOODg+ODleOCoVxuICAgKiBAcGFyYW0gc2l6ZSAgICDjg5Djg4Pjg5XjgqHjga7jgrXjgqTjgrpcbiAgICovXG4gIHB1YmxpYyBsb2FkUGh5c2ljcyhidWZmZXI6IEFycmF5QnVmZmVyLCBzaXplOiBudW1iZXIpOiB2b2lkIHtcbiAgICBpZiAoYnVmZmVyID09IG51bGwgfHwgc2l6ZSA9PSAwKSB7XG4gICAgICBDdWJpc21Mb2dFcnJvcignRmFpbGVkIHRvIGxvYWRQaHlzaWNzKCkuJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuX3BoeXNpY3MgPSBDdWJpc21QaHlzaWNzLmNyZWF0ZShidWZmZXIsIHNpemUpO1xuICB9XG5cbiAgLyoqXG4gICAqIOW9k+OBn+OCiuWIpOWumuOBruWPluW+l1xuICAgKiBAcGFyYW0gZHJhd2FibGVJZCDmpJzoqLzjgZfjgZ/jgYREcmF3YWJsZeOBrklEXG4gICAqIEBwYXJhbSBwb2ludFggWOS9jee9rlxuICAgKiBAcGFyYW0gcG9pbnRZIFnkvY3nva5cbiAgICogQHJldHVybiB0cnVlIOODkuODg+ODiOOBl+OBpuOBhOOCi1xuICAgKiBAcmV0dXJuIGZhbHNlIOODkuODg+ODiOOBl+OBpuOBhOOBquOBhFxuICAgKi9cbiAgcHVibGljIGlzSGl0KFxuICAgIGRyYXdhYmxlSWQ6IEN1YmlzbUlkSGFuZGxlLFxuICAgIHBvaW50WDogbnVtYmVyLFxuICAgIHBvaW50WTogbnVtYmVyXG4gICk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IGRyYXdJbmRleDogbnVtYmVyID0gdGhpcy5fbW9kZWwuZ2V0RHJhd2FibGVJbmRleChkcmF3YWJsZUlkKTtcblxuICAgIGlmIChkcmF3SW5kZXggPCAwKSB7XG4gICAgICByZXR1cm4gZmFsc2U7IC8vIOWtmOWcqOOBl+OBquOBhOWgtOWQiOOBr2ZhbHNlXG4gICAgfVxuXG4gICAgY29uc3QgY291bnQ6IG51bWJlciA9IHRoaXMuX21vZGVsLmdldERyYXdhYmxlVmVydGV4Q291bnQoZHJhd0luZGV4KTtcbiAgICBjb25zdCB2ZXJ0aWNlczogRmxvYXQzMkFycmF5ID0gdGhpcy5fbW9kZWwuZ2V0RHJhd2FibGVWZXJ0aWNlcyhkcmF3SW5kZXgpO1xuXG4gICAgbGV0IGxlZnQ6IG51bWJlciA9IHZlcnRpY2VzWzBdO1xuICAgIGxldCByaWdodDogbnVtYmVyID0gdmVydGljZXNbMF07XG4gICAgbGV0IHRvcDogbnVtYmVyID0gdmVydGljZXNbMV07XG4gICAgbGV0IGJvdHRvbTogbnVtYmVyID0gdmVydGljZXNbMV07XG5cbiAgICBmb3IgKGxldCBqID0gMTsgaiA8IGNvdW50OyArK2opIHtcbiAgICAgIGNvbnN0IHggPSB2ZXJ0aWNlc1tDb25zdGFudC52ZXJ0ZXhPZmZzZXQgKyBqICogQ29uc3RhbnQudmVydGV4U3RlcF07XG4gICAgICBjb25zdCB5ID0gdmVydGljZXNbQ29uc3RhbnQudmVydGV4T2Zmc2V0ICsgaiAqIENvbnN0YW50LnZlcnRleFN0ZXAgKyAxXTtcblxuICAgICAgaWYgKHggPCBsZWZ0KSB7XG4gICAgICAgIGxlZnQgPSB4OyAvLyBNaW4geFxuICAgICAgfVxuXG4gICAgICBpZiAoeCA+IHJpZ2h0KSB7XG4gICAgICAgIHJpZ2h0ID0geDsgLy8gTWF4IHhcbiAgICAgIH1cblxuICAgICAgaWYgKHkgPCB0b3ApIHtcbiAgICAgICAgdG9wID0geTsgLy8gTWluIHlcbiAgICAgIH1cblxuICAgICAgaWYgKHkgPiBib3R0b20pIHtcbiAgICAgICAgYm90dG9tID0geTsgLy8gTWF4IHlcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCB0eDogbnVtYmVyID0gdGhpcy5fbW9kZWxNYXRyaXguaW52ZXJ0VHJhbnNmb3JtWChwb2ludFgpO1xuICAgIGNvbnN0IHR5OiBudW1iZXIgPSB0aGlzLl9tb2RlbE1hdHJpeC5pbnZlcnRUcmFuc2Zvcm1ZKHBvaW50WSk7XG5cbiAgICByZXR1cm4gbGVmdCA8PSB0eCAmJiB0eCA8PSByaWdodCAmJiB0b3AgPD0gdHkgJiYgdHkgPD0gYm90dG9tO1xuICB9XG5cbiAgLyoqXG4gICAqIOODouODh+ODq+OBruWPluW+l1xuICAgKiBAcmV0dXJuIOODouODh+ODq1xuICAgKi9cbiAgcHVibGljIGdldE1vZGVsKCk6IEN1YmlzbU1vZGVsIHtcbiAgICByZXR1cm4gdGhpcy5fbW9kZWw7XG4gIH1cblxuICAvKipcbiAgICog44Os44Oz44OA44Op44Gu5Y+W5b6XXG4gICAqIEByZXR1cm4g44Os44Oz44OA44OpXG4gICAqL1xuICBwdWJsaWMgZ2V0UmVuZGVyZXIoKTogQ3ViaXNtUmVuZGVyZXJfV2ViR0wge1xuICAgIHJldHVybiB0aGlzLl9yZW5kZXJlcjtcbiAgfVxuXG4gIC8qKlxuICAgKiDjg6zjg7Pjg4Djg6njgpLkvZzmiJDjgZfjgabliJ3mnJ/ljJbjgpLlrp/ooYzjgZnjgotcbiAgICogQHBhcmFtIG1hc2tCdWZmZXJDb3VudCDjg5Djg4Pjg5XjgqHjga7nlJ/miJDmlbBcbiAgICovXG4gIHB1YmxpYyBjcmVhdGVSZW5kZXJlcihtYXNrQnVmZmVyQ291bnQgPSAxKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuX3JlbmRlcmVyKSB7XG4gICAgICB0aGlzLmRlbGV0ZVJlbmRlcmVyKCk7XG4gICAgfVxuXG4gICAgdGhpcy5fcmVuZGVyZXIgPSBuZXcgQ3ViaXNtUmVuZGVyZXJfV2ViR0woKTtcbiAgICB0aGlzLl9yZW5kZXJlci5pbml0aWFsaXplKHRoaXMuX21vZGVsLCBtYXNrQnVmZmVyQ291bnQpO1xuICB9XG5cbiAgLyoqXG4gICAqIOODrOODs+ODgOODqeOBruino+aUvlxuICAgKi9cbiAgcHVibGljIGRlbGV0ZVJlbmRlcmVyKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLl9yZW5kZXJlciAhPSBudWxsKSB7XG4gICAgICB0aGlzLl9yZW5kZXJlci5yZWxlYXNlKCk7XG4gICAgICB0aGlzLl9yZW5kZXJlciA9IG51bGw7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOOCpOODmeODs+ODiOeZuueBq+aZguOBruaomea6luWHpueQhlxuICAgKlxuICAgKiBFdmVudOOBjOWGjeeUn+WHpueQhuaZguOBq+OBguOBo+OBn+WgtOWQiOOBruWHpueQhuOCkuOBmeOCi+OAglxuICAgKiDntpnmib/jgafkuIrmm7jjgY3jgZnjgovjgZPjgajjgpLmg7PlrprjgZfjgabjgYTjgovjgIJcbiAgICog5LiK5pu444GN44GX44Gq44GE5aC05ZCI44Gv44Ot44Kw5Ye65Yqb44KS44GZ44KL44CCXG4gICAqXG4gICAqIEBwYXJhbSBldmVudFZhbHVlIOeZuueBq+OBl+OBn+OCpOODmeODs+ODiOOBruaWh+Wtl+WIl+ODh+ODvOOCv1xuICAgKi9cbiAgcHVibGljIG1vdGlvbkV2ZW50RmlyZWQoZXZlbnRWYWx1ZTogY3NtU3RyaW5nKTogdm9pZCB7XG4gICAgQ3ViaXNtTG9nSW5mbygnezB9JywgZXZlbnRWYWx1ZS5zKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDjgqTjg5njg7Pjg4jnlKjjga7jgrPjg7zjg6vjg5Djg4Pjgq9cbiAgICpcbiAgICogQ3ViaXNtTW90aW9uUXVldWVNYW5hZ2Vy44Gr44Kk44OZ44Oz44OI55So44Gr55m76Yyy44GZ44KL44Gf44KB44GuQ2FsbGJhY2vjgIJcbiAgICogQ3ViaXNtVXNlck1vZGVs44Gu57aZ5om/5YWI44GuRXZlbnRGaXJlZOOCkuWRvOOBtuOAglxuICAgKlxuICAgKiBAcGFyYW0gY2FsbGVyIOeZuueBq+OBl+OBn+OCpOODmeODs+ODiOOCkueuoeeQhuOBl+OBpuOBhOOBn+ODouODvOOCt+ODp+ODs+ODnuODjeODvOOCuOODo+ODvOOAgeavlOi8g+eUqFxuICAgKiBAcGFyYW0gZXZlbnRWYWx1ZSDnmbrngavjgZfjgZ/jgqTjg5njg7Pjg4jjga7mloflrZfliJfjg4fjg7zjgr9cbiAgICogQHBhcmFtIGN1c3RvbURhdGEgQ3ViaXNtVXNlck1vZGVs44KS57aZ5om/44GX44Gf44Kk44Oz44K544K/44Oz44K544KS5oOz5a6aXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIGN1YmlzbURlZmF1bHRNb3Rpb25FdmVudENhbGxiYWNrKFxuICAgIGNhbGxlcjogQ3ViaXNtTW90aW9uUXVldWVNYW5hZ2VyLFxuICAgIGV2ZW50VmFsdWU6IGNzbVN0cmluZyxcbiAgICBjdXN0b21EYXRhOiBDdWJpc21Vc2VyTW9kZWxcbiAgKTogdm9pZCB7XG4gICAgY29uc3QgbW9kZWw6IEN1YmlzbVVzZXJNb2RlbCA9IGN1c3RvbURhdGE7XG5cbiAgICBpZiAobW9kZWwgIT0gbnVsbCkge1xuICAgICAgbW9kZWwubW90aW9uRXZlbnRGaXJlZChldmVudFZhbHVlKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAqL1xuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgLy8g5ZCE5aSJ5pWw5Yid5pyf5YyWXG4gICAgdGhpcy5fbW9jID0gbnVsbDtcbiAgICB0aGlzLl9tb2RlbCA9IG51bGw7XG4gICAgdGhpcy5fbW90aW9uTWFuYWdlciA9IG51bGw7XG4gICAgdGhpcy5fZXhwcmVzc2lvbk1hbmFnZXIgPSBudWxsO1xuICAgIHRoaXMuX2V5ZUJsaW5rID0gbnVsbDtcbiAgICB0aGlzLl9icmVhdGggPSBudWxsO1xuICAgIHRoaXMuX21vZGVsTWF0cml4ID0gbnVsbDtcbiAgICB0aGlzLl9wb3NlID0gbnVsbDtcbiAgICB0aGlzLl9kcmFnTWFuYWdlciA9IG51bGw7XG4gICAgdGhpcy5fcGh5c2ljcyA9IG51bGw7XG4gICAgdGhpcy5fbW9kZWxVc2VyRGF0YSA9IG51bGw7XG4gICAgdGhpcy5faW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl91cGRhdGluZyA9IGZhbHNlO1xuICAgIHRoaXMuX29wYWNpdHkgPSAxLjA7XG4gICAgdGhpcy5fbGlwc3luYyA9IHRydWU7XG4gICAgdGhpcy5fbGFzdExpcFN5bmNWYWx1ZSA9IDAuMDtcbiAgICB0aGlzLl9kcmFnWCA9IDAuMDtcbiAgICB0aGlzLl9kcmFnWSA9IDAuMDtcbiAgICB0aGlzLl9hY2NlbGVyYXRpb25YID0gMC4wO1xuICAgIHRoaXMuX2FjY2VsZXJhdGlvblkgPSAwLjA7XG4gICAgdGhpcy5fYWNjZWxlcmF0aW9uWiA9IDAuMDtcbiAgICB0aGlzLl9tb2NDb25zaXN0ZW5jeSA9IGZhbHNlO1xuICAgIHRoaXMuX2RlYnVnTW9kZSA9IGZhbHNlO1xuICAgIHRoaXMuX3JlbmRlcmVyID0gbnVsbDtcblxuICAgIC8vIOODouODvOOCt+ODp+ODs+ODnuODjeODvOOCuOODo+ODvOOCkuS9nOaIkFxuICAgIHRoaXMuX21vdGlvbk1hbmFnZXIgPSBuZXcgQ3ViaXNtTW90aW9uTWFuYWdlcigpO1xuICAgIHRoaXMuX21vdGlvbk1hbmFnZXIuc2V0RXZlbnRDYWxsYmFjayhcbiAgICAgIEN1YmlzbVVzZXJNb2RlbC5jdWJpc21EZWZhdWx0TW90aW9uRXZlbnRDYWxsYmFjayxcbiAgICAgIHRoaXNcbiAgICApO1xuXG4gICAgLy8g6KGo5oOF44Oe44ON44O844K444Oj44O844KS5L2c5oiQXG4gICAgdGhpcy5fZXhwcmVzc2lvbk1hbmFnZXIgPSBuZXcgQ3ViaXNtRXhwcmVzc2lvbk1vdGlvbk1hbmFnZXIoKTtcblxuICAgIC8vIOODieODqeODg+OCsOOBq+OCiOOCi+OCouODi+ODoeODvOOCt+ODp+ODs1xuICAgIHRoaXMuX2RyYWdNYW5hZ2VyID0gbmV3IEN1YmlzbVRhcmdldFBvaW50KCk7XG4gIH1cblxuICAvKipcbiAgICog44OH44K544OI44Op44Kv44K/44Gr55u45b2T44GZ44KL5Yem55CGXG4gICAqL1xuICBwdWJsaWMgcmVsZWFzZSgpIHtcbiAgICBpZiAodGhpcy5fbW90aW9uTWFuYWdlciAhPSBudWxsKSB7XG4gICAgICB0aGlzLl9tb3Rpb25NYW5hZ2VyLnJlbGVhc2UoKTtcbiAgICAgIHRoaXMuX21vdGlvbk1hbmFnZXIgPSBudWxsO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9leHByZXNzaW9uTWFuYWdlciAhPSBudWxsKSB7XG4gICAgICB0aGlzLl9leHByZXNzaW9uTWFuYWdlci5yZWxlYXNlKCk7XG4gICAgICB0aGlzLl9leHByZXNzaW9uTWFuYWdlciA9IG51bGw7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX21vYyAhPSBudWxsKSB7XG4gICAgICB0aGlzLl9tb2MuZGVsZXRlTW9kZWwodGhpcy5fbW9kZWwpO1xuICAgICAgdGhpcy5fbW9jLnJlbGVhc2UoKTtcbiAgICAgIHRoaXMuX21vYyA9IG51bGw7XG4gICAgfVxuXG4gICAgdGhpcy5fbW9kZWxNYXRyaXggPSBudWxsO1xuXG4gICAgQ3ViaXNtUG9zZS5kZWxldGUodGhpcy5fcG9zZSk7XG4gICAgQ3ViaXNtRXllQmxpbmsuZGVsZXRlKHRoaXMuX2V5ZUJsaW5rKTtcbiAgICBDdWJpc21CcmVhdGguZGVsZXRlKHRoaXMuX2JyZWF0aCk7XG5cbiAgICB0aGlzLl9kcmFnTWFuYWdlciA9IG51bGw7XG5cbiAgICBDdWJpc21QaHlzaWNzLmRlbGV0ZSh0aGlzLl9waHlzaWNzKTtcbiAgICBDdWJpc21Nb2RlbFVzZXJEYXRhLmRlbGV0ZSh0aGlzLl9tb2RlbFVzZXJEYXRhKTtcblxuICAgIHRoaXMuZGVsZXRlUmVuZGVyZXIoKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBfbW9jOiBDdWJpc21Nb2M7IC8vIE1vY+ODh+ODvOOCv1xuICBwcm90ZWN0ZWQgX21vZGVsOiBDdWJpc21Nb2RlbDsgLy8gTW9kZWzjgqTjg7Pjgrnjgr/jg7PjgrlcblxuICBwcm90ZWN0ZWQgX21vdGlvbk1hbmFnZXI6IEN1YmlzbU1vdGlvbk1hbmFnZXI7IC8vIOODouODvOOCt+ODp+ODs+euoeeQhlxuICBwcm90ZWN0ZWQgX2V4cHJlc3Npb25NYW5hZ2VyOiBDdWJpc21FeHByZXNzaW9uTW90aW9uTWFuYWdlcjsgLy8g6KGo5oOF566h55CGXG4gIHByb3RlY3RlZCBfZXllQmxpbms6IEN1YmlzbUV5ZUJsaW5rOyAvLyDoh6rli5Xjgb7jgbDjgZ/jgY1cbiAgcHJvdGVjdGVkIF9icmVhdGg6IEN1YmlzbUJyZWF0aDsgLy8g5ZG85ZC4XG4gIHByb3RlY3RlZCBfbW9kZWxNYXRyaXg6IEN1YmlzbU1vZGVsTWF0cml4OyAvLyDjg6Ljg4fjg6vooYzliJdcbiAgcHJvdGVjdGVkIF9wb3NlOiBDdWJpc21Qb3NlOyAvLyDjg53jg7zjgrrnrqHnkIZcbiAgcHJvdGVjdGVkIF9kcmFnTWFuYWdlcjogQ3ViaXNtVGFyZ2V0UG9pbnQ7IC8vIOODnuOCpuOCueODieODqeODg+OCsFxuICBwcm90ZWN0ZWQgX3BoeXNpY3M6IEN1YmlzbVBoeXNpY3M7IC8vIOeJqeeQhua8lOeul1xuICBwcm90ZWN0ZWQgX21vZGVsVXNlckRhdGE6IEN1YmlzbU1vZGVsVXNlckRhdGE7IC8vIOODpuODvOOCtuODvOODh+ODvOOCv1xuXG4gIHByb3RlY3RlZCBfaW5pdGlhbGl6ZWQ6IGJvb2xlYW47IC8vIOWIneacn+WMluOBleOCjOOBn+OBi+OBqeOBhuOBi1xuICBwcm90ZWN0ZWQgX3VwZGF0aW5nOiBib29sZWFuOyAvLyDmm7TmlrDjgZXjgozjgZ/jgYvjganjgYbjgYtcbiAgcHJvdGVjdGVkIF9vcGFjaXR5OiBudW1iZXI7IC8vIOS4jemAj+aYjuW6plxuICBwcm90ZWN0ZWQgX2xpcHN5bmM6IGJvb2xlYW47IC8vIOODquODg+ODl+OCt+ODs+OCr+OBmeOCi+OBi+OBqeOBhuOBi1xuICBwcm90ZWN0ZWQgX2xhc3RMaXBTeW5jVmFsdWU6IG51bWJlcjsgLy8g5pyA5b6M44Gu44Oq44OD44OX44K344Oz44Kv44Gu5Yi25b6h5ZywXG4gIHByb3RlY3RlZCBfZHJhZ1g6IG51bWJlcjsgLy8g44Oe44Km44K544OJ44Op44OD44Kw44GuWOS9jee9rlxuICBwcm90ZWN0ZWQgX2RyYWdZOiBudW1iZXI7IC8vIOODnuOCpuOCueODieODqeODg+OCsOOBrlnkvY3nva5cbiAgcHJvdGVjdGVkIF9hY2NlbGVyYXRpb25YOiBudW1iZXI7IC8vIFjou7jmlrnlkJHjga7liqDpgJ/luqZcbiAgcHJvdGVjdGVkIF9hY2NlbGVyYXRpb25ZOiBudW1iZXI7IC8vIFnou7jmlrnlkJHjga7liqDpgJ/luqZcbiAgcHJvdGVjdGVkIF9hY2NlbGVyYXRpb25aOiBudW1iZXI7IC8vIFrou7jmlrnlkJHjga7liqDpgJ/luqZcbiAgcHJvdGVjdGVkIF9tb2NDb25zaXN0ZW5jeTogYm9vbGVhbjsgLy8gTU9DM+S4gOiyq+aAp+aknOiovOOBmeOCi+OBi+OBqeOBhuOBi1xuICBwcm90ZWN0ZWQgX2RlYnVnTW9kZTogYm9vbGVhbjsgLy8g44OH44OQ44OD44Kw44Oi44O844OJ44GL44Gp44GG44GLXG5cbiAgcHJpdmF0ZSBfcmVuZGVyZXI6IEN1YmlzbVJlbmRlcmVyX1dlYkdMOyAvLyDjg6zjg7Pjg4Djg6lcbn1cblxuLy8gTmFtZXNwYWNlIGRlZmluaXRpb24gZm9yIGNvbXBhdGliaWxpdHkuXG5pbXBvcnQgKiBhcyAkIGZyb20gJy4vY3ViaXNtdXNlcm1vZGVsJztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbmFtZXNwYWNlXG5leHBvcnQgbmFtZXNwYWNlIExpdmUyREN1YmlzbUZyYW1ld29yayB7XG4gIGV4cG9ydCBjb25zdCBDdWJpc21Vc2VyTW9kZWwgPSAkLkN1YmlzbVVzZXJNb2RlbDtcbiAgZXhwb3J0IHR5cGUgQ3ViaXNtVXNlck1vZGVsID0gJC5DdWJpc21Vc2VyTW9kZWw7XG59XG4iXSwibmFtZXMiOlsiQ3ViaXNtQnJlYXRoIiwiQ3ViaXNtRXllQmxpbmsiLCJDdWJpc21Qb3NlIiwiQ29uc3RhbnQiLCJDdWJpc21Nb2RlbE1hdHJpeCIsIkN1YmlzbVRhcmdldFBvaW50IiwiQ3ViaXNtRXhwcmVzc2lvbk1vdGlvbiIsIkN1YmlzbUV4cHJlc3Npb25Nb3Rpb25NYW5hZ2VyIiwiQ3ViaXNtTW90aW9uIiwiQ3ViaXNtTW90aW9uTWFuYWdlciIsIkN1YmlzbVBoeXNpY3MiLCJDdWJpc21SZW5kZXJlcl9XZWJHTCIsIkN1YmlzbUxvZ0Vycm9yIiwiQ3ViaXNtTG9nSW5mbyIsIkN1YmlzbU1vYyIsIkN1YmlzbU1vZGVsVXNlckRhdGEiLCJDdWJpc21Vc2VyTW9kZWwiLCJpc0luaXRpYWxpemVkIiwiX2luaXRpYWxpemVkIiwic2V0SW5pdGlhbGl6ZWQiLCJ2IiwiaXNVcGRhdGluZyIsIl91cGRhdGluZyIsInNldFVwZGF0aW5nIiwic2V0RHJhZ2dpbmciLCJ4IiwieSIsIl9kcmFnTWFuYWdlciIsInNldCIsInNldEFjY2VsZXJhdGlvbiIsInoiLCJfYWNjZWxlcmF0aW9uWCIsIl9hY2NlbGVyYXRpb25ZIiwiX2FjY2VsZXJhdGlvbloiLCJnZXRNb2RlbE1hdHJpeCIsIl9tb2RlbE1hdHJpeCIsInNldE9wYWNpdHkiLCJhIiwiX29wYWNpdHkiLCJnZXRPcGFjaXR5IiwibG9hZE1vZGVsIiwiYnVmZmVyIiwic2hvdWxkQ2hlY2tNb2NDb25zaXN0ZW5jeSIsImtTY2FsZSIsIl9tb2MiLCJjcmVhdGUiLCJfbW9kZWwiLCJjcmVhdGVNb2RlbCIsInNhdmVQYXJhbWV0ZXJzIiwiZ2V0Q2FudmFzV2lkdGgiLCJnZXRDYW52YXNIZWlnaHQiLCJzY2FsZSIsImxvYWRNb3Rpb24iLCJzaXplIiwibmFtZSIsIm9uRmluaXNoZWRNb3Rpb25IYW5kbGVyIiwibG9hZEV4cHJlc3Npb24iLCJsb2FkUG9zZSIsIl9wb3NlIiwibG9hZFVzZXJEYXRhIiwiX21vZGVsVXNlckRhdGEiLCJsb2FkUGh5c2ljcyIsIl9waHlzaWNzIiwiaXNIaXQiLCJkcmF3YWJsZUlkIiwicG9pbnRYIiwicG9pbnRZIiwiZHJhd0luZGV4IiwiZ2V0RHJhd2FibGVJbmRleCIsImNvdW50IiwiZ2V0RHJhd2FibGVWZXJ0ZXhDb3VudCIsInZlcnRpY2VzIiwiZ2V0RHJhd2FibGVWZXJ0aWNlcyIsImxlZnQiLCJyaWdodCIsInRvcCIsImJvdHRvbSIsImoiLCJ2ZXJ0ZXhPZmZzZXQiLCJ2ZXJ0ZXhTdGVwIiwidHgiLCJpbnZlcnRUcmFuc2Zvcm1YIiwidHkiLCJpbnZlcnRUcmFuc2Zvcm1ZIiwiZ2V0TW9kZWwiLCJnZXRSZW5kZXJlciIsIl9yZW5kZXJlciIsImNyZWF0ZVJlbmRlcmVyIiwibWFza0J1ZmZlckNvdW50IiwiZGVsZXRlUmVuZGVyZXIiLCJpbml0aWFsaXplIiwicmVsZWFzZSIsIm1vdGlvbkV2ZW50RmlyZWQiLCJldmVudFZhbHVlIiwicyIsImN1YmlzbURlZmF1bHRNb3Rpb25FdmVudENhbGxiYWNrIiwiY2FsbGVyIiwiY3VzdG9tRGF0YSIsIm1vZGVsIiwiX21vdGlvbk1hbmFnZXIiLCJfZXhwcmVzc2lvbk1hbmFnZXIiLCJfZXllQmxpbmsiLCJfYnJlYXRoIiwiX2xpcHN5bmMiLCJfbGFzdExpcFN5bmNWYWx1ZSIsIl9kcmFnWCIsIl9kcmFnWSIsIl9tb2NDb25zaXN0ZW5jeSIsIl9kZWJ1Z01vZGUiLCJzZXRFdmVudENhbGxiYWNrIiwiZGVsZXRlTW9kZWwiLCJkZWxldGUiLCIkIiwiTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/model/cubismusermodel.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/motion/acubismmotion.ts":
/*!******************************************************!*\
  !*** ./WebSDK/Framework/src/motion/acubismmotion.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACubismMotion: () => (/* binding */ ACubismMotion),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math/cubismmath */ \"(ssr)/./WebSDK/Framework/src/math/cubismmath.ts\");\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/cubismdebug */ \"(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\");\n/* harmony import */ var _acubismmotion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./acubismmotion */ \"(ssr)/./WebSDK/Framework/src/motion/acubismmotion.ts\");\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n/**\n * モーションの抽象基底クラス\n *\n * モーションの抽象基底クラス。MotionQueueManagerによってモーションの再生を管理する。\n */ class ACubismMotion {\n    /**\n   * インスタンスの破棄\n   */ static delete(motion) {\n        motion.release();\n        motion = null;\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        /**\n   * モーション再生終了コールバックの登録\n   *\n   * モーション再生終了コールバックを登録する。\n   * isFinishedフラグを設定するタイミングで呼び出される。\n   * 以下の状態の際には呼び出されない:\n   *   1. 再生中のモーションが「ループ」として設定されているとき\n   *   2. コールバックが登録されていない時\n   *\n   * @param onFinishedMotionHandler モーション再生終了コールバック関数\n   */ this.setFinishedMotionHandler = (onFinishedMotionHandler)=>this._onFinishedMotion = onFinishedMotionHandler;\n        /**\n   * モーション再生終了コールバックの取得\n   *\n   * モーション再生終了コールバックを取得する。\n   *\n   * @return 登録されているモーション再生終了コールバック関数\n   */ this.getFinishedMotionHandler = ()=>this._onFinishedMotion;\n        this._fadeInSeconds = -1.0;\n        this._fadeOutSeconds = -1.0;\n        this._weight = 1.0;\n        this._offsetSeconds = 0.0; // 再生の開始時刻\n        this._firedEventValues = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        this._weight = 0.0;\n    }\n    /**\n   * モデルのパラメータ\n   * @param model 対象のモデル\n   * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\n   * @param userTimeSeconds デルタ時間の積算値[秒]\n   */ updateParameters(model, motionQueueEntry, userTimeSeconds) {\n        if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n            return;\n        }\n        this.setupMotionQueueEntry(motionQueueEntry, userTimeSeconds);\n        const fadeWeight = this.updateFadeWeight(motionQueueEntry, userTimeSeconds);\n        //---- 全てのパラメータIDをループする ----\n        this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n        // 後処理\n        // 終了時刻を過ぎたら終了フラグを立てる(CubismMotionQueueManager)\n        if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n            motionQueueEntry.setIsFinished(true); // 終了\n        }\n    }\n    /**\n   * @brief モデルの再生開始処理\n   *\n   * モーションの再生を開始するためのセットアップを行う。\n   *\n   * @param[in]   motionQueueEntry    CubismMotionQueueManagerで管理されているモーション\n   * @param[in]   userTimeSeconds     デルタ時間の積算値[秒]\n   */ setupMotionQueueEntry(motionQueueEntry, userTimeSeconds) {\n        if (motionQueueEntry == null || motionQueueEntry.isStarted()) {\n            return;\n        }\n        if (!motionQueueEntry.isAvailable()) {\n            return;\n        }\n        motionQueueEntry.setIsStarted(true);\n        motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds); // モーションの開始時刻を記録\n        motionQueueEntry.setFadeInStartTime(userTimeSeconds); // フェードインの開始時刻\n        const duration = this.getDuration();\n        if (motionQueueEntry.getEndTime() < 0.0) {\n            // 開始していないうちに終了設定している場合がある\n            motionQueueEntry.setEndTime(duration <= 0.0 ? -1 : motionQueueEntry.getStartTime() + duration);\n        // duration == -1 の場合はループする\n        }\n    }\n    /**\n   * @brief モデルのウェイト更新\n   *\n   * モーションのウェイトを更新する。\n   *\n   * @param[in]   motionQueueEntry    CubismMotionQueueManagerで管理されているモーション\n   * @param[in]   userTimeSeconds     デルタ時間の積算値[秒]\n   */ updateFadeWeight(motionQueueEntry, userTimeSeconds) {\n        if (motionQueueEntry == null) {\n            _utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismDebug.print(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_3__.LogLevel.LogLevel_Error, 'motionQueueEntry is null.');\n        }\n        let fadeWeight = this._weight; // 現在の値と掛け合わせる割合\n        //---- フェードイン・アウトの処理 ----\n        // 単純なサイン関数でイージングする\n        const fadeIn = this._fadeInSeconds == 0.0 ? 1.0 : _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n        const fadeOut = this._fadeOutSeconds == 0.0 || motionQueueEntry.getEndTime() < 0.0 ? 1.0 : _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n        fadeWeight = fadeWeight * fadeIn * fadeOut;\n        motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n        (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CSM_ASSERT)(0.0 <= fadeWeight && fadeWeight <= 1.0);\n        return fadeWeight;\n    }\n    /**\n   * フェードインの時間を設定する\n   * @param fadeInSeconds フェードインにかかる時間[秒]\n   */ setFadeInTime(fadeInSeconds) {\n        this._fadeInSeconds = fadeInSeconds;\n    }\n    /**\n   * フェードアウトの時間を設定する\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n   */ setFadeOutTime(fadeOutSeconds) {\n        this._fadeOutSeconds = fadeOutSeconds;\n    }\n    /**\n   * フェードアウトにかかる時間の取得\n   * @return フェードアウトにかかる時間[秒]\n   */ getFadeOutTime() {\n        return this._fadeOutSeconds;\n    }\n    /**\n   * フェードインにかかる時間の取得\n   * @return フェードインにかかる時間[秒]\n   */ getFadeInTime() {\n        return this._fadeInSeconds;\n    }\n    /**\n   * モーション適用の重みの設定\n   * @param weight 重み（0.0 - 1.0）\n   */ setWeight(weight) {\n        this._weight = weight;\n    }\n    /**\n   * モーション適用の重みの取得\n   * @return 重み（0.0 - 1.0）\n   */ getWeight() {\n        return this._weight;\n    }\n    /**\n   * モーションの長さの取得\n   * @return モーションの長さ[秒]\n   *\n   * @note ループの時は「-1」。\n   *       ループでない場合は、オーバーライドする。\n   *       正の値の時は取得される時間で終了する。\n   *       「-1」の時は外部から停止命令がない限り終わらない処理となる。\n   */ getDuration() {\n        return -1.0;\n    }\n    /**\n   * モーションのループ1回分の長さの取得\n   * @return モーションのループ一回分の長さ[秒]\n   *\n   * @note ループしない場合は、getDuration()と同じ値を返す\n   *       ループ一回分の長さが定義できない場合(プログラム的に動き続けるサブクラスなど)の場合は「-1」を返す\n   */ getLoopDuration() {\n        return -1.0;\n    }\n    /**\n   * モーション再生の開始時刻の設定\n   * @param offsetSeconds モーション再生の開始時刻[秒]\n   */ setOffsetTime(offsetSeconds) {\n        this._offsetSeconds = offsetSeconds;\n    }\n    /**\n   * モデルのパラメータ更新\n   *\n   * イベント発火のチェック。\n   * 入力する時間は呼ばれるモーションタイミングを０とした秒数で行う。\n   *\n   * @param beforeCheckTimeSeconds 前回のイベントチェック時間[秒]\n   * @param motionTimeSeconds 今回の再生時間[秒]\n   */ getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n        return this._firedEventValues;\n    }\n    /**\n   * 透明度のカーブが存在するかどうかを確認する\n   *\n   * @returns true  -> キーが存在する\n   *          false -> キーが存在しない\n   */ isExistModelOpacity() {\n        return false;\n    }\n    /**\n   * 透明度のカーブのインデックスを返す\n   *\n   * @returns success:透明度のカーブのインデックス\n   */ getModelOpacityIndex() {\n        return -1;\n    }\n    /**\n   * 透明度のIdを返す\n   *\n   * @param index モーションカーブのインデックス\n   * @returns success:透明度のId\n   */ getModelOpacityId(index) {\n        return null;\n    }\n    /**\n   * 指定時間の透明度の値を返す\n   *\n   * @returns success:モーションの現在時間におけるOpacityの値\n   *\n   * @note  更新後の値を取るにはUpdateParameters() の後に呼び出す。\n   */ getModelOpacityValue() {\n        return 1.0;\n    }\n}\n// Namespace definition for compatibility.\n\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.ACubismMotion = _acubismmotion__WEBPACK_IMPORTED_MODULE_4__.ACubismMotion;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/motion/acubismmotion.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/motion/cubismexpressionmotion.ts":
/*!***************************************************************!*\
  !*** ./WebSDK/Framework/src/motion/cubismexpressionmotion.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismExpressionMotion: () => (/* binding */ CubismExpressionMotion),\n/* harmony export */   ExpressionBlendType: () => (/* binding */ ExpressionBlendType),\n/* harmony export */   ExpressionParameter: () => (/* binding */ ExpressionParameter),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _utils_cubismjson__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/cubismjson */ \"(ssr)/./WebSDK/Framework/src/utils/cubismjson.ts\");\n/* harmony import */ var _acubismmotion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./acubismmotion */ \"(ssr)/./WebSDK/Framework/src/motion/acubismmotion.ts\");\n/* harmony import */ var _cubismexpressionmotion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cubismexpressionmotion */ \"(ssr)/./WebSDK/Framework/src/motion/cubismexpressionmotion.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n// exp3.jsonのキーとデフォルト\nconst ExpressionKeyFadeIn = 'FadeInTime';\nconst ExpressionKeyFadeOut = 'FadeOutTime';\nconst ExpressionKeyParameters = 'Parameters';\nconst ExpressionKeyId = 'Id';\nconst ExpressionKeyValue = 'Value';\nconst ExpressionKeyBlend = 'Blend';\nconst BlendValueAdd = 'Add';\nconst BlendValueMultiply = 'Multiply';\nconst BlendValueOverwrite = 'Overwrite';\nconst DefaultFadeTime = 1.0;\n/**\n * 表情のモーション\n *\n * 表情のモーションクラス。\n */ class CubismExpressionMotion extends _acubismmotion__WEBPACK_IMPORTED_MODULE_3__.ACubismMotion {\n    static{\n        this.DefaultAdditiveValue = 0.0; // 加算適用の初期値\n    }\n    static{\n        this.DefaultMultiplyValue = 1.0; // 乗算適用の初期値\n    }\n    /**\n   * インスタンスを作成する。\n   * @param buffer expファイルが読み込まれているバッファ\n   * @param size バッファのサイズ\n   * @return 作成されたインスタンス\n   */ static create(buffer, size) {\n        const expression = new CubismExpressionMotion();\n        expression.parse(buffer, size);\n        return expression;\n    }\n    /**\n   * モデルのパラメータの更新の実行\n   * @param model 対象のモデル\n   * @param userTimeSeconds デルタ時間の積算値[秒]\n   * @param weight モーションの重み\n   * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\n   */ doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n        for(let i = 0; i < this._parameters.getSize(); ++i){\n            const parameter = this._parameters.at(i);\n            switch(parameter.blendType){\n                case 0:\n                    {\n                        model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n                        break;\n                    }\n                case 1:\n                    {\n                        model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n                        break;\n                    }\n                case 2:\n                    {\n                        model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n                        break;\n                    }\n                default:\n                    break;\n            }\n        }\n    }\n    /**\n   * @brief 表情によるモデルのパラメータの計算\n   *\n   * モデルの表情に関するパラメータを計算する。\n   *\n   * @param[in]   model                        対象のモデル\n   * @param[in]   userTimeSeconds              デルタ時間の積算値[秒]\n   * @param[in]   motionQueueEntry             CubismMotionQueueManagerで管理されているモーション\n   * @param[in]   expressionParameterValues    モデルに適用する各パラメータの値\n   * @param[in]   expressionIndex              表情のインデックス\n   * @param[in]   fadeWeight                   表情のウェイト\n   */ calculateExpressionParameters(model, userTimeSeconds, motionQueueEntry, expressionParameterValues, expressionIndex, fadeWeight) {\n        if (motionQueueEntry == null || expressionParameterValues == null) {\n            return;\n        }\n        if (!motionQueueEntry.isAvailable()) {\n            return;\n        }\n        // CubismExpressionMotion._fadeWeight は廃止予定です。\n        // 互換性のために処理は残りますが、実際には使用しておりません。\n        this._fadeWeight = this.updateFadeWeight(motionQueueEntry, userTimeSeconds);\n        // モデルに適用する値を計算\n        for(let i = 0; i < expressionParameterValues.getSize(); ++i){\n            const expressionParameterValue = expressionParameterValues.at(i);\n            if (expressionParameterValue.parameterId == null) {\n                continue;\n            }\n            const currentParameterValue = expressionParameterValue.overwriteValue = model.getParameterValueById(expressionParameterValue.parameterId);\n            const expressionParameters = this.getExpressionParameters();\n            let parameterIndex = -1;\n            for(let j = 0; j < expressionParameters.getSize(); ++j){\n                if (expressionParameterValue.parameterId != expressionParameters.at(j).parameterId) {\n                    continue;\n                }\n                parameterIndex = j;\n                break;\n            }\n            // 再生中のExpressionが参照していないパラメータは初期値を適用\n            if (parameterIndex < 0) {\n                if (expressionIndex == 0) {\n                    expressionParameterValue.additiveValue = CubismExpressionMotion.DefaultAdditiveValue;\n                    expressionParameterValue.multiplyValue = CubismExpressionMotion.DefaultMultiplyValue;\n                    expressionParameterValue.overwriteValue = currentParameterValue;\n                } else {\n                    expressionParameterValue.additiveValue = this.calculateValue(expressionParameterValue.additiveValue, CubismExpressionMotion.DefaultAdditiveValue, fadeWeight);\n                    expressionParameterValue.multiplyValue = this.calculateValue(expressionParameterValue.multiplyValue, CubismExpressionMotion.DefaultMultiplyValue, fadeWeight);\n                    expressionParameterValue.overwriteValue = this.calculateValue(expressionParameterValue.overwriteValue, currentParameterValue, fadeWeight);\n                }\n                continue;\n            }\n            // 値を計算\n            const value = expressionParameters.at(parameterIndex).value;\n            let newAdditiveValue, newMultiplyValue, newOverwriteValue;\n            switch(expressionParameters.at(parameterIndex).blendType){\n                case 0:\n                    newAdditiveValue = value;\n                    newMultiplyValue = CubismExpressionMotion.DefaultMultiplyValue;\n                    newOverwriteValue = currentParameterValue;\n                    break;\n                case 1:\n                    newAdditiveValue = CubismExpressionMotion.DefaultAdditiveValue;\n                    newMultiplyValue = value;\n                    newOverwriteValue = currentParameterValue;\n                    break;\n                case 2:\n                    newAdditiveValue = CubismExpressionMotion.DefaultAdditiveValue;\n                    newMultiplyValue = CubismExpressionMotion.DefaultMultiplyValue;\n                    newOverwriteValue = value;\n                    break;\n                default:\n                    return;\n            }\n            if (expressionIndex == 0) {\n                expressionParameterValue.additiveValue = newAdditiveValue;\n                expressionParameterValue.multiplyValue = newMultiplyValue;\n                expressionParameterValue.overwriteValue = newOverwriteValue;\n            } else {\n                expressionParameterValue.additiveValue = expressionParameterValue.additiveValue * (1.0 - fadeWeight) + newAdditiveValue * fadeWeight;\n                expressionParameterValue.multiplyValue = expressionParameterValue.multiplyValue * (1.0 - fadeWeight) + newMultiplyValue * fadeWeight;\n                expressionParameterValue.overwriteValue = expressionParameterValue.overwriteValue * (1.0 - fadeWeight) + newOverwriteValue * fadeWeight;\n            }\n        }\n    }\n    /**\n   * @brief 表情が参照しているパラメータを取得\n   *\n   * 表情が参照しているパラメータを取得する\n   *\n   * @return 表情パラメータ\n   */ getExpressionParameters() {\n        return this._parameters;\n    }\n    /**\n   * @brief 表情のフェードの値を取得\n   *\n   * 現在の表情のフェードのウェイト値を取得する\n   *\n   * @returns 表情のフェードのウェイト値\n   *\n   * @deprecated CubismExpressionMotion.fadeWeightが削除予定のため非推奨。\n   * CubismExpressionMotionManager.getFadeWeight(index: number): number を使用してください。\n   * @see CubismExpressionMotionManager#getFadeWeight(index: number)\n   */ getFadeWeight() {\n        return this._fadeWeight;\n    }\n    parse(buffer, size) {\n        const json = _utils_cubismjson__WEBPACK_IMPORTED_MODULE_2__.CubismJson.create(buffer, size);\n        if (!json) {\n            return;\n        }\n        const root = json.getRoot();\n        this.setFadeInTime(root.getValueByString(ExpressionKeyFadeIn).toFloat(DefaultFadeTime)); // フェードイン\n        this.setFadeOutTime(root.getValueByString(ExpressionKeyFadeOut).toFloat(DefaultFadeTime)); // フェードアウト\n        // 各パラメータについて\n        const parameterCount = root.getValueByString(ExpressionKeyParameters).getSize();\n        this._parameters.prepareCapacity(parameterCount);\n        for(let i = 0; i < parameterCount; ++i){\n            const param = root.getValueByString(ExpressionKeyParameters).getValueByIndex(i);\n            const parameterId = _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(param.getValueByString(ExpressionKeyId).getRawString()); // パラメータID\n            const value = param.getValueByString(ExpressionKeyValue).toFloat(); // 値\n            // 計算方法の設定\n            let blendType;\n            if (param.getValueByString(ExpressionKeyBlend).isNull() || param.getValueByString(ExpressionKeyBlend).getString() == BlendValueAdd) {\n                blendType = 0;\n            } else if (param.getValueByString(ExpressionKeyBlend).getString() == BlendValueMultiply) {\n                blendType = 1;\n            } else if (param.getValueByString(ExpressionKeyBlend).getString() == BlendValueOverwrite) {\n                blendType = 2;\n            } else {\n                // その他 仕様にない値を設定した時は加算モードにすることで復旧\n                blendType = 0;\n            }\n            // 設定オブジェクトを作成してリストに追加する\n            const item = new ExpressionParameter();\n            item.parameterId = parameterId;\n            item.blendType = blendType;\n            item.value = value;\n            this._parameters.pushBack(item);\n        }\n        _utils_cubismjson__WEBPACK_IMPORTED_MODULE_2__.CubismJson.delete(json); // JSONデータは不要になったら削除する\n    }\n    /**\n   * @brief ブレンド計算\n   *\n   * 入力された値でブレンド計算をする。\n   *\n   * @param source 現在の値\n   * @param destination 適用する値\n   * @param weight ウェイト\n   * @returns 計算結果\n   */ calculateValue(source, destination, fadeWeight) {\n        return source * (1.0 - fadeWeight) + destination * fadeWeight;\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        super();\n        this._parameters = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        this._fadeWeight = 0.0;\n    }\n}\n/**\n * 表情パラメータ値の計算方式\n */ var ExpressionBlendType = /*#__PURE__*/ function(ExpressionBlendType) {\n    ExpressionBlendType[ExpressionBlendType[\"Additive\"] = 0] = \"Additive\";\n    ExpressionBlendType[ExpressionBlendType[\"Multiply\"] = 1] = \"Multiply\";\n    ExpressionBlendType[ExpressionBlendType[\"Overwrite\"] = 2] = \"Overwrite\"; // 上書き\n    return ExpressionBlendType;\n}({});\n/**\n * 表情のパラメータ情報\n */ class ExpressionParameter {\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismExpressionMotion = _cubismexpressionmotion__WEBPACK_IMPORTED_MODULE_4__.CubismExpressionMotion;\n    Live2DCubismFramework.ExpressionBlendType = _cubismexpressionmotion__WEBPACK_IMPORTED_MODULE_4__.ExpressionBlendType;\n    Live2DCubismFramework.ExpressionParameter = _cubismexpressionmotion__WEBPACK_IMPORTED_MODULE_4__.ExpressionParameter;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/motion/cubismexpressionmotion.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/motion/cubismexpressionmotionmanager.ts":
/*!**********************************************************************!*\
  !*** ./WebSDK/Framework/src/motion/cubismexpressionmotionmanager.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismExpressionMotionManager: () => (/* binding */ CubismExpressionMotionManager),\n/* harmony export */   ExpressionParameterValue: () => (/* binding */ ExpressionParameterValue),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _cubismexpressionmotion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubismexpressionmotion */ \"(ssr)/./WebSDK/Framework/src/motion/cubismexpressionmotion.ts\");\n/* harmony import */ var _cubismmotionqueuemanager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cubismmotionqueuemanager */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotionqueuemanager.ts\");\n/* harmony import */ var _cubismexpressionmotionmanager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cubismexpressionmotionmanager */ \"(ssr)/./WebSDK/Framework/src/motion/cubismexpressionmotionmanager.ts\");\n/* harmony import */ var _math_cubismmath__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../math/cubismmath */ \"(ssr)/./WebSDK/Framework/src/math/cubismmath.ts\");\n\n\n\n\n/**\n * @brief パラメータに適用する表情の値を持たせる構造体\n */ class ExpressionParameterValue {\n}\n/**\n * @brief 表情モーションの管理\n *\n * 表情モーションの管理をおこなうクラス。\n */ class CubismExpressionMotionManager extends _cubismmotionqueuemanager__WEBPACK_IMPORTED_MODULE_3__.CubismMotionQueueManager {\n    /**\n   * コンストラクタ\n   */ constructor(){\n        super();\n        this._currentPriority = 0;\n        this._reservePriority = 0;\n        this._expressionParameterValues = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        this._fadeWeights = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        if (this._expressionParameterValues) {\n            (0,_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.csmDelete)(this._expressionParameterValues);\n            this._expressionParameterValues = null;\n        }\n        if (this._fadeWeights) {\n            (0,_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.csmDelete)(this._fadeWeights);\n            this._fadeWeights = null;\n        }\n    }\n    /**\n   * @brief 再生中のモーションの優先度の取得\n   *\n   * 再生中のモーションの優先度を取得する。\n   *\n   * @returns モーションの優先度\n   */ getCurrentPriority() {\n        return this._currentPriority;\n    }\n    /**\n   * @brief 予約中のモーションの優先度の取得\n   *\n   * 予約中のモーションの優先度を取得する。\n   *\n   * @return  モーションの優先度\n   */ getReservePriority() {\n        return this._reservePriority;\n    }\n    /**\n   * @brief 再生中のモーションのウェイトを取得する。\n   *\n   * @param[in]    index    表情のインデックス\n   * @returns               表情モーションのウェイト\n   */ getFadeWeight(index) {\n        return this._fadeWeights.at(index);\n    }\n    /**\n   * @brief 予約中のモーションの優先度の設定\n   *\n   * 予約中のモーションの優先度を設定する。\n   *\n   * @param[in]   priority     優先度\n   */ setReservePriority(priority) {\n        this._reservePriority = priority;\n    }\n    /**\n   * @brief 優先度を設定してモーションの開始\n   *\n   * 優先度を設定してモーションを開始する。\n   *\n   * @param[in]   motion          モーション\n   * @param[in]   autoDelete      再生が終了したモーションのインスタンスを削除するならtrue\n   * @param[in]   priority        優先度\n   * @return                      開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するIsFinished()の引数で使用する。開始できない時は「-1」\n   */ startMotionPriority(motion, autoDelete, priority) {\n        if (priority == this.getReservePriority()) {\n            this.setReservePriority(0);\n        }\n        this._currentPriority = priority;\n        this._fadeWeights.pushBack(0.0);\n        return this.startMotion(motion, autoDelete);\n    }\n    /**\n   * @brief モーションの更新\n   *\n   * モーションを更新して、モデルにパラメータ値を反映する。\n   *\n   * @param[in]   model   対象のモデル\n   * @param[in]   deltaTimeSeconds    デルタ時間[秒]\n   * @retval  true    更新されている\n   * @retval  false   更新されていない\n   */ updateMotion(model, deltaTimeSeconds) {\n        this._userTimeSeconds += deltaTimeSeconds;\n        let updated = false;\n        const motions = this.getCubismMotionQueueEntries();\n        let expressionWeight = 0.0;\n        let expressionIndex = 0;\n        // ------- 処理を行う --------\n        // 既にモーションがあれば終了フラグを立てる\n        for(let ite = this._motions.begin(); ite.notEqual(this._motions.end());){\n            const motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                ite = motions.erase(ite); //削除\n                continue;\n            }\n            const expressionMotion = motionQueueEntry.getCubismMotion();\n            if (expressionMotion == null) {\n                (0,_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.csmDelete)(motionQueueEntry);\n                ite = motions.erase(ite); //削除\n                continue;\n            }\n            const expressionParameters = expressionMotion.getExpressionParameters();\n            if (motionQueueEntry.isAvailable()) {\n                // 再生中のExpressionが参照しているパラメータをすべてリストアップ\n                for(let i = 0; i < expressionParameters.getSize(); ++i){\n                    if (expressionParameters.at(i).parameterId == null) {\n                        continue;\n                    }\n                    let index = -1;\n                    // リストにパラメータIDが存在するか検索\n                    for(let j = 0; j < this._expressionParameterValues.getSize(); ++j){\n                        if (this._expressionParameterValues.at(j).parameterId != expressionParameters.at(i).parameterId) {\n                            continue;\n                        }\n                        index = j;\n                        break;\n                    }\n                    if (index >= 0) {\n                        continue;\n                    }\n                    // パラメータがリストに存在しないなら新規追加\n                    const item = new ExpressionParameterValue();\n                    item.parameterId = expressionParameters.at(i).parameterId;\n                    item.additiveValue = _cubismexpressionmotion__WEBPACK_IMPORTED_MODULE_2__.CubismExpressionMotion.DefaultAdditiveValue;\n                    item.multiplyValue = _cubismexpressionmotion__WEBPACK_IMPORTED_MODULE_2__.CubismExpressionMotion.DefaultMultiplyValue;\n                    item.overwriteValue = model.getParameterValueById(item.parameterId);\n                    this._expressionParameterValues.pushBack(item);\n                }\n            }\n            // ------ 値を計算する ------\n            expressionMotion.setupMotionQueueEntry(motionQueueEntry, this._userTimeSeconds);\n            this._fadeWeights.set(expressionIndex, expressionMotion.updateFadeWeight(motionQueueEntry, this._userTimeSeconds));\n            expressionMotion.calculateExpressionParameters(model, this._userTimeSeconds, motionQueueEntry, this._expressionParameterValues, expressionIndex, this._fadeWeights.at(expressionIndex));\n            expressionWeight += expressionMotion.getFadeInTime() == 0.0 ? 1.0 : _math_cubismmath__WEBPACK_IMPORTED_MODULE_4__.CubismMath.getEasingSine((this._userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / expressionMotion.getFadeInTime());\n            updated = true;\n            if (motionQueueEntry.isTriggeredFadeOut()) {\n                // フェードアウト開始\n                motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), this._userTimeSeconds);\n            }\n            ite.preIncrement();\n            ++expressionIndex;\n        }\n        // ----- 最新のExpressionのフェードが完了していればそれ以前を削除する ------\n        if (motions.getSize() > 1) {\n            const expressionMotion = motions.at(motions.getSize() - 1).getCubismMotion();\n            const latestFadeWeight = this._fadeWeights.at(this._fadeWeights.getSize() - 1);\n            if (latestFadeWeight >= 1.0) {\n                // 配列の最後の要素は削除しない\n                for(let i = motions.getSize() - 2; i >= 0; --i){\n                    const motionQueueEntry = motions.at(i);\n                    (0,_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.csmDelete)(motionQueueEntry);\n                    motions.remove(i);\n                    this._fadeWeights.remove(i);\n                }\n            }\n        }\n        if (expressionWeight > 1.0) {\n            expressionWeight = 1.0;\n        }\n        // モデルに各値を適用\n        for(let i = 0; i < this._expressionParameterValues.getSize(); ++i){\n            const expressionParameterValue = this._expressionParameterValues.at(i);\n            model.setParameterValueById(expressionParameterValue.parameterId, (expressionParameterValue.overwriteValue + expressionParameterValue.additiveValue) * expressionParameterValue.multiplyValue, expressionWeight);\n            expressionParameterValue.additiveValue = _cubismexpressionmotion__WEBPACK_IMPORTED_MODULE_2__.CubismExpressionMotion.DefaultAdditiveValue;\n            expressionParameterValue.multiplyValue = _cubismexpressionmotion__WEBPACK_IMPORTED_MODULE_2__.CubismExpressionMotion.DefaultMultiplyValue;\n        }\n        return updated;\n    }\n}\n// Namespace definition for compatibility.\n\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismExpressionMotionManager = _cubismexpressionmotionmanager__WEBPACK_IMPORTED_MODULE_5__.CubismExpressionMotionManager;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/motion/cubismexpressionmotionmanager.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/motion/cubismmotion.ts":
/*!*****************************************************!*\
  !*** ./WebSDK/Framework/src/motion/cubismmotion.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismMotion: () => (/* binding */ CubismMotion),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _math_cubismmath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math/cubismmath */ \"(ssr)/./WebSDK/Framework/src/math/cubismmath.ts\");\n/* harmony import */ var _type_csmstring__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/csmstring */ \"(ssr)/./WebSDK/Framework/src/type/csmstring.ts\");\n/* harmony import */ var _utils_cubismdebug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/cubismdebug */ \"(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\");\n/* harmony import */ var _acubismmotion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./acubismmotion */ \"(ssr)/./WebSDK/Framework/src/motion/acubismmotion.ts\");\n/* harmony import */ var _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cubismmotioninternal */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotioninternal.ts\");\n/* harmony import */ var _cubismmotionjson__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cubismmotionjson */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotionjson.ts\");\n/* harmony import */ var _cubismmotion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cubismmotion */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotion.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n\n\n\nconst EffectNameEyeBlink = 'EyeBlink';\nconst EffectNameLipSync = 'LipSync';\nconst TargetNameModel = 'Model';\nconst TargetNameParameter = 'Parameter';\nconst TargetNamePartOpacity = 'PartOpacity';\n// Id\nconst IdNameOpacity = 'Opacity';\n/**\n * Cubism SDK R2 以前のモーションを再現させるなら true 、アニメータのモーションを正しく再現するなら false 。\n */ const UseOldBeziersCurveMotion = false;\nfunction lerpPoints(a, b, t) {\n    const result = new _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionPoint();\n    result.time = a.time + (b.time - a.time) * t;\n    result.value = a.value + (b.value - a.value) * t;\n    return result;\n}\nfunction linearEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[1].time - points[0].time);\n    if (t < 0.0) {\n        t = 0.0;\n    }\n    return points[0].value + (points[1].value - points[0].value) * t;\n}\nfunction bezierEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[3].time - points[0].time);\n    if (t < 0.0) {\n        t = 0.0;\n    }\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateBinarySearch(points, time) {\n    const xError = 0.01;\n    const x = time;\n    let x1 = points[0].time;\n    let x2 = points[3].time;\n    let cx1 = points[1].time;\n    let cx2 = points[2].time;\n    let ta = 0.0;\n    let tb = 1.0;\n    let t = 0.0;\n    let i = 0;\n    for(let var33 = true; i < 20; ++i){\n        if (x < x1 + xError) {\n            t = ta;\n            break;\n        }\n        if (x2 - xError < x) {\n            t = tb;\n            break;\n        }\n        let centerx = (cx1 + cx2) * 0.5;\n        cx1 = (x1 + cx1) * 0.5;\n        cx2 = (x2 + cx2) * 0.5;\n        const ctrlx12 = (cx1 + centerx) * 0.5;\n        const ctrlx21 = (cx2 + centerx) * 0.5;\n        centerx = (ctrlx12 + ctrlx21) * 0.5;\n        if (x < centerx) {\n            tb = (ta + tb) * 0.5;\n            if (centerx - xError < x) {\n                t = tb;\n                break;\n            }\n            x2 = centerx;\n            cx2 = ctrlx12;\n        } else {\n            ta = (ta + tb) * 0.5;\n            if (x < centerx + xError) {\n                t = ta;\n                break;\n            }\n            x1 = centerx;\n            cx1 = ctrlx21;\n        }\n    }\n    if (i == 20) {\n        t = (ta + tb) * 0.5;\n    }\n    if (t < 0.0) {\n        t = 0.0;\n    }\n    if (t > 1.0) {\n        t = 1.0;\n    }\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateCardanoInterpretation(points, time) {\n    const x = time;\n    const x1 = points[0].time;\n    const x2 = points[3].time;\n    const cx1 = points[1].time;\n    const cx2 = points[2].time;\n    const a = x2 - 3.0 * cx2 + 3.0 * cx1 - x1;\n    const b = 3.0 * cx2 - 6.0 * cx1 + 3.0 * x1;\n    const c = 3.0 * cx1 - 3.0 * x1;\n    const d = x1 - x;\n    const t = _math_cubismmath__WEBPACK_IMPORTED_MODULE_1__.CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n}\nfunction steppedEvaluate(points, time) {\n    return points[0].value;\n}\nfunction inverseSteppedEvaluate(points, time) {\n    return points[1].value;\n}\nfunction evaluateCurve(motionData, index, time) {\n    // Find segment to evaluate.\n    const curve = motionData.curves.at(index);\n    let target = -1;\n    const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n    let pointPosition = 0;\n    for(let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i){\n        // Get first point of next segment.\n        pointPosition = motionData.segments.at(i).basePointIndex + (motionData.segments.at(i).segmentType == _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n        // Break if time lies within current segment.\n        if (motionData.points.at(pointPosition).time > time) {\n            target = i;\n            break;\n        }\n    }\n    if (target == -1) {\n        return motionData.points.at(pointPosition).value;\n    }\n    const segment = motionData.segments.at(target);\n    return segment.evaluate(motionData.points.get(segment.basePointIndex), time);\n}\n/**\n * モーションクラス\n *\n * モーションのクラス。\n */ class CubismMotion extends _acubismmotion__WEBPACK_IMPORTED_MODULE_4__.ACubismMotion {\n    /**\n   * インスタンスを作成する\n   *\n   * @param buffer motion3.jsonが読み込まれているバッファ\n   * @param size バッファのサイズ\n   * @param onFinishedMotionHandler モーション再生終了時に呼び出されるコールバック関数\n   * @return 作成されたインスタンス\n   */ static create(buffer, size, onFinishedMotionHandler) {\n        const ret = new CubismMotion();\n        ret.parse(buffer, size);\n        ret._sourceFrameRate = ret._motionData.fps;\n        ret._loopDurationSeconds = ret._motionData.duration;\n        ret._onFinishedMotion = onFinishedMotionHandler;\n        // NOTE: Editorではループありのモーション書き出しは非対応\n        // ret->_loop = (ret->_motionData->Loop > 0);\n        return ret;\n    }\n    /**\n   * モデルのパラメータの更新の実行\n   * @param model             対象のモデル\n   * @param userTimeSeconds   現在の時刻[秒]\n   * @param fadeWeight        モーションの重み\n   * @param motionQueueEntry  CubismMotionQueueManagerで管理されているモーション\n   */ doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n        if (this._modelCurveIdEyeBlink == null) {\n            this._modelCurveIdEyeBlink = _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(EffectNameEyeBlink);\n        }\n        if (this._modelCurveIdLipSync == null) {\n            this._modelCurveIdLipSync = _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(EffectNameLipSync);\n        }\n        if (this._modelCurveIdOpacity == null) {\n            this._modelCurveIdOpacity = _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(IdNameOpacity);\n        }\n        let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n        if (timeOffsetSeconds < 0.0) {\n            timeOffsetSeconds = 0.0; // エラー回避\n        }\n        let lipSyncValue = Number.MAX_VALUE;\n        let eyeBlinkValue = Number.MAX_VALUE;\n        //まばたき、リップシンクのうちモーションの適用を検出するためのビット（maxFlagCount個まで\n        const maxTargetSize = 64;\n        let lipSyncFlags = 0;\n        let eyeBlinkFlags = 0;\n        //瞬き、リップシンクのターゲット数が上限を超えている場合\n        if (this._eyeBlinkParameterIds.getSize() > maxTargetSize) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_3__.CubismLogDebug)('too many eye blink targets : {0}', this._eyeBlinkParameterIds.getSize());\n        }\n        if (this._lipSyncParameterIds.getSize() > maxTargetSize) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_3__.CubismLogDebug)('too many lip sync targets : {0}', this._lipSyncParameterIds.getSize());\n        }\n        const tmpFadeIn = this._fadeInSeconds <= 0.0 ? 1.0 : _math_cubismmath__WEBPACK_IMPORTED_MODULE_1__.CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n        const tmpFadeOut = this._fadeOutSeconds <= 0.0 || motionQueueEntry.getEndTime() < 0.0 ? 1.0 : _math_cubismmath__WEBPACK_IMPORTED_MODULE_1__.CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n        let value;\n        let c, parameterIndex;\n        // 'Repeat' time as necessary.\n        let time = timeOffsetSeconds;\n        if (this._isLoop) {\n            while(time > this._motionData.duration){\n                time -= this._motionData.duration;\n            }\n        }\n        const curves = this._motionData.curves;\n        // Evaluate model curves.\n        for(c = 0; c < this._motionData.curveCount && curves.at(c).type == _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c){\n            // Evaluate curve and call handler.\n            value = evaluateCurve(this._motionData, c, time);\n            if (curves.at(c).id == this._modelCurveIdEyeBlink) {\n                eyeBlinkValue = value;\n            } else if (curves.at(c).id == this._modelCurveIdLipSync) {\n                lipSyncValue = value;\n            } else if (curves.at(c).id == this._modelCurveIdOpacity) {\n                this._modelOpacity = value;\n                model.setModelOapcity(this.getModelOpacityValue());\n            }\n        }\n        let parameterMotionCurveCount = 0;\n        for(; c < this._motionData.curveCount && curves.at(c).type == _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c){\n            parameterMotionCurveCount++;\n            // Find parameter index.\n            parameterIndex = model.getParameterIndex(curves.at(c).id);\n            // Skip curve evaluation if no value in sink.\n            if (parameterIndex == -1) {\n                continue;\n            }\n            const sourceValue = model.getParameterValueByIndex(parameterIndex);\n            // Evaluate curve and apply value.\n            value = evaluateCurve(this._motionData, c, time);\n            if (eyeBlinkValue != Number.MAX_VALUE) {\n                for(let i = 0; i < this._eyeBlinkParameterIds.getSize() && i < maxTargetSize; ++i){\n                    if (this._eyeBlinkParameterIds.at(i) == curves.at(c).id) {\n                        value *= eyeBlinkValue;\n                        eyeBlinkFlags |= 1 << i;\n                        break;\n                    }\n                }\n            }\n            if (lipSyncValue != Number.MAX_VALUE) {\n                for(let i = 0; i < this._lipSyncParameterIds.getSize() && i < maxTargetSize; ++i){\n                    if (this._lipSyncParameterIds.at(i) == curves.at(c).id) {\n                        value += lipSyncValue;\n                        lipSyncFlags |= 1 << i;\n                        break;\n                    }\n                }\n            }\n            let v;\n            // パラメータごとのフェード\n            if (curves.at(c).fadeInTime < 0.0 && curves.at(c).fadeOutTime < 0.0) {\n                // モーションのフェードを適用\n                v = sourceValue + (value - sourceValue) * fadeWeight;\n            } else {\n                // パラメータに対してフェードインかフェードアウトが設定してある場合はそちらを適用\n                let fin;\n                let fout;\n                if (curves.at(c).fadeInTime < 0.0) {\n                    fin = tmpFadeIn;\n                } else {\n                    fin = curves.at(c).fadeInTime == 0.0 ? 1.0 : _math_cubismmath__WEBPACK_IMPORTED_MODULE_1__.CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves.at(c).fadeInTime);\n                }\n                if (curves.at(c).fadeOutTime < 0.0) {\n                    fout = tmpFadeOut;\n                } else {\n                    fout = curves.at(c).fadeOutTime == 0.0 || motionQueueEntry.getEndTime() < 0.0 ? 1.0 : _math_cubismmath__WEBPACK_IMPORTED_MODULE_1__.CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves.at(c).fadeOutTime);\n                }\n                const paramWeight = this._weight * fin * fout;\n                // パラメータごとのフェードを適用\n                v = sourceValue + (value - sourceValue) * paramWeight;\n            }\n            model.setParameterValueByIndex(parameterIndex, v, 1.0);\n        }\n        {\n            if (eyeBlinkValue != Number.MAX_VALUE) {\n                for(let i = 0; i < this._eyeBlinkParameterIds.getSize() && i < maxTargetSize; ++i){\n                    const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds.at(i));\n                    // モーションでの上書きがあった時にはまばたきは適用しない\n                    if (eyeBlinkFlags >> i & 0x01) {\n                        continue;\n                    }\n                    const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n                    model.setParameterValueById(this._eyeBlinkParameterIds.at(i), v);\n                }\n            }\n            if (lipSyncValue != Number.MAX_VALUE) {\n                for(let i = 0; i < this._lipSyncParameterIds.getSize() && i < maxTargetSize; ++i){\n                    const sourceValue = model.getParameterValueById(this._lipSyncParameterIds.at(i));\n                    // モーションでの上書きがあった時にはリップシンクは適用しない\n                    if (lipSyncFlags >> i & 0x01) {\n                        continue;\n                    }\n                    const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n                    model.setParameterValueById(this._lipSyncParameterIds.at(i), v);\n                }\n            }\n        }\n        for(; c < this._motionData.curveCount && curves.at(c).type == _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c){\n            // Find parameter index.\n            parameterIndex = model.getParameterIndex(curves.at(c).id);\n            // Skip curve evaluation if no value in sink.\n            if (parameterIndex == -1) {\n                continue;\n            }\n            // Evaluate curve and apply value.\n            value = evaluateCurve(this._motionData, c, time);\n            model.setParameterValueByIndex(parameterIndex, value);\n        }\n        if (timeOffsetSeconds >= this._motionData.duration) {\n            if (this._isLoop) {\n                motionQueueEntry.setStartTime(userTimeSeconds); // 最初の状態へ\n                if (this._isLoopFadeIn) {\n                    // ループ内でループ用フェードインが有効の時は、フェードイン設定し直し\n                    motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n                }\n            } else {\n                if (this._onFinishedMotion) {\n                    this._onFinishedMotion(this);\n                }\n                motionQueueEntry.setIsFinished(true);\n            }\n        }\n        this._lastWeight = fadeWeight;\n    }\n    /**\n   * ループ情報の設定\n   * @param loop ループ情報\n   */ setIsLoop(loop) {\n        this._isLoop = loop;\n    }\n    /**\n   * ループ情報の取得\n   * @return true ループする\n   * @return false ループしない\n   */ isLoop() {\n        return this._isLoop;\n    }\n    /**\n   * ループ時のフェードイン情報の設定\n   * @param loopFadeIn  ループ時のフェードイン情報\n   */ setIsLoopFadeIn(loopFadeIn) {\n        this._isLoopFadeIn = loopFadeIn;\n    }\n    /**\n   * ループ時のフェードイン情報の取得\n   *\n   * @return  true    する\n   * @return  false   しない\n   */ isLoopFadeIn() {\n        return this._isLoopFadeIn;\n    }\n    /**\n   * モーションの長さを取得する。\n   *\n   * @return  モーションの長さ[秒]\n   */ getDuration() {\n        return this._isLoop ? -1.0 : this._loopDurationSeconds;\n    }\n    /**\n   * モーションのループ時の長さを取得する。\n   *\n   * @return  モーションのループ時の長さ[秒]\n   */ getLoopDuration() {\n        return this._loopDurationSeconds;\n    }\n    /**\n   * パラメータに対するフェードインの時間を設定する。\n   *\n   * @param parameterId     パラメータID\n   * @param value           フェードインにかかる時間[秒]\n   */ setParameterFadeInTime(parameterId, value) {\n        const curves = this._motionData.curves;\n        for(let i = 0; i < this._motionData.curveCount; ++i){\n            if (parameterId == curves.at(i).id) {\n                curves.at(i).fadeInTime = value;\n                return;\n            }\n        }\n    }\n    /**\n   * パラメータに対するフェードアウトの時間の設定\n   * @param parameterId     パラメータID\n   * @param value           フェードアウトにかかる時間[秒]\n   */ setParameterFadeOutTime(parameterId, value) {\n        const curves = this._motionData.curves;\n        for(let i = 0; i < this._motionData.curveCount; ++i){\n            if (parameterId == curves.at(i).id) {\n                curves.at(i).fadeOutTime = value;\n                return;\n            }\n        }\n    }\n    /**\n   * パラメータに対するフェードインの時間の取得\n   * @param    parameterId     パラメータID\n   * @return   フェードインにかかる時間[秒]\n   */ getParameterFadeInTime(parameterId) {\n        const curves = this._motionData.curves;\n        for(let i = 0; i < this._motionData.curveCount; ++i){\n            if (parameterId == curves.at(i).id) {\n                return curves.at(i).fadeInTime;\n            }\n        }\n        return -1;\n    }\n    /**\n   * パラメータに対するフェードアウトの時間を取得\n   *\n   * @param   parameterId     パラメータID\n   * @return   フェードアウトにかかる時間[秒]\n   */ getParameterFadeOutTime(parameterId) {\n        const curves = this._motionData.curves;\n        for(let i = 0; i < this._motionData.curveCount; ++i){\n            if (parameterId == curves.at(i).id) {\n                return curves.at(i).fadeOutTime;\n            }\n        }\n        return -1;\n    }\n    /**\n   * 自動エフェクトがかかっているパラメータIDリストの設定\n   * @param eyeBlinkParameterIds    自動まばたきがかかっているパラメータIDのリスト\n   * @param lipSyncParameterIds     リップシンクがかかっているパラメータIDのリスト\n   */ setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n        this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n        this._lipSyncParameterIds = lipSyncParameterIds;\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        super();\n        this._sourceFrameRate = 30.0;\n        this._loopDurationSeconds = -1.0;\n        this._isLoop = false; // trueから false へデフォルトを変更\n        this._isLoopFadeIn = true; // ループ時にフェードインが有効かどうかのフラグ\n        this._lastWeight = 0.0;\n        this._motionData = null;\n        this._modelCurveIdEyeBlink = null;\n        this._modelCurveIdLipSync = null;\n        this._modelCurveIdOpacity = null;\n        this._eyeBlinkParameterIds = null;\n        this._lipSyncParameterIds = null;\n        this._modelOpacity = 1.0;\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        this._motionData = void 0;\n        this._motionData = null;\n    }\n    /**\n   * motion3.jsonをパースする。\n   *\n   * @param motionJson  motion3.jsonが読み込まれているバッファ\n   * @param size        バッファのサイズ\n   */ parse(motionJson, size) {\n        this._motionData = new _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionData();\n        let json = new _cubismmotionjson__WEBPACK_IMPORTED_MODULE_6__.CubismMotionJson(motionJson, size);\n        if (!json) {\n            json.release();\n            json = void 0;\n            return;\n        }\n        this._motionData.duration = json.getMotionDuration();\n        this._motionData.loop = json.isMotionLoop();\n        this._motionData.curveCount = json.getMotionCurveCount();\n        this._motionData.fps = json.getMotionFps();\n        this._motionData.eventCount = json.getEventCount();\n        const areBeziersRestructed = json.getEvaluationOptionFlag(_cubismmotionjson__WEBPACK_IMPORTED_MODULE_6__.EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n        if (json.isExistMotionFadeInTime()) {\n            this._fadeInSeconds = json.getMotionFadeInTime() < 0.0 ? 1.0 : json.getMotionFadeInTime();\n        } else {\n            this._fadeInSeconds = 1.0;\n        }\n        if (json.isExistMotionFadeOutTime()) {\n            this._fadeOutSeconds = json.getMotionFadeOutTime() < 0.0 ? 1.0 : json.getMotionFadeOutTime();\n        } else {\n            this._fadeOutSeconds = 1.0;\n        }\n        this._motionData.curves.updateSize(this._motionData.curveCount, _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionCurve, true);\n        this._motionData.segments.updateSize(json.getMotionTotalSegmentCount(), _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionSegment, true);\n        this._motionData.points.updateSize(json.getMotionTotalPointCount(), _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionPoint, true);\n        this._motionData.events.updateSize(this._motionData.eventCount, _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionEvent, true);\n        let totalPointCount = 0;\n        let totalSegmentCount = 0;\n        // Curves\n        for(let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount){\n            if (json.getMotionCurveTarget(curveCount) == TargetNameModel) {\n                this._motionData.curves.at(curveCount).type = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n            } else if (json.getMotionCurveTarget(curveCount) == TargetNameParameter) {\n                this._motionData.curves.at(curveCount).type = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n            } else if (json.getMotionCurveTarget(curveCount) == TargetNamePartOpacity) {\n                this._motionData.curves.at(curveCount).type = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n            } else {\n                (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_3__.CubismLogWarning)('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n            }\n            this._motionData.curves.at(curveCount).id = json.getMotionCurveId(curveCount);\n            this._motionData.curves.at(curveCount).baseSegmentIndex = totalSegmentCount;\n            this._motionData.curves.at(curveCount).fadeInTime = json.isExistMotionCurveFadeInTime(curveCount) ? json.getMotionCurveFadeInTime(curveCount) : -1.0;\n            this._motionData.curves.at(curveCount).fadeOutTime = json.isExistMotionCurveFadeOutTime(curveCount) ? json.getMotionCurveFadeOutTime(curveCount) : -1.0;\n            // Segments\n            for(let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount);){\n                if (segmentPosition == 0) {\n                    this._motionData.segments.at(totalSegmentCount).basePointIndex = totalPointCount;\n                    this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition);\n                    this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                    totalPointCount += 1;\n                    segmentPosition += 2;\n                } else {\n                    this._motionData.segments.at(totalSegmentCount).basePointIndex = totalPointCount - 1;\n                }\n                const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n                const segmentType = segment;\n                switch(segmentType){\n                    case _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionSegmentType.CubismMotionSegmentType_Linear:\n                        {\n                            this._motionData.segments.at(totalSegmentCount).segmentType = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n                            this._motionData.segments.at(totalSegmentCount).evaluate = linearEvaluate;\n                            this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                            this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 2);\n                            totalPointCount += 1;\n                            segmentPosition += 3;\n                            break;\n                        }\n                    case _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionSegmentType.CubismMotionSegmentType_Bezier:\n                        {\n                            this._motionData.segments.at(totalSegmentCount).segmentType = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n                            if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n                                this._motionData.segments.at(totalSegmentCount).evaluate = bezierEvaluate;\n                            } else {\n                                this._motionData.segments.at(totalSegmentCount).evaluate = bezierEvaluateCardanoInterpretation;\n                            }\n                            this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                            this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 2);\n                            this._motionData.points.at(totalPointCount + 1).time = json.getMotionCurveSegment(curveCount, segmentPosition + 3);\n                            this._motionData.points.at(totalPointCount + 1).value = json.getMotionCurveSegment(curveCount, segmentPosition + 4);\n                            this._motionData.points.at(totalPointCount + 2).time = json.getMotionCurveSegment(curveCount, segmentPosition + 5);\n                            this._motionData.points.at(totalPointCount + 2).value = json.getMotionCurveSegment(curveCount, segmentPosition + 6);\n                            totalPointCount += 3;\n                            segmentPosition += 7;\n                            break;\n                        }\n                    case _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionSegmentType.CubismMotionSegmentType_Stepped:\n                        {\n                            this._motionData.segments.at(totalSegmentCount).segmentType = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n                            this._motionData.segments.at(totalSegmentCount).evaluate = steppedEvaluate;\n                            this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                            this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 2);\n                            totalPointCount += 1;\n                            segmentPosition += 3;\n                            break;\n                        }\n                    case _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped:\n                        {\n                            this._motionData.segments.at(totalSegmentCount).segmentType = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n                            this._motionData.segments.at(totalSegmentCount).evaluate = inverseSteppedEvaluate;\n                            this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                            this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 2);\n                            totalPointCount += 1;\n                            segmentPosition += 3;\n                            break;\n                        }\n                    default:\n                        {\n                            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_3__.CSM_ASSERT)(0);\n                            break;\n                        }\n                }\n                ++this._motionData.curves.at(curveCount).segmentCount;\n                ++totalSegmentCount;\n            }\n        }\n        for(let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount){\n            this._motionData.events.at(userdatacount).fireTime = json.getEventTime(userdatacount);\n            this._motionData.events.at(userdatacount).value = json.getEventValue(userdatacount);\n        }\n        json.release();\n        json = void 0;\n        json = null;\n    }\n    /**\n   * モデルのパラメータ更新\n   *\n   * イベント発火のチェック。\n   * 入力する時間は呼ばれるモーションタイミングを０とした秒数で行う。\n   *\n   * @param beforeCheckTimeSeconds   前回のイベントチェック時間[秒]\n   * @param motionTimeSeconds        今回の再生時間[秒]\n   */ getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n        this._firedEventValues.updateSize(0);\n        // イベントの発火チェック\n        for(let u = 0; u < this._motionData.eventCount; ++u){\n            if (this._motionData.events.at(u).fireTime > beforeCheckTimeSeconds && this._motionData.events.at(u).fireTime <= motionTimeSeconds) {\n                this._firedEventValues.pushBack(new _type_csmstring__WEBPACK_IMPORTED_MODULE_2__.csmString(this._motionData.events.at(u).value.s));\n            }\n        }\n        return this._firedEventValues;\n    }\n    /**\n   * 透明度のカーブが存在するかどうかを確認する\n   *\n   * @returns true  -> キーが存在する\n   *          false -> キーが存在しない\n   */ isExistModelOpacity() {\n        for(let i = 0; i < this._motionData.curveCount; i++){\n            const curve = this._motionData.curves.at(i);\n            if (curve.type != _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionCurveTarget.CubismMotionCurveTarget_Model) {\n                continue;\n            }\n            if (curve.id.getString().s.localeCompare(IdNameOpacity) == 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n   * 透明度のカーブのインデックスを返す\n   *\n   * @returns success:透明度のカーブのインデックス\n   */ getModelOpacityIndex() {\n        if (this.isExistModelOpacity()) {\n            for(let i = 0; i < this._motionData.curveCount; i++){\n                const curve = this._motionData.curves.at(i);\n                if (curve.type != _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionCurveTarget.CubismMotionCurveTarget_Model) {\n                    continue;\n                }\n                if (curve.id.getString().s.localeCompare(IdNameOpacity) == 0) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n   * 透明度のIdを返す\n   *\n   * @param index モーションカーブのインデックス\n   * @returns success:透明度のカーブのインデックス\n   */ getModelOpacityId(index) {\n        if (index != -1) {\n            const curve = this._motionData.curves.at(index);\n            if (curve.type == _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_5__.CubismMotionCurveTarget.CubismMotionCurveTarget_Model) {\n                if (curve.id.getString().s.localeCompare(IdNameOpacity) == 0) {\n                    return _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(curve.id.getString().s);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n   * 現在時間の透明度の値を返す\n   *\n   * @returns success:モーションの当該時間におけるOpacityの値\n   */ getModelOpacityValue() {\n        return this._modelOpacity;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotion = _cubismmotion__WEBPACK_IMPORTED_MODULE_7__.CubismMotion;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/motion/cubismmotion.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/motion/cubismmotioninternal.ts":
/*!*************************************************************!*\
  !*** ./WebSDK/Framework/src/motion/cubismmotioninternal.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismMotionCurve: () => (/* binding */ CubismMotionCurve),\n/* harmony export */   CubismMotionCurveTarget: () => (/* binding */ CubismMotionCurveTarget),\n/* harmony export */   CubismMotionData: () => (/* binding */ CubismMotionData),\n/* harmony export */   CubismMotionEvent: () => (/* binding */ CubismMotionEvent),\n/* harmony export */   CubismMotionPoint: () => (/* binding */ CubismMotionPoint),\n/* harmony export */   CubismMotionSegment: () => (/* binding */ CubismMotionSegment),\n/* harmony export */   CubismMotionSegmentType: () => (/* binding */ CubismMotionSegmentType),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cubismmotioninternal */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotioninternal.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n/**\n * @brief モーションカーブの種類\n *\n * モーションカーブの種類。\n */ var CubismMotionCurveTarget = /*#__PURE__*/ function(CubismMotionCurveTarget) {\n    CubismMotionCurveTarget[CubismMotionCurveTarget[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n    CubismMotionCurveTarget[CubismMotionCurveTarget[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n    CubismMotionCurveTarget[CubismMotionCurveTarget[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\"; // パーツの不透明度に対して\n    return CubismMotionCurveTarget;\n}({});\n/**\n * @brief モーションカーブのセグメントの種類\n *\n * モーションカーブのセグメントの種類。\n */ var CubismMotionSegmentType = /*#__PURE__*/ function(CubismMotionSegmentType) {\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\"; // インバースステップ\n    return CubismMotionSegmentType;\n}({});\n/**\n * @brief モーションカーブの制御点\n *\n * モーションカーブの制御点。\n */ class CubismMotionPoint {\n    constructor(){\n        this.time = 0.0; // 時間[秒]\n        this.value = 0.0; // 値\n    }\n}\n/**\n * @brief モーションカーブのセグメント\n *\n * モーションカーブのセグメント。\n */ class CubismMotionSegment {\n    /**\n   * @brief コンストラクタ\n   *\n   * コンストラクタ。\n   */ constructor(){\n        this.evaluate = null;\n        this.basePointIndex = 0;\n        this.segmentType = 0;\n    }\n}\n/**\n * @brief モーションカーブ\n *\n * モーションカーブ。\n */ class CubismMotionCurve {\n    constructor(){\n        this.type = 0;\n        this.segmentCount = 0;\n        this.baseSegmentIndex = 0;\n        this.fadeInTime = 0.0;\n        this.fadeOutTime = 0.0;\n    }\n}\n/**\n * イベント。\n */ class CubismMotionEvent {\n    constructor(){\n        this.fireTime = 0.0;\n    }\n}\n/**\n * @brief モーションデータ\n *\n * モーションデータ。\n */ class CubismMotionData {\n    constructor(){\n        this.duration = 0.0;\n        this.loop = false;\n        this.curveCount = 0;\n        this.eventCount = 0;\n        this.fps = 0.0;\n        this.curves = new _type_csmvector__WEBPACK_IMPORTED_MODULE_0__.csmVector();\n        this.segments = new _type_csmvector__WEBPACK_IMPORTED_MODULE_0__.csmVector();\n        this.points = new _type_csmvector__WEBPACK_IMPORTED_MODULE_0__.csmVector();\n        this.events = new _type_csmvector__WEBPACK_IMPORTED_MODULE_0__.csmVector();\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionCurve = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_1__.CubismMotionCurve;\n    Live2DCubismFramework.CubismMotionCurveTarget = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_1__.CubismMotionCurveTarget;\n    Live2DCubismFramework.CubismMotionData = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_1__.CubismMotionData;\n    Live2DCubismFramework.CubismMotionEvent = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_1__.CubismMotionEvent;\n    Live2DCubismFramework.CubismMotionPoint = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_1__.CubismMotionPoint;\n    Live2DCubismFramework.CubismMotionSegment = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_1__.CubismMotionSegment;\n    Live2DCubismFramework.CubismMotionSegmentType = _cubismmotioninternal__WEBPACK_IMPORTED_MODULE_1__.CubismMotionSegmentType;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/motion/cubismmotioninternal.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/motion/cubismmotionjson.ts":
/*!*********************************************************!*\
  !*** ./WebSDK/Framework/src/motion/cubismmotionjson.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismMotionJson: () => (/* binding */ CubismMotionJson),\n/* harmony export */   EvaluationOptionFlag: () => (/* binding */ EvaluationOptionFlag),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _type_csmstring__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/csmstring */ \"(ssr)/./WebSDK/Framework/src/type/csmstring.ts\");\n/* harmony import */ var _utils_cubismjson__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/cubismjson */ \"(ssr)/./WebSDK/Framework/src/utils/cubismjson.ts\");\n/* harmony import */ var _cubismmotionjson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cubismmotionjson */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotionjson.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n// JSON keys\nconst Meta = 'Meta';\nconst Duration = 'Duration';\nconst Loop = 'Loop';\nconst AreBeziersRestricted = 'AreBeziersRestricted';\nconst CurveCount = 'CurveCount';\nconst Fps = 'Fps';\nconst TotalSegmentCount = 'TotalSegmentCount';\nconst TotalPointCount = 'TotalPointCount';\nconst Curves = 'Curves';\nconst Target = 'Target';\nconst Id = 'Id';\nconst FadeInTime = 'FadeInTime';\nconst FadeOutTime = 'FadeOutTime';\nconst Segments = 'Segments';\nconst UserData = 'UserData';\nconst UserDataCount = 'UserDataCount';\nconst TotalUserDataSize = 'TotalUserDataSize';\nconst Time = 'Time';\nconst Value = 'Value';\n/**\n * motion3.jsonのコンテナ。\n */ class CubismMotionJson {\n    /**\n   * コンストラクタ\n   * @param buffer motion3.jsonが読み込まれているバッファ\n   * @param size バッファのサイズ\n   */ constructor(buffer, size){\n        this._json = _utils_cubismjson__WEBPACK_IMPORTED_MODULE_2__.CubismJson.create(buffer, size);\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        _utils_cubismjson__WEBPACK_IMPORTED_MODULE_2__.CubismJson.delete(this._json);\n    }\n    /**\n   * モーションの長さを取得する\n   * @return モーションの長さ[秒]\n   */ getMotionDuration() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(Duration).toFloat();\n    }\n    /**\n   * モーションのループ情報の取得\n   * @return true ループする\n   * @return false ループしない\n   */ isMotionLoop() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(Loop).toBoolean();\n    }\n    getEvaluationOptionFlag(flagType) {\n        if (0 == flagType) {\n            return this._json.getRoot().getValueByString(Meta).getValueByString(AreBeziersRestricted).toBoolean();\n        }\n        return false;\n    }\n    /**\n   * モーションカーブの個数の取得\n   * @return モーションカーブの個数\n   */ getMotionCurveCount() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(CurveCount).toInt();\n    }\n    /**\n   * モーションのフレームレートの取得\n   * @return フレームレート[FPS]\n   */ getMotionFps() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(Fps).toFloat();\n    }\n    /**\n   * モーションのセグメントの総合計の取得\n   * @return モーションのセグメントの取得\n   */ getMotionTotalSegmentCount() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(TotalSegmentCount).toInt();\n    }\n    /**\n   * モーションのカーブの制御店の総合計の取得\n   * @return モーションのカーブの制御点の総合計\n   */ getMotionTotalPointCount() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(TotalPointCount).toInt();\n    }\n    /**\n   * モーションのフェードイン時間の存在\n   * @return true 存在する\n   * @return false 存在しない\n   */ isExistMotionFadeInTime() {\n        return !this._json.getRoot().getValueByString(Meta).getValueByString(FadeInTime).isNull();\n    }\n    /**\n   * モーションのフェードアウト時間の存在\n   * @return true 存在する\n   * @return false 存在しない\n   */ isExistMotionFadeOutTime() {\n        return !this._json.getRoot().getValueByString(Meta).getValueByString(FadeOutTime).isNull();\n    }\n    /**\n   * モーションのフェードイン時間の取得\n   * @return フェードイン時間[秒]\n   */ getMotionFadeInTime() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(FadeInTime).toFloat();\n    }\n    /**\n   * モーションのフェードアウト時間の取得\n   * @return フェードアウト時間[秒]\n   */ getMotionFadeOutTime() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(FadeOutTime).toFloat();\n    }\n    /**\n   * モーションのカーブの種類の取得\n   * @param curveIndex カーブのインデックス\n   * @return カーブの種類\n   */ getMotionCurveTarget(curveIndex) {\n        return this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(Target).getRawString();\n    }\n    /**\n   * モーションのカーブのIDの取得\n   * @param curveIndex カーブのインデックス\n   * @return カーブのID\n   */ getMotionCurveId(curveIndex) {\n        return _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(Id).getRawString());\n    }\n    /**\n   * モーションのカーブのフェードイン時間の存在\n   * @param curveIndex カーブのインデックス\n   * @return true 存在する\n   * @return false 存在しない\n   */ isExistMotionCurveFadeInTime(curveIndex) {\n        return !this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(FadeInTime).isNull();\n    }\n    /**\n   * モーションのカーブのフェードアウト時間の存在\n   * @param curveIndex カーブのインデックス\n   * @return true 存在する\n   * @return false 存在しない\n   */ isExistMotionCurveFadeOutTime(curveIndex) {\n        return !this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(FadeOutTime).isNull();\n    }\n    /**\n   * モーションのカーブのフェードイン時間の取得\n   * @param curveIndex カーブのインデックス\n   * @return フェードイン時間[秒]\n   */ getMotionCurveFadeInTime(curveIndex) {\n        return this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(FadeInTime).toFloat();\n    }\n    /**\n   * モーションのカーブのフェードアウト時間の取得\n   * @param curveIndex カーブのインデックス\n   * @return フェードアウト時間[秒]\n   */ getMotionCurveFadeOutTime(curveIndex) {\n        return this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(FadeOutTime).toFloat();\n    }\n    /**\n   * モーションのカーブのセグメントの個数を取得する\n   * @param curveIndex カーブのインデックス\n   * @return モーションのカーブのセグメントの個数\n   */ getMotionCurveSegmentCount(curveIndex) {\n        return this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(Segments).getVector().getSize();\n    }\n    /**\n   * モーションのカーブのセグメントの値の取得\n   * @param curveIndex カーブのインデックス\n   * @param segmentIndex セグメントのインデックス\n   * @return セグメントの値\n   */ getMotionCurveSegment(curveIndex, segmentIndex) {\n        return this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(Segments).getValueByIndex(segmentIndex).toFloat();\n    }\n    /**\n   * イベントの個数の取得\n   * @return イベントの個数\n   */ getEventCount() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(UserDataCount).toInt();\n    }\n    /**\n   *  イベントの総文字数の取得\n   * @return イベントの総文字数\n   */ getTotalEventValueSize() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(TotalUserDataSize).toInt();\n    }\n    /**\n   * イベントの時間の取得\n   * @param userDataIndex イベントのインデックス\n   * @return イベントの時間[秒]\n   */ getEventTime(userDataIndex) {\n        return this._json.getRoot().getValueByString(UserData).getValueByIndex(userDataIndex).getValueByString(Time).toFloat();\n    }\n    /**\n   * イベントの取得\n   * @param userDataIndex イベントのインデックス\n   * @return イベントの文字列\n   */ getEventValue(userDataIndex) {\n        return new _type_csmstring__WEBPACK_IMPORTED_MODULE_1__.csmString(this._json.getRoot().getValueByString(UserData).getValueByIndex(userDataIndex).getValueByString(Value).getRawString());\n    }\n}\n/**\n * @brief ベジェカーブの解釈方法のフラグタイプ\n */ var EvaluationOptionFlag = /*#__PURE__*/ function(EvaluationOptionFlag) {\n    EvaluationOptionFlag[EvaluationOptionFlag[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\"; ///< ベジェハンドルの規制状態\n    return EvaluationOptionFlag;\n}({});\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionJson = _cubismmotionjson__WEBPACK_IMPORTED_MODULE_3__.CubismMotionJson;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/motion/cubismmotionjson.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/motion/cubismmotionmanager.ts":
/*!************************************************************!*\
  !*** ./WebSDK/Framework/src/motion/cubismmotionmanager.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismMotionManager: () => (/* binding */ CubismMotionManager),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _cubismmotionqueuemanager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cubismmotionqueuemanager */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotionqueuemanager.ts\");\n/* harmony import */ var _cubismmotionmanager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cubismmotionmanager */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotionmanager.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n/**\n * モーションの管理\n *\n * モーションの管理を行うクラス\n */ class CubismMotionManager extends _cubismmotionqueuemanager__WEBPACK_IMPORTED_MODULE_0__.CubismMotionQueueManager {\n    /**\n   * コンストラクタ\n   */ constructor(){\n        super();\n        this._currentPriority = 0;\n        this._reservePriority = 0;\n    }\n    /**\n   * 再生中のモーションの優先度の取得\n   * @return  モーションの優先度\n   */ getCurrentPriority() {\n        return this._currentPriority;\n    }\n    /**\n   * 予約中のモーションの優先度を取得する。\n   * @return  モーションの優先度\n   */ getReservePriority() {\n        return this._reservePriority;\n    }\n    /**\n   * 予約中のモーションの優先度を設定する。\n   * @param   val     優先度\n   */ setReservePriority(val) {\n        this._reservePriority = val;\n    }\n    /**\n   * 優先度を設定してモーションを開始する。\n   *\n   * @param motion          モーション\n   * @param autoDelete      再生が狩猟したモーションのインスタンスを削除するならtrue\n   * @param priority        優先度\n   * @return                開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するIsFinished()の引数で使用する。開始できない時は「-1」\n   */ startMotionPriority(motion, autoDelete, priority) {\n        if (priority == this._reservePriority) {\n            this._reservePriority = 0; // 予約を解除\n        }\n        this._currentPriority = priority; // 再生中モーションの優先度を設定\n        return super.startMotion(motion, autoDelete);\n    }\n    /**\n   * モーションを更新して、モデルにパラメータ値を反映する。\n   *\n   * @param model   対象のモデル\n   * @param deltaTimeSeconds    デルタ時間[秒]\n   * @return  true    更新されている\n   * @return  false   更新されていない\n   */ updateMotion(model, deltaTimeSeconds) {\n        this._userTimeSeconds += deltaTimeSeconds;\n        const updated = super.doUpdateMotion(model, this._userTimeSeconds);\n        if (this.isFinished()) {\n            this._currentPriority = 0; // 再生中のモーションの優先度を解除\n        }\n        return updated;\n    }\n    /**\n   * モーションを予約する。\n   *\n   * @param   priority    優先度\n   * @return  true    予約できた\n   * @return  false   予約できなかった\n   */ reserveMotion(priority) {\n        if (priority <= this._reservePriority || priority <= this._currentPriority) {\n            return false;\n        }\n        this._reservePriority = priority;\n        return true;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionManager = _cubismmotionmanager__WEBPACK_IMPORTED_MODULE_1__.CubismMotionManager;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvRnJhbWV3b3JrL3NyYy9tb3Rpb24vY3ViaXNtbW90aW9ubWFuYWdlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7O0NBS0MsR0FPbUM7QUFFcEM7Ozs7Q0FJQyxHQUNNLE1BQU1DLDRCQUE0QkQsK0VBQXdCQTtJQUMvRDs7R0FFQyxHQUNELGFBQXFCO1FBQ25CLEtBQUs7UUFDTCxJQUFJLENBQUNFLGdCQUFnQixHQUFHO1FBQ3hCLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUc7SUFDMUI7SUFFQTs7O0dBR0MsR0FDRCxxQkFBb0M7UUFDbEMsT0FBTyxJQUFJLENBQUNELGdCQUFnQjtJQUM5QjtJQUVBOzs7R0FHQyxHQUNELHFCQUFvQztRQUNsQyxPQUFPLElBQUksQ0FBQ0MsZ0JBQWdCO0lBQzlCO0lBRUE7OztHQUdDLEdBQ0QsbUJBQTBCSSxHQUFXLEVBQVE7UUFDM0MsSUFBSSxDQUFDSixnQkFBZ0IsR0FBR0k7SUFDMUI7SUFFQTs7Ozs7OztHQU9DLEdBQ0Qsb0JBQ0VFLE1BQXFCLEVBQ3JCQyxVQUFtQixFQUNuQkMsUUFBZ0IsRUFDYztRQUM5QixJQUFJQSxZQUFZLElBQUksQ0FBQ1IsZ0JBQWdCLEVBQUU7WUFDckMsSUFBSSxDQUFDQSxnQkFBZ0IsR0FBRyxHQUFHLFFBQVE7UUFDckM7UUFFQSxJQUFJLENBQUNELGdCQUFnQixHQUFHUyxVQUFVLGtCQUFrQjtRQUVwRCxPQUFPLEtBQUssQ0FBQ0MsWUFBWUgsUUFBUUM7SUFDbkM7SUFFQTs7Ozs7OztHQU9DLEdBQ0QsYUFBb0JJLEtBQWtCLEVBQUVDLGdCQUF3QixFQUFXO1FBQ3pFLElBQUksQ0FBQ0MsZ0JBQWdCLElBQUlEO1FBRXpCLE1BQU1FLFVBQW1CLEtBQUssQ0FBQ0MsZUFBZUosT0FBTyxJQUFJLENBQUNFLGdCQUFnQjtRQUUxRSxJQUFJLElBQUksQ0FBQ0csVUFBVSxJQUFJO1lBQ3JCLElBQUksQ0FBQ2pCLGdCQUFnQixHQUFHLEdBQUcsbUJBQW1CO1FBQ2hEO1FBRUEsT0FBT2U7SUFDVDtJQUVBOzs7Ozs7R0FNQyxHQUNELGNBQXFCTixRQUFnQixFQUFXO1FBQzlDLElBQ0VBLFlBQVksSUFBSSxDQUFDUixnQkFBZ0IsSUFDakNRLFlBQVksSUFBSSxDQUFDVCxnQkFBZ0IsRUFDakM7WUFDQSxPQUFPO1FBQ1Q7UUFFQSxJQUFJLENBQUNDLGdCQUFnQixHQUFHUTtRQUV4QixPQUFPO0lBQ1Q7QUFJRjtBQUVBLDBDQUEwQztBQUNDO1VBRTFCVzswQkFDRnJCLHNCQUFzQm9CLHFFQUFxQjtBQUUxRCxHQUhpQkMsMEJBQUFBIiwic291cmNlcyI6WyIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL1dlYlNESy9GcmFtZXdvcmsvc3JjL21vdGlvbi9jdWJpc21tb3Rpb25tYW5hZ2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IEN1YmlzbU1vZGVsIH0gZnJvbSAnLi4vbW9kZWwvY3ViaXNtbW9kZWwnO1xuaW1wb3J0IHsgQUN1YmlzbU1vdGlvbiB9IGZyb20gJy4vYWN1YmlzbW1vdGlvbic7XG5pbXBvcnQge1xuICBDdWJpc21Nb3Rpb25RdWV1ZUVudHJ5SGFuZGxlLFxuICBDdWJpc21Nb3Rpb25RdWV1ZU1hbmFnZXJcbn0gZnJvbSAnLi9jdWJpc21tb3Rpb25xdWV1ZW1hbmFnZXInO1xuXG4vKipcbiAqIOODouODvOOCt+ODp+ODs+OBrueuoeeQhlxuICpcbiAqIOODouODvOOCt+ODp+ODs+OBrueuoeeQhuOCkuihjOOBhuOCr+ODqeOCuVxuICovXG5leHBvcnQgY2xhc3MgQ3ViaXNtTW90aW9uTWFuYWdlciBleHRlbmRzIEN1YmlzbU1vdGlvblF1ZXVlTWFuYWdlciB7XG4gIC8qKlxuICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICovXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX2N1cnJlbnRQcmlvcml0eSA9IDA7XG4gICAgdGhpcy5fcmVzZXJ2ZVByaW9yaXR5ID0gMDtcbiAgfVxuXG4gIC8qKlxuICAgKiDlho3nlJ/kuK3jga7jg6Ljg7zjgrfjg6fjg7Pjga7lhKrlhYjluqbjga7lj5blvpdcbiAgICogQHJldHVybiAg44Oi44O844K344On44Oz44Gu5YSq5YWI5bqmXG4gICAqL1xuICBwdWJsaWMgZ2V0Q3VycmVudFByaW9yaXR5KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRQcmlvcml0eTtcbiAgfVxuXG4gIC8qKlxuICAgKiDkuojntITkuK3jga7jg6Ljg7zjgrfjg6fjg7Pjga7lhKrlhYjluqbjgpLlj5blvpfjgZnjgovjgIJcbiAgICogQHJldHVybiAg44Oi44O844K344On44Oz44Gu5YSq5YWI5bqmXG4gICAqL1xuICBwdWJsaWMgZ2V0UmVzZXJ2ZVByaW9yaXR5KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX3Jlc2VydmVQcmlvcml0eTtcbiAgfVxuXG4gIC8qKlxuICAgKiDkuojntITkuK3jga7jg6Ljg7zjgrfjg6fjg7Pjga7lhKrlhYjluqbjgpLoqK3lrprjgZnjgovjgIJcbiAgICogQHBhcmFtICAgdmFsICAgICDlhKrlhYjluqZcbiAgICovXG4gIHB1YmxpYyBzZXRSZXNlcnZlUHJpb3JpdHkodmFsOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLl9yZXNlcnZlUHJpb3JpdHkgPSB2YWw7XG4gIH1cblxuICAvKipcbiAgICog5YSq5YWI5bqm44KS6Kit5a6a44GX44Gm44Oi44O844K344On44Oz44KS6ZaL5aeL44GZ44KL44CCXG4gICAqXG4gICAqIEBwYXJhbSBtb3Rpb24gICAgICAgICAg44Oi44O844K344On44OzXG4gICAqIEBwYXJhbSBhdXRvRGVsZXRlICAgICAg5YaN55Sf44GM54up54yf44GX44Gf44Oi44O844K344On44Oz44Gu44Kk44Oz44K544K/44Oz44K544KS5YmK6Zmk44GZ44KL44Gq44KJdHJ1ZVxuICAgKiBAcGFyYW0gcHJpb3JpdHkgICAgICAgIOWEquWFiOW6plxuICAgKiBAcmV0dXJuICAgICAgICAgICAgICAgIOmWi+Wni+OBl+OBn+ODouODvOOCt+ODp+ODs+OBruitmOWIpeeVquWPt+OCkui/lOOBmeOAguWAi+WIpeOBruODouODvOOCt+ODp+ODs+OBjOe1guS6huOBl+OBn+OBi+WQpuOBi+OCkuWIpOWumuOBmeOCi0lzRmluaXNoZWQoKeOBruW8leaVsOOBp+S9v+eUqOOBmeOCi+OAgumWi+Wni+OBp+OBjeOBquOBhOaZguOBr+OAjC0x44CNXG4gICAqL1xuICBwdWJsaWMgc3RhcnRNb3Rpb25Qcmlvcml0eShcbiAgICBtb3Rpb246IEFDdWJpc21Nb3Rpb24sXG4gICAgYXV0b0RlbGV0ZTogYm9vbGVhbixcbiAgICBwcmlvcml0eTogbnVtYmVyXG4gICk6IEN1YmlzbU1vdGlvblF1ZXVlRW50cnlIYW5kbGUge1xuICAgIGlmIChwcmlvcml0eSA9PSB0aGlzLl9yZXNlcnZlUHJpb3JpdHkpIHtcbiAgICAgIHRoaXMuX3Jlc2VydmVQcmlvcml0eSA9IDA7IC8vIOS6iOe0hOOCkuino+mZpFxuICAgIH1cblxuICAgIHRoaXMuX2N1cnJlbnRQcmlvcml0eSA9IHByaW9yaXR5OyAvLyDlho3nlJ/kuK3jg6Ljg7zjgrfjg6fjg7Pjga7lhKrlhYjluqbjgpLoqK3lrppcblxuICAgIHJldHVybiBzdXBlci5zdGFydE1vdGlvbihtb3Rpb24sIGF1dG9EZWxldGUpO1xuICB9XG5cbiAgLyoqXG4gICAqIOODouODvOOCt+ODp+ODs+OCkuabtOaWsOOBl+OBpuOAgeODouODh+ODq+OBq+ODkeODqeODoeODvOOCv+WApOOCkuWPjeaYoOOBmeOCi+OAglxuICAgKlxuICAgKiBAcGFyYW0gbW9kZWwgICDlr77osaHjga7jg6Ljg4fjg6tcbiAgICogQHBhcmFtIGRlbHRhVGltZVNlY29uZHMgICAg44OH44Or44K/5pmC6ZaTW+enkl1cbiAgICogQHJldHVybiAgdHJ1ZSAgICDmm7TmlrDjgZXjgozjgabjgYTjgotcbiAgICogQHJldHVybiAgZmFsc2UgICDmm7TmlrDjgZXjgozjgabjgYTjgarjgYRcbiAgICovXG4gIHB1YmxpYyB1cGRhdGVNb3Rpb24obW9kZWw6IEN1YmlzbU1vZGVsLCBkZWx0YVRpbWVTZWNvbmRzOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICB0aGlzLl91c2VyVGltZVNlY29uZHMgKz0gZGVsdGFUaW1lU2Vjb25kcztcblxuICAgIGNvbnN0IHVwZGF0ZWQ6IGJvb2xlYW4gPSBzdXBlci5kb1VwZGF0ZU1vdGlvbihtb2RlbCwgdGhpcy5fdXNlclRpbWVTZWNvbmRzKTtcblxuICAgIGlmICh0aGlzLmlzRmluaXNoZWQoKSkge1xuICAgICAgdGhpcy5fY3VycmVudFByaW9yaXR5ID0gMDsgLy8g5YaN55Sf5Lit44Gu44Oi44O844K344On44Oz44Gu5YSq5YWI5bqm44KS6Kej6ZmkXG4gICAgfVxuXG4gICAgcmV0dXJuIHVwZGF0ZWQ7XG4gIH1cblxuICAvKipcbiAgICog44Oi44O844K344On44Oz44KS5LqI57SE44GZ44KL44CCXG4gICAqXG4gICAqIEBwYXJhbSAgIHByaW9yaXR5ICAgIOWEquWFiOW6plxuICAgKiBAcmV0dXJuICB0cnVlICAgIOS6iOe0hOOBp+OBjeOBn1xuICAgKiBAcmV0dXJuICBmYWxzZSAgIOS6iOe0hOOBp+OBjeOBquOBi+OBo+OBn1xuICAgKi9cbiAgcHVibGljIHJlc2VydmVNb3Rpb24ocHJpb3JpdHk6IG51bWJlcik6IGJvb2xlYW4ge1xuICAgIGlmIChcbiAgICAgIHByaW9yaXR5IDw9IHRoaXMuX3Jlc2VydmVQcmlvcml0eSB8fFxuICAgICAgcHJpb3JpdHkgPD0gdGhpcy5fY3VycmVudFByaW9yaXR5XG4gICAgKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdGhpcy5fcmVzZXJ2ZVByaW9yaXR5ID0gcHJpb3JpdHk7XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIF9jdXJyZW50UHJpb3JpdHk6IG51bWJlcjsgLy8g54++5Zyo5YaN55Sf5Lit44Gu44Oi44O844K344On44Oz44Gu5YSq5YWI5bqmXG4gIF9yZXNlcnZlUHJpb3JpdHk6IG51bWJlcjsgLy8g5YaN55Sf5LqI5a6a44Gu44Oi44O844K344On44Oz44Gu5YSq5YWI5bqm44CC5YaN55Sf5Lit44GvMOOBq+OBquOCi+OAguODouODvOOCt+ODp+ODs+ODleOCoeOCpOODq+OCkuWIpeOCueODrOODg+ODieOBp+iqreOBv+i+vOOCgOOBqOOBjeOBruapn+iDveOAglxufVxuXG4vLyBOYW1lc3BhY2UgZGVmaW5pdGlvbiBmb3IgY29tcGF0aWJpbGl0eS5cbmltcG9ydCAqIGFzICQgZnJvbSAnLi9jdWJpc21tb3Rpb25tYW5hZ2VyJztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbmFtZXNwYWNlXG5leHBvcnQgbmFtZXNwYWNlIExpdmUyREN1YmlzbUZyYW1ld29yayB7XG4gIGV4cG9ydCBjb25zdCBDdWJpc21Nb3Rpb25NYW5hZ2VyID0gJC5DdWJpc21Nb3Rpb25NYW5hZ2VyO1xuICBleHBvcnQgdHlwZSBDdWJpc21Nb3Rpb25NYW5hZ2VyID0gJC5DdWJpc21Nb3Rpb25NYW5hZ2VyO1xufVxuIl0sIm5hbWVzIjpbIkN1YmlzbU1vdGlvblF1ZXVlTWFuYWdlciIsIkN1YmlzbU1vdGlvbk1hbmFnZXIiLCJfY3VycmVudFByaW9yaXR5IiwiX3Jlc2VydmVQcmlvcml0eSIsImdldEN1cnJlbnRQcmlvcml0eSIsImdldFJlc2VydmVQcmlvcml0eSIsInNldFJlc2VydmVQcmlvcml0eSIsInZhbCIsInN0YXJ0TW90aW9uUHJpb3JpdHkiLCJtb3Rpb24iLCJhdXRvRGVsZXRlIiwicHJpb3JpdHkiLCJzdGFydE1vdGlvbiIsInVwZGF0ZU1vdGlvbiIsIm1vZGVsIiwiZGVsdGFUaW1lU2Vjb25kcyIsIl91c2VyVGltZVNlY29uZHMiLCJ1cGRhdGVkIiwiZG9VcGRhdGVNb3Rpb24iLCJpc0ZpbmlzaGVkIiwicmVzZXJ2ZU1vdGlvbiIsIiQiLCJMaXZlMkRDdWJpc21GcmFtZXdvcmsiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/motion/cubismmotionmanager.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/motion/cubismmotionqueueentry.ts":
/*!***************************************************************!*\
  !*** ./WebSDK/Framework/src/motion/cubismmotionqueueentry.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismMotionQueueEntry: () => (/* binding */ CubismMotionQueueEntry),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _acubismmotion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./acubismmotion */ \"(ssr)/./WebSDK/Framework/src/motion/acubismmotion.ts\");\n/* harmony import */ var _cubismmotionqueueentry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cubismmotionqueueentry */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotionqueueentry.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n/**\n * CubismMotionQueueManagerで再生している各モーションの管理クラス。\n */ class CubismMotionQueueEntry {\n    /**\n   * コンストラクタ\n   */ constructor(){\n        this._autoDelete = false;\n        this._motion = null;\n        this._available = true;\n        this._finished = false;\n        this._started = false;\n        this._startTimeSeconds = -1.0;\n        this._fadeInStartTimeSeconds = 0.0;\n        this._endTimeSeconds = -1.0;\n        this._stateTimeSeconds = 0.0;\n        this._stateWeight = 0.0;\n        this._lastEventCheckSeconds = 0.0;\n        this._motionQueueEntryHandle = this;\n        this._fadeOutSeconds = 0.0;\n        this._isTriggeredFadeOut = false;\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        if (this._autoDelete && this._motion) {\n            _acubismmotion__WEBPACK_IMPORTED_MODULE_0__.ACubismMotion.delete(this._motion); //\n        }\n    }\n    /**\n   * フェードアウト時間と開始判定の設定\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n   */ setFadeOut(fadeOutSeconds) {\n        this._fadeOutSeconds = fadeOutSeconds;\n        this._isTriggeredFadeOut = true;\n    }\n    /**\n   * フェードアウトの開始\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n   * @param userTimeSeconds デルタ時間の積算値[秒]\n   */ startFadeOut(fadeOutSeconds, userTimeSeconds) {\n        const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n        this._isTriggeredFadeOut = true;\n        if (this._endTimeSeconds < 0.0 || newEndTimeSeconds < this._endTimeSeconds) {\n            this._endTimeSeconds = newEndTimeSeconds;\n        }\n    }\n    /**\n   * モーションの終了の確認\n   *\n   * @return true モーションが終了した\n   * @return false 終了していない\n   */ isFinished() {\n        return this._finished;\n    }\n    /**\n   * モーションの開始の確認\n   * @return true モーションが開始した\n   * @return false 開始していない\n   */ isStarted() {\n        return this._started;\n    }\n    /**\n   * モーションの開始時刻の取得\n   * @return モーションの開始時刻[秒]\n   */ getStartTime() {\n        return this._startTimeSeconds;\n    }\n    /**\n   * フェードインの開始時刻の取得\n   * @return フェードインの開始時刻[秒]\n   */ getFadeInStartTime() {\n        return this._fadeInStartTimeSeconds;\n    }\n    /**\n   * フェードインの終了時刻の取得\n   * @return フェードインの終了時刻の取得\n   */ getEndTime() {\n        return this._endTimeSeconds;\n    }\n    /**\n   * モーションの開始時刻の設定\n   * @param startTime モーションの開始時刻\n   */ setStartTime(startTime) {\n        this._startTimeSeconds = startTime;\n    }\n    /**\n   * フェードインの開始時刻の設定\n   * @param startTime フェードインの開始時刻[秒]\n   */ setFadeInStartTime(startTime) {\n        this._fadeInStartTimeSeconds = startTime;\n    }\n    /**\n   * フェードインの終了時刻の設定\n   * @param endTime フェードインの終了時刻[秒]\n   */ setEndTime(endTime) {\n        this._endTimeSeconds = endTime;\n    }\n    /**\n   * モーションの終了の設定\n   * @param f trueならモーションの終了\n   */ setIsFinished(f) {\n        this._finished = f;\n    }\n    /**\n   * モーション開始の設定\n   * @param f trueならモーションの開始\n   */ setIsStarted(f) {\n        this._started = f;\n    }\n    /**\n   * モーションの有効性の確認\n   * @return true モーションは有効\n   * @return false モーションは無効\n   */ isAvailable() {\n        return this._available;\n    }\n    /**\n   * モーションの有効性の設定\n   * @param v trueならモーションは有効\n   */ setIsAvailable(v) {\n        this._available = v;\n    }\n    /**\n   * モーションの状態の設定\n   * @param timeSeconds 現在時刻[秒]\n   * @param weight モーション尾重み\n   */ setState(timeSeconds, weight) {\n        this._stateTimeSeconds = timeSeconds;\n        this._stateWeight = weight;\n    }\n    /**\n   * モーションの現在時刻の取得\n   * @return モーションの現在時刻[秒]\n   */ getStateTime() {\n        return this._stateTimeSeconds;\n    }\n    /**\n   * モーションの重みの取得\n   * @return モーションの重み\n   */ getStateWeight() {\n        return this._stateWeight;\n    }\n    /**\n   * 最後にイベントの発火をチェックした時間を取得\n   *\n   * @return 最後にイベントの発火をチェックした時間[秒]\n   */ getLastCheckEventSeconds() {\n        return this._lastEventCheckSeconds;\n    }\n    /**\n   * 最後にイベントをチェックした時間を設定\n   * @param checkSeconds 最後にイベントをチェックした時間[秒]\n   */ setLastCheckEventSeconds(checkSeconds) {\n        this._lastEventCheckSeconds = checkSeconds;\n    }\n    /**\n   * フェードアウト開始判定の取得\n   * @return フェードアウト開始するかどうか\n   */ isTriggeredFadeOut() {\n        return this._isTriggeredFadeOut;\n    }\n    /**\n   * フェードアウト時間の取得\n   * @return フェードアウト時間[秒]\n   */ getFadeOutSeconds() {\n        return this._fadeOutSeconds;\n    }\n    /**\n   * モーションの取得\n   *\n   * @return モーション\n   */ getCubismMotion() {\n        return this._motion;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionQueueEntry = _cubismmotionqueueentry__WEBPACK_IMPORTED_MODULE_1__.CubismMotionQueueEntry;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/motion/cubismmotionqueueentry.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/motion/cubismmotionqueuemanager.ts":
/*!*****************************************************************!*\
  !*** ./WebSDK/Framework/src/motion/cubismmotionqueuemanager.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismMotionQueueManager: () => (/* binding */ CubismMotionQueueManager),\n/* harmony export */   InvalidMotionQueueEntryHandleValue: () => (/* binding */ InvalidMotionQueueEntryHandleValue),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _cubismmotionqueueentry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cubismmotionqueueentry */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotionqueueentry.ts\");\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _cubismmotionqueuemanager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubismmotionqueuemanager */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotionqueuemanager.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n/**\n * モーション再生の管理\n *\n * モーション再生の管理用クラス。CubismMotionモーションなどACubismMotionのサブクラスを再生するために使用する。\n *\n * @note 再生中に別のモーションが StartMotion()された場合は、新しいモーションに滑らかに変化し旧モーションは中断する。\n *       表情用モーション、体用モーションなどを分けてモーション化した場合など、\n *       複数のモーションを同時に再生させる場合は、複数のCubismMotionQueueManagerインスタンスを使用する。\n */ class CubismMotionQueueManager {\n    /**\n   * コンストラクタ\n   */ constructor(){\n        this._userTimeSeconds = 0.0;\n        this._eventCallBack = null;\n        this._eventCustomData = null;\n        this._motions = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n    }\n    /**\n   * デストラクタ\n   */ release() {\n        for(let i = 0; i < this._motions.getSize(); ++i){\n            if (this._motions.at(i)) {\n                this._motions.at(i).release();\n                this._motions.set(i, null);\n            }\n        }\n        this._motions = null;\n    }\n    /**\n   * 指定したモーションの開始\n   *\n   * 指定したモーションを開始する。同じタイプのモーションが既にある場合は、既存のモーションに終了フラグを立て、フェードアウトを開始させる。\n   *\n   * @param   motion          開始するモーション\n   * @param   autoDelete      再生が終了したモーションのインスタンスを削除するなら true\n   * @param   userTimeSeconds Deprecated: デルタ時間の積算値[秒] 関数内で参照していないため使用は非推奨。\n   * @return                      開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するIsFinished()の引数で使用する。開始できない時は「-1」\n   */ startMotion(motion, autoDelete, userTimeSeconds) {\n        if (motion == null) {\n            return InvalidMotionQueueEntryHandleValue;\n        }\n        let motionQueueEntry = null;\n        // 既にモーションがあれば終了フラグを立てる\n        for(let i = 0; i < this._motions.getSize(); ++i){\n            motionQueueEntry = this._motions.at(i);\n            if (motionQueueEntry == null) {\n                continue;\n            }\n            motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime()); // フェードアウト設定\n        }\n        motionQueueEntry = new _cubismmotionqueueentry__WEBPACK_IMPORTED_MODULE_0__.CubismMotionQueueEntry(); // 終了時に破棄する\n        motionQueueEntry._autoDelete = autoDelete;\n        motionQueueEntry._motion = motion;\n        this._motions.pushBack(motionQueueEntry);\n        return motionQueueEntry._motionQueueEntryHandle;\n    }\n    /**\n   * 全てのモーションの終了の確認\n   * @return true 全て終了している\n   * @return false 終了していない\n   */ isFinished() {\n        // ------- 処理を行う -------\n        // 既にモーションがあれば終了フラグを立てる\n        for(let ite = this._motions.begin(); ite.notEqual(this._motions.end());){\n            let motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                ite = this._motions.erase(ite); // 削除\n                continue;\n            }\n            const motion = motionQueueEntry._motion;\n            if (motion == null) {\n                motionQueueEntry.release();\n                motionQueueEntry = null;\n                ite = this._motions.erase(ite); // 削除\n                continue;\n            }\n            // ----- 終了済みの処理があれば削除する ------\n            if (!motionQueueEntry.isFinished()) {\n                return false;\n            } else {\n                ite.preIncrement();\n            }\n        }\n        return true;\n    }\n    /**\n   * 指定したモーションの終了の確認\n   * @param motionQueueEntryNumber モーションの識別番号\n   * @return true 全て終了している\n   * @return false 終了していない\n   */ isFinishedByHandle(motionQueueEntryNumber) {\n        for(let ite = this._motions.begin(); ite.notEqual(this._motions.end()); ite.increment()){\n            const motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                continue;\n            }\n            if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n   * 全てのモーションを停止する\n   */ stopAllMotions() {\n        // ------- 処理を行う -------\n        // 既にモーションがあれば終了フラグを立てる\n        for(let ite = this._motions.begin(); ite.notEqual(this._motions.end());){\n            let motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                ite = this._motions.erase(ite);\n                continue;\n            }\n            // ----- 終了済みの処理があれば削除する ------\n            motionQueueEntry.release();\n            motionQueueEntry = null;\n            ite = this._motions.erase(ite); // 削除\n        }\n    }\n    /**\n   * @brief CubismMotionQueueEntryの配列の取得\n   *\n   * CubismMotionQueueEntryの配列を取得する。\n   *\n   * @return  CubismMotionQueueEntryの配列へのポインタ\n   * @retval  NULL   見つからなかった\n   */ getCubismMotionQueueEntries() {\n        return this._motions;\n    }\n    /**\n   * 指定したCubismMotionQueueEntryの取得\n\n   * @param   motionQueueEntryNumber  モーションの識別番号\n   * @return  指定したCubismMotionQueueEntry\n   * @return  null   見つからなかった\n   */ getCubismMotionQueueEntry(motionQueueEntryNumber) {\n        //------- 処理を行う -------\n        for(let ite = this._motions.begin(); ite.notEqual(this._motions.end()); ite.preIncrement()){\n            const motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                continue;\n            }\n            if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber) {\n                return motionQueueEntry;\n            }\n        }\n        return null;\n    }\n    /**\n   * イベントを受け取るCallbackの登録\n   *\n   * @param callback コールバック関数\n   * @param customData コールバックに返されるデータ\n   */ setEventCallback(callback, customData = null) {\n        this._eventCallBack = callback;\n        this._eventCustomData = customData;\n    }\n    /**\n   * モーションを更新して、モデルにパラメータ値を反映する。\n   *\n   * @param   model   対象のモデル\n   * @param   userTimeSeconds   デルタ時間の積算値[秒]\n   * @return  true    モデルへパラメータ値の反映あり\n   * @return  false   モデルへパラメータ値の反映なし(モーションの変化なし)\n   */ doUpdateMotion(model, userTimeSeconds) {\n        let updated = false;\n        // ------- 処理を行う --------\n        // 既にモーションがあれば終了フラグを立てる\n        for(let ite = this._motions.begin(); ite.notEqual(this._motions.end());){\n            let motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                ite = this._motions.erase(ite); // 削除\n                continue;\n            }\n            const motion = motionQueueEntry._motion;\n            if (motion == null) {\n                motionQueueEntry.release();\n                motionQueueEntry = null;\n                ite = this._motions.erase(ite); // 削除\n                continue;\n            }\n            // ------ 値を反映する ------\n            motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n            updated = true;\n            // ------ ユーザトリガーイベントを検査する ----\n            const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n            for(let i = 0; i < firedList.getSize(); ++i){\n                this._eventCallBack(this, firedList.at(i), this._eventCustomData);\n            }\n            motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n            // ------ 終了済みの処理があれば削除する ------\n            if (motionQueueEntry.isFinished()) {\n                motionQueueEntry.release();\n                motionQueueEntry = null;\n                ite = this._motions.erase(ite); // 削除\n            } else {\n                if (motionQueueEntry.isTriggeredFadeOut()) {\n                    motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n                }\n                ite.preIncrement();\n            }\n        }\n        return updated;\n    }\n}\nconst InvalidMotionQueueEntryHandleValue = -1;\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionQueueManager = _cubismmotionqueuemanager__WEBPACK_IMPORTED_MODULE_2__.CubismMotionQueueManager;\n    Live2DCubismFramework.InvalidMotionQueueEntryHandleValue = _cubismmotionqueuemanager__WEBPACK_IMPORTED_MODULE_2__.InvalidMotionQueueEntryHandleValue;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/motion/cubismmotionqueuemanager.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/physics/cubismphysics.ts":
/*!*******************************************************!*\
  !*** ./WebSDK/Framework/src/physics/cubismphysics.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismPhysics: () => (/* binding */ CubismPhysics),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework),\n/* harmony export */   Options: () => (/* binding */ Options),\n/* harmony export */   PhysicsOutput: () => (/* binding */ PhysicsOutput)\n/* harmony export */ });\n/* harmony import */ var _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math/cubismmath */ \"(ssr)/./WebSDK/Framework/src/math/cubismmath.ts\");\n/* harmony import */ var _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math/cubismvector2 */ \"(ssr)/./WebSDK/Framework/src/math/cubismvector2.ts\");\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cubismphysicsinternal */ \"(ssr)/./WebSDK/Framework/src/physics/cubismphysicsinternal.ts\");\n/* harmony import */ var _cubismphysicsjson__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cubismphysicsjson */ \"(ssr)/./WebSDK/Framework/src/physics/cubismphysicsjson.ts\");\n/* harmony import */ var _cubismphysics__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cubismphysics */ \"(ssr)/./WebSDK/Framework/src/physics/cubismphysics.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n\n// physics types tags.\nconst PhysicsTypeTagX = 'X';\nconst PhysicsTypeTagY = 'Y';\nconst PhysicsTypeTagAngle = 'Angle';\n// Constant of air resistance.\nconst AirResistance = 5.0;\n// Constant of maximum weight of input and output ratio.\nconst MaximumWeight = 100.0;\n// Constant of threshold of movement.\nconst MovementThreshold = 0.001;\n// Constant of maximum allowed delta time\nconst MaxDeltaTime = 5.0;\n/**\n * 物理演算クラス\n */ class CubismPhysics {\n    /**\n   * インスタンスの作成\n   * @param buffer    physics3.jsonが読み込まれているバッファ\n   * @param size      バッファのサイズ\n   * @return 作成されたインスタンス\n   */ static create(buffer, size) {\n        const ret = new CubismPhysics();\n        ret.parse(buffer, size);\n        ret._physicsRig.gravity.y = 0;\n        return ret;\n    }\n    /**\n   * インスタンスを破棄する\n   * @param physics 破棄するインスタンス\n   */ static delete(physics) {\n        if (physics != null) {\n            physics.release();\n            physics = null;\n        }\n    }\n    /**\n   * physics3.jsonをパースする。\n   * @param physicsJson physics3.jsonが読み込まれているバッファ\n   * @param size バッファのサイズ\n   */ parse(physicsJson, size) {\n        this._physicsRig = new _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsRig();\n        let json = new _cubismphysicsjson__WEBPACK_IMPORTED_MODULE_4__.CubismPhysicsJson(physicsJson, size);\n        this._physicsRig.gravity = json.getGravity();\n        this._physicsRig.wind = json.getWind();\n        this._physicsRig.subRigCount = json.getSubRigCount();\n        this._physicsRig.fps = json.getFps();\n        this._physicsRig.settings.updateSize(this._physicsRig.subRigCount, _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsSubRig, true);\n        this._physicsRig.inputs.updateSize(json.getTotalInputCount(), _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsInput, true);\n        this._physicsRig.outputs.updateSize(json.getTotalOutputCount(), _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsOutput, true);\n        this._physicsRig.particles.updateSize(json.getVertexCount(), _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsParticle, true);\n        this._currentRigOutputs.clear();\n        this._previousRigOutputs.clear();\n        let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n        for(let i = 0; i < this._physicsRig.settings.getSize(); ++i){\n            this._physicsRig.settings.at(i).normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n            this._physicsRig.settings.at(i).normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n            this._physicsRig.settings.at(i).normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n            this._physicsRig.settings.at(i).normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n            this._physicsRig.settings.at(i).normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n            this._physicsRig.settings.at(i).normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n            // Input\n            this._physicsRig.settings.at(i).inputCount = json.getInputCount(i);\n            this._physicsRig.settings.at(i).baseInputIndex = inputIndex;\n            for(let j = 0; j < this._physicsRig.settings.at(i).inputCount; ++j){\n                this._physicsRig.inputs.at(inputIndex + j).sourceParameterIndex = -1;\n                this._physicsRig.inputs.at(inputIndex + j).weight = json.getInputWeight(i, j);\n                this._physicsRig.inputs.at(inputIndex + j).reflect = json.getInputReflect(i, j);\n                if (json.getInputType(i, j) == PhysicsTypeTagX) {\n                    this._physicsRig.inputs.at(inputIndex + j).type = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsSource.CubismPhysicsSource_X;\n                    this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n                } else if (json.getInputType(i, j) == PhysicsTypeTagY) {\n                    this._physicsRig.inputs.at(inputIndex + j).type = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsSource.CubismPhysicsSource_Y;\n                    this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n                } else if (json.getInputType(i, j) == PhysicsTypeTagAngle) {\n                    this._physicsRig.inputs.at(inputIndex + j).type = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsSource.CubismPhysicsSource_Angle;\n                    this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n                }\n                this._physicsRig.inputs.at(inputIndex + j).source.targetType = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n                this._physicsRig.inputs.at(inputIndex + j).source.id = json.getInputSourceId(i, j);\n            }\n            inputIndex += this._physicsRig.settings.at(i).inputCount;\n            // Output\n            this._physicsRig.settings.at(i).outputCount = json.getOutputCount(i);\n            this._physicsRig.settings.at(i).baseOutputIndex = outputIndex;\n            const currentRigOutput = new PhysicsOutput();\n            currentRigOutput.outputs.resize(this._physicsRig.settings.at(i).outputCount);\n            const previousRigOutput = new PhysicsOutput();\n            previousRigOutput.outputs.resize(this._physicsRig.settings.at(i).outputCount);\n            for(let j = 0; j < this._physicsRig.settings.at(i).outputCount; ++j){\n                // initialize\n                currentRigOutput.outputs.set(j, 0.0);\n                previousRigOutput.outputs.set(j, 0.0);\n                this._physicsRig.outputs.at(outputIndex + j).destinationParameterIndex = -1;\n                this._physicsRig.outputs.at(outputIndex + j).vertexIndex = json.getOutputVertexIndex(i, j);\n                this._physicsRig.outputs.at(outputIndex + j).angleScale = json.getOutputAngleScale(i, j);\n                this._physicsRig.outputs.at(outputIndex + j).weight = json.getOutputWeight(i, j);\n                this._physicsRig.outputs.at(outputIndex + j).destination.targetType = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n                this._physicsRig.outputs.at(outputIndex + j).destination.id = json.getOutputDestinationId(i, j);\n                if (json.getOutputType(i, j) == PhysicsTypeTagX) {\n                    this._physicsRig.outputs.at(outputIndex + j).type = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsSource.CubismPhysicsSource_X;\n                    this._physicsRig.outputs.at(outputIndex + j).getValue = getOutputTranslationX;\n                    this._physicsRig.outputs.at(outputIndex + j).getScale = getOutputScaleTranslationX;\n                } else if (json.getOutputType(i, j) == PhysicsTypeTagY) {\n                    this._physicsRig.outputs.at(outputIndex + j).type = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsSource.CubismPhysicsSource_Y;\n                    this._physicsRig.outputs.at(outputIndex + j).getValue = getOutputTranslationY;\n                    this._physicsRig.outputs.at(outputIndex + j).getScale = getOutputScaleTranslationY;\n                } else if (json.getOutputType(i, j) == PhysicsTypeTagAngle) {\n                    this._physicsRig.outputs.at(outputIndex + j).type = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsSource.CubismPhysicsSource_Angle;\n                    this._physicsRig.outputs.at(outputIndex + j).getValue = getOutputAngle;\n                    this._physicsRig.outputs.at(outputIndex + j).getScale = getOutputScaleAngle;\n                }\n                this._physicsRig.outputs.at(outputIndex + j).reflect = json.getOutputReflect(i, j);\n            }\n            this._currentRigOutputs.pushBack(currentRigOutput);\n            this._previousRigOutputs.pushBack(previousRigOutput);\n            outputIndex += this._physicsRig.settings.at(i).outputCount;\n            // Particle\n            this._physicsRig.settings.at(i).particleCount = json.getParticleCount(i);\n            this._physicsRig.settings.at(i).baseParticleIndex = particleIndex;\n            for(let j = 0; j < this._physicsRig.settings.at(i).particleCount; ++j){\n                this._physicsRig.particles.at(particleIndex + j).mobility = json.getParticleMobility(i, j);\n                this._physicsRig.particles.at(particleIndex + j).delay = json.getParticleDelay(i, j);\n                this._physicsRig.particles.at(particleIndex + j).acceleration = json.getParticleAcceleration(i, j);\n                this._physicsRig.particles.at(particleIndex + j).radius = json.getParticleRadius(i, j);\n                this._physicsRig.particles.at(particleIndex + j).position = json.getParticlePosition(i, j);\n            }\n            particleIndex += this._physicsRig.settings.at(i).particleCount;\n        }\n        this.initialize();\n        json.release();\n        json = void 0;\n        json = null;\n    }\n    /**\n   * 現在のパラメータ値で物理演算が安定化する状態を演算する。\n   * @param model 物理演算の結果を適用するモデル\n   */ stabilization(model) {\n        let totalAngle;\n        let weight;\n        let radAngle;\n        let outputValue;\n        const totalTranslation = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2();\n        let currentSetting;\n        let currentInputs;\n        let currentOutputs;\n        let currentParticles;\n        const parameterValues = model.getModel().parameters.values;\n        const parameterMaximumValues = model.getModel().parameters.maximumValues;\n        const parameterMinimumValues = model.getModel().parameters.minimumValues;\n        const parameterDefaultValues = model.getModel().parameters.defaultValues;\n        if ((this._parameterCaches?.length ?? 0) < model.getParameterCount()) {\n            this._parameterCaches = new Float32Array(model.getParameterCount());\n        }\n        if ((this._parameterInputCaches?.length ?? 0) < model.getParameterCount()) {\n            this._parameterInputCaches = new Float32Array(model.getParameterCount());\n        }\n        for(let j = 0; j < model.getParameterCount(); ++j){\n            this._parameterCaches[j] = parameterValues[j];\n            this._parameterInputCaches[j] = parameterValues[j];\n        }\n        for(let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex){\n            totalAngle = {\n                angle: 0.0\n            };\n            totalTranslation.x = 0.0;\n            totalTranslation.y = 0.0;\n            currentSetting = this._physicsRig.settings.at(settingIndex);\n            currentInputs = this._physicsRig.inputs.get(currentSetting.baseInputIndex);\n            currentOutputs = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\n            currentParticles = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\n            // Load input parameters\n            for(let i = 0; i < currentSetting.inputCount; ++i){\n                weight = currentInputs[i].weight / MaximumWeight;\n                if (currentInputs[i].sourceParameterIndex == -1) {\n                    currentInputs[i].sourceParameterIndex = model.getParameterIndex(currentInputs[i].source.id);\n                }\n                currentInputs[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValues[currentInputs[i].sourceParameterIndex], parameterMinimumValues[currentInputs[i].sourceParameterIndex], parameterMaximumValues[currentInputs[i].sourceParameterIndex], parameterDefaultValues[currentInputs[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInputs[i].reflect, weight);\n                this._parameterCaches[currentInputs[i].sourceParameterIndex] = parameterValues[currentInputs[i].sourceParameterIndex];\n            }\n            radAngle = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.degreesToRadian(-totalAngle.angle);\n            totalTranslation.x = totalTranslation.x * _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.cos(radAngle) - totalTranslation.y * _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.sin(radAngle);\n            totalTranslation.y = totalTranslation.x * _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.sin(radAngle) + totalTranslation.y * _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.cos(radAngle);\n            // Calculate particles position.\n            updateParticlesForStabilization(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum);\n            // Update output parameters.\n            for(let i = 0; i < currentSetting.outputCount; ++i){\n                const particleIndex = currentOutputs[i].vertexIndex;\n                if (currentOutputs[i].destinationParameterIndex == -1) {\n                    currentOutputs[i].destinationParameterIndex = model.getParameterIndex(currentOutputs[i].destination.id);\n                }\n                if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n                    continue;\n                }\n                let translation = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2();\n                translation = currentParticles[particleIndex].position.substract(currentParticles[particleIndex - 1].position);\n                outputValue = currentOutputs[i].getValue(translation, currentParticles, particleIndex, currentOutputs[i].reflect, this._options.gravity);\n                this._currentRigOutputs.at(settingIndex).outputs.set(i, outputValue);\n                this._previousRigOutputs.at(settingIndex).outputs.set(i, outputValue);\n                const destinationParameterIndex = currentOutputs[i].destinationParameterIndex;\n                const outParameterCaches = !Float32Array.prototype.slice && 'subarray' in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValues.subarray(destinationParameterIndex))) // 値渡しするため、JSON.parse, JSON.stringify\n                 : parameterValues.slice(destinationParameterIndex);\n                updateOutputParameterValue(outParameterCaches, parameterMinimumValues[destinationParameterIndex], parameterMaximumValues[destinationParameterIndex], outputValue, currentOutputs[i]);\n                // 値を反映\n                for(let offset = destinationParameterIndex, outParamIndex = 0; offset < this._parameterCaches.length; offset++, outParamIndex++){\n                    parameterValues[offset] = this._parameterCaches[offset] = outParameterCaches[outParamIndex];\n                }\n            }\n        }\n    }\n    /**\n   * 物理演算の評価\n   *\n   * Pendulum interpolation weights\n   *\n   * 振り子の計算結果は保存され、パラメータへの出力は保存された前回の結果で補間されます。\n   * The result of the pendulum calculation is saved and\n   * the output to the parameters is interpolated with the saved previous result of the pendulum calculation.\n   *\n   * 図で示すと[1]と[2]で補間されます。\n   * The figure shows the interpolation between [1] and [2].\n   *\n   * 補間の重みは最新の振り子計算タイミングと次回のタイミングの間で見た現在時間で決定する。\n   * The weight of the interpolation are determined by the current time seen between\n   * the latest pendulum calculation timing and the next timing.\n   *\n   * 図で示すと[2]と[4]の間でみた(3)の位置の重みになる。\n   * Figure shows the weight of position (3) as seen between [2] and [4].\n   *\n   * 解釈として振り子計算のタイミングと重み計算のタイミングがズレる。\n   * As an interpretation, the pendulum calculation and weights are misaligned.\n   *\n   * physics3.jsonにFPS情報が存在しない場合は常に前の振り子状態で設定される。\n   * If there is no FPS information in physics3.json, it is always set in the previous pendulum state.\n   *\n   * この仕様は補間範囲を逸脱したことが原因の震えたような見た目を回避を目的にしている。\n   * The purpose of this specification is to avoid the quivering appearance caused by deviations from the interpolation range.\n   *\n   * ------------ time -------------->\n   *\n   *                 |+++++|------| <- weight\n   * ==[1]====#=====[2]---(3)----(4)\n   *          ^ output contents\n   *\n   * 1:_previousRigOutputs\n   * 2:_currentRigOutputs\n   * 3:_currentRemainTime (now rendering)\n   * 4:next particles timing\n   * @param model 物理演算の結果を適用するモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */ evaluate(model, deltaTimeSeconds) {\n        let totalAngle;\n        let weight;\n        let radAngle;\n        let outputValue;\n        const totalTranslation = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2();\n        let currentSetting;\n        let currentInputs;\n        let currentOutputs;\n        let currentParticles;\n        if (0.0 >= deltaTimeSeconds) {\n            return;\n        }\n        const parameterValues = model.getModel().parameters.values;\n        const parameterMaximumValues = model.getModel().parameters.maximumValues;\n        const parameterMinimumValues = model.getModel().parameters.minimumValues;\n        const parameterDefaultValues = model.getModel().parameters.defaultValues;\n        let physicsDeltaTime;\n        this._currentRemainTime += deltaTimeSeconds;\n        if (this._currentRemainTime > MaxDeltaTime) {\n            this._currentRemainTime = 0.0;\n        }\n        if ((this._parameterCaches?.length ?? 0) < model.getParameterCount()) {\n            this._parameterCaches = new Float32Array(model.getParameterCount());\n        }\n        if ((this._parameterInputCaches?.length ?? 0) < model.getParameterCount()) {\n            this._parameterInputCaches = new Float32Array(model.getParameterCount());\n            for(let j = 0; j < model.getParameterCount(); ++j){\n                this._parameterInputCaches[j] = parameterValues[j];\n            }\n        }\n        if (this._physicsRig.fps > 0.0) {\n            physicsDeltaTime = 1.0 / this._physicsRig.fps;\n        } else {\n            physicsDeltaTime = deltaTimeSeconds;\n        }\n        while(this._currentRemainTime >= physicsDeltaTime){\n            // copyRigOutputs _currentRigOutputs to _previousRigOutputs\n            for(let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex){\n                currentSetting = this._physicsRig.settings.at(settingIndex);\n                currentOutputs = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\n                for(let i = 0; i < currentSetting.outputCount; ++i){\n                    this._previousRigOutputs.at(settingIndex).outputs.set(i, this._currentRigOutputs.at(settingIndex).outputs.at(i));\n                }\n            }\n            // 入力キャッシュとパラメータで線形補間してUpdateParticlesするタイミングでの入力を計算する。\n            // Calculate the input at the timing to UpdateParticles by linear interpolation with the _parameterInputCache and parameterValue.\n            // _parameterCacheはグループ間での値の伝搬の役割があるので_parameterInputCacheとの分離が必要。\n            // _parameterCache needs to be separated from _parameterInputCache because of its role in propagating values between groups.\n            const inputWeight = physicsDeltaTime / this._currentRemainTime;\n            for(let j = 0; j < model.getParameterCount(); ++j){\n                this._parameterCaches[j] = this._parameterInputCaches[j] * (1.0 - inputWeight) + parameterValues[j] * inputWeight;\n                this._parameterInputCaches[j] = this._parameterCaches[j];\n            }\n            for(let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex){\n                totalAngle = {\n                    angle: 0.0\n                };\n                totalTranslation.x = 0.0;\n                totalTranslation.y = 0.0;\n                currentSetting = this._physicsRig.settings.at(settingIndex);\n                currentInputs = this._physicsRig.inputs.get(currentSetting.baseInputIndex);\n                currentOutputs = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\n                currentParticles = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\n                // Load input parameters\n                for(let i = 0; i < currentSetting.inputCount; ++i){\n                    weight = currentInputs[i].weight / MaximumWeight;\n                    if (currentInputs[i].sourceParameterIndex == -1) {\n                        currentInputs[i].sourceParameterIndex = model.getParameterIndex(currentInputs[i].source.id);\n                    }\n                    currentInputs[i].getNormalizedParameterValue(totalTranslation, totalAngle, this._parameterCaches[currentInputs[i].sourceParameterIndex], parameterMinimumValues[currentInputs[i].sourceParameterIndex], parameterMaximumValues[currentInputs[i].sourceParameterIndex], parameterDefaultValues[currentInputs[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInputs[i].reflect, weight);\n                }\n                radAngle = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.degreesToRadian(-totalAngle.angle);\n                totalTranslation.x = totalTranslation.x * _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.cos(radAngle) - totalTranslation.y * _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.sin(radAngle);\n                totalTranslation.y = totalTranslation.x * _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.sin(radAngle) + totalTranslation.y * _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.cos(radAngle);\n                // Calculate particles position.\n                updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, physicsDeltaTime, AirResistance);\n                // Update output parameters.\n                for(let i = 0; i < currentSetting.outputCount; ++i){\n                    const particleIndex = currentOutputs[i].vertexIndex;\n                    if (currentOutputs[i].destinationParameterIndex == -1) {\n                        currentOutputs[i].destinationParameterIndex = model.getParameterIndex(currentOutputs[i].destination.id);\n                    }\n                    if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n                        continue;\n                    }\n                    const translation = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2();\n                    translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n                    translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n                    outputValue = currentOutputs[i].getValue(translation, currentParticles, particleIndex, currentOutputs[i].reflect, this._options.gravity);\n                    this._currentRigOutputs.at(settingIndex).outputs.set(i, outputValue);\n                    const destinationParameterIndex = currentOutputs[i].destinationParameterIndex;\n                    const outParameterCaches = !Float32Array.prototype.slice && 'subarray' in Float32Array.prototype ? JSON.parse(JSON.stringify(this._parameterCaches.subarray(destinationParameterIndex))) // 値渡しするため、JSON.parse, JSON.stringify\n                     : this._parameterCaches.slice(destinationParameterIndex);\n                    updateOutputParameterValue(outParameterCaches, parameterMinimumValues[destinationParameterIndex], parameterMaximumValues[destinationParameterIndex], outputValue, currentOutputs[i]);\n                    // 値を反映\n                    for(let offset = destinationParameterIndex, outParamIndex = 0; offset < this._parameterCaches.length; offset++, outParamIndex++){\n                        this._parameterCaches[offset] = outParameterCaches[outParamIndex];\n                    }\n                }\n            }\n            this._currentRemainTime -= physicsDeltaTime;\n        }\n        const alpha = this._currentRemainTime / physicsDeltaTime;\n        this.interpolate(model, alpha);\n    }\n    /**\n   * 物理演算結果の適用\n   * 振り子演算の最新の結果と一つ前の結果から指定した重みで適用する。\n   * @param model 物理演算の結果を適用するモデル\n   * @param weight 最新結果の重み\n   */ interpolate(model, weight) {\n        let currentOutputs;\n        let currentSetting;\n        const parameterValues = model.getModel().parameters.values;\n        const parameterMaximumValues = model.getModel().parameters.maximumValues;\n        const parameterMinimumValues = model.getModel().parameters.minimumValues;\n        for(let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex){\n            currentSetting = this._physicsRig.settings.at(settingIndex);\n            currentOutputs = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\n            // Load input parameters.\n            for(let i = 0; i < currentSetting.outputCount; ++i){\n                if (currentOutputs[i].destinationParameterIndex == -1) {\n                    continue;\n                }\n                const destinationParameterIndex = currentOutputs[i].destinationParameterIndex;\n                const outParameterValues = !Float32Array.prototype.slice && 'subarray' in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValues.subarray(destinationParameterIndex))) // 値渡しするため、JSON.parse, JSON.stringify\n                 : parameterValues.slice(destinationParameterIndex);\n                updateOutputParameterValue(outParameterValues, parameterMinimumValues[destinationParameterIndex], parameterMaximumValues[destinationParameterIndex], this._previousRigOutputs.at(settingIndex).outputs.at(i) * (1 - weight) + this._currentRigOutputs.at(settingIndex).outputs.at(i) * weight, currentOutputs[i]);\n                // 値を反映\n                for(let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValues.length; offset++, outParamIndex++){\n                    parameterValues[offset] = outParameterValues[outParamIndex];\n                }\n            }\n        }\n    }\n    /**\n   * オプションの設定\n   * @param options オプション\n   */ setOptions(options) {\n        this._options = options;\n    }\n    /**\n   * オプションの取得\n   * @return オプション\n   */ getOption() {\n        return this._options;\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        this._physicsRig = null;\n        // set default options\n        this._options = new Options();\n        this._options.gravity.y = -1.0;\n        this._options.gravity.x = 0.0;\n        this._options.wind.x = 0.0;\n        this._options.wind.y = 0.0;\n        this._currentRigOutputs = new _type_csmvector__WEBPACK_IMPORTED_MODULE_2__.csmVector();\n        this._previousRigOutputs = new _type_csmvector__WEBPACK_IMPORTED_MODULE_2__.csmVector();\n        this._currentRemainTime = 0.0;\n        this._parameterCaches = null;\n        this._parameterInputCaches = null;\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        this._physicsRig = void 0;\n        this._physicsRig = null;\n    }\n    /**\n   * 初期化する\n   */ initialize() {\n        let strand;\n        let currentSetting;\n        let radius;\n        for(let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex){\n            currentSetting = this._physicsRig.settings.at(settingIndex);\n            strand = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\n            // Initialize the top of particle.\n            strand[0].initialPosition = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n            strand[0].lastPosition = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n            strand[0].lastGravity = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, -1.0);\n            strand[0].lastGravity.y *= -1.0;\n            strand[0].velocity = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n            strand[0].force = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n            // Initialize particles.\n            for(let i = 1; i < currentSetting.particleCount; ++i){\n                radius = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n                radius.y = strand[i].radius;\n                strand[i].initialPosition = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n                strand[i].position = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n                strand[i].lastPosition = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n                strand[i].lastGravity = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, -1.0);\n                strand[i].lastGravity.y *= -1.0;\n                strand[i].velocity = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n                strand[i].force = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n            }\n        }\n    }\n}\n/**\n * 物理演算のオプション\n */ class Options {\n    constructor(){\n        this.gravity = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0, 0);\n        this.wind = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0, 0);\n    }\n}\n/**\n * パラメータに適用する前の物理演算の出力結果\n */ class PhysicsOutput {\n    constructor(){\n        this.outputs = new _type_csmvector__WEBPACK_IMPORTED_MODULE_2__.csmVector(0);\n    }\n}\n/**\n * Gets sign.\n *\n * @param value Evaluation target value.\n *\n * @return Sign of value.\n */ function sign(value) {\n    let ret = 0;\n    if (value > 0.0) {\n        ret = 1;\n    } else if (value < 0.0) {\n        ret = -1;\n    }\n    return ret;\n}\nfunction getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n    targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n}\nfunction getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.x;\n    if (isInverted) {\n        outputValue *= -1.0;\n    }\n    return outputValue;\n}\nfunction getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.y;\n    if (isInverted) {\n        outputValue *= -1.0;\n    }\n    return outputValue;\n}\nfunction getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue;\n    if (particleIndex >= 2) {\n        parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n    } else {\n        parentGravity = parentGravity.multiplyByScaler(-1.0);\n    }\n    outputValue = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.directionToRadian(parentGravity, translation);\n    if (isInverted) {\n        outputValue *= -1.0;\n    }\n    return outputValue;\n}\nfunction getRangeValue(min, max) {\n    const maxValue = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.max(min, max);\n    const minValue = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.min(min, max);\n    return _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.abs(maxValue - minValue);\n}\nfunction getDefaultValue(min, max) {\n    const minValue = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.min(min, max);\n    return minValue + getRangeValue(min, max) / 2.0;\n}\nfunction getOutputScaleTranslationX(translationScale, angleScale) {\n    return JSON.parse(JSON.stringify(translationScale.x));\n}\nfunction getOutputScaleTranslationY(translationScale, angleScale) {\n    return JSON.parse(JSON.stringify(translationScale.y));\n}\nfunction getOutputScaleAngle(translationScale, angleScale) {\n    return JSON.parse(JSON.stringify(angleScale));\n}\n/**\n * Updates particles.\n *\n * @param strand                Target array of particle.\n * @param strandCount           Count of particle.\n * @param totalTranslation      Total translation value.\n * @param totalAngle            Total angle.\n * @param windDirection         Direction of Wind.\n * @param thresholdValue        Threshold of movement.\n * @param deltaTimeSeconds      Delta time.\n * @param airResistance         Air resistance.\n */ function updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n    let delay;\n    let radian;\n    let direction = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n    let velocity = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n    let force = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n    let newDirection = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n    strand[0].position = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(totalTranslation.x, totalTranslation.y);\n    const totalRadian = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.degreesToRadian(totalAngle);\n    const currentGravity = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.radianToDirection(totalRadian);\n    currentGravity.normalize();\n    for(let i = 1; i < strandCount; ++i){\n        strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n        strand[i].lastPosition = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(strand[i].position.x, strand[i].position.y);\n        delay = strand[i].delay * deltaTimeSeconds * 30.0;\n        direction = strand[i].position.substract(strand[i - 1].position);\n        radian = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n        direction.x = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.cos(radian) * direction.x - direction.y * _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.sin(radian);\n        direction.y = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.sin(radian) * direction.x + direction.y * _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.cos(radian);\n        strand[i].position = strand[i - 1].position.add(direction);\n        velocity = strand[i].velocity.multiplyByScaler(delay);\n        force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n        strand[i].position = strand[i].position.add(velocity).add(force);\n        newDirection = strand[i].position.substract(strand[i - 1].position);\n        newDirection.normalize();\n        strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n        if (_math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.abs(strand[i].position.x) < thresholdValue) {\n            strand[i].position.x = 0.0;\n        }\n        if (delay != 0.0) {\n            strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n            strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n            strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n        }\n        strand[i].force = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n        strand[i].lastGravity = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(currentGravity.x, currentGravity.y);\n    }\n}\n/**\n * Updates particles for stabilization.\n *\n * @param strand                Target array of particle.\n * @param strandCount           Count of particle.\n * @param totalTranslation      Total translation value.\n * @param totalAngle            Total angle.\n * @param windDirection         Direction of Wind.\n * @param thresholdValue        Threshold of movement.\n */ function updateParticlesForStabilization(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue) {\n    let force = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n    strand[0].position = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(totalTranslation.x, totalTranslation.y);\n    const totalRadian = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.degreesToRadian(totalAngle);\n    const currentGravity = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.radianToDirection(totalRadian);\n    currentGravity.normalize();\n    for(let i = 1; i < strandCount; ++i){\n        strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n        strand[i].lastPosition = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(strand[i].position.x, strand[i].position.y);\n        strand[i].velocity = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n        force = strand[i].force;\n        force.normalize();\n        force = force.multiplyByScaler(strand[i].radius);\n        strand[i].position = strand[i - 1].position.add(force);\n        if (_math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.abs(strand[i].position.x) < thresholdValue) {\n            strand[i].position.x = 0.0;\n        }\n        strand[i].force = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0.0, 0.0);\n        strand[i].lastGravity = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(currentGravity.x, currentGravity.y);\n    }\n}\n/**\n * Updates output parameter value.\n * @param parameterValue            Target parameter value.\n * @param parameterValueMinimum     Minimum of parameter value.\n * @param parameterValueMaximum     Maximum of parameter value.\n * @param translation               Translation value.\n */ function updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n    let value;\n    const outputScale = output.getScale(output.translationScale, output.angleScale);\n    value = translation * outputScale;\n    if (value < parameterValueMinimum) {\n        if (value < output.valueBelowMinimum) {\n            output.valueBelowMinimum = value;\n        }\n        value = parameterValueMinimum;\n    } else if (value > parameterValueMaximum) {\n        if (value > output.valueExceededMaximum) {\n            output.valueExceededMaximum = value;\n        }\n        value = parameterValueMaximum;\n    }\n    const weight = output.weight / MaximumWeight;\n    if (weight >= 1.0) {\n        parameterValue[0] = value;\n    } else {\n        value = parameterValue[0] * (1.0 - weight) + value * weight;\n        parameterValue[0] = value;\n    }\n}\nfunction normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n    let result = 0.0;\n    const maxValue = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.max(parameterMaximum, parameterMinimum);\n    if (maxValue < value) {\n        value = maxValue;\n    }\n    const minValue = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.min(parameterMaximum, parameterMinimum);\n    if (minValue > value) {\n        value = minValue;\n    }\n    const minNormValue = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.min(normalizedMinimum, normalizedMaximum);\n    const maxNormValue = _math_cubismmath__WEBPACK_IMPORTED_MODULE_0__.CubismMath.max(normalizedMinimum, normalizedMaximum);\n    const middleNormValue = normalizedDefault;\n    const middleValue = getDefaultValue(minValue, maxValue);\n    const paramValue = value - middleValue;\n    switch(sign(paramValue)){\n        case 1:\n            {\n                const nLength = maxNormValue - middleNormValue;\n                const pLength = maxValue - middleValue;\n                if (pLength != 0.0) {\n                    result = paramValue * (nLength / pLength);\n                    result += middleNormValue;\n                }\n                break;\n            }\n        case -1:\n            {\n                const nLength = minNormValue - middleNormValue;\n                const pLength = minValue - middleValue;\n                if (pLength != 0.0) {\n                    result = paramValue * (nLength / pLength);\n                    result += middleNormValue;\n                }\n                break;\n            }\n        case 0:\n            {\n                result = middleNormValue;\n                break;\n            }\n        default:\n            {\n                break;\n            }\n    }\n    return isInverted ? result : result * -1.0;\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismPhysics = _cubismphysics__WEBPACK_IMPORTED_MODULE_5__.CubismPhysics;\n    Live2DCubismFramework.Options = _cubismphysics__WEBPACK_IMPORTED_MODULE_5__.Options;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/physics/cubismphysics.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/physics/cubismphysicsinternal.ts":
/*!***************************************************************!*\
  !*** ./WebSDK/Framework/src/physics/cubismphysicsinternal.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismPhysicsInput: () => (/* binding */ CubismPhysicsInput),\n/* harmony export */   CubismPhysicsNormalization: () => (/* binding */ CubismPhysicsNormalization),\n/* harmony export */   CubismPhysicsOutput: () => (/* binding */ CubismPhysicsOutput),\n/* harmony export */   CubismPhysicsParameter: () => (/* binding */ CubismPhysicsParameter),\n/* harmony export */   CubismPhysicsParticle: () => (/* binding */ CubismPhysicsParticle),\n/* harmony export */   CubismPhysicsRig: () => (/* binding */ CubismPhysicsRig),\n/* harmony export */   CubismPhysicsSource: () => (/* binding */ CubismPhysicsSource),\n/* harmony export */   CubismPhysicsSubRig: () => (/* binding */ CubismPhysicsSubRig),\n/* harmony export */   CubismPhysicsTargetType: () => (/* binding */ CubismPhysicsTargetType),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework),\n/* harmony export */   PhysicsJsonEffectiveForces: () => (/* binding */ PhysicsJsonEffectiveForces)\n/* harmony export */ });\n/* harmony import */ var _math_cubismvector2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math/cubismvector2 */ \"(ssr)/./WebSDK/Framework/src/math/cubismvector2.ts\");\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubismphysicsinternal */ \"(ssr)/./WebSDK/Framework/src/physics/cubismphysicsinternal.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n/**\n * 物理演算の適用先の種類\n */ var CubismPhysicsTargetType = /*#__PURE__*/ function(CubismPhysicsTargetType) {\n    CubismPhysicsTargetType[CubismPhysicsTargetType[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\"; // パラメータに対して適用\n    return CubismPhysicsTargetType;\n}({});\n/**\n * 物理演算の入力の種類\n */ var CubismPhysicsSource = /*#__PURE__*/ function(CubismPhysicsSource) {\n    CubismPhysicsSource[CubismPhysicsSource[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n    CubismPhysicsSource[CubismPhysicsSource[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n    CubismPhysicsSource[CubismPhysicsSource[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\"; // 角度から\n    return CubismPhysicsSource;\n}({});\n/**\n * @brief 物理演算で使用する外部の力\n *\n * 物理演算で使用する外部の力。\n */ class PhysicsJsonEffectiveForces {\n    constructor(){\n        this.gravity = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_0__.CubismVector2(0, 0);\n        this.wind = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_0__.CubismVector2(0, 0);\n    }\n}\n/**\n * 物理演算のパラメータ情報\n */ class CubismPhysicsParameter {\n}\n/**\n * 物理演算の正規化情報\n */ class CubismPhysicsNormalization {\n}\n/**\n * 物理演算の演算委使用する物理点の情報\n */ class CubismPhysicsParticle {\n    constructor(){\n        this.initialPosition = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_0__.CubismVector2(0, 0);\n        this.position = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_0__.CubismVector2(0, 0);\n        this.lastPosition = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_0__.CubismVector2(0, 0);\n        this.lastGravity = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_0__.CubismVector2(0, 0);\n        this.force = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_0__.CubismVector2(0, 0);\n        this.velocity = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_0__.CubismVector2(0, 0);\n    }\n}\n/**\n * 物理演算の物理点の管理\n */ class CubismPhysicsSubRig {\n    constructor(){\n        this.normalizationPosition = new CubismPhysicsNormalization();\n        this.normalizationAngle = new CubismPhysicsNormalization();\n    }\n}\n/**\n * 物理演算の入力情報\n */ class CubismPhysicsInput {\n    constructor(){\n        this.source = new CubismPhysicsParameter();\n    }\n}\n/**\n * @brief 物理演算の出力情報\n *\n * 物理演算の出力情報。\n */ class CubismPhysicsOutput {\n    constructor(){\n        this.destination = new CubismPhysicsParameter();\n        this.translationScale = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_0__.CubismVector2(0, 0);\n    }\n}\n/**\n * @brief 物理演算のデータ\n *\n * 物理演算のデータ。\n */ class CubismPhysicsRig {\n    constructor(){\n        this.settings = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        this.inputs = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        this.outputs = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        this.particles = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        this.gravity = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_0__.CubismVector2(0, 0);\n        this.wind = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_0__.CubismVector2(0, 0);\n        this.fps = 0.0;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismPhysicsInput = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_2__.CubismPhysicsInput;\n    Live2DCubismFramework.CubismPhysicsNormalization = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_2__.CubismPhysicsNormalization;\n    Live2DCubismFramework.CubismPhysicsOutput = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_2__.CubismPhysicsOutput;\n    Live2DCubismFramework.CubismPhysicsParameter = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_2__.CubismPhysicsParameter;\n    Live2DCubismFramework.CubismPhysicsParticle = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_2__.CubismPhysicsParticle;\n    Live2DCubismFramework.CubismPhysicsRig = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_2__.CubismPhysicsRig;\n    Live2DCubismFramework.CubismPhysicsSource = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_2__.CubismPhysicsSource;\n    Live2DCubismFramework.CubismPhysicsSubRig = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_2__.CubismPhysicsSubRig;\n    Live2DCubismFramework.CubismPhysicsTargetType = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_2__.CubismPhysicsTargetType;\n    Live2DCubismFramework.PhysicsJsonEffectiveForces = _cubismphysicsinternal__WEBPACK_IMPORTED_MODULE_2__.PhysicsJsonEffectiveForces;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/physics/cubismphysicsinternal.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/physics/cubismphysicsjson.ts":
/*!***********************************************************!*\
  !*** ./WebSDK/Framework/src/physics/cubismphysicsjson.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismPhysicsJson: () => (/* binding */ CubismPhysicsJson),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math/cubismvector2 */ \"(ssr)/./WebSDK/Framework/src/math/cubismvector2.ts\");\n/* harmony import */ var _utils_cubismjson__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/cubismjson */ \"(ssr)/./WebSDK/Framework/src/utils/cubismjson.ts\");\n/* harmony import */ var _cubismphysicsjson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cubismphysicsjson */ \"(ssr)/./WebSDK/Framework/src/physics/cubismphysicsjson.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n// JSON keys\nconst Position = 'Position';\nconst X = 'X';\nconst Y = 'Y';\nconst Angle = 'Angle';\nconst Type = 'Type';\nconst Id = 'Id';\n// Meta\nconst Meta = 'Meta';\nconst EffectiveForces = 'EffectiveForces';\nconst TotalInputCount = 'TotalInputCount';\nconst TotalOutputCount = 'TotalOutputCount';\nconst PhysicsSettingCount = 'PhysicsSettingCount';\nconst Gravity = 'Gravity';\nconst Wind = 'Wind';\nconst VertexCount = 'VertexCount';\nconst Fps = 'Fps';\n// PhysicsSettings\nconst PhysicsSettings = 'PhysicsSettings';\nconst Normalization = 'Normalization';\nconst Minimum = 'Minimum';\nconst Maximum = 'Maximum';\nconst Default = 'Default';\nconst Reflect = 'Reflect';\nconst Weight = 'Weight';\n// Input\nconst Input = 'Input';\nconst Source = 'Source';\n// Output\nconst Output = 'Output';\nconst Scale = 'Scale';\nconst VertexIndex = 'VertexIndex';\nconst Destination = 'Destination';\n// Particle\nconst Vertices = 'Vertices';\nconst Mobility = 'Mobility';\nconst Delay = 'Delay';\nconst Radius = 'Radius';\nconst Acceleration = 'Acceleration';\n/**\n * physics3.jsonのコンテナ。\n */ class CubismPhysicsJson {\n    /**\n   * コンストラクタ\n   * @param buffer physics3.jsonが読み込まれているバッファ\n   * @param size バッファのサイズ\n   */ constructor(buffer, size){\n        this._json = _utils_cubismjson__WEBPACK_IMPORTED_MODULE_2__.CubismJson.create(buffer, size);\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        _utils_cubismjson__WEBPACK_IMPORTED_MODULE_2__.CubismJson.delete(this._json);\n    }\n    /**\n   * 重力の取得\n   * @return 重力\n   */ getGravity() {\n        const ret = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0, 0);\n        ret.x = this._json.getRoot().getValueByString(Meta).getValueByString(EffectiveForces).getValueByString(Gravity).getValueByString(X).toFloat();\n        ret.y = this._json.getRoot().getValueByString(Meta).getValueByString(EffectiveForces).getValueByString(Gravity).getValueByString(Y).toFloat();\n        return ret;\n    }\n    /**\n   * 風の取得\n   * @return 風\n   */ getWind() {\n        const ret = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0, 0);\n        ret.x = this._json.getRoot().getValueByString(Meta).getValueByString(EffectiveForces).getValueByString(Wind).getValueByString(X).toFloat();\n        ret.y = this._json.getRoot().getValueByString(Meta).getValueByString(EffectiveForces).getValueByString(Wind).getValueByString(Y).toFloat();\n        return ret;\n    }\n    /**\n   * 物理演算設定FPSの取得\n   * @return 物理演算設定FPS\n   */ getFps() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(Fps).toFloat(0.0);\n    }\n    /**\n   * 物理店の管理の個数の取得\n   * @return 物理店の管理の個数\n   */ getSubRigCount() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(PhysicsSettingCount).toInt();\n    }\n    /**\n   * 入力の総合計の取得\n   * @return 入力の総合計\n   */ getTotalInputCount() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(TotalInputCount).toInt();\n    }\n    /**\n   * 出力の総合計の取得\n   * @return 出力の総合計\n   */ getTotalOutputCount() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(TotalOutputCount).toInt();\n    }\n    /**\n   * 物理点の個数の取得\n   * @return 物理点の個数\n   */ getVertexCount() {\n        return this._json.getRoot().getValueByString(Meta).getValueByString(VertexCount).toInt();\n    }\n    /**\n   * 正規化された位置の最小値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された位置の最小値\n   */ getNormalizationPositionMinimumValue(physicsSettingIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Normalization).getValueByString(Position).getValueByString(Minimum).toFloat();\n    }\n    /**\n   * 正規化された位置の最大値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された位置の最大値\n   */ getNormalizationPositionMaximumValue(physicsSettingIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Normalization).getValueByString(Position).getValueByString(Maximum).toFloat();\n    }\n    /**\n   * 正規化された位置のデフォルト値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された位置のデフォルト値\n   */ getNormalizationPositionDefaultValue(physicsSettingIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Normalization).getValueByString(Position).getValueByString(Default).toFloat();\n    }\n    /**\n   * 正規化された角度の最小値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された角度の最小値\n   */ getNormalizationAngleMinimumValue(physicsSettingIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Normalization).getValueByString(Angle).getValueByString(Minimum).toFloat();\n    }\n    /**\n   * 正規化された角度の最大値の取得\n   * @param physicsSettingIndex\n   * @return 正規化された角度の最大値\n   */ getNormalizationAngleMaximumValue(physicsSettingIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Normalization).getValueByString(Angle).getValueByString(Maximum).toFloat();\n    }\n    /**\n   * 正規化された角度のデフォルト値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された角度のデフォルト値\n   */ getNormalizationAngleDefaultValue(physicsSettingIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Normalization).getValueByString(Angle).getValueByString(Default).toFloat();\n    }\n    /**\n   * 入力の個数の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 入力の個数\n   */ getInputCount(physicsSettingIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Input).getVector().getSize();\n    }\n    /**\n   * 入力の重みの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param inputIndex 入力のインデックス\n   * @return 入力の重み\n   */ getInputWeight(physicsSettingIndex, inputIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Input).getValueByIndex(inputIndex).getValueByString(Weight).toFloat();\n    }\n    /**\n   * 入力の反転の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param inputIndex 入力のインデックス\n   * @return 入力の反転\n   */ getInputReflect(physicsSettingIndex, inputIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Input).getValueByIndex(inputIndex).getValueByString(Reflect).toBoolean();\n    }\n    /**\n   * 入力の種類の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param inputIndex 入力のインデックス\n   * @return 入力の種類\n   */ getInputType(physicsSettingIndex, inputIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Input).getValueByIndex(inputIndex).getValueByString(Type).getRawString();\n    }\n    /**\n   * 入力元のIDの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param inputIndex 入力のインデックス\n   * @return 入力元のID\n   */ getInputSourceId(physicsSettingIndex, inputIndex) {\n        return _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Input).getValueByIndex(inputIndex).getValueByString(Source).getValueByString(Id).getRawString());\n    }\n    /**\n   * 出力の個数の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 出力の個数\n   */ getOutputCount(physicsSettingIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Output).getVector().getSize();\n    }\n    /**\n   * 出力の物理点のインデックスの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の物理点のインデックス\n   */ getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Output).getValueByIndex(outputIndex).getValueByString(VertexIndex).toInt();\n    }\n    /**\n   * 出力の角度のスケールを取得する\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の角度のスケール\n   */ getOutputAngleScale(physicsSettingIndex, outputIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Output).getValueByIndex(outputIndex).getValueByString(Scale).toFloat();\n    }\n    /**\n   * 出力の重みの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の重み\n   */ getOutputWeight(physicsSettingIndex, outputIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Output).getValueByIndex(outputIndex).getValueByString(Weight).toFloat();\n    }\n    /**\n   * 出力先のIDの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力先のID\n   */ getOutputDestinationId(physicsSettingIndex, outputIndex) {\n        return _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.getIdManager().getId(this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Output).getValueByIndex(outputIndex).getValueByString(Destination).getValueByString(Id).getRawString());\n    }\n    /**\n   * 出力の種類の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の種類\n   */ getOutputType(physicsSettingIndex, outputIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Output).getValueByIndex(outputIndex).getValueByString(Type).getRawString();\n    }\n    /**\n   * 出力の反転の取得\n   * @param physicsSettingIndex 物理演算のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の反転\n   */ getOutputReflect(physicsSettingIndex, outputIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Output).getValueByIndex(outputIndex).getValueByString(Reflect).toBoolean();\n    }\n    /**\n   * 物理点の個数の取得\n   * @param physicsSettingIndex 物理演算男設定のインデックス\n   * @return 物理点の個数\n   */ getParticleCount(physicsSettingIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Vertices).getVector().getSize();\n    }\n    /**\n   * 物理点の動きやすさの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の動きやすさ\n   */ getParticleMobility(physicsSettingIndex, vertexIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Vertices).getValueByIndex(vertexIndex).getValueByString(Mobility).toFloat();\n    }\n    /**\n   * 物理点の遅れの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の遅れ\n   */ getParticleDelay(physicsSettingIndex, vertexIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Vertices).getValueByIndex(vertexIndex).getValueByString(Delay).toFloat();\n    }\n    /**\n   * 物理点の加速度の取得\n   * @param physicsSettingIndex 物理演算の設定\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の加速度\n   */ getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Vertices).getValueByIndex(vertexIndex).getValueByString(Acceleration).toFloat();\n    }\n    /**\n   * 物理点の距離の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の距離\n   */ getParticleRadius(physicsSettingIndex, vertexIndex) {\n        return this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Vertices).getValueByIndex(vertexIndex).getValueByString(Radius).toFloat();\n    }\n    /**\n   * 物理点の位置の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param vertexInde 物理点のインデックス\n   * @return 物理点の位置\n   */ getParticlePosition(physicsSettingIndex, vertexIndex) {\n        const ret = new _math_cubismvector2__WEBPACK_IMPORTED_MODULE_1__.CubismVector2(0, 0);\n        ret.x = this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Vertices).getValueByIndex(vertexIndex).getValueByString(Position).getValueByString(X).toFloat();\n        ret.y = this._json.getRoot().getValueByString(PhysicsSettings).getValueByIndex(physicsSettingIndex).getValueByString(Vertices).getValueByIndex(vertexIndex).getValueByString(Position).getValueByString(Y).toFloat();\n        return ret;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismPhysicsJson = _cubismphysicsjson__WEBPACK_IMPORTED_MODULE_3__.CubismPhysicsJson;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/physics/cubismphysicsjson.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/rendering/cubismclippingmanager.ts":
/*!*****************************************************************!*\
  !*** ./WebSDK/Framework/src/rendering/cubismclippingmanager.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismClippingManager: () => (/* binding */ CubismClippingManager)\n/* harmony export */ });\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _type_csmrectf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/csmrectf */ \"(ssr)/./WebSDK/Framework/src/type/csmrectf.ts\");\n/* harmony import */ var _math_cubismmatrix44__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../math/cubismmatrix44 */ \"(ssr)/./WebSDK/Framework/src/math/cubismmatrix44.ts\");\n/* harmony import */ var _cubismrenderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cubismrenderer */ \"(ssr)/./WebSDK/Framework/src/rendering/cubismrenderer.ts\");\n/* harmony import */ var _utils_cubismdebug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/cubismdebug */ \"(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n\n\nconst ColorChannelCount = 4; // 実験時に1チャンネルの場合は1、RGBだけの場合は3、アルファも含める場合は4\nconst ClippingMaskMaxCountOnDefault = 36; // 通常のフレームバッファ一枚あたりのマスク最大数\nconst ClippingMaskMaxCountOnMultiRenderTexture = 32; // フレームバッファが2枚以上ある場合のフレームバッファ一枚あたりのマスク最大数\nclass CubismClippingManager {\n    /**\n   * コンストラクタ\n   */ constructor(clippingContextFactory){\n        this._renderTextureCount = 0;\n        this._clippingMaskBufferSize = 256;\n        this._clippingContextListForMask = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        this._clippingContextListForDraw = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        this._channelColors = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        this._tmpBoundsOnModel = new _type_csmrectf__WEBPACK_IMPORTED_MODULE_2__.csmRect();\n        this._tmpMatrix = new _math_cubismmatrix44__WEBPACK_IMPORTED_MODULE_3__.CubismMatrix44();\n        this._tmpMatrixForMask = new _math_cubismmatrix44__WEBPACK_IMPORTED_MODULE_3__.CubismMatrix44();\n        this._tmpMatrixForDraw = new _math_cubismmatrix44__WEBPACK_IMPORTED_MODULE_3__.CubismMatrix44();\n        this._clippingContexttConstructor = clippingContextFactory;\n        let tmp = new _cubismrenderer__WEBPACK_IMPORTED_MODULE_4__.CubismTextureColor();\n        tmp.r = 1.0;\n        tmp.g = 0.0;\n        tmp.b = 0.0;\n        tmp.a = 0.0;\n        this._channelColors.pushBack(tmp);\n        tmp = new _cubismrenderer__WEBPACK_IMPORTED_MODULE_4__.CubismTextureColor();\n        tmp.r = 0.0;\n        tmp.g = 1.0;\n        tmp.b = 0.0;\n        tmp.a = 0.0;\n        this._channelColors.pushBack(tmp);\n        tmp = new _cubismrenderer__WEBPACK_IMPORTED_MODULE_4__.CubismTextureColor();\n        tmp.r = 0.0;\n        tmp.g = 0.0;\n        tmp.b = 1.0;\n        tmp.a = 0.0;\n        this._channelColors.pushBack(tmp);\n        tmp = new _cubismrenderer__WEBPACK_IMPORTED_MODULE_4__.CubismTextureColor();\n        tmp.r = 0.0;\n        tmp.g = 0.0;\n        tmp.b = 0.0;\n        tmp.a = 1.0;\n        this._channelColors.pushBack(tmp);\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        for(let i = 0; i < this._clippingContextListForMask.getSize(); i++){\n            if (this._clippingContextListForMask.at(i)) {\n                this._clippingContextListForMask.at(i).release();\n                this._clippingContextListForMask.set(i, void 0);\n            }\n            this._clippingContextListForMask.set(i, null);\n        }\n        this._clippingContextListForMask = null;\n        // _clippingContextListForDrawは_clippingContextListForMaskにあるインスタンスを指している。上記の処理により要素ごとのDELETEは不要。\n        for(let i = 0; i < this._clippingContextListForDraw.getSize(); i++){\n            this._clippingContextListForDraw.set(i, null);\n        }\n        this._clippingContextListForDraw = null;\n        for(let i = 0; i < this._channelColors.getSize(); i++){\n            this._channelColors.set(i, null);\n        }\n        this._channelColors = null;\n        if (this._clearedFrameBufferFlags != null) {\n            this._clearedFrameBufferFlags.clear();\n        }\n        this._clearedFrameBufferFlags = null;\n    }\n    /**\n   * マネージャの初期化処理\n   * クリッピングマスクを使う描画オブジェクトの登録を行う\n   * @param model モデルのインスタンス\n   * @param renderTextureCount バッファの生成数\n   */ initialize(model, renderTextureCount) {\n        // レンダーテクスチャの合計枚数の設定\n        // 1以上の整数でない場合はそれぞれ警告を出す\n        if (renderTextureCount % 1 != 0) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_5__.CubismLogWarning)('The number of render textures must be specified as an integer. The decimal point is rounded down and corrected to an integer.');\n            // 小数点以下を除去\n            renderTextureCount = ~~renderTextureCount;\n        }\n        if (renderTextureCount < 1) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_5__.CubismLogWarning)('The number of render textures must be an integer greater than or equal to 1. Set the number of render textures to 1.');\n        }\n        // 負の値が使われている場合は強制的に1枚と設定する\n        this._renderTextureCount = renderTextureCount < 1 ? 1 : renderTextureCount;\n        this._clearedFrameBufferFlags = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector(this._renderTextureCount);\n        // クリッピングマスクを使う描画オブジェクトをすべて登録する\n        // クリッピングマスクは、通常数個程度に限定して使うものとする\n        for(let i = 0; i < model.getDrawableCount(); i++){\n            if (model.getDrawableMaskCounts()[i] <= 0) {\n                // クリッピングマスクが使用されていないアートメッシュ（多くの場合使用しない）\n                this._clippingContextListForDraw.pushBack(null);\n                continue;\n            }\n            // 既にあるClipContextと同じかチェックする\n            let clippingContext = this.findSameClip(model.getDrawableMasks()[i], model.getDrawableMaskCounts()[i]);\n            if (clippingContext == null) {\n                // 同一のマスクが存在していない場合は生成する\n                clippingContext = new this._clippingContexttConstructor(this, model.getDrawableMasks()[i], model.getDrawableMaskCounts()[i]);\n                this._clippingContextListForMask.pushBack(clippingContext);\n            }\n            clippingContext.addClippedDrawable(i);\n            this._clippingContextListForDraw.pushBack(clippingContext);\n        }\n    }\n    /**\n   * 既にマスクを作っているかを確認\n   * 作っている様であれば該当するクリッピングマスクのインスタンスを返す\n   * 作っていなければNULLを返す\n   * @param drawableMasks 描画オブジェクトをマスクする描画オブジェクトのリスト\n   * @param drawableMaskCounts 描画オブジェクトをマスクする描画オブジェクトの数\n   * @return 該当するクリッピングマスクが存在すればインスタンスを返し、なければNULLを返す\n   */ findSameClip(drawableMasks, drawableMaskCounts) {\n        // 作成済みClippingContextと一致するか確認\n        for(let i = 0; i < this._clippingContextListForMask.getSize(); i++){\n            const clippingContext = this._clippingContextListForMask.at(i);\n            const count = clippingContext._clippingIdCount;\n            // 個数が違う場合は別物\n            if (count != drawableMaskCounts) {\n                continue;\n            }\n            let sameCount = 0;\n            // 同じIDを持つか確認。配列の数が同じなので、一致した個数が同じなら同じ物を持つとする\n            for(let j = 0; j < count; j++){\n                const clipId = clippingContext._clippingIdList[j];\n                for(let k = 0; k < count; k++){\n                    if (drawableMasks[k] == clipId) {\n                        sameCount++;\n                        break;\n                    }\n                }\n            }\n            if (sameCount == count) {\n                return clippingContext;\n            }\n        }\n        return null; // 見つからなかった\n    }\n    /**\n   * 高精細マスク処理用の行列を計算する\n   * @param model モデルのインスタンス\n   * @param isRightHanded 処理が右手系であるか\n   */ setupMatrixForHighPrecision(model, isRightHanded) {\n        // 全てのクリッピングを用意する\n        // 同じクリップ（複数の場合はまとめて一つのクリップ）を使う場合は1度だけ設定する\n        let usingClipCount = 0;\n        for(let clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++){\n            // １つのクリッピングマスクに関して\n            const cc = this._clippingContextListForMask.at(clipIndex);\n            // このクリップを利用する描画オブジェクト群全体を囲む矩形を計算\n            this.calcClippedDrawTotalBounds(model, cc);\n            if (cc._isUsing) {\n                usingClipCount++; // 使用中としてカウント\n            }\n        }\n        // マスク行列作成処理\n        if (usingClipCount > 0) {\n            this.setupLayoutBounds(0);\n            // サイズがレンダーテクスチャの枚数と合わない場合は合わせる\n            if (this._clearedFrameBufferFlags.getSize() != this._renderTextureCount) {\n                this._clearedFrameBufferFlags.clear();\n                for(let i = 0; i < this._renderTextureCount; i++){\n                    this._clearedFrameBufferFlags.pushBack(false);\n                }\n            } else {\n                // マスクのクリアフラグを毎フレーム開始時に初期化\n                for(let i = 0; i < this._renderTextureCount; i++){\n                    this._clearedFrameBufferFlags.set(i, false);\n                }\n            }\n            // 実際にマスクを生成する\n            // 全てのマスクをどの様にレイアウトして描くかを決定し、ClipContext , ClippedDrawContext に記憶する\n            for(let clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++){\n                // --- 実際に１つのマスクを描く ---\n                const clipContext = this._clippingContextListForMask.at(clipIndex);\n                const allClippedDrawRect = clipContext._allClippedDrawRect; //このマスクを使う、全ての描画オブジェクトの論理座標上の囲み矩形\n                const layoutBoundsOnTex01 = clipContext._layoutBounds; //この中にマスクを収める\n                const margin = 0.05;\n                let scaleX = 0.0;\n                let scaleY = 0.0;\n                const ppu = model.getPixelsPerUnit();\n                const maskPixelSize = clipContext.getClippingManager().getClippingMaskBufferSize();\n                const physicalMaskWidth = layoutBoundsOnTex01.width * maskPixelSize;\n                const physicalMaskHeight = layoutBoundsOnTex01.height * maskPixelSize;\n                this._tmpBoundsOnModel.setRect(allClippedDrawRect);\n                if (this._tmpBoundsOnModel.width * ppu > physicalMaskWidth) {\n                    this._tmpBoundsOnModel.expand(allClippedDrawRect.width * margin, 0.0);\n                    scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n                } else {\n                    scaleX = ppu / physicalMaskWidth;\n                }\n                if (this._tmpBoundsOnModel.height * ppu > physicalMaskHeight) {\n                    this._tmpBoundsOnModel.expand(0.0, allClippedDrawRect.height * margin);\n                    scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n                } else {\n                    scaleY = ppu / physicalMaskHeight;\n                }\n                // マスク生成時に使う行列を求める\n                this.createMatrixForMask(isRightHanded, layoutBoundsOnTex01, scaleX, scaleY);\n                clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n                clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n            }\n        }\n    }\n    /**\n   * マスク作成・描画用の行列を作成する。\n   * @param isRightHanded 座標を右手系として扱うかを指定\n   * @param layoutBoundsOnTex01 マスクを収める領域\n   * @param scaleX 描画オブジェクトの伸縮率\n   * @param scaleY 描画オブジェクトの伸縮率\n   */ createMatrixForMask(isRightHanded, layoutBoundsOnTex01, scaleX, scaleY) {\n        this._tmpMatrix.loadIdentity();\n        {\n            // Layout0..1 を -1..1に変換\n            this._tmpMatrix.translateRelative(-1.0, -1.0);\n            this._tmpMatrix.scaleRelative(2.0, 2.0);\n        }\n        {\n            // view to Layout0..1\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y); //new = [translate]\n            this._tmpMatrix.scaleRelative(scaleX, scaleY); //new = [translate][scale]\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y); //new = [translate][scale][translate]\n        }\n        // tmpMatrixForMask が計算結果\n        this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        this._tmpMatrix.loadIdentity();\n        {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y * (isRightHanded ? -1.0 : 1.0)); //new = [translate]\n            this._tmpMatrix.scaleRelative(scaleX, scaleY * (isRightHanded ? -1.0 : 1.0)); //new = [translate][scale]\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y); //new = [translate][scale][translate]\n        }\n        this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n    }\n    /**\n   * クリッピングコンテキストを配置するレイアウト\n   * 指定された数のレンダーテクスチャを極力いっぱいに使ってマスクをレイアウトする\n   * マスクグループの数が4以下ならRGBA各チャンネルに一つずつマスクを配置し、5以上6以下ならRGBAを2,2,1,1と配置する。\n   *\n   * @param usingClipCount 配置するクリッピングコンテキストの数\n   */ setupLayoutBounds(usingClipCount) {\n        const useClippingMaskMaxCount = this._renderTextureCount <= 1 ? ClippingMaskMaxCountOnDefault : ClippingMaskMaxCountOnMultiRenderTexture * this._renderTextureCount;\n        if (usingClipCount <= 0 || usingClipCount > useClippingMaskMaxCount) {\n            if (usingClipCount > useClippingMaskMaxCount) {\n                // マスクの制限数の警告を出す\n                (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_5__.CubismLogError)('not supported mask count : {0}\\n[Details] render texture count : {1}, mask count : {2}', usingClipCount - useClippingMaskMaxCount, this._renderTextureCount, usingClipCount);\n            }\n            // この場合は一つのマスクターゲットを毎回クリアして使用する\n            for(let index = 0; index < this._clippingContextListForMask.getSize(); index++){\n                const clipContext = this._clippingContextListForMask.at(index);\n                clipContext._layoutChannelIndex = 0; // どうせ毎回消すので固定\n                clipContext._layoutBounds.x = 0.0;\n                clipContext._layoutBounds.y = 0.0;\n                clipContext._layoutBounds.width = 1.0;\n                clipContext._layoutBounds.height = 1.0;\n                clipContext._bufferIndex = 0;\n            }\n            return;\n        }\n        // レンダーテクスチャが1枚なら9分割する（最大36枚）\n        const layoutCountMaxValue = this._renderTextureCount <= 1 ? 9 : 8;\n        // 指定された数のレンダーテクスチャを極力いっぱいに使ってマスクをレイアウトする（デフォルトなら1）。\n        // マスクグループの数が4以下ならRGBA各チャンネルに1つずつマスクを配置し、5以上6以下ならRGBAを2,2,1,1と配置する。\n        let countPerSheetDiv = usingClipCount / this._renderTextureCount; // レンダーテクスチャ1枚あたり何枚割り当てるか。\n        const reduceLayoutTextureCount = usingClipCount % this._renderTextureCount; // レイアウトの数を1枚減らすレンダーテクスチャの数（この数だけのレンダーテクスチャが対象）。\n        // 1枚に割り当てるマスクの分割数を取りたいため、小数点は切り上げる\n        countPerSheetDiv = Math.ceil(countPerSheetDiv);\n        // RGBAを順番に使っていく\n        let divCount = countPerSheetDiv / ColorChannelCount; // 1チャンネルに配置する基本のマスク\n        const modCount = countPerSheetDiv % ColorChannelCount; // 余り、この番号のチャンネルまでに一つずつ配分する（インデックスではない）\n        // 小数点は切り捨てる\n        divCount = ~~divCount;\n        // RGBAそれぞれのチャンネルを用意していく（0:R, 1:G, 2:B, 3:A）\n        let curClipIndex = 0; // 順番に設定していく\n        for(let renderTextureIndex = 0; renderTextureIndex < this._renderTextureCount; renderTextureIndex++){\n            for(let channelIndex = 0; channelIndex < ColorChannelCount; channelIndex++){\n                // このチャンネルにレイアウトする数\n                // NOTE: レイアウト数 = 1チャンネルに配置する基本のマスク + 余りのマスクを置くチャンネルなら1つ追加\n                let layoutCount = divCount + (channelIndex < modCount ? 1 : 0);\n                // レイアウトの数を1枚減らす場合にそれを行うチャンネルを決定\n                // divが0の時は正常なインデックスの範囲内になるように調整\n                const checkChannelIndex = modCount + (divCount < 1 ? -1 : 0);\n                // 今回が対象のチャンネルかつ、レイアウトの数を1枚減らすレンダーテクスチャが存在する場合\n                if (channelIndex == checkChannelIndex && reduceLayoutTextureCount > 0) {\n                    // 現在のレンダーテクスチャが、対象のレンダーテクスチャであればレイアウトの数を1枚減らす。\n                    layoutCount -= !(renderTextureIndex < reduceLayoutTextureCount) ? 1 : 0;\n                }\n                // 分割方法を決定する\n                if (layoutCount == 0) {\n                // 何もしない\n                } else if (layoutCount == 1) {\n                    // 全てをそのまま使う\n                    const clipContext = this._clippingContextListForMask.at(curClipIndex++);\n                    clipContext._layoutChannelIndex = channelIndex;\n                    clipContext._layoutBounds.x = 0.0;\n                    clipContext._layoutBounds.y = 0.0;\n                    clipContext._layoutBounds.width = 1.0;\n                    clipContext._layoutBounds.height = 1.0;\n                    clipContext._bufferIndex = renderTextureIndex;\n                } else if (layoutCount == 2) {\n                    for(let i = 0; i < layoutCount; i++){\n                        let xpos = i % 2;\n                        // 小数点は切り捨てる\n                        xpos = ~~xpos;\n                        const cc = this._clippingContextListForMask.at(curClipIndex++);\n                        cc._layoutChannelIndex = channelIndex;\n                        // UVを2つに分解して使う\n                        cc._layoutBounds.x = xpos * 0.5;\n                        cc._layoutBounds.y = 0.0;\n                        cc._layoutBounds.width = 0.5;\n                        cc._layoutBounds.height = 1.0;\n                        cc._bufferIndex = renderTextureIndex;\n                    }\n                } else if (layoutCount <= 4) {\n                    // 4分割して使う\n                    for(let i = 0; i < layoutCount; i++){\n                        let xpos = i % 2;\n                        let ypos = i / 2;\n                        // 小数点は切り捨てる\n                        xpos = ~~xpos;\n                        ypos = ~~ypos;\n                        const cc = this._clippingContextListForMask.at(curClipIndex++);\n                        cc._layoutChannelIndex = channelIndex;\n                        cc._layoutBounds.x = xpos * 0.5;\n                        cc._layoutBounds.y = ypos * 0.5;\n                        cc._layoutBounds.width = 0.5;\n                        cc._layoutBounds.height = 0.5;\n                        cc._bufferIndex = renderTextureIndex;\n                    }\n                } else if (layoutCount <= layoutCountMaxValue) {\n                    // 9分割して使う\n                    for(let i = 0; i < layoutCount; i++){\n                        let xpos = i % 3;\n                        let ypos = i / 3;\n                        // 小数点は切り捨てる\n                        xpos = ~~xpos;\n                        ypos = ~~ypos;\n                        const cc = this._clippingContextListForMask.at(curClipIndex++);\n                        cc._layoutChannelIndex = channelIndex;\n                        cc._layoutBounds.x = xpos / 3.0;\n                        cc._layoutBounds.y = ypos / 3.0;\n                        cc._layoutBounds.width = 1.0 / 3.0;\n                        cc._layoutBounds.height = 1.0 / 3.0;\n                        cc._bufferIndex = renderTextureIndex;\n                    }\n                } else {\n                    // マスクの制限枚数を超えた場合の処理\n                    (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_5__.CubismLogError)('not supported mask count : {0}\\n[Details] render texture count : {1}, mask count : {2}', usingClipCount - useClippingMaskMaxCount, this._renderTextureCount, usingClipCount);\n                    // SetupShaderProgramでオーバーアクセスが発生するので仮で数値を入れる\n                    // もちろん描画結果は正しいものではなくなる\n                    for(let index = 0; index < layoutCount; index++){\n                        const cc = this._clippingContextListForMask.at(curClipIndex++);\n                        cc._layoutChannelIndex = 0;\n                        cc._layoutBounds.x = 0.0;\n                        cc._layoutBounds.y = 0.0;\n                        cc._layoutBounds.width = 1.0;\n                        cc._layoutBounds.height = 1.0;\n                        cc._bufferIndex = 0;\n                    }\n                }\n            }\n        }\n    }\n    /**\n   * マスクされる描画オブジェクト群全体を囲む矩形（モデル座標系）を計算する\n   * @param model モデルのインスタンス\n   * @param clippingContext クリッピングマスクのコンテキスト\n   */ calcClippedDrawTotalBounds(model, clippingContext) {\n        // 被クリッピングマスク（マスクされる描画オブジェクト）の全体の矩形\n        let clippedDrawTotalMinX = Number.MAX_VALUE;\n        let clippedDrawTotalMinY = Number.MAX_VALUE;\n        let clippedDrawTotalMaxX = Number.MIN_VALUE;\n        let clippedDrawTotalMaxY = Number.MIN_VALUE;\n        // このマスクが実際に必要か判定する\n        // このクリッピングを利用する「描画オブジェクト」がひとつでも使用可能であればマスクを生成する必要がある\n        const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n        for(let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++){\n            // マスクを使用する描画オブジェクトの描画される矩形を求める\n            const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n            const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n            const drawableVertexes = model.getDrawableVertices(drawableIndex);\n            let minX = Number.MAX_VALUE;\n            let minY = Number.MAX_VALUE;\n            let maxX = -Number.MAX_VALUE;\n            let maxY = -Number.MAX_VALUE;\n            const loop = drawableVertexCount * _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.Constant.vertexStep;\n            for(let pi = _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.Constant.vertexOffset; pi < loop; pi += _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.Constant.vertexStep){\n                const x = drawableVertexes[pi];\n                const y = drawableVertexes[pi + 1];\n                if (x < minX) {\n                    minX = x;\n                }\n                if (x > maxX) {\n                    maxX = x;\n                }\n                if (y < minY) {\n                    minY = y;\n                }\n                if (y > maxY) {\n                    maxY = y;\n                }\n            }\n            // 有効な点が一つも取れなかったのでスキップ\n            if (minX == Number.MAX_VALUE) {\n                continue;\n            }\n            // 全体の矩形に反映\n            if (minX < clippedDrawTotalMinX) {\n                clippedDrawTotalMinX = minX;\n            }\n            if (minY < clippedDrawTotalMinY) {\n                clippedDrawTotalMinY = minY;\n            }\n            if (maxX > clippedDrawTotalMaxX) {\n                clippedDrawTotalMaxX = maxX;\n            }\n            if (maxY > clippedDrawTotalMaxY) {\n                clippedDrawTotalMaxY = maxY;\n            }\n            if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n                clippingContext._allClippedDrawRect.x = 0.0;\n                clippingContext._allClippedDrawRect.y = 0.0;\n                clippingContext._allClippedDrawRect.width = 0.0;\n                clippingContext._allClippedDrawRect.height = 0.0;\n                clippingContext._isUsing = false;\n            } else {\n                clippingContext._isUsing = true;\n                const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n                const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n                clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n                clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n                clippingContext._allClippedDrawRect.width = w;\n                clippingContext._allClippedDrawRect.height = h;\n            }\n        }\n    }\n    /**\n   * 画面描画に使用するクリッピングマスクのリストを取得する\n   * @return 画面描画に使用するクリッピングマスクのリスト\n   */ getClippingContextListForDraw() {\n        return this._clippingContextListForDraw;\n    }\n    /**\n   * クリッピングマスクバッファのサイズを取得する\n   * @return クリッピングマスクバッファのサイズ\n   */ getClippingMaskBufferSize() {\n        return this._clippingMaskBufferSize;\n    }\n    /**\n   * このバッファのレンダーテクスチャの枚数を取得する\n   * @return このバッファのレンダーテクスチャの枚数\n   */ getRenderTextureCount() {\n        return this._renderTextureCount;\n    }\n    /**\n   * カラーチャンネル（RGBA）のフラグを取得する\n   * @param channelNo カラーチャンネル（RGBA）の番号（0:R, 1:G, 2:B, 3:A）\n   */ getChannelFlagAsColor(channelNo) {\n        return this._channelColors.at(channelNo);\n    }\n    /**\n   * クリッピングマスクバッファのサイズを設定する\n   * @param size クリッピングマスクバッファのサイズ\n   */ setClippingMaskBufferSize(size) {\n        this._clippingMaskBufferSize = size;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvRnJhbWV3b3JrL3NyYy9yZW5kZXJpbmcvY3ViaXNtY2xpcHBpbmdtYW5hZ2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUVtRDtBQUNOO0FBQ0g7QUFDYTtBQUVxQjtBQUNMO0FBRXhFLE1BQU1PLG9CQUFvQixHQUFHLDBDQUEwQztBQUN2RSxNQUFNQyxnQ0FBZ0MsSUFBSSwwQkFBMEI7QUFDcEUsTUFBTUMsMkNBQTJDLElBQUkseUNBQXlDO0FBY3ZGLE1BQWVDO0lBSXBCOztHQUVDLEdBQ0QsWUFDRUMsc0JBQXFFLENBQ3JFO1FBQ0EsSUFBSSxDQUFDQyxtQkFBbUIsR0FBRztRQUMzQixJQUFJLENBQUNDLHVCQUF1QixHQUFHO1FBQy9CLElBQUksQ0FBQ0MsMkJBQTJCLEdBQUcsSUFBSWIsc0RBQVNBO1FBQ2hELElBQUksQ0FBQ2MsMkJBQTJCLEdBQUcsSUFBSWQsc0RBQVNBO1FBQ2hELElBQUksQ0FBQ2UsY0FBYyxHQUFHLElBQUlmLHNEQUFTQTtRQUNuQyxJQUFJLENBQUNnQixpQkFBaUIsR0FBRyxJQUFJZixtREFBT0E7UUFDcEMsSUFBSSxDQUFDZ0IsVUFBVSxHQUFHLElBQUlmLGdFQUFjQTtRQUNwQyxJQUFJLENBQUNnQixpQkFBaUIsR0FBRyxJQUFJaEIsZ0VBQWNBO1FBQzNDLElBQUksQ0FBQ2lCLGlCQUFpQixHQUFHLElBQUlqQixnRUFBY0E7UUFFM0MsSUFBSSxDQUFDa0IsNEJBQTRCLEdBQUdWO1FBRXBDLElBQUlXLE1BQTBCLElBQUlsQiwrREFBa0JBO1FBQ3BEa0IsSUFBSUMsQ0FBQyxHQUFHO1FBQ1JELElBQUlFLENBQUMsR0FBRztRQUNSRixJQUFJRyxDQUFDLEdBQUc7UUFDUkgsSUFBSUksQ0FBQyxHQUFHO1FBQ1IsSUFBSSxDQUFDVixjQUFjLENBQUNXLFFBQVEsQ0FBQ0w7UUFFN0JBLE1BQU0sSUFBSWxCLCtEQUFrQkE7UUFDNUJrQixJQUFJQyxDQUFDLEdBQUc7UUFDUkQsSUFBSUUsQ0FBQyxHQUFHO1FBQ1JGLElBQUlHLENBQUMsR0FBRztRQUNSSCxJQUFJSSxDQUFDLEdBQUc7UUFDUixJQUFJLENBQUNWLGNBQWMsQ0FBQ1csUUFBUSxDQUFDTDtRQUU3QkEsTUFBTSxJQUFJbEIsK0RBQWtCQTtRQUM1QmtCLElBQUlDLENBQUMsR0FBRztRQUNSRCxJQUFJRSxDQUFDLEdBQUc7UUFDUkYsSUFBSUcsQ0FBQyxHQUFHO1FBQ1JILElBQUlJLENBQUMsR0FBRztRQUNSLElBQUksQ0FBQ1YsY0FBYyxDQUFDVyxRQUFRLENBQUNMO1FBRTdCQSxNQUFNLElBQUlsQiwrREFBa0JBO1FBQzVCa0IsSUFBSUMsQ0FBQyxHQUFHO1FBQ1JELElBQUlFLENBQUMsR0FBRztRQUNSRixJQUFJRyxDQUFDLEdBQUc7UUFDUkgsSUFBSUksQ0FBQyxHQUFHO1FBQ1IsSUFBSSxDQUFDVixjQUFjLENBQUNXLFFBQVEsQ0FBQ0w7SUFDL0I7SUFFQTs7R0FFQyxHQUNELFVBQXVCO1FBQ3JCLElBQUssSUFBSU8sSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ2YsMkJBQTJCLENBQUNnQixPQUFPLElBQUlELElBQUs7WUFDbkUsSUFBSSxJQUFJLENBQUNmLDJCQUEyQixDQUFDaUIsRUFBRSxDQUFDRixJQUFJO2dCQUMxQyxJQUFJLENBQUNmLDJCQUEyQixDQUFDaUIsRUFBRSxDQUFDRixHQUFHRCxPQUFPO2dCQUM5QyxJQUFJLENBQUNkLDJCQUEyQixDQUFDa0IsR0FBRyxDQUFDSCxHQUFHLEtBQUs7WUFDL0M7WUFDQSxJQUFJLENBQUNmLDJCQUEyQixDQUFDa0IsR0FBRyxDQUFDSCxHQUFHO1FBQzFDO1FBQ0EsSUFBSSxDQUFDZiwyQkFBMkIsR0FBRztRQUVuQyxpR0FBaUc7UUFDakcsSUFBSyxJQUFJZSxJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDZCwyQkFBMkIsQ0FBQ2UsT0FBTyxJQUFJRCxJQUFLO1lBQ25FLElBQUksQ0FBQ2QsMkJBQTJCLENBQUNpQixHQUFHLENBQUNILEdBQUc7UUFDMUM7UUFDQSxJQUFJLENBQUNkLDJCQUEyQixHQUFHO1FBRW5DLElBQUssSUFBSWMsSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ2IsY0FBYyxDQUFDYyxPQUFPLElBQUlELElBQUs7WUFDdEQsSUFBSSxDQUFDYixjQUFjLENBQUNnQixHQUFHLENBQUNILEdBQUc7UUFDN0I7UUFFQSxJQUFJLENBQUNiLGNBQWMsR0FBRztRQUV0QixJQUFJLElBQUksQ0FBQ2lCLHdCQUF3QixJQUFJLE1BQU07WUFDekMsSUFBSSxDQUFDQSx3QkFBd0IsQ0FBQ0MsS0FBSztRQUNyQztRQUNBLElBQUksQ0FBQ0Qsd0JBQXdCLEdBQUc7SUFDbEM7SUFFQTs7Ozs7R0FLQyxHQUNELFdBQWtCRyxLQUFrQixFQUFFQyxrQkFBMEIsRUFBUTtRQUN0RSxvQkFBb0I7UUFDcEIsd0JBQXdCO1FBQ3hCLElBQUlBLHFCQUFxQixLQUFLLEdBQUc7WUFDL0IvQixvRUFBZ0JBLENBQ2Q7WUFFRixXQUFXO1lBQ1grQixxQkFBcUIsQ0FBQyxDQUFDQTtRQUN6QjtRQUNBLElBQUlBLHFCQUFxQixHQUFHO1lBQzFCL0Isb0VBQWdCQSxDQUNkO1FBRUo7UUFDQSwyQkFBMkI7UUFDM0IsSUFBSSxDQUFDTSxtQkFBbUIsR0FBR3lCLHFCQUFxQixJQUFJLElBQUlBO1FBRXhELElBQUksQ0FBQ0osd0JBQXdCLEdBQUcsSUFBSWhDLHNEQUFTQSxDQUMzQyxJQUFJLENBQUNXLG1CQUFtQjtRQUcxQiwrQkFBK0I7UUFDL0IsZ0NBQWdDO1FBQ2hDLElBQUssSUFBSWlCLElBQUksR0FBR0EsSUFBSU8sTUFBTUUsZ0JBQWdCLElBQUlULElBQUs7WUFDakQsSUFBSU8sTUFBTUcscUJBQXFCLEVBQUUsQ0FBQ1YsRUFBRSxJQUFJLEdBQUc7Z0JBQ3pDLHdDQUF3QztnQkFDeEMsSUFBSSxDQUFDZCwyQkFBMkIsQ0FBQ1ksUUFBUSxDQUFDO2dCQUMxQztZQUNGO1lBRUEsNEJBQTRCO1lBQzVCLElBQUlhLGtCQUFxQyxJQUFJLENBQUNDLFlBQVksQ0FDeERMLE1BQU1NLGdCQUFnQixFQUFFLENBQUNiLEVBQUUsRUFDM0JPLE1BQU1HLHFCQUFxQixFQUFFLENBQUNWLEVBQUU7WUFFbEMsSUFBSVcsbUJBQW1CLE1BQU07Z0JBQzNCLHdCQUF3QjtnQkFFeEJBLGtCQUFrQixJQUFJLElBQUksQ0FBQ25CLDRCQUE0QixDQUNyRCxJQUFJLEVBQ0plLE1BQU1NLGdCQUFnQixFQUFFLENBQUNiLEVBQUUsRUFDM0JPLE1BQU1HLHFCQUFxQixFQUFFLENBQUNWLEVBQUU7Z0JBRWxDLElBQUksQ0FBQ2YsMkJBQTJCLENBQUNhLFFBQVEsQ0FBQ2E7WUFDNUM7WUFFQUEsZ0JBQWdCRyxrQkFBa0IsQ0FBQ2Q7WUFFbkMsSUFBSSxDQUFDZCwyQkFBMkIsQ0FBQ1ksUUFBUSxDQUFDYTtRQUM1QztJQUNGO0lBRUE7Ozs7Ozs7R0FPQyxHQUNELGFBQ0VJLGFBQXlCLEVBQ3pCQyxrQkFBMEIsRUFDUDtRQUNuQiw4QkFBOEI7UUFDOUIsSUFBSyxJQUFJaEIsSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ2YsMkJBQTJCLENBQUNnQixPQUFPLElBQUlELElBQUs7WUFDbkUsTUFBTVcsa0JBQ0osSUFBSSxDQUFDMUIsMkJBQTJCLENBQUNpQixFQUFFLENBQUNGO1lBQ3RDLE1BQU1pQixRQUFnQk4sZ0JBQWdCTyxnQkFBZ0I7WUFFdEQsYUFBYTtZQUNiLElBQUlELFNBQVNELG9CQUFvQjtnQkFDL0I7WUFDRjtZQUVBLElBQUlHLFlBQVk7WUFFaEIsNkNBQTZDO1lBQzdDLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSCxPQUFPRyxJQUFLO2dCQUM5QixNQUFNQyxTQUFpQlYsZ0JBQWdCVyxlQUFlLENBQUNGLEVBQUU7Z0JBRXpELElBQUssSUFBSUcsSUFBSSxHQUFHQSxJQUFJTixPQUFPTSxJQUFLO29CQUM5QixJQUFJUixhQUFhLENBQUNRLEVBQUUsSUFBSUYsUUFBUTt3QkFDOUJGO3dCQUNBO29CQUNGO2dCQUNGO1lBQ0Y7WUFFQSxJQUFJQSxhQUFhRixPQUFPO2dCQUN0QixPQUFPTjtZQUNUO1FBQ0Y7UUFFQSxPQUFPLE1BQU0sV0FBVztJQUMxQjtJQUVBOzs7O0dBSUMsR0FDRCw0QkFDRUosS0FBa0IsRUFDbEJrQixhQUFzQixFQUNoQjtRQUNOLGlCQUFpQjtRQUNqQiwwQ0FBMEM7UUFDMUMsSUFBSUMsaUJBQWlCO1FBQ3JCLElBQ0UsSUFBSUMsWUFBWSxHQUNoQkEsWUFBWSxJQUFJLENBQUMxQywyQkFBMkIsQ0FBQ2dCLE9BQU8sSUFDcEQwQixZQUNBO1lBQ0EsbUJBQW1CO1lBQ25CLE1BQU1DLEtBQ0osSUFBSSxDQUFDM0MsMkJBQTJCLENBQUNpQixFQUFFLENBQUN5QjtZQUV0QyxpQ0FBaUM7WUFDakMsSUFBSSxDQUFDRSwwQkFBMEIsQ0FBQ3RCLE9BQU9xQjtZQUV2QyxJQUFJQSxHQUFHRSxRQUFRLEVBQUU7Z0JBQ2ZKLGtCQUFrQixhQUFhO1lBQ2pDO1FBQ0Y7UUFFQSxZQUFZO1FBQ1osSUFBSUEsaUJBQWlCLEdBQUc7WUFDdEIsSUFBSSxDQUFDSyxpQkFBaUIsQ0FBQztZQUV2QiwrQkFBK0I7WUFDL0IsSUFBSSxJQUFJLENBQUMzQix3QkFBd0IsQ0FBQ0gsT0FBTyxNQUFNLElBQUksQ0FBQ2xCLG1CQUFtQixFQUFFO2dCQUN2RSxJQUFJLENBQUNxQix3QkFBd0IsQ0FBQ0MsS0FBSztnQkFDbkMsSUFBSyxJQUFJTCxJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDakIsbUJBQW1CLEVBQUVpQixJQUFLO29CQUNqRCxJQUFJLENBQUNJLHdCQUF3QixDQUFDTixRQUFRLENBQUM7Z0JBQ3pDO1lBQ0YsT0FBTztnQkFDTCwwQkFBMEI7Z0JBQzFCLElBQUssSUFBSUUsSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ2pCLG1CQUFtQixFQUFFaUIsSUFBSztvQkFDakQsSUFBSSxDQUFDSSx3QkFBd0IsQ0FBQ0QsR0FBRyxDQUFDSCxHQUFHO2dCQUN2QztZQUNGO1lBRUEsY0FBYztZQUNkLG1FQUFtRTtZQUNuRSxJQUNFLElBQUkyQixZQUFZLEdBQ2hCQSxZQUFZLElBQUksQ0FBQzFDLDJCQUEyQixDQUFDZ0IsT0FBTyxJQUNwRDBCLFlBQ0E7Z0JBQ0EsdUJBQXVCO2dCQUN2QixNQUFNSyxjQUNKLElBQUksQ0FBQy9DLDJCQUEyQixDQUFDaUIsRUFBRSxDQUFDeUI7Z0JBQ3RDLE1BQU1NLHFCQUE4QkQsWUFBWUUsbUJBQW1CLEVBQUUsaUNBQWlDO2dCQUN0RyxNQUFNQyxzQkFBc0JILFlBQVlJLGFBQWEsRUFBRSxhQUFhO2dCQUNwRSxNQUFNQyxTQUFTO2dCQUNmLElBQUlDLFNBQVM7Z0JBQ2IsSUFBSUMsU0FBUztnQkFDYixNQUFNQyxNQUFjakMsTUFBTWtDLGdCQUFnQjtnQkFDMUMsTUFBTUMsZ0JBQXdCVixZQUMzQlcsa0JBQWtCLEdBQ2xCQyx5QkFBeUI7Z0JBQzVCLE1BQU1DLG9CQUNKVixvQkFBb0JXLEtBQUssR0FBR0o7Z0JBQzlCLE1BQU1LLHFCQUNKWixvQkFBb0JhLE1BQU0sR0FBR047Z0JBRS9CLElBQUksQ0FBQ3RELGlCQUFpQixDQUFDNkQsT0FBTyxDQUFDaEI7Z0JBQy9CLElBQUksSUFBSSxDQUFDN0MsaUJBQWlCLENBQUMwRCxLQUFLLEdBQUdOLE1BQU1LLG1CQUFtQjtvQkFDMUQsSUFBSSxDQUFDekQsaUJBQWlCLENBQUM4RCxNQUFNLENBQUNqQixtQkFBbUJhLEtBQUssR0FBR1QsUUFBUTtvQkFDakVDLFNBQVNILG9CQUFvQlcsS0FBSyxHQUFHLElBQUksQ0FBQzFELGlCQUFpQixDQUFDMEQsS0FBSztnQkFDbkUsT0FBTztvQkFDTFIsU0FBU0UsTUFBTUs7Z0JBQ2pCO2dCQUVBLElBQUksSUFBSSxDQUFDekQsaUJBQWlCLENBQUM0RCxNQUFNLEdBQUdSLE1BQU1PLG9CQUFvQjtvQkFDNUQsSUFBSSxDQUFDM0QsaUJBQWlCLENBQUM4RCxNQUFNLENBQzNCLEtBQ0FqQixtQkFBbUJlLE1BQU0sR0FBR1g7b0JBRTlCRSxTQUFTSixvQkFBb0JhLE1BQU0sR0FBRyxJQUFJLENBQUM1RCxpQkFBaUIsQ0FBQzRELE1BQU07Z0JBQ3JFLE9BQU87b0JBQ0xULFNBQVNDLE1BQU1PO2dCQUNqQjtnQkFFQSxrQkFBa0I7Z0JBQ2xCLElBQUksQ0FBQ0ksbUJBQW1CLENBQ3RCMUIsZUFDQVUscUJBQ0FHLFFBQ0FDO2dCQUdGUCxZQUFZb0IsY0FBYyxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDL0QsaUJBQWlCLENBQUNnRSxRQUFRO2dCQUNwRXRCLFlBQVl1QixjQUFjLENBQUNGLFNBQVMsQ0FBQyxJQUFJLENBQUM5RCxpQkFBaUIsQ0FBQytELFFBQVE7WUFDdEU7UUFDRjtJQUNGO0lBRUE7Ozs7OztHQU1DLEdBQ0Qsb0JBQ0U3QixhQUFzQixFQUN0QlUsbUJBQTRCLEVBQzVCRyxNQUFjLEVBQ2RDLE1BQWMsRUFDUjtRQUNOLElBQUksQ0FBQ2xELFVBQVUsQ0FBQ21FLFlBQVk7UUFDNUI7WUFDRSx3QkFBd0I7WUFDeEIsSUFBSSxDQUFDbkUsVUFBVSxDQUFDb0UsaUJBQWlCLENBQUMsQ0FBQyxLQUFLLENBQUM7WUFDekMsSUFBSSxDQUFDcEUsVUFBVSxDQUFDcUUsYUFBYSxDQUFDLEtBQUs7UUFDckM7UUFDQTtZQUNFLHFCQUFxQjtZQUNyQixJQUFJLENBQUNyRSxVQUFVLENBQUNvRSxpQkFBaUIsQ0FDL0J0QixvQkFBb0J3QixDQUFDLEVBQ3JCeEIsb0JBQW9CeUIsQ0FBQyxHQUNwQixtQkFBbUI7WUFDdEIsSUFBSSxDQUFDdkUsVUFBVSxDQUFDcUUsYUFBYSxDQUFDcEIsUUFBUUMsU0FBUywwQkFBMEI7WUFDekUsSUFBSSxDQUFDbEQsVUFBVSxDQUFDb0UsaUJBQWlCLENBQy9CLENBQUMsSUFBSSxDQUFDckUsaUJBQWlCLENBQUN1RSxDQUFDLEVBQ3pCLENBQUMsSUFBSSxDQUFDdkUsaUJBQWlCLENBQUN3RSxDQUFDLEdBQ3hCLHFDQUFxQztRQUMxQztRQUNBLHlCQUF5QjtRQUN6QixJQUFJLENBQUN0RSxpQkFBaUIsQ0FBQytELFNBQVMsQ0FBQyxJQUFJLENBQUNoRSxVQUFVLENBQUNpRSxRQUFRO1FBRXpELElBQUksQ0FBQ2pFLFVBQVUsQ0FBQ21FLFlBQVk7UUFDNUI7WUFDRSxJQUFJLENBQUNuRSxVQUFVLENBQUNvRSxpQkFBaUIsQ0FDL0J0QixvQkFBb0J3QixDQUFDLEVBQ3JCeEIsb0JBQW9CeUIsQ0FBQyxHQUFJbkMsQ0FBQUEsZ0JBQWdCLENBQUMsTUFBTSxHQUFFLElBQ2pELG1CQUFtQjtZQUN0QixJQUFJLENBQUNwQyxVQUFVLENBQUNxRSxhQUFhLENBQzNCcEIsUUFDQUMsU0FBVWQsQ0FBQUEsZ0JBQWdCLENBQUMsTUFBTSxHQUFFLElBQ2xDLDBCQUEwQjtZQUM3QixJQUFJLENBQUNwQyxVQUFVLENBQUNvRSxpQkFBaUIsQ0FDL0IsQ0FBQyxJQUFJLENBQUNyRSxpQkFBaUIsQ0FBQ3VFLENBQUMsRUFDekIsQ0FBQyxJQUFJLENBQUN2RSxpQkFBaUIsQ0FBQ3dFLENBQUMsR0FDeEIscUNBQXFDO1FBQzFDO1FBRUEsSUFBSSxDQUFDckUsaUJBQWlCLENBQUM4RCxTQUFTLENBQUMsSUFBSSxDQUFDaEUsVUFBVSxDQUFDaUUsUUFBUTtJQUMzRDtJQUVBOzs7Ozs7R0FNQyxHQUNELGtCQUF5QjVCLGNBQXNCLEVBQVE7UUFDckQsTUFBTW1DLDBCQUNKLElBQUksQ0FBQzlFLG1CQUFtQixJQUFJLElBQ3hCSixnQ0FDQUMsMkNBQTJDLElBQUksQ0FBQ0csbUJBQW1CO1FBRXpFLElBQUkyQyxrQkFBa0IsS0FBS0EsaUJBQWlCbUMseUJBQXlCO1lBQ25FLElBQUluQyxpQkFBaUJtQyx5QkFBeUI7Z0JBQzVDLGdCQUFnQjtnQkFDaEJyRixrRUFBY0EsQ0FDWiwwRkFDQWtELGlCQUFpQm1DLHlCQUNqQixJQUFJLENBQUM5RSxtQkFBbUIsRUFDeEIyQztZQUVKO1lBQ0EsK0JBQStCO1lBQy9CLElBQ0UsSUFBSW9DLFFBQVEsR0FDWkEsUUFBUSxJQUFJLENBQUM3RSwyQkFBMkIsQ0FBQ2dCLE9BQU8sSUFDaEQ2RCxRQUNBO2dCQUNBLE1BQU05QixjQUNKLElBQUksQ0FBQy9DLDJCQUEyQixDQUFDaUIsRUFBRSxDQUFDNEQ7Z0JBQ3RDOUIsWUFBWStCLG1CQUFtQixHQUFHLEdBQUcsY0FBYztnQkFDbkQvQixZQUFZSSxhQUFhLENBQUN1QixDQUFDLEdBQUc7Z0JBQzlCM0IsWUFBWUksYUFBYSxDQUFDd0IsQ0FBQyxHQUFHO2dCQUM5QjVCLFlBQVlJLGFBQWEsQ0FBQ1UsS0FBSyxHQUFHO2dCQUNsQ2QsWUFBWUksYUFBYSxDQUFDWSxNQUFNLEdBQUc7Z0JBQ25DaEIsWUFBWWdDLFlBQVksR0FBRztZQUM3QjtZQUNBO1FBQ0Y7UUFFQSw2QkFBNkI7UUFDN0IsTUFBTUMsc0JBQXNCLElBQUksQ0FBQ2xGLG1CQUFtQixJQUFJLElBQUksSUFBSTtRQUVoRSxvREFBb0Q7UUFDcEQsbUVBQW1FO1FBQ25FLElBQUltRixtQkFBMkJ4QyxpQkFBaUIsSUFBSSxDQUFDM0MsbUJBQW1CLEVBQUUsMEJBQTBCO1FBQ3BHLE1BQU1vRiwyQkFDSnpDLGlCQUFpQixJQUFJLENBQUMzQyxtQkFBbUIsRUFBRSxnREFBZ0Q7UUFFN0YsbUNBQW1DO1FBQ25DbUYsbUJBQW1CRSxLQUFLQyxJQUFJLENBQUNIO1FBRTdCLGdCQUFnQjtRQUNoQixJQUFJSSxXQUFtQkosbUJBQW1CeEYsbUJBQW1CLG9CQUFvQjtRQUNqRixNQUFNNkYsV0FBbUJMLG1CQUFtQnhGLG1CQUFtQix1Q0FBdUM7UUFFdEcsWUFBWTtRQUNaNEYsV0FBVyxDQUFDLENBQUNBO1FBRWIsNENBQTRDO1FBQzVDLElBQUlFLGVBQWUsR0FBRyxZQUFZO1FBRWxDLElBQ0UsSUFBSUMscUJBQXFCLEdBQ3pCQSxxQkFBcUIsSUFBSSxDQUFDMUYsbUJBQW1CLEVBQzdDMEYscUJBQ0E7WUFDQSxJQUNFLElBQUlDLGVBQWUsR0FDbkJBLGVBQWVoRyxtQkFDZmdHLGVBQ0E7Z0JBQ0EsbUJBQW1CO2dCQUNuQiwwREFBMEQ7Z0JBQzFELElBQUlDLGNBQXNCTCxXQUFZSSxDQUFBQSxlQUFlSCxXQUFXLElBQUk7Z0JBRXBFLGdDQUFnQztnQkFDaEMsZ0NBQWdDO2dCQUNoQyxNQUFNSyxvQkFBb0JMLFdBQVlELENBQUFBLFdBQVcsSUFBSSxDQUFDLElBQUk7Z0JBRTFELDhDQUE4QztnQkFDOUMsSUFBSUksZ0JBQWdCRSxxQkFBcUJULDJCQUEyQixHQUFHO29CQUNyRSwrQ0FBK0M7b0JBQy9DUSxlQUFlLENBQUVGLENBQUFBLHFCQUFxQk4sd0JBQXVCLElBQ3pELElBQ0E7Z0JBQ047Z0JBRUEsWUFBWTtnQkFDWixJQUFJUSxlQUFlLEdBQUc7Z0JBQ3BCLFFBQVE7Z0JBQ1YsT0FBTyxJQUFJQSxlQUFlLEdBQUc7b0JBQzNCLFlBQVk7b0JBQ1osTUFBTTNDLGNBQ0osSUFBSSxDQUFDL0MsMkJBQTJCLENBQUNpQixFQUFFLENBQUNzRTtvQkFDdEN4QyxZQUFZK0IsbUJBQW1CLEdBQUdXO29CQUNsQzFDLFlBQVlJLGFBQWEsQ0FBQ3VCLENBQUMsR0FBRztvQkFDOUIzQixZQUFZSSxhQUFhLENBQUN3QixDQUFDLEdBQUc7b0JBQzlCNUIsWUFBWUksYUFBYSxDQUFDVSxLQUFLLEdBQUc7b0JBQ2xDZCxZQUFZSSxhQUFhLENBQUNZLE1BQU0sR0FBRztvQkFDbkNoQixZQUFZZ0MsWUFBWSxHQUFHUztnQkFDN0IsT0FBTyxJQUFJRSxlQUFlLEdBQUc7b0JBQzNCLElBQUssSUFBSTNFLElBQUksR0FBR0EsSUFBSTJFLGFBQWEzRSxJQUFLO3dCQUNwQyxJQUFJNkUsT0FBZTdFLElBQUk7d0JBRXZCLFlBQVk7d0JBQ1o2RSxPQUFPLENBQUMsQ0FBQ0E7d0JBRVQsTUFBTWpELEtBQXdCLElBQUksQ0FBQzNDLDJCQUEyQixDQUFDaUIsRUFBRSxDQUMvRHNFO3dCQUVGNUMsR0FBR21DLG1CQUFtQixHQUFHVzt3QkFFekIsZUFBZTt3QkFDZjlDLEdBQUdRLGFBQWEsQ0FBQ3VCLENBQUMsR0FBR2tCLE9BQU87d0JBQzVCakQsR0FBR1EsYUFBYSxDQUFDd0IsQ0FBQyxHQUFHO3dCQUNyQmhDLEdBQUdRLGFBQWEsQ0FBQ1UsS0FBSyxHQUFHO3dCQUN6QmxCLEdBQUdRLGFBQWEsQ0FBQ1ksTUFBTSxHQUFHO3dCQUMxQnBCLEdBQUdvQyxZQUFZLEdBQUdTO29CQUNwQjtnQkFDRixPQUFPLElBQUlFLGVBQWUsR0FBRztvQkFDM0IsVUFBVTtvQkFDVixJQUFLLElBQUkzRSxJQUFJLEdBQUdBLElBQUkyRSxhQUFhM0UsSUFBSzt3QkFDcEMsSUFBSTZFLE9BQWU3RSxJQUFJO3dCQUN2QixJQUFJOEUsT0FBZTlFLElBQUk7d0JBRXZCLFlBQVk7d0JBQ1o2RSxPQUFPLENBQUMsQ0FBQ0E7d0JBQ1RDLE9BQU8sQ0FBQyxDQUFDQTt3QkFFVCxNQUFNbEQsS0FBSyxJQUFJLENBQUMzQywyQkFBMkIsQ0FBQ2lCLEVBQUUsQ0FBQ3NFO3dCQUMvQzVDLEdBQUdtQyxtQkFBbUIsR0FBR1c7d0JBRXpCOUMsR0FBR1EsYUFBYSxDQUFDdUIsQ0FBQyxHQUFHa0IsT0FBTzt3QkFDNUJqRCxHQUFHUSxhQUFhLENBQUN3QixDQUFDLEdBQUdrQixPQUFPO3dCQUM1QmxELEdBQUdRLGFBQWEsQ0FBQ1UsS0FBSyxHQUFHO3dCQUN6QmxCLEdBQUdRLGFBQWEsQ0FBQ1ksTUFBTSxHQUFHO3dCQUMxQnBCLEdBQUdvQyxZQUFZLEdBQUdTO29CQUNwQjtnQkFDRixPQUFPLElBQUlFLGVBQWVWLHFCQUFxQjtvQkFDN0MsVUFBVTtvQkFDVixJQUFLLElBQUlqRSxJQUFJLEdBQUdBLElBQUkyRSxhQUFhM0UsSUFBSzt3QkFDcEMsSUFBSTZFLE9BQU83RSxJQUFJO3dCQUNmLElBQUk4RSxPQUFPOUUsSUFBSTt3QkFFZixZQUFZO3dCQUNaNkUsT0FBTyxDQUFDLENBQUNBO3dCQUNUQyxPQUFPLENBQUMsQ0FBQ0E7d0JBRVQsTUFBTWxELEtBQXdCLElBQUksQ0FBQzNDLDJCQUEyQixDQUFDaUIsRUFBRSxDQUMvRHNFO3dCQUVGNUMsR0FBR21DLG1CQUFtQixHQUFHVzt3QkFFekI5QyxHQUFHUSxhQUFhLENBQUN1QixDQUFDLEdBQUdrQixPQUFPO3dCQUM1QmpELEdBQUdRLGFBQWEsQ0FBQ3dCLENBQUMsR0FBR2tCLE9BQU87d0JBQzVCbEQsR0FBR1EsYUFBYSxDQUFDVSxLQUFLLEdBQUcsTUFBTTt3QkFDL0JsQixHQUFHUSxhQUFhLENBQUNZLE1BQU0sR0FBRyxNQUFNO3dCQUNoQ3BCLEdBQUdvQyxZQUFZLEdBQUdTO29CQUNwQjtnQkFDRixPQUFPO29CQUNMLG9CQUFvQjtvQkFDcEJqRyxrRUFBY0EsQ0FDWiwwRkFDQWtELGlCQUFpQm1DLHlCQUNqQixJQUFJLENBQUM5RSxtQkFBbUIsRUFDeEIyQztvQkFHRiw2Q0FBNkM7b0JBQzdDLHVCQUF1QjtvQkFDdkIsSUFBSyxJQUFJb0MsUUFBUSxHQUFHQSxRQUFRYSxhQUFhYixRQUFTO3dCQUNoRCxNQUFNbEMsS0FBd0IsSUFBSSxDQUFDM0MsMkJBQTJCLENBQUNpQixFQUFFLENBQy9Ec0U7d0JBR0Y1QyxHQUFHbUMsbUJBQW1CLEdBQUc7d0JBRXpCbkMsR0FBR1EsYUFBYSxDQUFDdUIsQ0FBQyxHQUFHO3dCQUNyQi9CLEdBQUdRLGFBQWEsQ0FBQ3dCLENBQUMsR0FBRzt3QkFDckJoQyxHQUFHUSxhQUFhLENBQUNVLEtBQUssR0FBRzt3QkFDekJsQixHQUFHUSxhQUFhLENBQUNZLE1BQU0sR0FBRzt3QkFDMUJwQixHQUFHb0MsWUFBWSxHQUFHO29CQUNwQjtnQkFDRjtZQUNGO1FBQ0Y7SUFDRjtJQUVBOzs7O0dBSUMsR0FDRCwyQkFDRXpELEtBQWtCLEVBQ2xCSSxlQUFrQyxFQUM1QjtRQUNOLG1DQUFtQztRQUNuQyxJQUFJb0UsdUJBQStCQyxPQUFPQyxTQUFTO1FBQ25ELElBQUlDLHVCQUErQkYsT0FBT0MsU0FBUztRQUNuRCxJQUFJRSx1QkFBK0JILE9BQU9JLFNBQVM7UUFDbkQsSUFBSUMsdUJBQStCTCxPQUFPSSxTQUFTO1FBRW5ELG1CQUFtQjtRQUNuQixxREFBcUQ7UUFDckQsTUFBTUUsbUJBQ0ozRSxnQkFBZ0I0RSx5QkFBeUIsQ0FBQ0MsTUFBTTtRQUVsRCxJQUNFLElBQUlDLHVCQUF1QixHQUMzQkEsdUJBQXVCSCxrQkFDdkJHLHVCQUNBO1lBQ0EsK0JBQStCO1lBQy9CLE1BQU1DLGdCQUNKL0UsZ0JBQWdCNEUseUJBQXlCLENBQUNFLHFCQUFxQjtZQUVqRSxNQUFNRSxzQkFDSnBGLE1BQU1xRixzQkFBc0IsQ0FBQ0Y7WUFDL0IsTUFBTUcsbUJBQ0p0RixNQUFNdUYsbUJBQW1CLENBQUNKO1lBRTVCLElBQUlLLE9BQWVmLE9BQU9DLFNBQVM7WUFDbkMsSUFBSWUsT0FBZWhCLE9BQU9DLFNBQVM7WUFDbkMsSUFBSWdCLE9BQWUsQ0FBQ2pCLE9BQU9DLFNBQVM7WUFDcEMsSUFBSWlCLE9BQWUsQ0FBQ2xCLE9BQU9DLFNBQVM7WUFFcEMsTUFBTWtCLE9BQWVSLHNCQUFzQnhILDREQUFRQSxDQUFDaUksVUFBVTtZQUM5RCxJQUNFLElBQUlDLEtBQWFsSSw0REFBUUEsQ0FBQ21JLFlBQVksRUFDdENELEtBQUtGLE1BQ0xFLE1BQU1sSSw0REFBUUEsQ0FBQ2lJLFVBQVUsQ0FDekI7Z0JBQ0EsTUFBTXpDLElBQVlrQyxnQkFBZ0IsQ0FBQ1EsR0FBRztnQkFDdEMsTUFBTXpDLElBQVlpQyxnQkFBZ0IsQ0FBQ1EsS0FBSyxFQUFFO2dCQUUxQyxJQUFJMUMsSUFBSW9DLE1BQU07b0JBQ1pBLE9BQU9wQztnQkFDVDtnQkFDQSxJQUFJQSxJQUFJc0MsTUFBTTtvQkFDWkEsT0FBT3RDO2dCQUNUO2dCQUNBLElBQUlDLElBQUlvQyxNQUFNO29CQUNaQSxPQUFPcEM7Z0JBQ1Q7Z0JBQ0EsSUFBSUEsSUFBSXNDLE1BQU07b0JBQ1pBLE9BQU90QztnQkFDVDtZQUNGO1lBRUEsdUJBQXVCO1lBQ3ZCLElBQUltQyxRQUFRZixPQUFPQyxTQUFTLEVBQUU7Z0JBQzVCO1lBQ0Y7WUFFQSxXQUFXO1lBQ1gsSUFBSWMsT0FBT2hCLHNCQUFzQjtnQkFDL0JBLHVCQUF1QmdCO1lBQ3pCO1lBQ0EsSUFBSUMsT0FBT2Qsc0JBQXNCO2dCQUMvQkEsdUJBQXVCYztZQUN6QjtZQUNBLElBQUlDLE9BQU9kLHNCQUFzQjtnQkFDL0JBLHVCQUF1QmM7WUFDekI7WUFDQSxJQUFJQyxPQUFPYixzQkFBc0I7Z0JBQy9CQSx1QkFBdUJhO1lBQ3pCO1lBRUEsSUFBSW5CLHdCQUF3QkMsT0FBT0MsU0FBUyxFQUFFO2dCQUM1Q3RFLGdCQUFnQnVCLG1CQUFtQixDQUFDeUIsQ0FBQyxHQUFHO2dCQUN4Q2hELGdCQUFnQnVCLG1CQUFtQixDQUFDMEIsQ0FBQyxHQUFHO2dCQUN4Q2pELGdCQUFnQnVCLG1CQUFtQixDQUFDWSxLQUFLLEdBQUc7Z0JBQzVDbkMsZ0JBQWdCdUIsbUJBQW1CLENBQUNjLE1BQU0sR0FBRztnQkFDN0NyQyxnQkFBZ0JtQixRQUFRLEdBQUc7WUFDN0IsT0FBTztnQkFDTG5CLGdCQUFnQm1CLFFBQVEsR0FBRztnQkFDM0IsTUFBTXlFLElBQVlwQix1QkFBdUJKO2dCQUN6QyxNQUFNeUIsSUFBWW5CLHVCQUF1Qkg7Z0JBQ3pDdkUsZ0JBQWdCdUIsbUJBQW1CLENBQUN5QixDQUFDLEdBQUdvQjtnQkFDeENwRSxnQkFBZ0J1QixtQkFBbUIsQ0FBQzBCLENBQUMsR0FBR3NCO2dCQUN4Q3ZFLGdCQUFnQnVCLG1CQUFtQixDQUFDWSxLQUFLLEdBQUd5RDtnQkFDNUM1RixnQkFBZ0J1QixtQkFBbUIsQ0FBQ2MsTUFBTSxHQUFHd0Q7WUFDL0M7UUFDRjtJQUNGO0lBRUE7OztHQUdDLEdBQ0QsZ0NBQXFFO1FBQ25FLE9BQU8sSUFBSSxDQUFDdEgsMkJBQTJCO0lBQ3pDO0lBRUE7OztHQUdDLEdBQ0QsNEJBQTJDO1FBQ3pDLE9BQU8sSUFBSSxDQUFDRix1QkFBdUI7SUFDckM7SUFFQTs7O0dBR0MsR0FDRCx3QkFBdUM7UUFDckMsT0FBTyxJQUFJLENBQUNELG1CQUFtQjtJQUNqQztJQUVBOzs7R0FHQyxHQUNELHNCQUE2QjZILFNBQWlCLEVBQXNCO1FBQ2xFLE9BQU8sSUFBSSxDQUFDekgsY0FBYyxDQUFDZSxFQUFFLENBQUMwRztJQUNoQztJQUVBOzs7R0FHQyxHQUNELDBCQUFpQ0UsSUFBWSxFQUFRO1FBQ25ELElBQUksQ0FBQzlILHVCQUF1QixHQUFHOEg7SUFDakM7QUFnQkYiLCJzb3VyY2VzIjpbIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvV2ViU0RLL0ZyYW1ld29yay9zcmMvcmVuZGVyaW5nL2N1YmlzbWNsaXBwaW5nbWFuYWdlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IHRoZSBMaXZlMkQgT3BlbiBTb2Z0d2FyZSBsaWNlbnNlXG4gKiB0aGF0IGNhbiBiZSBmb3VuZCBhdCBodHRwczovL3d3dy5saXZlMmQuY29tL2V1bGEvbGl2ZTJkLW9wZW4tc29mdHdhcmUtbGljZW5zZS1hZ3JlZW1lbnRfZW4uaHRtbC5cbiAqL1xuXG5pbXBvcnQgeyBDb25zdGFudCB9IGZyb20gJy4uL2xpdmUyZGN1YmlzbWZyYW1ld29yayc7XG5pbXBvcnQgeyBjc21WZWN0b3IgfSBmcm9tICcuLi90eXBlL2NzbXZlY3Rvcic7XG5pbXBvcnQgeyBjc21SZWN0IH0gZnJvbSAnLi4vdHlwZS9jc21yZWN0Zic7XG5pbXBvcnQgeyBDdWJpc21NYXRyaXg0NCB9IGZyb20gJy4uL21hdGgvY3ViaXNtbWF0cml4NDQnO1xuaW1wb3J0IHsgQ3ViaXNtTW9kZWwgfSBmcm9tICcuLi9tb2RlbC9jdWJpc21tb2RlbCc7XG5pbXBvcnQgeyBDdWJpc21DbGlwcGluZ0NvbnRleHQsIEN1YmlzbVRleHR1cmVDb2xvciB9IGZyb20gJy4vY3ViaXNtcmVuZGVyZXInO1xuaW1wb3J0IHsgQ3ViaXNtTG9nRXJyb3IsIEN1YmlzbUxvZ1dhcm5pbmcgfSBmcm9tICcuLi91dGlscy9jdWJpc21kZWJ1Zyc7XG5cbmNvbnN0IENvbG9yQ2hhbm5lbENvdW50ID0gNDsgLy8g5a6f6aiT5pmC44GrMeODgeODo+ODs+ODjeODq+OBruWgtOWQiOOBrzHjgIFSR0LjgaDjgZHjga7loLTlkIjjga8z44CB44Ki44Or44OV44Kh44KC5ZCr44KB44KL5aC05ZCI44GvNFxuY29uc3QgQ2xpcHBpbmdNYXNrTWF4Q291bnRPbkRlZmF1bHQgPSAzNjsgLy8g6YCa5bi444Gu44OV44Os44O844Og44OQ44OD44OV44Kh5LiA5p6a44GC44Gf44KK44Gu44Oe44K544Kv5pyA5aSn5pWwXG5jb25zdCBDbGlwcGluZ01hc2tNYXhDb3VudE9uTXVsdGlSZW5kZXJUZXh0dXJlID0gMzI7IC8vIOODleODrOODvOODoOODkOODg+ODleOCoeOBjDLmnprku6XkuIrjgYLjgovloLTlkIjjga7jg5Xjg6zjg7zjg6Djg5Djg4Pjg5XjgqHkuIDmnprjgYLjgZ/jgorjga7jg57jgrnjgq/mnIDlpKfmlbBcblxuZXhwb3J0IHR5cGUgQ2xpcHBpbmdDb250ZXh0Q29uc3RydWN0b3I8XG4gIFRfQ2xpcHBpbmdDb250ZXh0IGV4dGVuZHMgQ3ViaXNtQ2xpcHBpbmdDb250ZXh0XG4+ID0gbmV3IChcbiAgbWFuYWdlcjogQ3ViaXNtQ2xpcHBpbmdNYW5hZ2VyPFRfQ2xpcHBpbmdDb250ZXh0PixcbiAgZHJhd2FibGVNYXNrczogSW50MzJBcnJheSxcbiAgZHJhd2FibGVNYXNrQ291bnRzOiBudW1iZXJcbikgPT4gVF9DbGlwcGluZ0NvbnRleHQ7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUN1YmlzbUNsaXBwaW5nTWFuYWdlciB7XG4gIGdldENsaXBwaW5nTWFza0J1ZmZlclNpemUoKTogbnVtYmVyO1xufVxuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ3ViaXNtQ2xpcHBpbmdNYW5hZ2VyPFxuICBUX0NsaXBwaW5nQ29udGV4dCBleHRlbmRzIEN1YmlzbUNsaXBwaW5nQ29udGV4dFxuPiBpbXBsZW1lbnRzIElDdWJpc21DbGlwcGluZ01hbmFnZXJcbntcbiAgLyoqXG4gICAqIOOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgKi9cbiAgcHVibGljIGNvbnN0cnVjdG9yKFxuICAgIGNsaXBwaW5nQ29udGV4dEZhY3Rvcnk6IENsaXBwaW5nQ29udGV4dENvbnN0cnVjdG9yPFRfQ2xpcHBpbmdDb250ZXh0PlxuICApIHtcbiAgICB0aGlzLl9yZW5kZXJUZXh0dXJlQ291bnQgPSAwO1xuICAgIHRoaXMuX2NsaXBwaW5nTWFza0J1ZmZlclNpemUgPSAyNTY7XG4gICAgdGhpcy5fY2xpcHBpbmdDb250ZXh0TGlzdEZvck1hc2sgPSBuZXcgY3NtVmVjdG9yPFRfQ2xpcHBpbmdDb250ZXh0PigpO1xuICAgIHRoaXMuX2NsaXBwaW5nQ29udGV4dExpc3RGb3JEcmF3ID0gbmV3IGNzbVZlY3RvcjxUX0NsaXBwaW5nQ29udGV4dD4oKTtcbiAgICB0aGlzLl9jaGFubmVsQ29sb3JzID0gbmV3IGNzbVZlY3RvcjxDdWJpc21UZXh0dXJlQ29sb3I+KCk7XG4gICAgdGhpcy5fdG1wQm91bmRzT25Nb2RlbCA9IG5ldyBjc21SZWN0KCk7XG4gICAgdGhpcy5fdG1wTWF0cml4ID0gbmV3IEN1YmlzbU1hdHJpeDQ0KCk7XG4gICAgdGhpcy5fdG1wTWF0cml4Rm9yTWFzayA9IG5ldyBDdWJpc21NYXRyaXg0NCgpO1xuICAgIHRoaXMuX3RtcE1hdHJpeEZvckRyYXcgPSBuZXcgQ3ViaXNtTWF0cml4NDQoKTtcblxuICAgIHRoaXMuX2NsaXBwaW5nQ29udGV4dHRDb25zdHJ1Y3RvciA9IGNsaXBwaW5nQ29udGV4dEZhY3Rvcnk7XG5cbiAgICBsZXQgdG1wOiBDdWJpc21UZXh0dXJlQ29sb3IgPSBuZXcgQ3ViaXNtVGV4dHVyZUNvbG9yKCk7XG4gICAgdG1wLnIgPSAxLjA7XG4gICAgdG1wLmcgPSAwLjA7XG4gICAgdG1wLmIgPSAwLjA7XG4gICAgdG1wLmEgPSAwLjA7XG4gICAgdGhpcy5fY2hhbm5lbENvbG9ycy5wdXNoQmFjayh0bXApO1xuXG4gICAgdG1wID0gbmV3IEN1YmlzbVRleHR1cmVDb2xvcigpO1xuICAgIHRtcC5yID0gMC4wO1xuICAgIHRtcC5nID0gMS4wO1xuICAgIHRtcC5iID0gMC4wO1xuICAgIHRtcC5hID0gMC4wO1xuICAgIHRoaXMuX2NoYW5uZWxDb2xvcnMucHVzaEJhY2sodG1wKTtcblxuICAgIHRtcCA9IG5ldyBDdWJpc21UZXh0dXJlQ29sb3IoKTtcbiAgICB0bXAuciA9IDAuMDtcbiAgICB0bXAuZyA9IDAuMDtcbiAgICB0bXAuYiA9IDEuMDtcbiAgICB0bXAuYSA9IDAuMDtcbiAgICB0aGlzLl9jaGFubmVsQ29sb3JzLnB1c2hCYWNrKHRtcCk7XG5cbiAgICB0bXAgPSBuZXcgQ3ViaXNtVGV4dHVyZUNvbG9yKCk7XG4gICAgdG1wLnIgPSAwLjA7XG4gICAgdG1wLmcgPSAwLjA7XG4gICAgdG1wLmIgPSAwLjA7XG4gICAgdG1wLmEgPSAxLjA7XG4gICAgdGhpcy5fY2hhbm5lbENvbG9ycy5wdXNoQmFjayh0bXApO1xuICB9XG5cbiAgLyoqXG4gICAqIOODh+OCueODiOODqeOCr+OCv+ebuOW9k+OBruWHpueQhlxuICAgKi9cbiAgcHVibGljIHJlbGVhc2UoKTogdm9pZCB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9jbGlwcGluZ0NvbnRleHRMaXN0Rm9yTWFzay5nZXRTaXplKCk7IGkrKykge1xuICAgICAgaWYgKHRoaXMuX2NsaXBwaW5nQ29udGV4dExpc3RGb3JNYXNrLmF0KGkpKSB7XG4gICAgICAgIHRoaXMuX2NsaXBwaW5nQ29udGV4dExpc3RGb3JNYXNrLmF0KGkpLnJlbGVhc2UoKTtcbiAgICAgICAgdGhpcy5fY2xpcHBpbmdDb250ZXh0TGlzdEZvck1hc2suc2V0KGksIHZvaWQgMCk7XG4gICAgICB9XG4gICAgICB0aGlzLl9jbGlwcGluZ0NvbnRleHRMaXN0Rm9yTWFzay5zZXQoaSwgbnVsbCk7XG4gICAgfVxuICAgIHRoaXMuX2NsaXBwaW5nQ29udGV4dExpc3RGb3JNYXNrID0gbnVsbDtcblxuICAgIC8vIF9jbGlwcGluZ0NvbnRleHRMaXN0Rm9yRHJhd+OBr19jbGlwcGluZ0NvbnRleHRMaXN0Rm9yTWFza+OBq+OBguOCi+OCpOODs+OCueOCv+ODs+OCueOCkuaMh+OBl+OBpuOBhOOCi+OAguS4iuiomOOBruWHpueQhuOBq+OCiOOCiuimgee0oOOBlOOBqOOBrkRFTEVUReOBr+S4jeimgeOAglxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fY2xpcHBpbmdDb250ZXh0TGlzdEZvckRyYXcuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgIHRoaXMuX2NsaXBwaW5nQ29udGV4dExpc3RGb3JEcmF3LnNldChpLCBudWxsKTtcbiAgICB9XG4gICAgdGhpcy5fY2xpcHBpbmdDb250ZXh0TGlzdEZvckRyYXcgPSBudWxsO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9jaGFubmVsQ29sb3JzLmdldFNpemUoKTsgaSsrKSB7XG4gICAgICB0aGlzLl9jaGFubmVsQ29sb3JzLnNldChpLCBudWxsKTtcbiAgICB9XG5cbiAgICB0aGlzLl9jaGFubmVsQ29sb3JzID0gbnVsbDtcblxuICAgIGlmICh0aGlzLl9jbGVhcmVkRnJhbWVCdWZmZXJGbGFncyAhPSBudWxsKSB7XG4gICAgICB0aGlzLl9jbGVhcmVkRnJhbWVCdWZmZXJGbGFncy5jbGVhcigpO1xuICAgIH1cbiAgICB0aGlzLl9jbGVhcmVkRnJhbWVCdWZmZXJGbGFncyA9IG51bGw7XG4gIH1cblxuICAvKipcbiAgICog44Oe44ON44O844K444Oj44Gu5Yid5pyf5YyW5Yem55CGXG4gICAqIOOCr+ODquODg+ODlOODs+OCsOODnuOCueOCr+OCkuS9v+OBhuaPj+eUu+OCquODluOCuOOCp+OCr+ODiOOBrueZu+mMsuOCkuihjOOBhlxuICAgKiBAcGFyYW0gbW9kZWwg44Oi44OH44Or44Gu44Kk44Oz44K544K/44Oz44K5XG4gICAqIEBwYXJhbSByZW5kZXJUZXh0dXJlQ291bnQg44OQ44OD44OV44Kh44Gu55Sf5oiQ5pWwXG4gICAqL1xuICBwdWJsaWMgaW5pdGlhbGl6ZShtb2RlbDogQ3ViaXNtTW9kZWwsIHJlbmRlclRleHR1cmVDb3VudDogbnVtYmVyKTogdm9pZCB7XG4gICAgLy8g44Os44Oz44OA44O844OG44Kv44K544OB44Oj44Gu5ZCI6KiI5p6a5pWw44Gu6Kit5a6aXG4gICAgLy8gMeS7peS4iuOBruaVtOaVsOOBp+OBquOBhOWgtOWQiOOBr+OBneOCjOOBnuOCjOitpuWRiuOCkuWHuuOBmVxuICAgIGlmIChyZW5kZXJUZXh0dXJlQ291bnQgJSAxICE9IDApIHtcbiAgICAgIEN1YmlzbUxvZ1dhcm5pbmcoXG4gICAgICAgICdUaGUgbnVtYmVyIG9mIHJlbmRlciB0ZXh0dXJlcyBtdXN0IGJlIHNwZWNpZmllZCBhcyBhbiBpbnRlZ2VyLiBUaGUgZGVjaW1hbCBwb2ludCBpcyByb3VuZGVkIGRvd24gYW5kIGNvcnJlY3RlZCB0byBhbiBpbnRlZ2VyLidcbiAgICAgICk7XG4gICAgICAvLyDlsI/mlbDngrnku6XkuIvjgpLpmaTljrtcbiAgICAgIHJlbmRlclRleHR1cmVDb3VudCA9IH5+cmVuZGVyVGV4dHVyZUNvdW50O1xuICAgIH1cbiAgICBpZiAocmVuZGVyVGV4dHVyZUNvdW50IDwgMSkge1xuICAgICAgQ3ViaXNtTG9nV2FybmluZyhcbiAgICAgICAgJ1RoZSBudW1iZXIgb2YgcmVuZGVyIHRleHR1cmVzIG11c3QgYmUgYW4gaW50ZWdlciBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gMS4gU2V0IHRoZSBudW1iZXIgb2YgcmVuZGVyIHRleHR1cmVzIHRvIDEuJ1xuICAgICAgKTtcbiAgICB9XG4gICAgLy8g6LKg44Gu5YCk44GM5L2/44KP44KM44Gm44GE44KL5aC05ZCI44Gv5by35Yi255qE44GrMeaemuOBqOioreWumuOBmeOCi1xuICAgIHRoaXMuX3JlbmRlclRleHR1cmVDb3VudCA9IHJlbmRlclRleHR1cmVDb3VudCA8IDEgPyAxIDogcmVuZGVyVGV4dHVyZUNvdW50O1xuXG4gICAgdGhpcy5fY2xlYXJlZEZyYW1lQnVmZmVyRmxhZ3MgPSBuZXcgY3NtVmVjdG9yPGJvb2xlYW4+KFxuICAgICAgdGhpcy5fcmVuZGVyVGV4dHVyZUNvdW50XG4gICAgKTtcblxuICAgIC8vIOOCr+ODquODg+ODlOODs+OCsOODnuOCueOCr+OCkuS9v+OBhuaPj+eUu+OCquODluOCuOOCp+OCr+ODiOOCkuOBmeOBueOBpueZu+mMsuOBmeOCi1xuICAgIC8vIOOCr+ODquODg+ODlOODs+OCsOODnuOCueOCr+OBr+OAgemAmuW4uOaVsOWAi+eoi+W6puOBq+mZkOWumuOBl+OBpuS9v+OBhuOCguOBruOBqOOBmeOCi1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbW9kZWwuZ2V0RHJhd2FibGVDb3VudCgpOyBpKyspIHtcbiAgICAgIGlmIChtb2RlbC5nZXREcmF3YWJsZU1hc2tDb3VudHMoKVtpXSA8PSAwKSB7XG4gICAgICAgIC8vIOOCr+ODquODg+ODlOODs+OCsOODnuOCueOCr+OBjOS9v+eUqOOBleOCjOOBpuOBhOOBquOBhOOCouODvOODiOODoeODg+OCt+ODpe+8iOWkmuOBj+OBruWgtOWQiOS9v+eUqOOBl+OBquOBhO+8iVxuICAgICAgICB0aGlzLl9jbGlwcGluZ0NvbnRleHRMaXN0Rm9yRHJhdy5wdXNoQmFjayhudWxsKTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIC8vIOaXouOBq+OBguOCi0NsaXBDb250ZXh044Go5ZCM44GY44GL44OB44Kn44OD44Kv44GZ44KLXG4gICAgICBsZXQgY2xpcHBpbmdDb250ZXh0OiBUX0NsaXBwaW5nQ29udGV4dCA9IHRoaXMuZmluZFNhbWVDbGlwKFxuICAgICAgICBtb2RlbC5nZXREcmF3YWJsZU1hc2tzKClbaV0sXG4gICAgICAgIG1vZGVsLmdldERyYXdhYmxlTWFza0NvdW50cygpW2ldXG4gICAgICApO1xuICAgICAgaWYgKGNsaXBwaW5nQ29udGV4dCA9PSBudWxsKSB7XG4gICAgICAgIC8vIOWQjOS4gOOBruODnuOCueOCr+OBjOWtmOWcqOOBl+OBpuOBhOOBquOBhOWgtOWQiOOBr+eUn+aIkOOBmeOCi1xuXG4gICAgICAgIGNsaXBwaW5nQ29udGV4dCA9IG5ldyB0aGlzLl9jbGlwcGluZ0NvbnRleHR0Q29uc3RydWN0b3IoXG4gICAgICAgICAgdGhpcyxcbiAgICAgICAgICBtb2RlbC5nZXREcmF3YWJsZU1hc2tzKClbaV0sXG4gICAgICAgICAgbW9kZWwuZ2V0RHJhd2FibGVNYXNrQ291bnRzKClbaV1cbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5fY2xpcHBpbmdDb250ZXh0TGlzdEZvck1hc2sucHVzaEJhY2soY2xpcHBpbmdDb250ZXh0KTtcbiAgICAgIH1cblxuICAgICAgY2xpcHBpbmdDb250ZXh0LmFkZENsaXBwZWREcmF3YWJsZShpKTtcblxuICAgICAgdGhpcy5fY2xpcHBpbmdDb250ZXh0TGlzdEZvckRyYXcucHVzaEJhY2soY2xpcHBpbmdDb250ZXh0KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog5pei44Gr44Oe44K544Kv44KS5L2c44Gj44Gm44GE44KL44GL44KS56K66KqNXG4gICAqIOS9nOOBo+OBpuOBhOOCi+anmOOBp+OBguOCjOOBsOipsuW9k+OBmeOCi+OCr+ODquODg+ODlOODs+OCsOODnuOCueOCr+OBruOCpOODs+OCueOCv+ODs+OCueOCkui/lOOBmVxuICAgKiDkvZzjgaPjgabjgYTjgarjgZHjgozjgbBOVUxM44KS6L+U44GZXG4gICAqIEBwYXJhbSBkcmF3YWJsZU1hc2tzIOaPj+eUu+OCquODluOCuOOCp+OCr+ODiOOCkuODnuOCueOCr+OBmeOCi+aPj+eUu+OCquODluOCuOOCp+OCr+ODiOOBruODquOCueODiFxuICAgKiBAcGFyYW0gZHJhd2FibGVNYXNrQ291bnRzIOaPj+eUu+OCquODluOCuOOCp+OCr+ODiOOCkuODnuOCueOCr+OBmeOCi+aPj+eUu+OCquODluOCuOOCp+OCr+ODiOOBruaVsFxuICAgKiBAcmV0dXJuIOipsuW9k+OBmeOCi+OCr+ODquODg+ODlOODs+OCsOODnuOCueOCr+OBjOWtmOWcqOOBmeOCjOOBsOOCpOODs+OCueOCv+ODs+OCueOCkui/lOOBl+OAgeOBquOBkeOCjOOBsE5VTEzjgpLov5TjgZlcbiAgICovXG4gIHB1YmxpYyBmaW5kU2FtZUNsaXAoXG4gICAgZHJhd2FibGVNYXNrczogSW50MzJBcnJheSxcbiAgICBkcmF3YWJsZU1hc2tDb3VudHM6IG51bWJlclxuICApOiBUX0NsaXBwaW5nQ29udGV4dCB7XG4gICAgLy8g5L2c5oiQ5riI44G/Q2xpcHBpbmdDb250ZXh044Go5LiA6Ie044GZ44KL44GL56K66KqNXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9jbGlwcGluZ0NvbnRleHRMaXN0Rm9yTWFzay5nZXRTaXplKCk7IGkrKykge1xuICAgICAgY29uc3QgY2xpcHBpbmdDb250ZXh0OiBUX0NsaXBwaW5nQ29udGV4dCA9XG4gICAgICAgIHRoaXMuX2NsaXBwaW5nQ29udGV4dExpc3RGb3JNYXNrLmF0KGkpO1xuICAgICAgY29uc3QgY291bnQ6IG51bWJlciA9IGNsaXBwaW5nQ29udGV4dC5fY2xpcHBpbmdJZENvdW50O1xuXG4gICAgICAvLyDlgIvmlbDjgYzpgZXjgYbloLTlkIjjga/liKXnialcbiAgICAgIGlmIChjb3VudCAhPSBkcmF3YWJsZU1hc2tDb3VudHMpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGxldCBzYW1lQ291bnQgPSAwO1xuXG4gICAgICAvLyDlkIzjgZhJROOCkuaMgeOBpOOBi+eiuuiqjeOAgumFjeWIl+OBruaVsOOBjOWQjOOBmOOBquOBruOBp+OAgeS4gOiHtOOBl+OBn+WAi+aVsOOBjOWQjOOBmOOBquOCieWQjOOBmOeJqeOCkuaMgeOBpOOBqOOBmeOCi1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBjb3VudDsgaisrKSB7XG4gICAgICAgIGNvbnN0IGNsaXBJZDogbnVtYmVyID0gY2xpcHBpbmdDb250ZXh0Ll9jbGlwcGluZ0lkTGlzdFtqXTtcblxuICAgICAgICBmb3IgKGxldCBrID0gMDsgayA8IGNvdW50OyBrKyspIHtcbiAgICAgICAgICBpZiAoZHJhd2FibGVNYXNrc1trXSA9PSBjbGlwSWQpIHtcbiAgICAgICAgICAgIHNhbWVDb3VudCsrO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzYW1lQ291bnQgPT0gY291bnQpIHtcbiAgICAgICAgcmV0dXJuIGNsaXBwaW5nQ29udGV4dDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDsgLy8g6KaL44Gk44GL44KJ44Gq44GL44Gj44GfXG4gIH1cblxuICAvKipcbiAgICog6auY57K+57Sw44Oe44K544Kv5Yem55CG55So44Gu6KGM5YiX44KS6KiI566X44GZ44KLXG4gICAqIEBwYXJhbSBtb2RlbCDjg6Ljg4fjg6vjga7jgqTjg7Pjgrnjgr/jg7PjgrlcbiAgICogQHBhcmFtIGlzUmlnaHRIYW5kZWQg5Yem55CG44GM5Y+z5omL57O744Gn44GC44KL44GLXG4gICAqL1xuICBwdWJsaWMgc2V0dXBNYXRyaXhGb3JIaWdoUHJlY2lzaW9uKFxuICAgIG1vZGVsOiBDdWJpc21Nb2RlbCxcbiAgICBpc1JpZ2h0SGFuZGVkOiBib29sZWFuXG4gICk6IHZvaWQge1xuICAgIC8vIOWFqOOBpuOBruOCr+ODquODg+ODlOODs+OCsOOCkueUqOaEj+OBmeOCi1xuICAgIC8vIOWQjOOBmOOCr+ODquODg+ODl++8iOikh+aVsOOBruWgtOWQiOOBr+OBvuOBqOOCgeOBpuS4gOOBpOOBruOCr+ODquODg+ODl++8ieOCkuS9v+OBhuWgtOWQiOOBrzHluqbjgaDjgZHoqK3lrprjgZnjgotcbiAgICBsZXQgdXNpbmdDbGlwQ291bnQgPSAwO1xuICAgIGZvciAoXG4gICAgICBsZXQgY2xpcEluZGV4ID0gMDtcbiAgICAgIGNsaXBJbmRleCA8IHRoaXMuX2NsaXBwaW5nQ29udGV4dExpc3RGb3JNYXNrLmdldFNpemUoKTtcbiAgICAgIGNsaXBJbmRleCsrXG4gICAgKSB7XG4gICAgICAvLyDvvJHjgaTjga7jgq/jg6rjg4Pjg5Tjg7PjgrDjg57jgrnjgq/jgavplqLjgZfjgaZcbiAgICAgIGNvbnN0IGNjOiBUX0NsaXBwaW5nQ29udGV4dCA9XG4gICAgICAgIHRoaXMuX2NsaXBwaW5nQ29udGV4dExpc3RGb3JNYXNrLmF0KGNsaXBJbmRleCk7XG5cbiAgICAgIC8vIOOBk+OBruOCr+ODquODg+ODl+OCkuWIqeeUqOOBmeOCi+aPj+eUu+OCquODluOCuOOCp+OCr+ODiOe+pOWFqOS9k+OCkuWbsuOCgOefqeW9ouOCkuioiOeul1xuICAgICAgdGhpcy5jYWxjQ2xpcHBlZERyYXdUb3RhbEJvdW5kcyhtb2RlbCwgY2MpO1xuXG4gICAgICBpZiAoY2MuX2lzVXNpbmcpIHtcbiAgICAgICAgdXNpbmdDbGlwQ291bnQrKzsgLy8g5L2/55So5Lit44Go44GX44Gm44Kr44Km44Oz44OIXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8g44Oe44K544Kv6KGM5YiX5L2c5oiQ5Yem55CGXG4gICAgaWYgKHVzaW5nQ2xpcENvdW50ID4gMCkge1xuICAgICAgdGhpcy5zZXR1cExheW91dEJvdW5kcygwKTtcblxuICAgICAgLy8g44K144Kk44K644GM44Os44Oz44OA44O844OG44Kv44K544OB44Oj44Gu5p6a5pWw44Go5ZCI44KP44Gq44GE5aC05ZCI44Gv5ZCI44KP44Gb44KLXG4gICAgICBpZiAodGhpcy5fY2xlYXJlZEZyYW1lQnVmZmVyRmxhZ3MuZ2V0U2l6ZSgpICE9IHRoaXMuX3JlbmRlclRleHR1cmVDb3VudCkge1xuICAgICAgICB0aGlzLl9jbGVhcmVkRnJhbWVCdWZmZXJGbGFncy5jbGVhcigpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX3JlbmRlclRleHR1cmVDb3VudDsgaSsrKSB7XG4gICAgICAgICAgdGhpcy5fY2xlYXJlZEZyYW1lQnVmZmVyRmxhZ3MucHVzaEJhY2soZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyDjg57jgrnjgq/jga7jgq/jg6rjgqLjg5Xjg6njgrDjgpLmr47jg5Xjg6zjg7zjg6Dplovlp4vmmYLjgavliJ3mnJ/ljJZcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9yZW5kZXJUZXh0dXJlQ291bnQ7IGkrKykge1xuICAgICAgICAgIHRoaXMuX2NsZWFyZWRGcmFtZUJ1ZmZlckZsYWdzLnNldChpLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8g5a6f6Zqb44Gr44Oe44K544Kv44KS55Sf5oiQ44GZ44KLXG4gICAgICAvLyDlhajjgabjga7jg57jgrnjgq/jgpLjganjga7mp5jjgavjg6zjgqTjgqLjgqbjg4jjgZfjgabmj4/jgY/jgYvjgpLmsbrlrprjgZfjgIFDbGlwQ29udGV4dCAsIENsaXBwZWREcmF3Q29udGV4dCDjgavoqJjmhrbjgZnjgotcbiAgICAgIGZvciAoXG4gICAgICAgIGxldCBjbGlwSW5kZXggPSAwO1xuICAgICAgICBjbGlwSW5kZXggPCB0aGlzLl9jbGlwcGluZ0NvbnRleHRMaXN0Rm9yTWFzay5nZXRTaXplKCk7XG4gICAgICAgIGNsaXBJbmRleCsrXG4gICAgICApIHtcbiAgICAgICAgLy8gLS0tIOWun+mam+OBq++8keOBpOOBruODnuOCueOCr+OCkuaPj+OBjyAtLS1cbiAgICAgICAgY29uc3QgY2xpcENvbnRleHQ6IFRfQ2xpcHBpbmdDb250ZXh0ID1cbiAgICAgICAgICB0aGlzLl9jbGlwcGluZ0NvbnRleHRMaXN0Rm9yTWFzay5hdChjbGlwSW5kZXgpO1xuICAgICAgICBjb25zdCBhbGxDbGlwcGVkRHJhd1JlY3Q6IGNzbVJlY3QgPSBjbGlwQ29udGV4dC5fYWxsQ2xpcHBlZERyYXdSZWN0OyAvL+OBk+OBruODnuOCueOCr+OCkuS9v+OBhuOAgeWFqOOBpuOBruaPj+eUu+OCquODluOCuOOCp+OCr+ODiOOBruirlueQhuW6p+aomeS4iuOBruWbsuOBv+efqeW9olxuICAgICAgICBjb25zdCBsYXlvdXRCb3VuZHNPblRleDAxID0gY2xpcENvbnRleHQuX2xheW91dEJvdW5kczsgLy/jgZPjga7kuK3jgavjg57jgrnjgq/jgpLlj47jgoHjgotcbiAgICAgICAgY29uc3QgbWFyZ2luID0gMC4wNTtcbiAgICAgICAgbGV0IHNjYWxlWCA9IDAuMDtcbiAgICAgICAgbGV0IHNjYWxlWSA9IDAuMDtcbiAgICAgICAgY29uc3QgcHB1OiBudW1iZXIgPSBtb2RlbC5nZXRQaXhlbHNQZXJVbml0KCk7XG4gICAgICAgIGNvbnN0IG1hc2tQaXhlbFNpemU6IG51bWJlciA9IGNsaXBDb250ZXh0XG4gICAgICAgICAgLmdldENsaXBwaW5nTWFuYWdlcigpXG4gICAgICAgICAgLmdldENsaXBwaW5nTWFza0J1ZmZlclNpemUoKTtcbiAgICAgICAgY29uc3QgcGh5c2ljYWxNYXNrV2lkdGg6IG51bWJlciA9XG4gICAgICAgICAgbGF5b3V0Qm91bmRzT25UZXgwMS53aWR0aCAqIG1hc2tQaXhlbFNpemU7XG4gICAgICAgIGNvbnN0IHBoeXNpY2FsTWFza0hlaWdodDogbnVtYmVyID1cbiAgICAgICAgICBsYXlvdXRCb3VuZHNPblRleDAxLmhlaWdodCAqIG1hc2tQaXhlbFNpemU7XG5cbiAgICAgICAgdGhpcy5fdG1wQm91bmRzT25Nb2RlbC5zZXRSZWN0KGFsbENsaXBwZWREcmF3UmVjdCk7XG4gICAgICAgIGlmICh0aGlzLl90bXBCb3VuZHNPbk1vZGVsLndpZHRoICogcHB1ID4gcGh5c2ljYWxNYXNrV2lkdGgpIHtcbiAgICAgICAgICB0aGlzLl90bXBCb3VuZHNPbk1vZGVsLmV4cGFuZChhbGxDbGlwcGVkRHJhd1JlY3Qud2lkdGggKiBtYXJnaW4sIDAuMCk7XG4gICAgICAgICAgc2NhbGVYID0gbGF5b3V0Qm91bmRzT25UZXgwMS53aWR0aCAvIHRoaXMuX3RtcEJvdW5kc09uTW9kZWwud2lkdGg7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2NhbGVYID0gcHB1IC8gcGh5c2ljYWxNYXNrV2lkdGg7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5fdG1wQm91bmRzT25Nb2RlbC5oZWlnaHQgKiBwcHUgPiBwaHlzaWNhbE1hc2tIZWlnaHQpIHtcbiAgICAgICAgICB0aGlzLl90bXBCb3VuZHNPbk1vZGVsLmV4cGFuZChcbiAgICAgICAgICAgIDAuMCxcbiAgICAgICAgICAgIGFsbENsaXBwZWREcmF3UmVjdC5oZWlnaHQgKiBtYXJnaW5cbiAgICAgICAgICApO1xuICAgICAgICAgIHNjYWxlWSA9IGxheW91dEJvdW5kc09uVGV4MDEuaGVpZ2h0IC8gdGhpcy5fdG1wQm91bmRzT25Nb2RlbC5oZWlnaHQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2NhbGVZID0gcHB1IC8gcGh5c2ljYWxNYXNrSGVpZ2h0O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g44Oe44K544Kv55Sf5oiQ5pmC44Gr5L2/44GG6KGM5YiX44KS5rGC44KB44KLXG4gICAgICAgIHRoaXMuY3JlYXRlTWF0cml4Rm9yTWFzayhcbiAgICAgICAgICBpc1JpZ2h0SGFuZGVkLFxuICAgICAgICAgIGxheW91dEJvdW5kc09uVGV4MDEsXG4gICAgICAgICAgc2NhbGVYLFxuICAgICAgICAgIHNjYWxlWVxuICAgICAgICApO1xuXG4gICAgICAgIGNsaXBDb250ZXh0Ll9tYXRyaXhGb3JNYXNrLnNldE1hdHJpeCh0aGlzLl90bXBNYXRyaXhGb3JNYXNrLmdldEFycmF5KCkpO1xuICAgICAgICBjbGlwQ29udGV4dC5fbWF0cml4Rm9yRHJhdy5zZXRNYXRyaXgodGhpcy5fdG1wTWF0cml4Rm9yRHJhdy5nZXRBcnJheSgpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog44Oe44K544Kv5L2c5oiQ44O75o+P55S755So44Gu6KGM5YiX44KS5L2c5oiQ44GZ44KL44CCXG4gICAqIEBwYXJhbSBpc1JpZ2h0SGFuZGVkIOW6p+aomeOCkuWPs+aJi+ezu+OBqOOBl+OBpuaJseOBhuOBi+OCkuaMh+WumlxuICAgKiBAcGFyYW0gbGF5b3V0Qm91bmRzT25UZXgwMSDjg57jgrnjgq/jgpLlj47jgoHjgovpoJjln59cbiAgICogQHBhcmFtIHNjYWxlWCDmj4/nlLvjgqrjg5bjgrjjgqfjgq/jg4jjga7kvLjnuK7njodcbiAgICogQHBhcmFtIHNjYWxlWSDmj4/nlLvjgqrjg5bjgrjjgqfjgq/jg4jjga7kvLjnuK7njodcbiAgICovXG4gIHB1YmxpYyBjcmVhdGVNYXRyaXhGb3JNYXNrKFxuICAgIGlzUmlnaHRIYW5kZWQ6IGJvb2xlYW4sXG4gICAgbGF5b3V0Qm91bmRzT25UZXgwMTogY3NtUmVjdCxcbiAgICBzY2FsZVg6IG51bWJlcixcbiAgICBzY2FsZVk6IG51bWJlclxuICApOiB2b2lkIHtcbiAgICB0aGlzLl90bXBNYXRyaXgubG9hZElkZW50aXR5KCk7XG4gICAge1xuICAgICAgLy8gTGF5b3V0MC4uMSDjgpIgLTEuLjHjgavlpInmj5tcbiAgICAgIHRoaXMuX3RtcE1hdHJpeC50cmFuc2xhdGVSZWxhdGl2ZSgtMS4wLCAtMS4wKTtcbiAgICAgIHRoaXMuX3RtcE1hdHJpeC5zY2FsZVJlbGF0aXZlKDIuMCwgMi4wKTtcbiAgICB9XG4gICAge1xuICAgICAgLy8gdmlldyB0byBMYXlvdXQwLi4xXG4gICAgICB0aGlzLl90bXBNYXRyaXgudHJhbnNsYXRlUmVsYXRpdmUoXG4gICAgICAgIGxheW91dEJvdW5kc09uVGV4MDEueCxcbiAgICAgICAgbGF5b3V0Qm91bmRzT25UZXgwMS55XG4gICAgICApOyAvL25ldyA9IFt0cmFuc2xhdGVdXG4gICAgICB0aGlzLl90bXBNYXRyaXguc2NhbGVSZWxhdGl2ZShzY2FsZVgsIHNjYWxlWSk7IC8vbmV3ID0gW3RyYW5zbGF0ZV1bc2NhbGVdXG4gICAgICB0aGlzLl90bXBNYXRyaXgudHJhbnNsYXRlUmVsYXRpdmUoXG4gICAgICAgIC10aGlzLl90bXBCb3VuZHNPbk1vZGVsLngsXG4gICAgICAgIC10aGlzLl90bXBCb3VuZHNPbk1vZGVsLnlcbiAgICAgICk7IC8vbmV3ID0gW3RyYW5zbGF0ZV1bc2NhbGVdW3RyYW5zbGF0ZV1cbiAgICB9XG4gICAgLy8gdG1wTWF0cml4Rm9yTWFzayDjgYzoqIjnrpfntZDmnpxcbiAgICB0aGlzLl90bXBNYXRyaXhGb3JNYXNrLnNldE1hdHJpeCh0aGlzLl90bXBNYXRyaXguZ2V0QXJyYXkoKSk7XG5cbiAgICB0aGlzLl90bXBNYXRyaXgubG9hZElkZW50aXR5KCk7XG4gICAge1xuICAgICAgdGhpcy5fdG1wTWF0cml4LnRyYW5zbGF0ZVJlbGF0aXZlKFxuICAgICAgICBsYXlvdXRCb3VuZHNPblRleDAxLngsXG4gICAgICAgIGxheW91dEJvdW5kc09uVGV4MDEueSAqIChpc1JpZ2h0SGFuZGVkID8gLTEuMCA6IDEuMClcbiAgICAgICk7IC8vbmV3ID0gW3RyYW5zbGF0ZV1cbiAgICAgIHRoaXMuX3RtcE1hdHJpeC5zY2FsZVJlbGF0aXZlKFxuICAgICAgICBzY2FsZVgsXG4gICAgICAgIHNjYWxlWSAqIChpc1JpZ2h0SGFuZGVkID8gLTEuMCA6IDEuMClcbiAgICAgICk7IC8vbmV3ID0gW3RyYW5zbGF0ZV1bc2NhbGVdXG4gICAgICB0aGlzLl90bXBNYXRyaXgudHJhbnNsYXRlUmVsYXRpdmUoXG4gICAgICAgIC10aGlzLl90bXBCb3VuZHNPbk1vZGVsLngsXG4gICAgICAgIC10aGlzLl90bXBCb3VuZHNPbk1vZGVsLnlcbiAgICAgICk7IC8vbmV3ID0gW3RyYW5zbGF0ZV1bc2NhbGVdW3RyYW5zbGF0ZV1cbiAgICB9XG5cbiAgICB0aGlzLl90bXBNYXRyaXhGb3JEcmF3LnNldE1hdHJpeCh0aGlzLl90bXBNYXRyaXguZ2V0QXJyYXkoKSk7XG4gIH1cblxuICAvKipcbiAgICog44Kv44Oq44OD44OU44Oz44Kw44Kz44Oz44OG44Kt44K544OI44KS6YWN572u44GZ44KL44Os44Kk44Ki44Km44OIXG4gICAqIOaMh+WumuOBleOCjOOBn+aVsOOBruODrOODs+ODgOODvOODhuOCr+OCueODgeODo+OCkualteWKm+OBhOOBo+OBseOBhOOBq+S9v+OBo+OBpuODnuOCueOCr+OCkuODrOOCpOOCouOCpuODiOOBmeOCi1xuICAgKiDjg57jgrnjgq/jgrDjg6vjg7zjg5fjga7mlbDjgYw05Lul5LiL44Gq44KJUkdCQeWQhOODgeODo+ODs+ODjeODq+OBq+S4gOOBpOOBmuOBpOODnuOCueOCr+OCkumFjee9ruOBl+OAgTXku6XkuIo25Lul5LiL44Gq44KJUkdCQeOCkjIsMiwxLDHjgajphY3nva7jgZnjgovjgIJcbiAgICpcbiAgICogQHBhcmFtIHVzaW5nQ2xpcENvdW50IOmFjee9ruOBmeOCi+OCr+ODquODg+ODlOODs+OCsOOCs+ODs+ODhuOCreOCueODiOOBruaVsFxuICAgKi9cbiAgcHVibGljIHNldHVwTGF5b3V0Qm91bmRzKHVzaW5nQ2xpcENvdW50OiBudW1iZXIpOiB2b2lkIHtcbiAgICBjb25zdCB1c2VDbGlwcGluZ01hc2tNYXhDb3VudCA9XG4gICAgICB0aGlzLl9yZW5kZXJUZXh0dXJlQ291bnQgPD0gMVxuICAgICAgICA/IENsaXBwaW5nTWFza01heENvdW50T25EZWZhdWx0XG4gICAgICAgIDogQ2xpcHBpbmdNYXNrTWF4Q291bnRPbk11bHRpUmVuZGVyVGV4dHVyZSAqIHRoaXMuX3JlbmRlclRleHR1cmVDb3VudDtcblxuICAgIGlmICh1c2luZ0NsaXBDb3VudCA8PSAwIHx8IHVzaW5nQ2xpcENvdW50ID4gdXNlQ2xpcHBpbmdNYXNrTWF4Q291bnQpIHtcbiAgICAgIGlmICh1c2luZ0NsaXBDb3VudCA+IHVzZUNsaXBwaW5nTWFza01heENvdW50KSB7XG4gICAgICAgIC8vIOODnuOCueOCr+OBruWItumZkOaVsOOBruitpuWRiuOCkuWHuuOBmVxuICAgICAgICBDdWJpc21Mb2dFcnJvcihcbiAgICAgICAgICAnbm90IHN1cHBvcnRlZCBtYXNrIGNvdW50IDogezB9XFxuW0RldGFpbHNdIHJlbmRlciB0ZXh0dXJlIGNvdW50IDogezF9LCBtYXNrIGNvdW50IDogezJ9JyxcbiAgICAgICAgICB1c2luZ0NsaXBDb3VudCAtIHVzZUNsaXBwaW5nTWFza01heENvdW50LFxuICAgICAgICAgIHRoaXMuX3JlbmRlclRleHR1cmVDb3VudCxcbiAgICAgICAgICB1c2luZ0NsaXBDb3VudFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgLy8g44GT44Gu5aC05ZCI44Gv5LiA44Gk44Gu44Oe44K544Kv44K/44O844Ky44OD44OI44KS5q+O5Zue44Kv44Oq44Ki44GX44Gm5L2/55So44GZ44KLXG4gICAgICBmb3IgKFxuICAgICAgICBsZXQgaW5kZXggPSAwO1xuICAgICAgICBpbmRleCA8IHRoaXMuX2NsaXBwaW5nQ29udGV4dExpc3RGb3JNYXNrLmdldFNpemUoKTtcbiAgICAgICAgaW5kZXgrK1xuICAgICAgKSB7XG4gICAgICAgIGNvbnN0IGNsaXBDb250ZXh0OiBUX0NsaXBwaW5nQ29udGV4dCA9XG4gICAgICAgICAgdGhpcy5fY2xpcHBpbmdDb250ZXh0TGlzdEZvck1hc2suYXQoaW5kZXgpO1xuICAgICAgICBjbGlwQ29udGV4dC5fbGF5b3V0Q2hhbm5lbEluZGV4ID0gMDsgLy8g44Gp44GG44Gb5q+O5Zue5raI44GZ44Gu44Gn5Zu65a6aXG4gICAgICAgIGNsaXBDb250ZXh0Ll9sYXlvdXRCb3VuZHMueCA9IDAuMDtcbiAgICAgICAgY2xpcENvbnRleHQuX2xheW91dEJvdW5kcy55ID0gMC4wO1xuICAgICAgICBjbGlwQ29udGV4dC5fbGF5b3V0Qm91bmRzLndpZHRoID0gMS4wO1xuICAgICAgICBjbGlwQ29udGV4dC5fbGF5b3V0Qm91bmRzLmhlaWdodCA9IDEuMDtcbiAgICAgICAgY2xpcENvbnRleHQuX2J1ZmZlckluZGV4ID0gMDtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyDjg6zjg7Pjg4Djg7zjg4bjgq/jgrnjg4Hjg6PjgYwx5p6a44Gq44KJOeWIhuWJsuOBmeOCi++8iOacgOWkpzM25p6a77yJXG4gICAgY29uc3QgbGF5b3V0Q291bnRNYXhWYWx1ZSA9IHRoaXMuX3JlbmRlclRleHR1cmVDb3VudCA8PSAxID8gOSA6IDg7XG5cbiAgICAvLyDmjIflrprjgZXjgozjgZ/mlbDjga7jg6zjg7Pjg4Djg7zjg4bjgq/jgrnjg4Hjg6PjgpLmpbXlipvjgYTjgaPjgbHjgYTjgavkvb/jgaPjgabjg57jgrnjgq/jgpLjg6zjgqTjgqLjgqbjg4jjgZnjgovvvIjjg4fjg5Xjgqnjg6vjg4jjgarjgokx77yJ44CCXG4gICAgLy8g44Oe44K544Kv44Kw44Or44O844OX44Gu5pWw44GMNOS7peS4i+OBquOCiVJHQkHlkITjg4Hjg6Pjg7Pjg43jg6vjgasx44Gk44Ga44Gk44Oe44K544Kv44KS6YWN572u44GX44CBNeS7peS4ijbku6XkuIvjgarjgolSR0JB44KSMiwyLDEsMeOBqOmFjee9ruOBmeOCi+OAglxuICAgIGxldCBjb3VudFBlclNoZWV0RGl2OiBudW1iZXIgPSB1c2luZ0NsaXBDb3VudCAvIHRoaXMuX3JlbmRlclRleHR1cmVDb3VudDsgLy8g44Os44Oz44OA44O844OG44Kv44K544OB44OjMeaemuOBguOBn+OCiuS9leaemuWJsuOCiuW9k+OBpuOCi+OBi+OAglxuICAgIGNvbnN0IHJlZHVjZUxheW91dFRleHR1cmVDb3VudDogbnVtYmVyID1cbiAgICAgIHVzaW5nQ2xpcENvdW50ICUgdGhpcy5fcmVuZGVyVGV4dHVyZUNvdW50OyAvLyDjg6zjgqTjgqLjgqbjg4jjga7mlbDjgpIx5p6a5rib44KJ44GZ44Os44Oz44OA44O844OG44Kv44K544OB44Oj44Gu5pWw77yI44GT44Gu5pWw44Gg44GR44Gu44Os44Oz44OA44O844OG44Kv44K544OB44Oj44GM5a++6LGh77yJ44CCXG5cbiAgICAvLyAx5p6a44Gr5Ymy44KK5b2T44Gm44KL44Oe44K544Kv44Gu5YiG5Ymy5pWw44KS5Y+W44KK44Gf44GE44Gf44KB44CB5bCP5pWw54K544Gv5YiH44KK5LiK44GS44KLXG4gICAgY291bnRQZXJTaGVldERpdiA9IE1hdGguY2VpbChjb3VudFBlclNoZWV0RGl2KTtcblxuICAgIC8vIFJHQkHjgpLpoIbnlarjgavkvb/jgaPjgabjgYTjgY9cbiAgICBsZXQgZGl2Q291bnQ6IG51bWJlciA9IGNvdW50UGVyU2hlZXREaXYgLyBDb2xvckNoYW5uZWxDb3VudDsgLy8gMeODgeODo+ODs+ODjeODq+OBq+mFjee9ruOBmeOCi+WfuuacrOOBruODnuOCueOCr1xuICAgIGNvbnN0IG1vZENvdW50OiBudW1iZXIgPSBjb3VudFBlclNoZWV0RGl2ICUgQ29sb3JDaGFubmVsQ291bnQ7IC8vIOS9meOCiuOAgeOBk+OBrueVquWPt+OBruODgeODo+ODs+ODjeODq+OBvuOBp+OBq+S4gOOBpOOBmuOBpOmFjeWIhuOBmeOCi++8iOOCpOODs+ODh+ODg+OCr+OCueOBp+OBr+OBquOBhO+8iVxuXG4gICAgLy8g5bCP5pWw54K544Gv5YiH44KK5o2o44Gm44KLXG4gICAgZGl2Q291bnQgPSB+fmRpdkNvdW50O1xuXG4gICAgLy8gUkdCQeOBneOCjOOBnuOCjOOBruODgeODo+ODs+ODjeODq+OCkueUqOaEj+OBl+OBpuOBhOOBj++8iDA6UiwgMTpHLCAyOkIsIDM6Qe+8iVxuICAgIGxldCBjdXJDbGlwSW5kZXggPSAwOyAvLyDpoIbnlarjgavoqK3lrprjgZfjgabjgYTjgY9cblxuICAgIGZvciAoXG4gICAgICBsZXQgcmVuZGVyVGV4dHVyZUluZGV4ID0gMDtcbiAgICAgIHJlbmRlclRleHR1cmVJbmRleCA8IHRoaXMuX3JlbmRlclRleHR1cmVDb3VudDtcbiAgICAgIHJlbmRlclRleHR1cmVJbmRleCsrXG4gICAgKSB7XG4gICAgICBmb3IgKFxuICAgICAgICBsZXQgY2hhbm5lbEluZGV4ID0gMDtcbiAgICAgICAgY2hhbm5lbEluZGV4IDwgQ29sb3JDaGFubmVsQ291bnQ7XG4gICAgICAgIGNoYW5uZWxJbmRleCsrXG4gICAgICApIHtcbiAgICAgICAgLy8g44GT44Gu44OB44Oj44Oz44ON44Or44Gr44Os44Kk44Ki44Km44OI44GZ44KL5pWwXG4gICAgICAgIC8vIE5PVEU6IOODrOOCpOOCouOCpuODiOaVsCA9IDHjg4Hjg6Pjg7Pjg43jg6vjgavphY3nva7jgZnjgovln7rmnKzjga7jg57jgrnjgq8gKyDkvZnjgorjga7jg57jgrnjgq/jgpLnva7jgY/jg4Hjg6Pjg7Pjg43jg6vjgarjgokx44Gk6L+95YqgXG4gICAgICAgIGxldCBsYXlvdXRDb3VudDogbnVtYmVyID0gZGl2Q291bnQgKyAoY2hhbm5lbEluZGV4IDwgbW9kQ291bnQgPyAxIDogMCk7XG5cbiAgICAgICAgLy8g44Os44Kk44Ki44Km44OI44Gu5pWw44KSMeaemua4m+OCieOBmeWgtOWQiOOBq+OBneOCjOOCkuihjOOBhuODgeODo+ODs+ODjeODq+OCkuaxuuWumlxuICAgICAgICAvLyBkaXbjgYww44Gu5pmC44Gv5q2j5bi444Gq44Kk44Oz44OH44OD44Kv44K544Gu56+E5Zuy5YaF44Gr44Gq44KL44KI44GG44Gr6Kq/5pW0XG4gICAgICAgIGNvbnN0IGNoZWNrQ2hhbm5lbEluZGV4ID0gbW9kQ291bnQgKyAoZGl2Q291bnQgPCAxID8gLTEgOiAwKTtcblxuICAgICAgICAvLyDku4rlm57jgYzlr77osaHjga7jg4Hjg6Pjg7Pjg43jg6vjgYvjgaTjgIHjg6zjgqTjgqLjgqbjg4jjga7mlbDjgpIx5p6a5rib44KJ44GZ44Os44Oz44OA44O844OG44Kv44K544OB44Oj44GM5a2Y5Zyo44GZ44KL5aC05ZCIXG4gICAgICAgIGlmIChjaGFubmVsSW5kZXggPT0gY2hlY2tDaGFubmVsSW5kZXggJiYgcmVkdWNlTGF5b3V0VGV4dHVyZUNvdW50ID4gMCkge1xuICAgICAgICAgIC8vIOePvuWcqOOBruODrOODs+ODgOODvOODhuOCr+OCueODgeODo+OBjOOAgeWvvuixoeOBruODrOODs+ODgOODvOODhuOCr+OCueODgeODo+OBp+OBguOCjOOBsOODrOOCpOOCouOCpuODiOOBruaVsOOCkjHmnprmuJvjgonjgZnjgIJcbiAgICAgICAgICBsYXlvdXRDb3VudCAtPSAhKHJlbmRlclRleHR1cmVJbmRleCA8IHJlZHVjZUxheW91dFRleHR1cmVDb3VudClcbiAgICAgICAgICAgID8gMVxuICAgICAgICAgICAgOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g5YiG5Ymy5pa55rOV44KS5rG65a6a44GZ44KLXG4gICAgICAgIGlmIChsYXlvdXRDb3VudCA9PSAwKSB7XG4gICAgICAgICAgLy8g5L2V44KC44GX44Gq44GEXG4gICAgICAgIH0gZWxzZSBpZiAobGF5b3V0Q291bnQgPT0gMSkge1xuICAgICAgICAgIC8vIOWFqOOBpuOCkuOBneOBruOBvuOBvuS9v+OBhlxuICAgICAgICAgIGNvbnN0IGNsaXBDb250ZXh0OiBUX0NsaXBwaW5nQ29udGV4dCA9XG4gICAgICAgICAgICB0aGlzLl9jbGlwcGluZ0NvbnRleHRMaXN0Rm9yTWFzay5hdChjdXJDbGlwSW5kZXgrKyk7XG4gICAgICAgICAgY2xpcENvbnRleHQuX2xheW91dENoYW5uZWxJbmRleCA9IGNoYW5uZWxJbmRleDtcbiAgICAgICAgICBjbGlwQ29udGV4dC5fbGF5b3V0Qm91bmRzLnggPSAwLjA7XG4gICAgICAgICAgY2xpcENvbnRleHQuX2xheW91dEJvdW5kcy55ID0gMC4wO1xuICAgICAgICAgIGNsaXBDb250ZXh0Ll9sYXlvdXRCb3VuZHMud2lkdGggPSAxLjA7XG4gICAgICAgICAgY2xpcENvbnRleHQuX2xheW91dEJvdW5kcy5oZWlnaHQgPSAxLjA7XG4gICAgICAgICAgY2xpcENvbnRleHQuX2J1ZmZlckluZGV4ID0gcmVuZGVyVGV4dHVyZUluZGV4O1xuICAgICAgICB9IGVsc2UgaWYgKGxheW91dENvdW50ID09IDIpIHtcbiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxheW91dENvdW50OyBpKyspIHtcbiAgICAgICAgICAgIGxldCB4cG9zOiBudW1iZXIgPSBpICUgMjtcblxuICAgICAgICAgICAgLy8g5bCP5pWw54K544Gv5YiH44KK5o2o44Gm44KLXG4gICAgICAgICAgICB4cG9zID0gfn54cG9zO1xuXG4gICAgICAgICAgICBjb25zdCBjYzogVF9DbGlwcGluZ0NvbnRleHQgPSB0aGlzLl9jbGlwcGluZ0NvbnRleHRMaXN0Rm9yTWFzay5hdChcbiAgICAgICAgICAgICAgY3VyQ2xpcEluZGV4KytcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBjYy5fbGF5b3V0Q2hhbm5lbEluZGV4ID0gY2hhbm5lbEluZGV4O1xuXG4gICAgICAgICAgICAvLyBVVuOCkjLjgaTjgavliIbop6PjgZfjgabkvb/jgYZcbiAgICAgICAgICAgIGNjLl9sYXlvdXRCb3VuZHMueCA9IHhwb3MgKiAwLjU7XG4gICAgICAgICAgICBjYy5fbGF5b3V0Qm91bmRzLnkgPSAwLjA7XG4gICAgICAgICAgICBjYy5fbGF5b3V0Qm91bmRzLndpZHRoID0gMC41O1xuICAgICAgICAgICAgY2MuX2xheW91dEJvdW5kcy5oZWlnaHQgPSAxLjA7XG4gICAgICAgICAgICBjYy5fYnVmZmVySW5kZXggPSByZW5kZXJUZXh0dXJlSW5kZXg7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGxheW91dENvdW50IDw9IDQpIHtcbiAgICAgICAgICAvLyA05YiG5Ymy44GX44Gm5L2/44GGXG4gICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsYXlvdXRDb3VudDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgeHBvczogbnVtYmVyID0gaSAlIDI7XG4gICAgICAgICAgICBsZXQgeXBvczogbnVtYmVyID0gaSAvIDI7XG5cbiAgICAgICAgICAgIC8vIOWwj+aVsOeCueOBr+WIh+OCiuaNqOOBpuOCi1xuICAgICAgICAgICAgeHBvcyA9IH5+eHBvcztcbiAgICAgICAgICAgIHlwb3MgPSB+fnlwb3M7XG5cbiAgICAgICAgICAgIGNvbnN0IGNjID0gdGhpcy5fY2xpcHBpbmdDb250ZXh0TGlzdEZvck1hc2suYXQoY3VyQ2xpcEluZGV4KyspO1xuICAgICAgICAgICAgY2MuX2xheW91dENoYW5uZWxJbmRleCA9IGNoYW5uZWxJbmRleDtcblxuICAgICAgICAgICAgY2MuX2xheW91dEJvdW5kcy54ID0geHBvcyAqIDAuNTtcbiAgICAgICAgICAgIGNjLl9sYXlvdXRCb3VuZHMueSA9IHlwb3MgKiAwLjU7XG4gICAgICAgICAgICBjYy5fbGF5b3V0Qm91bmRzLndpZHRoID0gMC41O1xuICAgICAgICAgICAgY2MuX2xheW91dEJvdW5kcy5oZWlnaHQgPSAwLjU7XG4gICAgICAgICAgICBjYy5fYnVmZmVySW5kZXggPSByZW5kZXJUZXh0dXJlSW5kZXg7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGxheW91dENvdW50IDw9IGxheW91dENvdW50TWF4VmFsdWUpIHtcbiAgICAgICAgICAvLyA55YiG5Ymy44GX44Gm5L2/44GGXG4gICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsYXlvdXRDb3VudDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgeHBvcyA9IGkgJSAzO1xuICAgICAgICAgICAgbGV0IHlwb3MgPSBpIC8gMztcblxuICAgICAgICAgICAgLy8g5bCP5pWw54K544Gv5YiH44KK5o2o44Gm44KLXG4gICAgICAgICAgICB4cG9zID0gfn54cG9zO1xuICAgICAgICAgICAgeXBvcyA9IH5+eXBvcztcblxuICAgICAgICAgICAgY29uc3QgY2M6IFRfQ2xpcHBpbmdDb250ZXh0ID0gdGhpcy5fY2xpcHBpbmdDb250ZXh0TGlzdEZvck1hc2suYXQoXG4gICAgICAgICAgICAgIGN1ckNsaXBJbmRleCsrXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgY2MuX2xheW91dENoYW5uZWxJbmRleCA9IGNoYW5uZWxJbmRleDtcblxuICAgICAgICAgICAgY2MuX2xheW91dEJvdW5kcy54ID0geHBvcyAvIDMuMDtcbiAgICAgICAgICAgIGNjLl9sYXlvdXRCb3VuZHMueSA9IHlwb3MgLyAzLjA7XG4gICAgICAgICAgICBjYy5fbGF5b3V0Qm91bmRzLndpZHRoID0gMS4wIC8gMy4wO1xuICAgICAgICAgICAgY2MuX2xheW91dEJvdW5kcy5oZWlnaHQgPSAxLjAgLyAzLjA7XG4gICAgICAgICAgICBjYy5fYnVmZmVySW5kZXggPSByZW5kZXJUZXh0dXJlSW5kZXg7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIOODnuOCueOCr+OBruWItumZkOaemuaVsOOCkui2heOBiOOBn+WgtOWQiOOBruWHpueQhlxuICAgICAgICAgIEN1YmlzbUxvZ0Vycm9yKFxuICAgICAgICAgICAgJ25vdCBzdXBwb3J0ZWQgbWFzayBjb3VudCA6IHswfVxcbltEZXRhaWxzXSByZW5kZXIgdGV4dHVyZSBjb3VudCA6IHsxfSwgbWFzayBjb3VudCA6IHsyfScsXG4gICAgICAgICAgICB1c2luZ0NsaXBDb3VudCAtIHVzZUNsaXBwaW5nTWFza01heENvdW50LFxuICAgICAgICAgICAgdGhpcy5fcmVuZGVyVGV4dHVyZUNvdW50LFxuICAgICAgICAgICAgdXNpbmdDbGlwQ291bnRcbiAgICAgICAgICApO1xuXG4gICAgICAgICAgLy8gU2V0dXBTaGFkZXJQcm9ncmFt44Gn44Kq44O844OQ44O844Ki44Kv44K744K544GM55m655Sf44GZ44KL44Gu44Gn5Luu44Gn5pWw5YCk44KS5YWl44KM44KLXG4gICAgICAgICAgLy8g44KC44Gh44KN44KT5o+P55S757WQ5p6c44Gv5q2j44GX44GE44KC44Gu44Gn44Gv44Gq44GP44Gq44KLXG4gICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGxheW91dENvdW50OyBpbmRleCsrKSB7XG4gICAgICAgICAgICBjb25zdCBjYzogVF9DbGlwcGluZ0NvbnRleHQgPSB0aGlzLl9jbGlwcGluZ0NvbnRleHRMaXN0Rm9yTWFzay5hdChcbiAgICAgICAgICAgICAgY3VyQ2xpcEluZGV4KytcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIGNjLl9sYXlvdXRDaGFubmVsSW5kZXggPSAwO1xuXG4gICAgICAgICAgICBjYy5fbGF5b3V0Qm91bmRzLnggPSAwLjA7XG4gICAgICAgICAgICBjYy5fbGF5b3V0Qm91bmRzLnkgPSAwLjA7XG4gICAgICAgICAgICBjYy5fbGF5b3V0Qm91bmRzLndpZHRoID0gMS4wO1xuICAgICAgICAgICAgY2MuX2xheW91dEJvdW5kcy5oZWlnaHQgPSAxLjA7XG4gICAgICAgICAgICBjYy5fYnVmZmVySW5kZXggPSAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDjg57jgrnjgq/jgZXjgozjgovmj4/nlLvjgqrjg5bjgrjjgqfjgq/jg4jnvqTlhajkvZPjgpLlm7LjgoDnn6nlvaLvvIjjg6Ljg4fjg6vluqfmqJnns7vvvInjgpLoqIjnrpfjgZnjgotcbiAgICogQHBhcmFtIG1vZGVsIOODouODh+ODq+OBruOCpOODs+OCueOCv+ODs+OCuVxuICAgKiBAcGFyYW0gY2xpcHBpbmdDb250ZXh0IOOCr+ODquODg+ODlOODs+OCsOODnuOCueOCr+OBruOCs+ODs+ODhuOCreOCueODiFxuICAgKi9cbiAgcHVibGljIGNhbGNDbGlwcGVkRHJhd1RvdGFsQm91bmRzKFxuICAgIG1vZGVsOiBDdWJpc21Nb2RlbCxcbiAgICBjbGlwcGluZ0NvbnRleHQ6IFRfQ2xpcHBpbmdDb250ZXh0XG4gICk6IHZvaWQge1xuICAgIC8vIOiiq+OCr+ODquODg+ODlOODs+OCsOODnuOCueOCr++8iOODnuOCueOCr+OBleOCjOOCi+aPj+eUu+OCquODluOCuOOCp+OCr+ODiO+8ieOBruWFqOS9k+OBruefqeW9olxuICAgIGxldCBjbGlwcGVkRHJhd1RvdGFsTWluWDogbnVtYmVyID0gTnVtYmVyLk1BWF9WQUxVRTtcbiAgICBsZXQgY2xpcHBlZERyYXdUb3RhbE1pblk6IG51bWJlciA9IE51bWJlci5NQVhfVkFMVUU7XG4gICAgbGV0IGNsaXBwZWREcmF3VG90YWxNYXhYOiBudW1iZXIgPSBOdW1iZXIuTUlOX1ZBTFVFO1xuICAgIGxldCBjbGlwcGVkRHJhd1RvdGFsTWF4WTogbnVtYmVyID0gTnVtYmVyLk1JTl9WQUxVRTtcblxuICAgIC8vIOOBk+OBruODnuOCueOCr+OBjOWun+mam+OBq+W/heimgeOBi+WIpOWumuOBmeOCi1xuICAgIC8vIOOBk+OBruOCr+ODquODg+ODlOODs+OCsOOCkuWIqeeUqOOBmeOCi+OAjOaPj+eUu+OCquODluOCuOOCp+OCr+ODiOOAjeOBjOOBsuOBqOOBpOOBp+OCguS9v+eUqOWPr+iDveOBp+OBguOCjOOBsOODnuOCueOCr+OCkueUn+aIkOOBmeOCi+W/heimgeOBjOOBguOCi1xuICAgIGNvbnN0IGNsaXBwZWREcmF3Q291bnQ6IG51bWJlciA9XG4gICAgICBjbGlwcGluZ0NvbnRleHQuX2NsaXBwZWREcmF3YWJsZUluZGV4TGlzdC5sZW5ndGg7XG5cbiAgICBmb3IgKFxuICAgICAgbGV0IGNsaXBwZWREcmF3YWJsZUluZGV4ID0gMDtcbiAgICAgIGNsaXBwZWREcmF3YWJsZUluZGV4IDwgY2xpcHBlZERyYXdDb3VudDtcbiAgICAgIGNsaXBwZWREcmF3YWJsZUluZGV4KytcbiAgICApIHtcbiAgICAgIC8vIOODnuOCueOCr+OCkuS9v+eUqOOBmeOCi+aPj+eUu+OCquODluOCuOOCp+OCr+ODiOOBruaPj+eUu+OBleOCjOOCi+efqeW9ouOCkuaxguOCgeOCi1xuICAgICAgY29uc3QgZHJhd2FibGVJbmRleDogbnVtYmVyID1cbiAgICAgICAgY2xpcHBpbmdDb250ZXh0Ll9jbGlwcGVkRHJhd2FibGVJbmRleExpc3RbY2xpcHBlZERyYXdhYmxlSW5kZXhdO1xuXG4gICAgICBjb25zdCBkcmF3YWJsZVZlcnRleENvdW50OiBudW1iZXIgPVxuICAgICAgICBtb2RlbC5nZXREcmF3YWJsZVZlcnRleENvdW50KGRyYXdhYmxlSW5kZXgpO1xuICAgICAgY29uc3QgZHJhd2FibGVWZXJ0ZXhlczogRmxvYXQzMkFycmF5ID1cbiAgICAgICAgbW9kZWwuZ2V0RHJhd2FibGVWZXJ0aWNlcyhkcmF3YWJsZUluZGV4KTtcblxuICAgICAgbGV0IG1pblg6IG51bWJlciA9IE51bWJlci5NQVhfVkFMVUU7XG4gICAgICBsZXQgbWluWTogbnVtYmVyID0gTnVtYmVyLk1BWF9WQUxVRTtcbiAgICAgIGxldCBtYXhYOiBudW1iZXIgPSAtTnVtYmVyLk1BWF9WQUxVRTtcbiAgICAgIGxldCBtYXhZOiBudW1iZXIgPSAtTnVtYmVyLk1BWF9WQUxVRTtcblxuICAgICAgY29uc3QgbG9vcDogbnVtYmVyID0gZHJhd2FibGVWZXJ0ZXhDb3VudCAqIENvbnN0YW50LnZlcnRleFN0ZXA7XG4gICAgICBmb3IgKFxuICAgICAgICBsZXQgcGk6IG51bWJlciA9IENvbnN0YW50LnZlcnRleE9mZnNldDtcbiAgICAgICAgcGkgPCBsb29wO1xuICAgICAgICBwaSArPSBDb25zdGFudC52ZXJ0ZXhTdGVwXG4gICAgICApIHtcbiAgICAgICAgY29uc3QgeDogbnVtYmVyID0gZHJhd2FibGVWZXJ0ZXhlc1twaV07XG4gICAgICAgIGNvbnN0IHk6IG51bWJlciA9IGRyYXdhYmxlVmVydGV4ZXNbcGkgKyAxXTtcblxuICAgICAgICBpZiAoeCA8IG1pblgpIHtcbiAgICAgICAgICBtaW5YID0geDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoeCA+IG1heFgpIHtcbiAgICAgICAgICBtYXhYID0geDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoeSA8IG1pblkpIHtcbiAgICAgICAgICBtaW5ZID0geTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoeSA+IG1heFkpIHtcbiAgICAgICAgICBtYXhZID0geTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyDmnInlirnjgarngrnjgYzkuIDjgaTjgoLlj5bjgozjgarjgYvjgaPjgZ/jga7jgafjgrnjgq3jg4Pjg5dcbiAgICAgIGlmIChtaW5YID09IE51bWJlci5NQVhfVkFMVUUpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIC8vIOWFqOS9k+OBruefqeW9ouOBq+WPjeaYoFxuICAgICAgaWYgKG1pblggPCBjbGlwcGVkRHJhd1RvdGFsTWluWCkge1xuICAgICAgICBjbGlwcGVkRHJhd1RvdGFsTWluWCA9IG1pblg7XG4gICAgICB9XG4gICAgICBpZiAobWluWSA8IGNsaXBwZWREcmF3VG90YWxNaW5ZKSB7XG4gICAgICAgIGNsaXBwZWREcmF3VG90YWxNaW5ZID0gbWluWTtcbiAgICAgIH1cbiAgICAgIGlmIChtYXhYID4gY2xpcHBlZERyYXdUb3RhbE1heFgpIHtcbiAgICAgICAgY2xpcHBlZERyYXdUb3RhbE1heFggPSBtYXhYO1xuICAgICAgfVxuICAgICAgaWYgKG1heFkgPiBjbGlwcGVkRHJhd1RvdGFsTWF4WSkge1xuICAgICAgICBjbGlwcGVkRHJhd1RvdGFsTWF4WSA9IG1heFk7XG4gICAgICB9XG5cbiAgICAgIGlmIChjbGlwcGVkRHJhd1RvdGFsTWluWCA9PSBOdW1iZXIuTUFYX1ZBTFVFKSB7XG4gICAgICAgIGNsaXBwaW5nQ29udGV4dC5fYWxsQ2xpcHBlZERyYXdSZWN0LnggPSAwLjA7XG4gICAgICAgIGNsaXBwaW5nQ29udGV4dC5fYWxsQ2xpcHBlZERyYXdSZWN0LnkgPSAwLjA7XG4gICAgICAgIGNsaXBwaW5nQ29udGV4dC5fYWxsQ2xpcHBlZERyYXdSZWN0LndpZHRoID0gMC4wO1xuICAgICAgICBjbGlwcGluZ0NvbnRleHQuX2FsbENsaXBwZWREcmF3UmVjdC5oZWlnaHQgPSAwLjA7XG4gICAgICAgIGNsaXBwaW5nQ29udGV4dC5faXNVc2luZyA9IGZhbHNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2xpcHBpbmdDb250ZXh0Ll9pc1VzaW5nID0gdHJ1ZTtcbiAgICAgICAgY29uc3QgdzogbnVtYmVyID0gY2xpcHBlZERyYXdUb3RhbE1heFggLSBjbGlwcGVkRHJhd1RvdGFsTWluWDtcbiAgICAgICAgY29uc3QgaDogbnVtYmVyID0gY2xpcHBlZERyYXdUb3RhbE1heFkgLSBjbGlwcGVkRHJhd1RvdGFsTWluWTtcbiAgICAgICAgY2xpcHBpbmdDb250ZXh0Ll9hbGxDbGlwcGVkRHJhd1JlY3QueCA9IGNsaXBwZWREcmF3VG90YWxNaW5YO1xuICAgICAgICBjbGlwcGluZ0NvbnRleHQuX2FsbENsaXBwZWREcmF3UmVjdC55ID0gY2xpcHBlZERyYXdUb3RhbE1pblk7XG4gICAgICAgIGNsaXBwaW5nQ29udGV4dC5fYWxsQ2xpcHBlZERyYXdSZWN0LndpZHRoID0gdztcbiAgICAgICAgY2xpcHBpbmdDb250ZXh0Ll9hbGxDbGlwcGVkRHJhd1JlY3QuaGVpZ2h0ID0gaDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog55S76Z2i5o+P55S744Gr5L2/55So44GZ44KL44Kv44Oq44OD44OU44Oz44Kw44Oe44K544Kv44Gu44Oq44K544OI44KS5Y+W5b6X44GZ44KLXG4gICAqIEByZXR1cm4g55S76Z2i5o+P55S744Gr5L2/55So44GZ44KL44Kv44Oq44OD44OU44Oz44Kw44Oe44K544Kv44Gu44Oq44K544OIXG4gICAqL1xuICBwdWJsaWMgZ2V0Q2xpcHBpbmdDb250ZXh0TGlzdEZvckRyYXcoKTogY3NtVmVjdG9yPFRfQ2xpcHBpbmdDb250ZXh0PiB7XG4gICAgcmV0dXJuIHRoaXMuX2NsaXBwaW5nQ29udGV4dExpc3RGb3JEcmF3O1xuICB9XG5cbiAgLyoqXG4gICAqIOOCr+ODquODg+ODlOODs+OCsOODnuOCueOCr+ODkOODg+ODleOCoeOBruOCteOCpOOCuuOCkuWPluW+l+OBmeOCi1xuICAgKiBAcmV0dXJuIOOCr+ODquODg+ODlOODs+OCsOODnuOCueOCr+ODkOODg+ODleOCoeOBruOCteOCpOOCulxuICAgKi9cbiAgcHVibGljIGdldENsaXBwaW5nTWFza0J1ZmZlclNpemUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fY2xpcHBpbmdNYXNrQnVmZmVyU2l6ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiDjgZPjga7jg5Djg4Pjg5XjgqHjga7jg6zjg7Pjg4Djg7zjg4bjgq/jgrnjg4Hjg6Pjga7mnprmlbDjgpLlj5blvpfjgZnjgotcbiAgICogQHJldHVybiDjgZPjga7jg5Djg4Pjg5XjgqHjga7jg6zjg7Pjg4Djg7zjg4bjgq/jgrnjg4Hjg6Pjga7mnprmlbBcbiAgICovXG4gIHB1YmxpYyBnZXRSZW5kZXJUZXh0dXJlQ291bnQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fcmVuZGVyVGV4dHVyZUNvdW50O1xuICB9XG5cbiAgLyoqXG4gICAqIOOCq+ODqeODvOODgeODo+ODs+ODjeODq++8iFJHQkHvvInjga7jg5Xjg6njgrDjgpLlj5blvpfjgZnjgotcbiAgICogQHBhcmFtIGNoYW5uZWxObyDjgqvjg6njg7zjg4Hjg6Pjg7Pjg43jg6vvvIhSR0JB77yJ44Gu55Wq5Y+377yIMDpSLCAxOkcsIDI6QiwgMzpB77yJXG4gICAqL1xuICBwdWJsaWMgZ2V0Q2hhbm5lbEZsYWdBc0NvbG9yKGNoYW5uZWxObzogbnVtYmVyKTogQ3ViaXNtVGV4dHVyZUNvbG9yIHtcbiAgICByZXR1cm4gdGhpcy5fY2hhbm5lbENvbG9ycy5hdChjaGFubmVsTm8pO1xuICB9XG5cbiAgLyoqXG4gICAqIOOCr+ODquODg+ODlOODs+OCsOODnuOCueOCr+ODkOODg+ODleOCoeOBruOCteOCpOOCuuOCkuioreWumuOBmeOCi1xuICAgKiBAcGFyYW0gc2l6ZSDjgq/jg6rjg4Pjg5Tjg7PjgrDjg57jgrnjgq/jg5Djg4Pjg5XjgqHjga7jgrXjgqTjgrpcbiAgICovXG4gIHB1YmxpYyBzZXRDbGlwcGluZ01hc2tCdWZmZXJTaXplKHNpemU6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuX2NsaXBwaW5nTWFza0J1ZmZlclNpemUgPSBzaXplO1xuICB9XG5cbiAgcHJvdGVjdGVkIF9jbGVhcmVkRnJhbWVCdWZmZXJGbGFnczogY3NtVmVjdG9yPGJvb2xlYW4+OyAvL+ODnuOCueOCr+OBruOCr+ODquOCouODleODqeOCsOOBrumFjeWIl1xuXG4gIHByb3RlY3RlZCBfY2hhbm5lbENvbG9yczogY3NtVmVjdG9yPEN1YmlzbVRleHR1cmVDb2xvcj47XG4gIHByb3RlY3RlZCBfY2xpcHBpbmdDb250ZXh0TGlzdEZvck1hc2s6IGNzbVZlY3RvcjxUX0NsaXBwaW5nQ29udGV4dD47IC8vIOODnuOCueOCr+eUqOOCr+ODquODg+ODlOODs+OCsOOCs+ODs+ODhuOCreOCueODiOOBruODquOCueODiFxuICBwcm90ZWN0ZWQgX2NsaXBwaW5nQ29udGV4dExpc3RGb3JEcmF3OiBjc21WZWN0b3I8VF9DbGlwcGluZ0NvbnRleHQ+OyAvLyDmj4/nlLvnlKjjgq/jg6rjg4Pjg5Tjg7PjgrDjgrPjg7Pjg4bjgq3jgrnjg4jjga7jg6rjgrnjg4hcbiAgcHJvdGVjdGVkIF9jbGlwcGluZ01hc2tCdWZmZXJTaXplOiBudW1iZXI7IC8vIOOCr+ODquODg+ODlOODs+OCsOODnuOCueOCr+OBruODkOODg+ODleOCoeOCteOCpOOCuu+8iOWIneacn+WApDoyNTbvvIlcbiAgcHJvdGVjdGVkIF9yZW5kZXJUZXh0dXJlQ291bnQ6IG51bWJlcjsgLy8g55Sf5oiQ44GZ44KL44Os44Oz44OA44O844OG44Kv44K544OB44Oj44Gu5p6a5pWwXG5cbiAgcHJvdGVjdGVkIF90bXBNYXRyaXg6IEN1YmlzbU1hdHJpeDQ0OyAvLyDjg57jgrnjgq/oqIjnrpfnlKjjga7ooYzliJdcbiAgcHJvdGVjdGVkIF90bXBNYXRyaXhGb3JNYXNrOiBDdWJpc21NYXRyaXg0NDsgLy8g44Oe44K544Kv6KiI566X55So44Gu6KGM5YiXXG4gIHByb3RlY3RlZCBfdG1wTWF0cml4Rm9yRHJhdzogQ3ViaXNtTWF0cml4NDQ7IC8vIOODnuOCueOCr+ioiOeul+eUqOOBruihjOWIl1xuICBwcm90ZWN0ZWQgX3RtcEJvdW5kc09uTW9kZWw6IGNzbVJlY3Q7IC8vIOODnuOCueOCr+mFjee9ruioiOeul+eUqOOBruefqeW9olxuXG4gIHByb3RlY3RlZCBfY2xpcHBpbmdDb250ZXh0dENvbnN0cnVjdG9yOiBDbGlwcGluZ0NvbnRleHRDb25zdHJ1Y3RvcjxUX0NsaXBwaW5nQ29udGV4dD47XG59XG4iXSwibmFtZXMiOlsiQ29uc3RhbnQiLCJjc21WZWN0b3IiLCJjc21SZWN0IiwiQ3ViaXNtTWF0cml4NDQiLCJDdWJpc21UZXh0dXJlQ29sb3IiLCJDdWJpc21Mb2dFcnJvciIsIkN1YmlzbUxvZ1dhcm5pbmciLCJDb2xvckNoYW5uZWxDb3VudCIsIkNsaXBwaW5nTWFza01heENvdW50T25EZWZhdWx0IiwiQ2xpcHBpbmdNYXNrTWF4Q291bnRPbk11bHRpUmVuZGVyVGV4dHVyZSIsIkN1YmlzbUNsaXBwaW5nTWFuYWdlciIsImNsaXBwaW5nQ29udGV4dEZhY3RvcnkiLCJfcmVuZGVyVGV4dHVyZUNvdW50IiwiX2NsaXBwaW5nTWFza0J1ZmZlclNpemUiLCJfY2xpcHBpbmdDb250ZXh0TGlzdEZvck1hc2siLCJfY2xpcHBpbmdDb250ZXh0TGlzdEZvckRyYXciLCJfY2hhbm5lbENvbG9ycyIsIl90bXBCb3VuZHNPbk1vZGVsIiwiX3RtcE1hdHJpeCIsIl90bXBNYXRyaXhGb3JNYXNrIiwiX3RtcE1hdHJpeEZvckRyYXciLCJfY2xpcHBpbmdDb250ZXh0dENvbnN0cnVjdG9yIiwidG1wIiwiciIsImciLCJiIiwiYSIsInB1c2hCYWNrIiwicmVsZWFzZSIsImkiLCJnZXRTaXplIiwiYXQiLCJzZXQiLCJfY2xlYXJlZEZyYW1lQnVmZmVyRmxhZ3MiLCJjbGVhciIsImluaXRpYWxpemUiLCJtb2RlbCIsInJlbmRlclRleHR1cmVDb3VudCIsImdldERyYXdhYmxlQ291bnQiLCJnZXREcmF3YWJsZU1hc2tDb3VudHMiLCJjbGlwcGluZ0NvbnRleHQiLCJmaW5kU2FtZUNsaXAiLCJnZXREcmF3YWJsZU1hc2tzIiwiYWRkQ2xpcHBlZERyYXdhYmxlIiwiZHJhd2FibGVNYXNrcyIsImRyYXdhYmxlTWFza0NvdW50cyIsImNvdW50IiwiX2NsaXBwaW5nSWRDb3VudCIsInNhbWVDb3VudCIsImoiLCJjbGlwSWQiLCJfY2xpcHBpbmdJZExpc3QiLCJrIiwic2V0dXBNYXRyaXhGb3JIaWdoUHJlY2lzaW9uIiwiaXNSaWdodEhhbmRlZCIsInVzaW5nQ2xpcENvdW50IiwiY2xpcEluZGV4IiwiY2MiLCJjYWxjQ2xpcHBlZERyYXdUb3RhbEJvdW5kcyIsIl9pc1VzaW5nIiwic2V0dXBMYXlvdXRCb3VuZHMiLCJjbGlwQ29udGV4dCIsImFsbENsaXBwZWREcmF3UmVjdCIsIl9hbGxDbGlwcGVkRHJhd1JlY3QiLCJsYXlvdXRCb3VuZHNPblRleDAxIiwiX2xheW91dEJvdW5kcyIsIm1hcmdpbiIsInNjYWxlWCIsInNjYWxlWSIsInBwdSIsImdldFBpeGVsc1BlclVuaXQiLCJtYXNrUGl4ZWxTaXplIiwiZ2V0Q2xpcHBpbmdNYW5hZ2VyIiwiZ2V0Q2xpcHBpbmdNYXNrQnVmZmVyU2l6ZSIsInBoeXNpY2FsTWFza1dpZHRoIiwid2lkdGgiLCJwaHlzaWNhbE1hc2tIZWlnaHQiLCJoZWlnaHQiLCJzZXRSZWN0IiwiZXhwYW5kIiwiY3JlYXRlTWF0cml4Rm9yTWFzayIsIl9tYXRyaXhGb3JNYXNrIiwic2V0TWF0cml4IiwiZ2V0QXJyYXkiLCJfbWF0cml4Rm9yRHJhdyIsImxvYWRJZGVudGl0eSIsInRyYW5zbGF0ZVJlbGF0aXZlIiwic2NhbGVSZWxhdGl2ZSIsIngiLCJ5IiwidXNlQ2xpcHBpbmdNYXNrTWF4Q291bnQiLCJpbmRleCIsIl9sYXlvdXRDaGFubmVsSW5kZXgiLCJfYnVmZmVySW5kZXgiLCJsYXlvdXRDb3VudE1heFZhbHVlIiwiY291bnRQZXJTaGVldERpdiIsInJlZHVjZUxheW91dFRleHR1cmVDb3VudCIsIk1hdGgiLCJjZWlsIiwiZGl2Q291bnQiLCJtb2RDb3VudCIsImN1ckNsaXBJbmRleCIsInJlbmRlclRleHR1cmVJbmRleCIsImNoYW5uZWxJbmRleCIsImxheW91dENvdW50IiwiY2hlY2tDaGFubmVsSW5kZXgiLCJ4cG9zIiwieXBvcyIsImNsaXBwZWREcmF3VG90YWxNaW5YIiwiTnVtYmVyIiwiTUFYX1ZBTFVFIiwiY2xpcHBlZERyYXdUb3RhbE1pblkiLCJjbGlwcGVkRHJhd1RvdGFsTWF4WCIsIk1JTl9WQUxVRSIsImNsaXBwZWREcmF3VG90YWxNYXhZIiwiY2xpcHBlZERyYXdDb3VudCIsIl9jbGlwcGVkRHJhd2FibGVJbmRleExpc3QiLCJsZW5ndGgiLCJjbGlwcGVkRHJhd2FibGVJbmRleCIsImRyYXdhYmxlSW5kZXgiLCJkcmF3YWJsZVZlcnRleENvdW50IiwiZ2V0RHJhd2FibGVWZXJ0ZXhDb3VudCIsImRyYXdhYmxlVmVydGV4ZXMiLCJnZXREcmF3YWJsZVZlcnRpY2VzIiwibWluWCIsIm1pblkiLCJtYXhYIiwibWF4WSIsImxvb3AiLCJ2ZXJ0ZXhTdGVwIiwicGkiLCJ2ZXJ0ZXhPZmZzZXQiLCJ3IiwiaCIsImdldENsaXBwaW5nQ29udGV4dExpc3RGb3JEcmF3IiwiZ2V0UmVuZGVyVGV4dHVyZUNvdW50IiwiZ2V0Q2hhbm5lbEZsYWdBc0NvbG9yIiwiY2hhbm5lbE5vIiwic2V0Q2xpcHBpbmdNYXNrQnVmZmVyU2l6ZSIsInNpemUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/rendering/cubismclippingmanager.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/rendering/cubismrenderer.ts":
/*!**********************************************************!*\
  !*** ./WebSDK/Framework/src/rendering/cubismrenderer.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismBlendMode: () => (/* binding */ CubismBlendMode),\n/* harmony export */   CubismClippingContext: () => (/* binding */ CubismClippingContext),\n/* harmony export */   CubismRenderer: () => (/* binding */ CubismRenderer),\n/* harmony export */   CubismTextureColor: () => (/* binding */ CubismTextureColor),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _math_cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math/cubismmatrix44 */ \"(ssr)/./WebSDK/Framework/src/math/cubismmatrix44.ts\");\n/* harmony import */ var _type_csmrectf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/csmrectf */ \"(ssr)/./WebSDK/Framework/src/type/csmrectf.ts\");\n/* harmony import */ var _cubismrenderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubismrenderer */ \"(ssr)/./WebSDK/Framework/src/rendering/cubismrenderer.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n/**\n * モデル描画を処理するレンダラ\n *\n * サブクラスに環境依存の描画命令を記述する。\n */ class CubismRenderer {\n    /**\n   * レンダラのインスタンスを生成して取得する\n   *\n   * @return レンダラのインスタンス\n   */ static create() {\n        return null;\n    }\n    /**\n   * レンダラのインスタンスを解放する\n   */ static delete(renderer) {\n        renderer = null;\n    }\n    /**\n   * レンダラの初期化処理を実行する\n   * 引数に渡したモデルからレンダラの初期化処理に必要な情報を取り出すことができる\n   * @param model モデルのインスタンス\n   */ initialize(model) {\n        this._model = model;\n    }\n    /**\n   * モデルを描画する\n   */ drawModel() {\n        if (this.getModel() == null) return;\n        this.saveProfile();\n        this.doDrawModel();\n        this.restoreProfile();\n    }\n    /**\n   * Model-View-Projection 行列をセットする\n   * 配列は複製されるので、元の配列は外で破棄して良い\n   * @param matrix44 Model-View-Projection 行列\n   */ setMvpMatrix(matrix44) {\n        this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n    }\n    /**\n   * Model-View-Projection 行列を取得する\n   * @return Model-View-Projection 行列\n   */ getMvpMatrix() {\n        return this._mvpMatrix4x4;\n    }\n    /**\n   * モデルの色をセットする\n   * 各色0.0~1.0の間で指定する（1.0が標準の状態）\n   * @param red 赤チャンネルの値\n   * @param green 緑チャンネルの値\n   * @param blue 青チャンネルの値\n   * @param alpha αチャンネルの値\n   */ setModelColor(red, green, blue, alpha) {\n        if (red < 0.0) {\n            red = 0.0;\n        } else if (red > 1.0) {\n            red = 1.0;\n        }\n        if (green < 0.0) {\n            green = 0.0;\n        } else if (green > 1.0) {\n            green = 1.0;\n        }\n        if (blue < 0.0) {\n            blue = 0.0;\n        } else if (blue > 1.0) {\n            blue = 1.0;\n        }\n        if (alpha < 0.0) {\n            alpha = 0.0;\n        } else if (alpha > 1.0) {\n            alpha = 1.0;\n        }\n        this._modelColor.r = red;\n        this._modelColor.g = green;\n        this._modelColor.b = blue;\n        this._modelColor.a = alpha;\n    }\n    /**\n   * モデルの色を取得する\n   * 各色0.0~1.0の間で指定する(1.0が標準の状態)\n   *\n   * @return RGBAのカラー情報\n   */ getModelColor() {\n        return JSON.parse(JSON.stringify(this._modelColor));\n    }\n    /**\n   * 透明度を考慮したモデルの色を計算する。\n   *\n   * @param opacity 透明度\n   *\n   * @return RGBAのカラー情報\n   */ getModelColorWithOpacity(opacity) {\n        const modelColorRGBA = this.getModelColor();\n        modelColorRGBA.a *= opacity;\n        if (this.isPremultipliedAlpha()) {\n            modelColorRGBA.r *= modelColorRGBA.a;\n            modelColorRGBA.g *= modelColorRGBA.a;\n            modelColorRGBA.b *= modelColorRGBA.a;\n        }\n        return modelColorRGBA;\n    }\n    /**\n   * 乗算済みαの有効・無効をセットする\n   * 有効にするならtrue、無効にするならfalseをセットする\n   */ setIsPremultipliedAlpha(enable) {\n        this._isPremultipliedAlpha = enable;\n    }\n    /**\n   * 乗算済みαの有効・無効を取得する\n   * @return true 乗算済みのα有効\n   * @return false 乗算済みのα無効\n   */ isPremultipliedAlpha() {\n        return this._isPremultipliedAlpha;\n    }\n    /**\n   * カリング（片面描画）の有効・無効をセットする。\n   * 有効にするならtrue、無効にするならfalseをセットする\n   */ setIsCulling(culling) {\n        this._isCulling = culling;\n    }\n    /**\n   * カリング（片面描画）の有効・無効を取得する。\n   * @return true カリング有効\n   * @return false カリング無効\n   */ isCulling() {\n        return this._isCulling;\n    }\n    /**\n   * テクスチャの異方性フィルタリングのパラメータをセットする\n   * パラメータ値の影響度はレンダラの実装に依存する\n   * @param n パラメータの値\n   */ setAnisotropy(n) {\n        this._anisotropy = n;\n    }\n    /**\n   * テクスチャの異方性フィルタリングのパラメータをセットする\n   * @return 異方性フィルタリングのパラメータ\n   */ getAnisotropy() {\n        return this._anisotropy;\n    }\n    /**\n   * レンダリングするモデルを取得する\n   * @return レンダリングするモデル\n   */ getModel() {\n        return this._model;\n    }\n    /**\n   * マスク描画の方式を変更する。\n   * falseの場合、マスクを1枚のテクスチャに分割してレンダリングする（デフォルト）\n   * 高速だが、マスク個数の上限が36に限定され、質も荒くなる\n   * trueの場合、パーツ描画の前にその都度必要なマスクを描き直す\n   * レンダリング品質は高いが描画処理負荷は増す\n   * @param high 高精細マスクに切り替えるか？\n   */ useHighPrecisionMask(high) {\n        this._useHighPrecisionMask = high;\n    }\n    /**\n   * マスクの描画方式を取得する\n   * @return true 高精細方式\n   * @return false デフォルト\n   */ isUsingHighPrecisionMask() {\n        return this._useHighPrecisionMask;\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        this._isCulling = false;\n        this._isPremultipliedAlpha = false;\n        this._anisotropy = 0.0;\n        this._model = null;\n        this._modelColor = new CubismTextureColor();\n        this._useHighPrecisionMask = false;\n        // 単位行列に初期化\n        this._mvpMatrix4x4 = new _math_cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__.CubismMatrix44();\n        this._mvpMatrix4x4.loadIdentity();\n    }\n}\nvar CubismBlendMode = /*#__PURE__*/ function(CubismBlendMode) {\n    CubismBlendMode[CubismBlendMode[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n    CubismBlendMode[CubismBlendMode[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n    CubismBlendMode[CubismBlendMode[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\"; // 乗算\n    return CubismBlendMode;\n}({});\n/**\n * テクスチャの色をRGBAで扱うためのクラス\n */ class CubismTextureColor {\n    /**\n   * コンストラクタ\n   */ constructor(r = 1.0, g = 1.0, b = 1.0, a = 1.0){\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n}\n/**\n * クリッピングマスクのコンテキスト\n */ class CubismClippingContext {\n    /**\n   * 引数付きコンストラクタ\n   */ constructor(clippingDrawableIndices, clipCount){\n        // クリップしている（＝マスク用の）Drawableのインデックスリスト\n        this._clippingIdList = clippingDrawableIndices;\n        // マスクの数\n        this._clippingIdCount = clipCount;\n        this._allClippedDrawRect = new _type_csmrectf__WEBPACK_IMPORTED_MODULE_1__.csmRect();\n        this._layoutBounds = new _type_csmrectf__WEBPACK_IMPORTED_MODULE_1__.csmRect();\n        this._clippedDrawableIndexList = [];\n        this._matrixForMask = new _math_cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__.CubismMatrix44();\n        this._matrixForDraw = new _math_cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__.CubismMatrix44();\n        this._bufferIndex = 0;\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        if (this._layoutBounds != null) {\n            this._layoutBounds = null;\n        }\n        if (this._allClippedDrawRect != null) {\n            this._allClippedDrawRect = null;\n        }\n        if (this._clippedDrawableIndexList != null) {\n            this._clippedDrawableIndexList = null;\n        }\n    }\n    /**\n   * このマスクにクリップされる描画オブジェクトを追加する\n   *\n   * @param drawableIndex クリッピング対象に追加する描画オブジェクトのインデックス\n   */ addClippedDrawable(drawableIndex) {\n        this._clippedDrawableIndexList.push(drawableIndex);\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismBlendMode = _cubismrenderer__WEBPACK_IMPORTED_MODULE_2__.CubismBlendMode;\n    Live2DCubismFramework.CubismRenderer = _cubismrenderer__WEBPACK_IMPORTED_MODULE_2__.CubismRenderer;\n    Live2DCubismFramework.CubismTextureColor = _cubismrenderer__WEBPACK_IMPORTED_MODULE_2__.CubismTextureColor;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/rendering/cubismrenderer.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/rendering/cubismrenderer_webgl.ts":
/*!****************************************************************!*\
  !*** ./WebSDK/Framework/src/rendering/cubismrenderer_webgl.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismClippingContext_WebGL: () => (/* binding */ CubismClippingContext_WebGL),\n/* harmony export */   CubismClippingManager_WebGL: () => (/* binding */ CubismClippingManager_WebGL),\n/* harmony export */   CubismRenderTextureResource: () => (/* binding */ CubismRenderTextureResource),\n/* harmony export */   CubismRendererProfile_WebGL: () => (/* binding */ CubismRendererProfile_WebGL),\n/* harmony export */   CubismRenderer_WebGL: () => (/* binding */ CubismRenderer_WebGL),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _type_csmmap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/csmmap */ \"(ssr)/./WebSDK/Framework/src/type/csmmap.ts\");\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/cubismdebug */ \"(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\");\n/* harmony import */ var _cubismclippingmanager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cubismclippingmanager */ \"(ssr)/./WebSDK/Framework/src/rendering/cubismclippingmanager.ts\");\n/* harmony import */ var _cubismrenderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cubismrenderer */ \"(ssr)/./WebSDK/Framework/src/rendering/cubismrenderer.ts\");\n/* harmony import */ var _cubismshader_webgl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cubismshader_webgl */ \"(ssr)/./WebSDK/Framework/src/rendering/cubismshader_webgl.ts\");\n/* harmony import */ var _cubismrenderer_webgl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cubismrenderer_webgl */ \"(ssr)/./WebSDK/Framework/src/rendering/cubismrenderer_webgl.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n\n\nlet s_viewport;\nlet s_fbo;\n/**\n * クリッピングマスクの処理を実行するクラス\n */ class CubismClippingManager_WebGL extends _cubismclippingmanager__WEBPACK_IMPORTED_MODULE_3__.CubismClippingManager {\n    /**\n   * テンポラリのレンダーテクスチャのアドレスを取得する\n   * FrameBufferObjectが存在しない場合、新しく生成する\n   *\n   * @return レンダーテクスチャの配列\n   */ getMaskRenderTexture() {\n        // テンポラリのRenderTextureを取得する\n        if (this._maskTexture && this._maskTexture.textures != null) {\n            // 前回使ったものを返す\n            this._maskTexture.frameNo = this._currentFrameNo;\n        } else {\n            // FrameBufferObjectが存在しない場合、新しく生成する\n            if (this._maskRenderTextures != null) {\n                this._maskRenderTextures.clear();\n            }\n            this._maskRenderTextures = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n            // ColorBufferObjectが存在しない場合、新しく生成する\n            if (this._maskColorBuffers != null) {\n                this._maskColorBuffers.clear();\n            }\n            this._maskColorBuffers = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n            // クリッピングバッファサイズを取得\n            const size = this._clippingMaskBufferSize;\n            for(let index = 0; index < this._renderTextureCount; index++){\n                this._maskColorBuffers.pushBack(this.gl.createTexture()); // 直接代入\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this._maskColorBuffers.at(index));\n                this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n                this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n                this._maskRenderTextures.pushBack(this.gl.createFramebuffer());\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTextures.at(index));\n                this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._maskColorBuffers.at(index), 0);\n            }\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n            this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, this._maskRenderTextures);\n        }\n        return this._maskTexture.textures;\n    }\n    /**\n   * WebGLレンダリングコンテキストを設定する\n   * @param gl WebGLレンダリングコンテキスト\n   */ setGL(gl) {\n        this.gl = gl;\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        super(CubismClippingContext_WebGL);\n    }\n    /**\n   * クリッピングコンテキストを作成する。モデル描画時に実行する。\n   * @param model モデルのインスタンス\n   * @param renderer レンダラのインスタンス\n   */ setupClippingContext(model, renderer) {\n        this._currentFrameNo++;\n        // 全てのクリッピングを用意する\n        // 同じクリップ（複数の場合はまとめて一つのクリップ）を使う場合は1度だけ設定する\n        let usingClipCount = 0;\n        for(let clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++){\n            // 1つのクリッピングマスクに関して\n            const cc = this._clippingContextListForMask.at(clipIndex);\n            // このクリップを利用する描画オブジェクト群全体を囲む矩形を計算\n            this.calcClippedDrawTotalBounds(model, cc);\n            if (cc._isUsing) {\n                usingClipCount++; // 使用中としてカウント\n            }\n        }\n        // マスク作成処理\n        if (usingClipCount > 0) {\n            // 生成したFrameBufferと同じサイズでビューポートを設定\n            this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n            // 後の計算のためにインデックスの最初をセット\n            this._currentMaskRenderTexture = this.getMaskRenderTexture().at(0);\n            renderer.preDraw(); // バッファをクリアする\n            this.setupLayoutBounds(usingClipCount);\n            // ---------- マスク描画処理 ----------\n            // マスク用RenderTextureをactiveにセット\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._currentMaskRenderTexture);\n            // サイズがレンダーテクスチャの枚数と合わない場合は合わせる\n            if (this._clearedFrameBufferFlags.getSize() != this._renderTextureCount) {\n                this._clearedFrameBufferFlags.clear();\n                this._clearedFrameBufferFlags = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector(this._renderTextureCount);\n            }\n            // マスクのクリアフラグを毎フレーム開始時に初期化\n            for(let index = 0; index < this._clearedFrameBufferFlags.getSize(); index++){\n                this._clearedFrameBufferFlags.set(index, false);\n            }\n            // 実際にマスクを生成する\n            // 全てのマスクをどのようにレイアウトして描くかを決定し、ClipContext, ClippedDrawContextに記憶する\n            for(let clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++){\n                // --- 実際に1つのマスクを描く ---\n                const clipContext = this._clippingContextListForMask.at(clipIndex);\n                const allClipedDrawRect = clipContext._allClippedDrawRect; // このマスクを使う、すべての描画オブジェクトの論理座標上の囲み矩形\n                const layoutBoundsOnTex01 = clipContext._layoutBounds; // この中にマスクを収める\n                const margin = 0.05; // モデル座標上の矩形を、適宜マージンを付けて使う\n                let scaleX = 0;\n                let scaleY = 0;\n                // clipContextに設定したレンダーテクスチャをインデックスで取得\n                const clipContextRenderTexture = this.getMaskRenderTexture().at(clipContext._bufferIndex);\n                // 現在のレンダーテクスチャがclipContextのものと異なる場合\n                if (this._currentMaskRenderTexture != clipContextRenderTexture) {\n                    this._currentMaskRenderTexture = clipContextRenderTexture;\n                    renderer.preDraw(); // バッファをクリアする\n                    // マスク用RenderTextureをactiveにセット\n                    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._currentMaskRenderTexture);\n                }\n                this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n                this._tmpBoundsOnModel.expand(allClipedDrawRect.width * margin, allClipedDrawRect.height * margin);\n                //########## 本来は割り当てられた領域の全体を使わず必要最低限のサイズがよい\n                // シェーダ用の計算式を求める。回転を考慮しない場合は以下のとおり\n                // movePeriod' = movePeriod * scaleX + offX\t\t  [[ movePeriod' = (movePeriod - tmpBoundsOnModel.movePeriod)*scale + layoutBoundsOnTex01.movePeriod ]]\n                scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n                scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n                // マスク生成時に使う行列を求める\n                {\n                    // シェーダに渡す行列を求める <<<<<<<<<<<<<<<<<<<<<<<< 要最適化（逆順に計算すればシンプルにできる）\n                    this._tmpMatrix.loadIdentity();\n                    {\n                        // layout0..1 を -1..1に変換\n                        this._tmpMatrix.translateRelative(-1.0, -1.0);\n                        this._tmpMatrix.scaleRelative(2.0, 2.0);\n                    }\n                    {\n                        // view to layout0..1\n                        this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n                        this._tmpMatrix.scaleRelative(scaleX, scaleY); // new = [translate][scale]\n                        this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n                    // new = [translate][scale][translate]\n                    }\n                    // tmpMatrixForMaskが計算結果\n                    this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n                }\n                //--------- draw時の mask 参照用行列を計算\n                {\n                    // シェーダに渡す行列を求める <<<<<<<<<<<<<<<<<<<<<<<< 要最適化（逆順に計算すればシンプルにできる）\n                    this._tmpMatrix.loadIdentity();\n                    {\n                        this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n                        this._tmpMatrix.scaleRelative(scaleX, scaleY); // new = [translate][scale]\n                        this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n                    // new = [translate][scale][translate]\n                    }\n                    this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n                }\n                clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n                clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n                const clipDrawCount = clipContext._clippingIdCount;\n                for(let i = 0; i < clipDrawCount; i++){\n                    const clipDrawIndex = clipContext._clippingIdList[i];\n                    // 頂点情報が更新されておらず、信頼性がない場合は描画をパスする\n                    if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n                        continue;\n                    }\n                    renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n                    // マスクがクリアされていないなら処理する\n                    if (!this._clearedFrameBufferFlags.at(clipContext._bufferIndex)) {\n                        // マスクをクリアする\n                        // (仮仕様) 1が無効（描かれない）領域、0が有効（描かれる）領域。（シェーダーCd*Csで0に近い値をかけてマスクを作る。1をかけると何も起こらない）\n                        this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\n                        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n                        this._clearedFrameBufferFlags.set(clipContext._bufferIndex, true);\n                    }\n                    // 今回専用の変換を適用して描く\n                    // チャンネルも切り替える必要がある(A,R,G,B)\n                    renderer.setClippingContextBufferForMask(clipContext);\n                    renderer.drawMeshWebGL(model, clipDrawIndex);\n                }\n            }\n            // --- 後処理 ---\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo); // 描画対象を戻す\n            renderer.setClippingContextBufferForMask(null);\n            this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n        }\n    }\n    /**\n   * カラーバッファを取得する\n   * @return カラーバッファ\n   */ getColorBuffer() {\n        return this._maskColorBuffers;\n    }\n    /**\n   * マスクの合計数をカウント\n   * @returns\n   */ getClippingMaskCount() {\n        return this._clippingContextListForMask.getSize();\n    }\n}\n/**\n * レンダーテクスチャのリソースを定義する構造体\n * クリッピングマスクで使用する\n */ class CubismRenderTextureResource {\n    /**\n   * 引数付きコンストラクタ\n   * @param frameNo レンダラーのフレーム番号\n   * @param texture テクスチャのアドレス\n   */ constructor(frameNo, texture){\n        this.frameNo = frameNo;\n        this.textures = texture;\n    }\n}\n/**\n * クリッピングマスクのコンテキスト\n */ class CubismClippingContext_WebGL extends _cubismrenderer__WEBPACK_IMPORTED_MODULE_4__.CubismClippingContext {\n    /**\n   * 引数付きコンストラクタ\n   */ constructor(manager, clippingDrawableIndices, clipCount){\n        super(clippingDrawableIndices, clipCount);\n        this._owner = manager;\n    }\n    /**\n   * このマスクを管理するマネージャのインスタンスを取得する\n   * @return クリッピングマネージャのインスタンス\n   */ getClippingManager() {\n        return this._owner;\n    }\n    setGl(gl) {\n        this._owner.setGL(gl);\n    }\n}\nclass CubismRendererProfile_WebGL {\n    setGlEnable(index, enabled) {\n        if (enabled) this.gl.enable(index);\n        else this.gl.disable(index);\n    }\n    setGlEnableVertexAttribArray(index, enabled) {\n        if (enabled) this.gl.enableVertexAttribArray(index);\n        else this.gl.disableVertexAttribArray(index);\n    }\n    save() {\n        if (this.gl == null) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismLogError)(\"'gl' is null. WebGLRenderingContext is required.\\nPlease call 'CubimRenderer_WebGL.startUp' function.\");\n            return;\n        }\n        //-- push state --\n        this._lastArrayBufferBinding = this.gl.getParameter(this.gl.ARRAY_BUFFER_BINDING);\n        this._lastElementArrayBufferBinding = this.gl.getParameter(this.gl.ELEMENT_ARRAY_BUFFER_BINDING);\n        this._lastProgram = this.gl.getParameter(this.gl.CURRENT_PROGRAM);\n        this._lastActiveTexture = this.gl.getParameter(this.gl.ACTIVE_TEXTURE);\n        this.gl.activeTexture(this.gl.TEXTURE1); //テクスチャユニット1をアクティブに（以後の設定対象とする）\n        this._lastTexture1Binding2D = this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n        this.gl.activeTexture(this.gl.TEXTURE0); //テクスチャユニット0をアクティブに（以後の設定対象とする）\n        this._lastTexture0Binding2D = this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n        this._lastVertexAttribArrayEnabled[0] = this.gl.getVertexAttrib(0, this.gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n        this._lastVertexAttribArrayEnabled[1] = this.gl.getVertexAttrib(1, this.gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n        this._lastVertexAttribArrayEnabled[2] = this.gl.getVertexAttrib(2, this.gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n        this._lastVertexAttribArrayEnabled[3] = this.gl.getVertexAttrib(3, this.gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n        this._lastScissorTest = this.gl.isEnabled(this.gl.SCISSOR_TEST);\n        this._lastStencilTest = this.gl.isEnabled(this.gl.STENCIL_TEST);\n        this._lastDepthTest = this.gl.isEnabled(this.gl.DEPTH_TEST);\n        this._lastCullFace = this.gl.isEnabled(this.gl.CULL_FACE);\n        this._lastBlend = this.gl.isEnabled(this.gl.BLEND);\n        this._lastFrontFace = this.gl.getParameter(this.gl.FRONT_FACE);\n        this._lastColorMask = this.gl.getParameter(this.gl.COLOR_WRITEMASK);\n        // backup blending\n        this._lastBlending[0] = this.gl.getParameter(this.gl.BLEND_SRC_RGB);\n        this._lastBlending[1] = this.gl.getParameter(this.gl.BLEND_DST_RGB);\n        this._lastBlending[2] = this.gl.getParameter(this.gl.BLEND_SRC_ALPHA);\n        this._lastBlending[3] = this.gl.getParameter(this.gl.BLEND_DST_ALPHA);\n        // モデル描画直前のFBOとビューポートを保存\n        this._lastFBO = this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n        this._lastViewport = this.gl.getParameter(this.gl.VIEWPORT);\n    }\n    restore() {\n        if (this.gl == null) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismLogError)(\"'gl' is null. WebGLRenderingContext is required.\\nPlease call 'CubimRenderer_WebGL.startUp' function.\");\n            return;\n        }\n        this.gl.useProgram(this._lastProgram);\n        this.setGlEnableVertexAttribArray(0, this._lastVertexAttribArrayEnabled[0]);\n        this.setGlEnableVertexAttribArray(1, this._lastVertexAttribArrayEnabled[1]);\n        this.setGlEnableVertexAttribArray(2, this._lastVertexAttribArrayEnabled[2]);\n        this.setGlEnableVertexAttribArray(3, this._lastVertexAttribArrayEnabled[3]);\n        this.setGlEnable(this.gl.SCISSOR_TEST, this._lastScissorTest);\n        this.setGlEnable(this.gl.STENCIL_TEST, this._lastStencilTest);\n        this.setGlEnable(this.gl.DEPTH_TEST, this._lastDepthTest);\n        this.setGlEnable(this.gl.CULL_FACE, this._lastCullFace);\n        this.setGlEnable(this.gl.BLEND, this._lastBlend);\n        this.gl.frontFace(this._lastFrontFace);\n        this.gl.colorMask(this._lastColorMask[0], this._lastColorMask[1], this._lastColorMask[2], this._lastColorMask[3]);\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this._lastArrayBufferBinding); //前にバッファがバインドされていたら破棄する必要がある\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this._lastElementArrayBufferBinding);\n        this.gl.activeTexture(this.gl.TEXTURE1); //テクスチャユニット1を復元\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this._lastTexture1Binding2D);\n        this.gl.activeTexture(this.gl.TEXTURE0); //テクスチャユニット0を復元\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this._lastTexture0Binding2D);\n        this.gl.activeTexture(this._lastActiveTexture);\n        this.gl.blendFuncSeparate(this._lastBlending[0], this._lastBlending[1], this._lastBlending[2], this._lastBlending[3]);\n    }\n    setGl(gl) {\n        this.gl = gl;\n    }\n    constructor(){\n        this._lastVertexAttribArrayEnabled = new Array(4);\n        this._lastColorMask = new Array(4);\n        this._lastBlending = new Array(4);\n        this._lastViewport = new Array(4);\n    }\n}\n/**\n * WebGL用の描画命令を実装したクラス\n */ class CubismRenderer_WebGL extends _cubismrenderer__WEBPACK_IMPORTED_MODULE_4__.CubismRenderer {\n    /**\n   * レンダラの初期化処理を実行する\n   * 引数に渡したモデルからレンダラの初期化処理に必要な情報を取り出すことができる\n   *\n   * @param model モデルのインスタンス\n   * @param maskBufferCount バッファの生成数\n   */ initialize(model, maskBufferCount = 1) {\n        if (model.isUsingMasking()) {\n            this._clippingManager = new CubismClippingManager_WebGL(); // クリッピングマスク・バッファ前処理方式を初期化\n            this._clippingManager.initialize(model, maskBufferCount);\n        }\n        this._sortedDrawableIndexList.resize(model.getDrawableCount(), 0);\n        super.initialize(model); // 親クラスの処理を呼ぶ\n    }\n    /**\n   * WebGLテクスチャのバインド処理\n   * CubismRendererにテクスチャを設定し、CubismRenderer内でその画像を参照するためのIndex値を戻り値とする\n   * @param modelTextureNo セットするモデルテクスチャの番号\n   * @param glTextureNo WebGLテクスチャの番号\n   */ bindTexture(modelTextureNo, glTexture) {\n        this._textures.setValue(modelTextureNo, glTexture);\n    }\n    /**\n   * WebGLにバインドされたテクスチャのリストを取得する\n   * @return テクスチャのリスト\n   */ getBindedTextures() {\n        return this._textures;\n    }\n    /**\n   * クリッピングマスクバッファのサイズを設定する\n   * マスク用のFrameBufferを破棄、再作成する為処理コストは高い\n   * @param size クリッピングマスクバッファのサイズ\n   */ setClippingMaskBufferSize(size) {\n        // クリッピングマスクを利用しない場合は早期リターン\n        if (!this._model.isUsingMasking()) {\n            return;\n        }\n        // インスタンス破棄前にレンダーテクスチャの数を保存\n        const renderTextureCount = this._clippingManager.getRenderTextureCount();\n        // FrameBufferのサイズを変更するためにインスタンスを破棄・再作成する\n        this._clippingManager.release();\n        this._clippingManager = void 0;\n        this._clippingManager = null;\n        this._clippingManager = new CubismClippingManager_WebGL();\n        this._clippingManager.setClippingMaskBufferSize(size);\n        this._clippingManager.initialize(this.getModel(), renderTextureCount // インスタンス破棄前に保存したレンダーテクスチャの数\n        );\n    }\n    /**\n   * クリッピングマスクバッファのサイズを取得する\n   * @return クリッピングマスクバッファのサイズ\n   */ getClippingMaskBufferSize() {\n        return this._model.isUsingMasking() ? this._clippingManager.getClippingMaskBufferSize() : -1;\n    }\n    /**\n   * レンダーテクスチャの枚数を取得する\n   * @return レンダーテクスチャの枚数\n   */ getRenderTextureCount() {\n        return this._model.isUsingMasking() ? this._clippingManager.getRenderTextureCount() : -1;\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        super();\n        this._clippingContextBufferForMask = null;\n        this._clippingContextBufferForDraw = null;\n        this._rendererProfile = new CubismRendererProfile_WebGL();\n        this.firstDraw = true;\n        this._textures = new _type_csmmap__WEBPACK_IMPORTED_MODULE_0__.csmMap();\n        this._sortedDrawableIndexList = new _type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        this._bufferData = {\n            vertex: WebGLBuffer = null,\n            uv: WebGLBuffer = null,\n            index: WebGLBuffer = null\n        };\n        // テクスチャ対応マップの容量を確保しておく\n        this._textures.prepareCapacity(32, true);\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        if (this._clippingManager) {\n            this._clippingManager.release();\n            this._clippingManager = void 0;\n            this._clippingManager = null;\n        }\n        if (this.gl == null) {\n            return;\n        }\n        this.gl.deleteBuffer(this._bufferData.vertex);\n        this._bufferData.vertex = null;\n        this.gl.deleteBuffer(this._bufferData.uv);\n        this._bufferData.uv = null;\n        this.gl.deleteBuffer(this._bufferData.index);\n        this._bufferData.index = null;\n        this._bufferData = null;\n        this._textures = null;\n    }\n    /**\n   * モデルを描画する実際の処理\n   */ doDrawModel() {\n        if (this.gl == null) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismLogError)(\"'gl' is null. WebGLRenderingContext is required.\\nPlease call 'CubimRenderer_WebGL.startUp' function.\");\n            return;\n        }\n        //------------ クリッピングマスク・バッファ前処理方式の場合 ------------\n        if (this._clippingManager != null) {\n            this.preDraw();\n            if (this.isUsingHighPrecisionMask()) {\n                this._clippingManager.setupMatrixForHighPrecision(this.getModel(), false);\n            } else {\n                this._clippingManager.setupClippingContext(this.getModel(), this);\n            }\n        }\n        // 上記クリッピング処理内でも一度PreDrawを呼ぶので注意!!\n        this.preDraw();\n        const drawableCount = this.getModel().getDrawableCount();\n        const renderOrder = this.getModel().getDrawableRenderOrders();\n        // インデックスを描画順でソート\n        for(let i = 0; i < drawableCount; ++i){\n            const order = renderOrder[i];\n            this._sortedDrawableIndexList.set(order, i);\n        }\n        // 描画\n        for(let i = 0; i < drawableCount; ++i){\n            const drawableIndex = this._sortedDrawableIndexList.at(i);\n            // Drawableが表示状態でなければ処理をパスする\n            if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n                continue;\n            }\n            const clipContext = this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw().at(drawableIndex) : null;\n            if (clipContext != null && this.isUsingHighPrecisionMask()) {\n                // 描くことになっていた\n                if (clipContext._isUsing) {\n                    // 生成したFrameBufferと同じサイズでビューポートを設定\n                    this.gl.viewport(0, 0, this._clippingManager.getClippingMaskBufferSize(), this._clippingManager.getClippingMaskBufferSize());\n                    this.preDraw(); // バッファをクリアする\n                    // ---------- マスク描画処理 ----------\n                    // マスク用RenderTextureをactiveにセット\n                    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, clipContext.getClippingManager().getMaskRenderTexture().at(clipContext._bufferIndex));\n                    // マスクをクリアする\n                    // (仮仕様) 1が無効（描かれない）領域、0が有効（描かれる）領域。（シェーダーCd*Csで0に近い値をかけてマスクを作る。1をかけると何も起こらない）\n                    this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\n                    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n                }\n                {\n                    const clipDrawCount = clipContext._clippingIdCount;\n                    for(let index = 0; index < clipDrawCount; index++){\n                        const clipDrawIndex = clipContext._clippingIdList[index];\n                        // 頂点情報が更新されておらず、信頼性がない場合は描画をパスする\n                        if (!this._model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n                            continue;\n                        }\n                        this.setIsCulling(this._model.getDrawableCulling(clipDrawIndex) != false);\n                        // 今回専用の変換を適用して描く\n                        // チャンネルも切り替える必要がある(A,R,G,B)\n                        this.setClippingContextBufferForMask(clipContext);\n                        this.drawMeshWebGL(this._model, clipDrawIndex);\n                    }\n                }\n                {\n                    // --- 後処理 ---\n                    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo); // 描画対象を戻す\n                    this.setClippingContextBufferForMask(null);\n                    this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n                    this.preDraw(); // バッファをクリアする\n                }\n            }\n            // クリッピングマスクをセットする\n            this.setClippingContextBufferForDraw(clipContext);\n            this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n            this.drawMeshWebGL(this._model, drawableIndex);\n        }\n    }\n    /**\n   * 描画オブジェクト（アートメッシュ）を描画する。\n   * @param model 描画対象のモデル\n   * @param index 描画対象のメッシュのインデックス\n   */ drawMeshWebGL(model, index) {\n        // 裏面描画の有効・無効\n        if (this.isCulling()) {\n            this.gl.enable(this.gl.CULL_FACE);\n        } else {\n            this.gl.disable(this.gl.CULL_FACE);\n        }\n        this.gl.frontFace(this.gl.CCW); // Cubism SDK OpenGLはマスク・アートメッシュ共にCCWが表面\n        if (this.isGeneratingMask()) {\n            _cubismshader_webgl__WEBPACK_IMPORTED_MODULE_5__.CubismShader_WebGL.getInstance().setupShaderProgramForMask(this, model, index);\n        } else {\n            _cubismshader_webgl__WEBPACK_IMPORTED_MODULE_5__.CubismShader_WebGL.getInstance().setupShaderProgramForDraw(this, model, index);\n        }\n        {\n            const indexCount = model.getDrawableVertexIndexCount(index);\n            this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n        }\n        // 後処理\n        this.gl.useProgram(null);\n        this.setClippingContextBufferForDraw(null);\n        this.setClippingContextBufferForMask(null);\n    }\n    saveProfile() {\n        this._rendererProfile.save();\n    }\n    restoreProfile() {\n        this._rendererProfile.restore();\n    }\n    /**\n   * レンダラが保持する静的なリソースを解放する\n   * WebGLの静的なシェーダープログラムを解放する\n   */ static doStaticRelease() {\n        _cubismshader_webgl__WEBPACK_IMPORTED_MODULE_5__.CubismShader_WebGL.deleteInstance();\n    }\n    /**\n   * レンダーステートを設定する\n   * @param fbo アプリケーション側で指定しているフレームバッファ\n   * @param viewport ビューポート\n   */ setRenderState(fbo, viewport) {\n        s_fbo = fbo;\n        s_viewport = viewport;\n    }\n    /**\n   * 描画開始時の追加処理\n   * モデルを描画する前にクリッピングマスクに必要な処理を実装している\n   */ preDraw() {\n        if (this.firstDraw) {\n            this.firstDraw = false;\n        }\n        this.gl.disable(this.gl.SCISSOR_TEST);\n        this.gl.disable(this.gl.STENCIL_TEST);\n        this.gl.disable(this.gl.DEPTH_TEST);\n        // カリング（1.0beta3）\n        this.gl.frontFace(this.gl.CW);\n        this.gl.enable(this.gl.BLEND);\n        this.gl.colorMask(true, true, true, true);\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null); // 前にバッファがバインドされていたら破棄する必要がある\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n        // 異方性フィルタリングを適用する\n        if (this.getAnisotropy() > 0.0 && this._extension) {\n            for(let i = 0; i < this._textures.getSize(); ++i){\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this._textures.getValue(i));\n                this.gl.texParameterf(this.gl.TEXTURE_2D, this._extension.TEXTURE_MAX_ANISOTROPY_EXT, this.getAnisotropy());\n            }\n        }\n    }\n    /**\n   * マスクテクスチャに描画するクリッピングコンテキストをセットする\n   */ setClippingContextBufferForMask(clip) {\n        this._clippingContextBufferForMask = clip;\n    }\n    /**\n   * マスクテクスチャに描画するクリッピングコンテキストを取得する\n   * @return マスクテクスチャに描画するクリッピングコンテキスト\n   */ getClippingContextBufferForMask() {\n        return this._clippingContextBufferForMask;\n    }\n    /**\n   * 画面上に描画するクリッピングコンテキストをセットする\n   */ setClippingContextBufferForDraw(clip) {\n        this._clippingContextBufferForDraw = clip;\n    }\n    /**\n   * 画面上に描画するクリッピングコンテキストを取得する\n   * @return 画面上に描画するクリッピングコンテキスト\n   */ getClippingContextBufferForDraw() {\n        return this._clippingContextBufferForDraw;\n    }\n    /**\n   * マスク生成時かを判定する\n   * @returns 判定値\n   */ isGeneratingMask() {\n        return this.getClippingContextBufferForMask() != null;\n    }\n    /**\n   * glの設定\n   */ startUp(gl) {\n        this.gl = gl;\n        if (this._clippingManager) {\n            this._clippingManager.setGL(gl);\n        }\n        _cubismshader_webgl__WEBPACK_IMPORTED_MODULE_5__.CubismShader_WebGL.getInstance().setGl(gl);\n        this._rendererProfile.setGl(gl);\n        // 異方性フィルタリングが使用できるかチェック\n        this._extension = this.gl.getExtension('EXT_texture_filter_anisotropic') || this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic') || this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic');\n    }\n}\n/**\n * レンダラが保持する静的なリソースを開放する\n */ _cubismrenderer__WEBPACK_IMPORTED_MODULE_4__.CubismRenderer.staticRelease = ()=>{\n    CubismRenderer_WebGL.doStaticRelease();\n};\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismClippingContext = _cubismrenderer_webgl__WEBPACK_IMPORTED_MODULE_6__.CubismClippingContext_WebGL;\n    Live2DCubismFramework.CubismClippingManager_WebGL = _cubismrenderer_webgl__WEBPACK_IMPORTED_MODULE_6__.CubismClippingManager_WebGL;\n    Live2DCubismFramework.CubismRenderTextureResource = _cubismrenderer_webgl__WEBPACK_IMPORTED_MODULE_6__.CubismRenderTextureResource;\n    Live2DCubismFramework.CubismRenderer_WebGL = _cubismrenderer_webgl__WEBPACK_IMPORTED_MODULE_6__.CubismRenderer_WebGL;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/rendering/cubismrenderer_webgl.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/rendering/cubismshader_webgl.ts":
/*!**************************************************************!*\
  !*** ./WebSDK/Framework/src/rendering/cubismshader_webgl.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismShaderSet: () => (/* binding */ CubismShaderSet),\n/* harmony export */   CubismShader_WebGL: () => (/* binding */ CubismShader_WebGL),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework),\n/* harmony export */   ShaderNames: () => (/* binding */ ShaderNames),\n/* harmony export */   fragmentShaderSrcMaskInvertedPremultipliedAlpha: () => (/* binding */ fragmentShaderSrcMaskInvertedPremultipliedAlpha),\n/* harmony export */   fragmentShaderSrcMaskPremultipliedAlpha: () => (/* binding */ fragmentShaderSrcMaskPremultipliedAlpha),\n/* harmony export */   fragmentShaderSrcPremultipliedAlpha: () => (/* binding */ fragmentShaderSrcPremultipliedAlpha),\n/* harmony export */   fragmentShaderSrcsetupMask: () => (/* binding */ fragmentShaderSrcsetupMask),\n/* harmony export */   vertexShaderSrc: () => (/* binding */ vertexShaderSrc),\n/* harmony export */   vertexShaderSrcMasked: () => (/* binding */ vertexShaderSrcMasked),\n/* harmony export */   vertexShaderSrcSetupMask: () => (/* binding */ vertexShaderSrcSetupMask)\n/* harmony export */ });\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _utils_cubismdebug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/cubismdebug */ \"(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\");\n/* harmony import */ var _cubismrenderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubismrenderer */ \"(ssr)/./WebSDK/Framework/src/rendering/cubismrenderer.ts\");\n/* harmony import */ var _cubismshader_webgl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cubismshader_webgl */ \"(ssr)/./WebSDK/Framework/src/rendering/cubismshader_webgl.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\nlet s_instance;\nconst ShaderCount = 10; // シェーダーの数 = マスク生成用 + (通常用 + 加算 + 乗算) * (マスク無の乗算済アルファ対応版 + マスク有の乗算済アルファ対応版 + マスク有反転の乗算済アルファ対応版)\n/**\n * WebGL用のシェーダープログラムを生成・破棄するクラス\n * シングルトンなクラスであり、CubismShader_WebGL.getInstanceからアクセスする。\n */ class CubismShader_WebGL {\n    /**\n   * インスタンスを取得する（シングルトン）\n   * @return インスタンス\n   */ static getInstance() {\n        if (s_instance == null) {\n            s_instance = new CubismShader_WebGL();\n            return s_instance;\n        }\n        return s_instance;\n    }\n    /**\n   * インスタンスを開放する（シングルトン）\n   */ static deleteInstance() {\n        if (s_instance) {\n            s_instance.release();\n            s_instance = null;\n        }\n    }\n    /**\n   * privateなコンストラクタ\n   */ constructor(){\n        this._shaderSets = new _type_csmvector__WEBPACK_IMPORTED_MODULE_0__.csmVector();\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        this.releaseShaderProgram();\n    }\n    /**\n   * 描画用のシェーダプログラムの一連のセットアップを実行する\n   * @param renderer レンダラー\n   * @param model 描画対象のモデル\n   * @param index 描画対象のメッシュのインデックス\n   */ setupShaderProgramForDraw(renderer, model, index) {\n        if (!renderer.isPremultipliedAlpha()) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_1__.CubismLogError)('NoPremultipliedAlpha is not allowed');\n        }\n        if (this._shaderSets.getSize() == 0) {\n            this.generateShaders();\n        }\n        // Blending\n        let srcColor;\n        let dstColor;\n        let srcAlpha;\n        let dstAlpha;\n        // _shaderSets用のオフセット計算\n        const masked = renderer.getClippingContextBufferForDraw() != null; // この描画オブジェクトはマスク対象か\n        const invertedMask = model.getDrawableInvertedMaskBit(index);\n        const offset = masked ? invertedMask ? 2 : 1 : 0;\n        let shaderSet;\n        switch(model.getDrawableBlendMode(index)){\n            case _cubismrenderer__WEBPACK_IMPORTED_MODULE_2__.CubismBlendMode.CubismBlendMode_Normal:\n            default:\n                shaderSet = this._shaderSets.at(1 + offset);\n                srcColor = this.gl.ONE;\n                dstColor = this.gl.ONE_MINUS_SRC_ALPHA;\n                srcAlpha = this.gl.ONE;\n                dstAlpha = this.gl.ONE_MINUS_SRC_ALPHA;\n                break;\n            case _cubismrenderer__WEBPACK_IMPORTED_MODULE_2__.CubismBlendMode.CubismBlendMode_Additive:\n                shaderSet = this._shaderSets.at(4 + offset);\n                srcColor = this.gl.ONE;\n                dstColor = this.gl.ONE;\n                srcAlpha = this.gl.ZERO;\n                dstAlpha = this.gl.ONE;\n                break;\n            case _cubismrenderer__WEBPACK_IMPORTED_MODULE_2__.CubismBlendMode.CubismBlendMode_Multiplicative:\n                shaderSet = this._shaderSets.at(7 + offset);\n                srcColor = this.gl.DST_COLOR;\n                dstColor = this.gl.ONE_MINUS_SRC_ALPHA;\n                srcAlpha = this.gl.ZERO;\n                dstAlpha = this.gl.ONE;\n                break;\n        }\n        this.gl.useProgram(shaderSet.shaderProgram);\n        // 頂点配列の設定\n        if (renderer._bufferData.vertex == null) {\n            renderer._bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.vertex);\n        // 頂点配列の設定\n        const vertexArray = model.getDrawableVertices(index);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        // テクスチャ頂点の設定\n        if (renderer._bufferData.uv == null) {\n            renderer._bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.uv);\n        const uvArray = model.getDrawableVertexUvs(index);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (masked) {\n            this.gl.activeTexture(this.gl.TEXTURE1);\n            // frameBufferに書かれたテクスチャ\n            const tex = renderer.getClippingContextBufferForDraw().getClippingManager().getColorBuffer().at(renderer.getClippingContextBufferForDraw()._bufferIndex);\n            this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n            this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n            // view座標をClippingContextの座標に変換するための行列を設定\n            this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, renderer.getClippingContextBufferForDraw()._matrixForDraw.getArray());\n            // 使用するカラーチャンネルを設定\n            const channelIndex = renderer.getClippingContextBufferForDraw()._layoutChannelIndex;\n            const colorChannel = renderer.getClippingContextBufferForDraw().getClippingManager().getChannelFlagAsColor(channelIndex);\n            this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.r, colorChannel.g, colorChannel.b, colorChannel.a);\n        }\n        // テクスチャ設定\n        const textureNo = model.getDrawableTextureIndex(index);\n        const textureId = renderer.getBindedTextures().getValue(textureNo);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        //座標変換\n        const matrix4x4 = renderer.getMvpMatrix();\n        this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n        //ベース色の取得\n        const baseColor = renderer.getModelColorWithOpacity(model.getDrawableOpacity(index));\n        const multiplyColor = model.getMultiplyColor(index);\n        const screenColor = model.getScreenColor(index);\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.r, baseColor.g, baseColor.b, baseColor.a);\n        this.gl.uniform4f(shaderSet.uniformMultiplyColorLocation, multiplyColor.r, multiplyColor.g, multiplyColor.b, multiplyColor.a);\n        this.gl.uniform4f(shaderSet.uniformScreenColorLocation, screenColor.r, screenColor.g, screenColor.b, screenColor.a);\n        // IBOを作成し、データを転送\n        if (renderer._bufferData.index == null) {\n            renderer._bufferData.index = this.gl.createBuffer();\n        }\n        const indexArray = model.getDrawableVertexIndices(index);\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, renderer._bufferData.index);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.blendFuncSeparate(srcColor, dstColor, srcAlpha, dstAlpha);\n    }\n    /**\n   * マスク用のシェーダプログラムの一連のセットアップを実行する\n   * @param renderer レンダラー\n   * @param model 描画対象のモデル\n   * @param index 描画対象のメッシュのインデックス\n   */ setupShaderProgramForMask(renderer, model, index) {\n        if (!renderer.isPremultipliedAlpha()) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_1__.CubismLogError)('NoPremultipliedAlpha is not allowed');\n        }\n        if (this._shaderSets.getSize() == 0) {\n            this.generateShaders();\n        }\n        const shaderSet = this._shaderSets.at(0);\n        this.gl.useProgram(shaderSet.shaderProgram);\n        // 頂点配列の設定\n        if (renderer._bufferData.vertex == null) {\n            renderer._bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.vertex);\n        const vertexArray = model.getDrawableVertices(index);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        //テクスチャ設定\n        if (renderer._bufferData.uv == null) {\n            renderer._bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.uv);\n        const textureNo = model.getDrawableTextureIndex(index);\n        const textureId = renderer.getBindedTextures().getValue(textureNo);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        // テクスチャ頂点の設定\n        if (renderer._bufferData.uv == null) {\n            renderer._bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.uv);\n        const uvArray = model.getDrawableVertexUvs(index);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        // チャンネル\n        const context = renderer.getClippingContextBufferForMask();\n        const channelIndex = renderer.getClippingContextBufferForMask()._layoutChannelIndex;\n        const colorChannel = renderer.getClippingContextBufferForMask().getClippingManager().getChannelFlagAsColor(channelIndex);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.r, colorChannel.g, colorChannel.b, colorChannel.a);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, renderer.getClippingContextBufferForMask()._matrixForMask.getArray());\n        const rect = renderer.getClippingContextBufferForMask()._layoutBounds;\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2.0 - 1.0, rect.y * 2.0 - 1.0, rect.getRight() * 2.0 - 1.0, rect.getBottom() * 2.0 - 1.0);\n        const multiplyColor = model.getMultiplyColor(index);\n        const screenColor = model.getScreenColor(index);\n        this.gl.uniform4f(shaderSet.uniformMultiplyColorLocation, multiplyColor.r, multiplyColor.g, multiplyColor.b, multiplyColor.a);\n        this.gl.uniform4f(shaderSet.uniformScreenColorLocation, screenColor.r, screenColor.g, screenColor.b, screenColor.a);\n        // Blending\n        const srcColor = this.gl.ZERO;\n        const dstColor = this.gl.ONE_MINUS_SRC_COLOR;\n        const srcAlpha = this.gl.ZERO;\n        const dstAlpha = this.gl.ONE_MINUS_SRC_ALPHA;\n        // IBOを作成し、データを転送\n        if (renderer._bufferData.index == null) {\n            renderer._bufferData.index = this.gl.createBuffer();\n        }\n        const indexArray = model.getDrawableVertexIndices(index);\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, renderer._bufferData.index);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.blendFuncSeparate(srcColor, dstColor, srcAlpha, dstAlpha);\n    }\n    /**\n   * シェーダープログラムを解放する\n   */ releaseShaderProgram() {\n        for(let i = 0; i < this._shaderSets.getSize(); i++){\n            this.gl.deleteProgram(this._shaderSets.at(i).shaderProgram);\n            this._shaderSets.at(i).shaderProgram = 0;\n            this._shaderSets.set(i, void 0);\n            this._shaderSets.set(i, null);\n        }\n    }\n    /**\n   * シェーダープログラムを初期化する\n   * @param vertShaderSrc 頂点シェーダのソース\n   * @param fragShaderSrc フラグメントシェーダのソース\n   */ generateShaders() {\n        for(let i = 0; i < ShaderCount; i++){\n            this._shaderSets.pushBack(new CubismShaderSet());\n        }\n        this._shaderSets.at(0).shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n        this._shaderSets.at(1).shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n        this._shaderSets.at(2).shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n        this._shaderSets.at(3).shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n        // 加算も通常と同じシェーダーを利用する\n        this._shaderSets.at(4).shaderProgram = this._shaderSets.at(1).shaderProgram;\n        this._shaderSets.at(5).shaderProgram = this._shaderSets.at(2).shaderProgram;\n        this._shaderSets.at(6).shaderProgram = this._shaderSets.at(3).shaderProgram;\n        // 乗算も通常と同じシェーダーを利用する\n        this._shaderSets.at(7).shaderProgram = this._shaderSets.at(1).shaderProgram;\n        this._shaderSets.at(8).shaderProgram = this._shaderSets.at(2).shaderProgram;\n        this._shaderSets.at(9).shaderProgram = this._shaderSets.at(3).shaderProgram;\n        // SetupMask\n        this._shaderSets.at(0).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(0).shaderProgram, 'a_position');\n        this._shaderSets.at(0).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(0).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(0).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 's_texture0');\n        this._shaderSets.at(0).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(0).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(0).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(0).uniformMultiplyColorLocation = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(0).uniformScreenColorLocation = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_screenColor');\n        // 通常（PremultipliedAlpha）\n        this._shaderSets.at(1).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(1).shaderProgram, 'a_position');\n        this._shaderSets.at(1).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(1).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(1).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 's_texture0');\n        this._shaderSets.at(1).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_matrix');\n        this._shaderSets.at(1).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(1).uniformMultiplyColorLocation = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(1).uniformScreenColorLocation = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_screenColor');\n        // 通常（クリッピング、PremultipliedAlpha）\n        this._shaderSets.at(2).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(2).shaderProgram, 'a_position');\n        this._shaderSets.at(2).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(2).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(2).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 's_texture0');\n        this._shaderSets.at(2).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 's_texture1');\n        this._shaderSets.at(2).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_matrix');\n        this._shaderSets.at(2).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(2).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(2).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(2).uniformMultiplyColorLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(2).uniformScreenColorLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_screenColor');\n        // 通常（クリッピング・反転, PremultipliedAlpha）\n        this._shaderSets.at(3).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(3).shaderProgram, 'a_position');\n        this._shaderSets.at(3).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(3).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(3).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 's_texture0');\n        this._shaderSets.at(3).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 's_texture1');\n        this._shaderSets.at(3).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_matrix');\n        this._shaderSets.at(3).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(3).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(3).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(3).uniformMultiplyColorLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(3).uniformScreenColorLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_screenColor');\n        // 加算（PremultipliedAlpha）\n        this._shaderSets.at(4).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(4).shaderProgram, 'a_position');\n        this._shaderSets.at(4).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(4).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(4).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 's_texture0');\n        this._shaderSets.at(4).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_matrix');\n        this._shaderSets.at(4).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(4).uniformMultiplyColorLocation = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(4).uniformScreenColorLocation = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_screenColor');\n        // 加算（クリッピング、PremultipliedAlpha）\n        this._shaderSets.at(5).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(5).shaderProgram, 'a_position');\n        this._shaderSets.at(5).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(5).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(5).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 's_texture0');\n        this._shaderSets.at(5).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 's_texture1');\n        this._shaderSets.at(5).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_matrix');\n        this._shaderSets.at(5).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(5).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(5).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(5).uniformMultiplyColorLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(5).uniformScreenColorLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_screenColor');\n        // 加算（クリッピング・反転、PremultipliedAlpha）\n        this._shaderSets.at(6).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(6).shaderProgram, 'a_position');\n        this._shaderSets.at(6).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(6).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(6).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 's_texture0');\n        this._shaderSets.at(6).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 's_texture1');\n        this._shaderSets.at(6).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_matrix');\n        this._shaderSets.at(6).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(6).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(6).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(6).uniformMultiplyColorLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(6).uniformScreenColorLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_screenColor');\n        // 乗算（PremultipliedAlpha）\n        this._shaderSets.at(7).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(7).shaderProgram, 'a_position');\n        this._shaderSets.at(7).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(7).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(7).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 's_texture0');\n        this._shaderSets.at(7).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_matrix');\n        this._shaderSets.at(7).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(7).uniformMultiplyColorLocation = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(7).uniformScreenColorLocation = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_screenColor');\n        // 乗算（クリッピング、PremultipliedAlpha）\n        this._shaderSets.at(8).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(8).shaderProgram, 'a_position');\n        this._shaderSets.at(8).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(8).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(8).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 's_texture0');\n        this._shaderSets.at(8).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 's_texture1');\n        this._shaderSets.at(8).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_matrix');\n        this._shaderSets.at(8).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(8).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(8).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(8).uniformMultiplyColorLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(8).uniformScreenColorLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_screenColor');\n        // 乗算（クリッピング・反転、PremultipliedAlpha）\n        this._shaderSets.at(9).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(9).shaderProgram, 'a_position');\n        this._shaderSets.at(9).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(9).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(9).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 's_texture0');\n        this._shaderSets.at(9).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 's_texture1');\n        this._shaderSets.at(9).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_matrix');\n        this._shaderSets.at(9).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(9).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(9).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(9).uniformMultiplyColorLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(9).uniformScreenColorLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_screenColor');\n    }\n    /**\n   * シェーダプログラムをロードしてアドレスを返す\n   * @param vertexShaderSource    頂点シェーダのソース\n   * @param fragmentShaderSource  フラグメントシェーダのソース\n   * @return シェーダプログラムのアドレス\n   */ loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n        // Create Shader Program\n        let shaderProgram = this.gl.createProgram();\n        let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n        if (!vertShader) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_1__.CubismLogError)('Vertex shader compile error!');\n            return 0;\n        }\n        let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n        if (!fragShader) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_1__.CubismLogError)('Vertex shader compile error!');\n            return 0;\n        }\n        // Attach vertex shader to program\n        this.gl.attachShader(shaderProgram, vertShader);\n        // Attach fragment shader to program\n        this.gl.attachShader(shaderProgram, fragShader);\n        // link program\n        this.gl.linkProgram(shaderProgram);\n        const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n        // リンクに失敗したらシェーダーを削除\n        if (!linkStatus) {\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_1__.CubismLogError)('Failed to link program: {0}', shaderProgram);\n            this.gl.deleteShader(vertShader);\n            vertShader = 0;\n            this.gl.deleteShader(fragShader);\n            fragShader = 0;\n            if (shaderProgram) {\n                this.gl.deleteProgram(shaderProgram);\n                shaderProgram = 0;\n            }\n            return 0;\n        }\n        // Release vertex and fragment shaders.\n        this.gl.deleteShader(vertShader);\n        this.gl.deleteShader(fragShader);\n        return shaderProgram;\n    }\n    /**\n   * シェーダープログラムをコンパイルする\n   * @param shaderType シェーダタイプ(Vertex/Fragment)\n   * @param shaderSource シェーダソースコード\n   *\n   * @return コンパイルされたシェーダープログラム\n   */ compileShaderSource(shaderType, shaderSource) {\n        const source = shaderSource;\n        const shader = this.gl.createShader(shaderType);\n        this.gl.shaderSource(shader, source);\n        this.gl.compileShader(shader);\n        if (!shader) {\n            const log = this.gl.getShaderInfoLog(shader);\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_1__.CubismLogError)('Shader compile log: {0} ', log);\n        }\n        const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n        if (!status) {\n            this.gl.deleteShader(shader);\n            return null;\n        }\n        return shader;\n    }\n    setGl(gl) {\n        this.gl = gl;\n    }\n}\n/**\n * CubismShader_WebGLのインナークラス\n */ class CubismShaderSet {\n}\nvar ShaderNames = /*#__PURE__*/ function(ShaderNames) {\n    // SetupMask\n    ShaderNames[ShaderNames[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n    // Normal\n    ShaderNames[ShaderNames[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n    // Add\n    ShaderNames[ShaderNames[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n    // Mult\n    ShaderNames[ShaderNames[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n    return ShaderNames;\n}({});\nconst vertexShaderSrcSetupMask = 'attribute vec4     a_position;' + 'attribute vec2     a_texCoord;' + 'varying vec2       v_texCoord;' + 'varying vec4       v_myPos;' + 'uniform mat4       u_clipMatrix;' + 'void main()' + '{' + '   gl_Position = u_clipMatrix * a_position;' + '   v_myPos = u_clipMatrix * a_position;' + '   v_texCoord = a_texCoord;' + '   v_texCoord.y = 1.0 - v_texCoord.y;' + '}';\nconst fragmentShaderSrcsetupMask = 'precision mediump float;' + 'varying vec2       v_texCoord;' + 'varying vec4       v_myPos;' + 'uniform vec4       u_baseColor;' + 'uniform vec4       u_channelFlag;' + 'uniform sampler2D  s_texture0;' + 'void main()' + '{' + '   float isInside = ' + '       step(u_baseColor.x, v_myPos.x/v_myPos.w)' + '       * step(u_baseColor.y, v_myPos.y/v_myPos.w)' + '       * step(v_myPos.x/v_myPos.w, u_baseColor.z)' + '       * step(v_myPos.y/v_myPos.w, u_baseColor.w);' + '   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;' + '}';\n//----- バーテックスシェーダプログラム -----\n// Normal & Add & Mult 共通\nconst vertexShaderSrc = 'attribute vec4     a_position;' + //v.vertex\n'attribute vec2     a_texCoord;' + //v.texcoord\n'varying vec2       v_texCoord;' + //v2f.texcoord\n'uniform mat4       u_matrix;' + 'void main()' + '{' + '   gl_Position = u_matrix * a_position;' + '   v_texCoord = a_texCoord;' + '   v_texCoord.y = 1.0 - v_texCoord.y;' + '}';\n// Normal & Add & Mult 共通（クリッピングされたものの描画用）\nconst vertexShaderSrcMasked = 'attribute vec4     a_position;' + 'attribute vec2     a_texCoord;' + 'varying vec2       v_texCoord;' + 'varying vec4       v_clipPos;' + 'uniform mat4       u_matrix;' + 'uniform mat4       u_clipMatrix;' + 'void main()' + '{' + '   gl_Position = u_matrix * a_position;' + '   v_clipPos = u_clipMatrix * a_position;' + '   v_texCoord = a_texCoord;' + '   v_texCoord.y = 1.0 - v_texCoord.y;' + '}';\n//----- フラグメントシェーダプログラム -----\n// Normal & Add & Mult 共通 （PremultipliedAlpha）\nconst fragmentShaderSrcPremultipliedAlpha = 'precision mediump float;' + 'varying vec2       v_texCoord;' + //v2f.texcoord\n'uniform vec4       u_baseColor;' + 'uniform sampler2D  s_texture0;' + //_MainTex\n'uniform vec4       u_multiplyColor;' + 'uniform vec4       u_screenColor;' + 'void main()' + '{' + '   vec4 texColor = texture2D(s_texture0, v_texCoord);' + '   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;' + '   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);' + '   vec4 color = texColor * u_baseColor;' + '   gl_FragColor = vec4(color.rgb, color.a);' + '}';\n// Normal （クリッピングされたものの描画用、PremultipliedAlpha兼用）\nconst fragmentShaderSrcMaskPremultipliedAlpha = 'precision mediump float;' + 'varying vec2       v_texCoord;' + 'varying vec4       v_clipPos;' + 'uniform vec4       u_baseColor;' + 'uniform vec4       u_channelFlag;' + 'uniform sampler2D  s_texture0;' + 'uniform sampler2D  s_texture1;' + 'uniform vec4       u_multiplyColor;' + 'uniform vec4       u_screenColor;' + 'void main()' + '{' + '   vec4 texColor = texture2D(s_texture0, v_texCoord);' + '   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;' + '   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);' + '   vec4 col_formask = texColor * u_baseColor;' + '   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' + '   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' + '   col_formask = col_formask * maskVal;' + '   gl_FragColor = col_formask;' + '}';\n// Normal & Add & Mult 共通（クリッピングされて反転使用の描画用、PremultipliedAlphaの場合）\nconst fragmentShaderSrcMaskInvertedPremultipliedAlpha = 'precision mediump float;' + 'varying vec2      v_texCoord;' + 'varying vec4      v_clipPos;' + 'uniform sampler2D s_texture0;' + 'uniform sampler2D s_texture1;' + 'uniform vec4      u_channelFlag;' + 'uniform vec4      u_baseColor;' + 'uniform vec4      u_multiplyColor;' + 'uniform vec4      u_screenColor;' + 'void main()' + '{' + '   vec4 texColor = texture2D(s_texture0, v_texCoord);' + '   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;' + '   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);' + '   vec4 col_formask = texColor * u_baseColor;' + '   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' + '   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' + '   col_formask = col_formask * (1.0 - maskVal);' + '   gl_FragColor = col_formask;' + '}';\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismShaderSet = _cubismshader_webgl__WEBPACK_IMPORTED_MODULE_3__.CubismShaderSet;\n    Live2DCubismFramework.CubismShader_WebGL = _cubismshader_webgl__WEBPACK_IMPORTED_MODULE_3__.CubismShader_WebGL;\n    Live2DCubismFramework.ShaderNames = _cubismshader_webgl__WEBPACK_IMPORTED_MODULE_3__.ShaderNames;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/rendering/cubismshader_webgl.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/type/csmmap.ts":
/*!*********************************************!*\
  !*** ./WebSDK/Framework/src/type/csmmap.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework),\n/* harmony export */   csmMap: () => (/* binding */ csmMap),\n/* harmony export */   csmPair: () => (/* binding */ csmPair),\n/* harmony export */   iterator: () => (/* binding */ iterator)\n/* harmony export */ });\n/* harmony import */ var _utils_cubismdebug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubismdebug */ \"(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\");\n/* harmony import */ var _csmmap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csmmap */ \"(ssr)/./WebSDK/Framework/src/type/csmmap.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n/**\n * Key-Valueのペアを定義するクラス\n * csmMapクラスの内部データで使用する。\n */ class csmPair {\n    /**\n   * コンストラクタ\n   * @param key Keyとしてセットする値\n   * @param value Valueとしてセットする値\n   */ constructor(key, value){\n        this.first = key == undefined ? null : key;\n        this.second = value == undefined ? null : value;\n    }\n}\n/**\n * マップ型\n */ class csmMap {\n    /**\n   * 引数付きコンストラクタ\n   * @param size 初期化時点で確保するサイズ\n   */ constructor(size){\n        if (size != undefined) {\n            if (size < 1) {\n                this._keyValues = [];\n                this._dummyValue = null;\n                this._size = 0;\n            } else {\n                this._keyValues = new Array(size);\n                this._size = size;\n            }\n        } else {\n            this._keyValues = [];\n            this._dummyValue = null;\n            this._size = 0;\n        }\n    }\n    /**\n   * デストラクタ\n   */ release() {\n        this.clear();\n    }\n    /**\n   * キーを追加する\n   * @param key 新たに追加するキー\n   */ appendKey(key) {\n        // 新しくKey/Valueのペアを作る\n        this.prepareCapacity(this._size + 1, false); // 1つ以上入る隙間を作る\n        // 新しいkey/valueのインデックスは_size\n        this._keyValues[this._size] = new csmPair(key);\n        this._size += 1;\n    }\n    /**\n   * 添字演算子[key]のオーバーロード(get)\n   * @param key 添字から特定されるValue値\n   */ getValue(key) {\n        let found = -1;\n        for(let i = 0; i < this._size; i++){\n            if (this._keyValues[i].first == key) {\n                found = i;\n                break;\n            }\n        }\n        if (found >= 0) {\n            return this._keyValues[found].second;\n        } else {\n            this.appendKey(key); // 新規キーを追加\n            return this._keyValues[this._size - 1].second;\n        }\n    }\n    /**\n   * 添字演算子[key]のオーバーロード(set)\n   * @param key 添字から特定されるValue値\n   * @param value 代入するValue値\n   */ setValue(key, value) {\n        let found = -1;\n        for(let i = 0; i < this._size; i++){\n            if (this._keyValues[i].first == key) {\n                found = i;\n                break;\n            }\n        }\n        if (found >= 0) {\n            this._keyValues[found].second = value;\n        } else {\n            this.appendKey(key); // 新規キーを追加\n            this._keyValues[this._size - 1].second = value;\n        }\n    }\n    /**\n   * 引数で渡したKeyを持つ要素が存在するか\n   * @param key 存在を確認するkey\n   * @return true 引数で渡したkeyを持つ要素が存在する\n   * @return false 引数で渡したkeyを持つ要素が存在しない\n   */ isExist(key) {\n        for(let i = 0; i < this._size; i++){\n            if (this._keyValues[i].first == key) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n   * keyValueのポインタを全て解放する\n   */ clear() {\n        this._keyValues = void 0;\n        this._keyValues = null;\n        this._keyValues = [];\n        this._size = 0;\n    }\n    /**\n   * コンテナのサイズを取得する\n   *\n   * @return コンテナのサイズ\n   */ getSize() {\n        return this._size;\n    }\n    /**\n   * コンテナのキャパシティを確保する\n   * @param newSize 新たなキャパシティ。引数の値が現在のサイズ未満の場合は何もしない。\n   * @param fitToSize trueなら指定したサイズに合わせる。falseならサイズを2倍確保しておく。\n   */ prepareCapacity(newSize, fitToSize) {\n        if (newSize > this._keyValues.length) {\n            if (this._keyValues.length == 0) {\n                if (!fitToSize && newSize < csmMap.DefaultSize) newSize = csmMap.DefaultSize;\n                this._keyValues.length = newSize;\n            } else {\n                if (!fitToSize && newSize < this._keyValues.length * 2) newSize = this._keyValues.length * 2;\n                this._keyValues.length = newSize;\n            }\n        }\n    }\n    /**\n   * コンテナの先頭要素を返す\n   */ begin() {\n        const ite = new iterator(this, 0);\n        return ite;\n    }\n    /**\n   * コンテナの終端要素を返す\n   */ end() {\n        const ite = new iterator(this, this._size); // 終了\n        return ite;\n    }\n    /**\n   * コンテナから要素を削除する\n   *\n   * @param ite 削除する要素\n   */ erase(ite) {\n        const index = ite._index;\n        if (index < 0 || this._size <= index) {\n            return ite; // 削除範囲外\n        }\n        // 削除\n        this._keyValues.splice(index, 1);\n        --this._size;\n        const ite2 = new iterator(this, index); // 終了\n        return ite2;\n    }\n    /**\n   * コンテナの値を32ビット符号付き整数型でダンプする\n   */ dumpAsInt() {\n        for(let i = 0; i < this._size; i++){\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_0__.CubismLogDebug)('{0} ,', this._keyValues[i]);\n            (0,_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_0__.CubismLogDebug)('\\n');\n        }\n    }\n    static{\n        this.DefaultSize = 10; // コンテナの初期化のデフォルトサイズ\n    }\n}\n/**\n * csmMap<T>のイテレータ\n */ class iterator {\n    /**\n   * コンストラクタ\n   */ constructor(v, idx){\n        this._map = v != undefined ? v : new csmMap();\n        this._index = idx != undefined ? idx : 0;\n    }\n    /**\n   * =演算子のオーバーロード\n   */ set(ite) {\n        this._index = ite._index;\n        this._map = ite._map;\n        return this;\n    }\n    /**\n   * 前置き++演算子のオーバーロード\n   */ preIncrement() {\n        ++this._index;\n        return this;\n    }\n    /**\n   * 前置き--演算子のオーバーロード\n   */ preDecrement() {\n        --this._index;\n        return this;\n    }\n    /**\n   * 後置き++演算子のオーバーロード\n   */ increment() {\n        const iteold = new iterator(this._map, this._index++); // 古い値を保存\n        return iteold;\n    }\n    /**\n   * 後置き--演算子のオーバーロード\n   */ decrement() {\n        const iteold = new iterator(this._map, this._index); // 古い値を保存\n        this._map = iteold._map;\n        this._index = iteold._index;\n        return this;\n    }\n    /**\n   * *演算子のオーバーロード\n   */ ptr() {\n        return this._map._keyValues[this._index];\n    }\n    /**\n   * !=演算\n   */ notEqual(ite) {\n        return this._index != ite._index || this._map != ite._map;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.csmMap = _csmmap__WEBPACK_IMPORTED_MODULE_1__.csmMap;\n    Live2DCubismFramework.csmPair = _csmmap__WEBPACK_IMPORTED_MODULE_1__.csmPair;\n    Live2DCubismFramework.iterator = _csmmap__WEBPACK_IMPORTED_MODULE_1__.iterator;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvRnJhbWV3b3JrL3NyYy90eXBlL2NzbW1hcC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUVxRDtBQUV0RDs7O0NBR0MsR0FDTSxNQUFNQztJQUNYOzs7O0dBSUMsR0FDRCxZQUFtQkMsR0FBVyxFQUFFQyxLQUFhLENBQUU7UUFDN0MsSUFBSSxDQUFDQyxLQUFLLEdBQUdGLE9BQU9HLFlBQVksT0FBT0g7UUFFdkMsSUFBSSxDQUFDSSxNQUFNLEdBQUdILFNBQVNFLFlBQVksT0FBT0Y7SUFDNUM7QUFJRjtBQUVBOztDQUVDLEdBQ00sTUFBTUk7SUFDWDs7O0dBR0MsR0FDRCxZQUFtQkMsSUFBYSxDQUFFO1FBQ2hDLElBQUlBLFFBQVFILFdBQVc7WUFDckIsSUFBSUcsT0FBTyxHQUFHO2dCQUNaLElBQUksQ0FBQ0MsVUFBVSxHQUFHLEVBQUU7Z0JBQ3BCLElBQUksQ0FBQ0MsV0FBVyxHQUFHO2dCQUNuQixJQUFJLENBQUNDLEtBQUssR0FBRztZQUNmLE9BQU87Z0JBQ0wsSUFBSSxDQUFDRixVQUFVLEdBQUcsSUFBSUcsTUFBTUo7Z0JBQzVCLElBQUksQ0FBQ0csS0FBSyxHQUFHSDtZQUNmO1FBQ0YsT0FBTztZQUNMLElBQUksQ0FBQ0MsVUFBVSxHQUFHLEVBQUU7WUFDcEIsSUFBSSxDQUFDQyxXQUFXLEdBQUc7WUFDbkIsSUFBSSxDQUFDQyxLQUFLLEdBQUc7UUFDZjtJQUNGO0lBRUE7O0dBRUMsR0FDRCxVQUFpQjtRQUNmLElBQUksQ0FBQ0csS0FBSztJQUNaO0lBRUE7OztHQUdDLEdBQ0QsVUFBaUJaLEdBQVUsRUFBUTtRQUNqQyxxQkFBcUI7UUFDckIsSUFBSSxDQUFDYyxlQUFlLENBQUMsSUFBSSxDQUFDTCxLQUFLLEdBQUcsR0FBRyxRQUFRLGNBQWM7UUFDM0QsNEJBQTRCO1FBRTVCLElBQUksQ0FBQ0YsVUFBVSxDQUFDLElBQUksQ0FBQ0UsS0FBSyxDQUFDLEdBQUcsSUFBSVYsUUFBc0JDO1FBQ3hELElBQUksQ0FBQ1MsS0FBSyxJQUFJO0lBQ2hCO0lBRUE7OztHQUdDLEdBQ0QsU0FBZ0JULEdBQVUsRUFBUztRQUNqQyxJQUFJZ0IsUUFBUSxDQUFDO1FBRWIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDUixLQUFLLEVBQUVRLElBQUs7WUFDbkMsSUFBSSxJQUFJLENBQUNWLFVBQVUsQ0FBQ1UsRUFBRSxDQUFDZixLQUFLLElBQUlGLEtBQUs7Z0JBQ25DZ0IsUUFBUUM7Z0JBQ1I7WUFDRjtRQUNGO1FBRUEsSUFBSUQsU0FBUyxHQUFHO1lBQ2QsT0FBTyxJQUFJLENBQUNULFVBQVUsQ0FBQ1MsTUFBTSxDQUFDWixNQUFNO1FBQ3RDLE9BQU87WUFDTCxJQUFJLENBQUNTLFNBQVMsQ0FBQ2IsTUFBTSxVQUFVO1lBQy9CLE9BQU8sSUFBSSxDQUFDTyxVQUFVLENBQUMsSUFBSSxDQUFDRSxLQUFLLEdBQUcsRUFBRSxDQUFDTCxNQUFNO1FBQy9DO0lBQ0Y7SUFFQTs7OztHQUlDLEdBQ0QsU0FBZ0JKLEdBQVUsRUFBRUMsS0FBWSxFQUFRO1FBQzlDLElBQUllLFFBQVEsQ0FBQztRQUViLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ1IsS0FBSyxFQUFFUSxJQUFLO1lBQ25DLElBQUksSUFBSSxDQUFDVixVQUFVLENBQUNVLEVBQUUsQ0FBQ2YsS0FBSyxJQUFJRixLQUFLO2dCQUNuQ2dCLFFBQVFDO2dCQUNSO1lBQ0Y7UUFDRjtRQUVBLElBQUlELFNBQVMsR0FBRztZQUNkLElBQUksQ0FBQ1QsVUFBVSxDQUFDUyxNQUFNLENBQUNaLE1BQU0sR0FBR0g7UUFDbEMsT0FBTztZQUNMLElBQUksQ0FBQ1ksU0FBUyxDQUFDYixNQUFNLFVBQVU7WUFDL0IsSUFBSSxDQUFDTyxVQUFVLENBQUMsSUFBSSxDQUFDRSxLQUFLLEdBQUcsRUFBRSxDQUFDTCxNQUFNLEdBQUdIO1FBQzNDO0lBQ0Y7SUFFQTs7Ozs7R0FLQyxHQUNELFFBQWVELEdBQVUsRUFBVztRQUNsQyxJQUFLLElBQUlpQixJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDUixLQUFLLEVBQUVRLElBQUs7WUFDbkMsSUFBSSxJQUFJLENBQUNWLFVBQVUsQ0FBQ1UsRUFBRSxDQUFDZixLQUFLLElBQUlGLEtBQUs7Z0JBQ25DLE9BQU87WUFDVDtRQUNGO1FBQ0EsT0FBTztJQUNUO0lBRUE7O0dBRUMsR0FDRCxRQUFxQjtRQUNuQixJQUFJLENBQUNPLFVBQVUsR0FBRyxLQUFLO1FBQ3ZCLElBQUksQ0FBQ0EsVUFBVSxHQUFHO1FBQ2xCLElBQUksQ0FBQ0EsVUFBVSxHQUFHLEVBQUU7UUFFcEIsSUFBSSxDQUFDRSxLQUFLLEdBQUc7SUFDZjtJQUVBOzs7O0dBSUMsR0FDRCxVQUF5QjtRQUN2QixPQUFPLElBQUksQ0FBQ0EsS0FBSztJQUNuQjtJQUVBOzs7O0dBSUMsR0FDRCxnQkFBdUJZLE9BQWUsRUFBRUMsU0FBa0IsRUFBUTtRQUNoRSxJQUFJRCxVQUFVLElBQUksQ0FBQ2QsVUFBVSxDQUFDZ0IsTUFBTSxFQUFFO1lBQ3BDLElBQUksSUFBSSxDQUFDaEIsVUFBVSxDQUFDZ0IsTUFBTSxJQUFJLEdBQUc7Z0JBQy9CLElBQUksQ0FBQ0QsYUFBYUQsVUFBVWhCLE9BQU9tQixXQUFXLEVBQzVDSCxVQUFVaEIsT0FBT21CLFdBQVc7Z0JBQzlCLElBQUksQ0FBQ2pCLFVBQVUsQ0FBQ2dCLE1BQU0sR0FBR0Y7WUFDM0IsT0FBTztnQkFDTCxJQUFJLENBQUNDLGFBQWFELFVBQVUsSUFBSSxDQUFDZCxVQUFVLENBQUNnQixNQUFNLEdBQUcsR0FDbkRGLFVBQVUsSUFBSSxDQUFDZCxVQUFVLENBQUNnQixNQUFNLEdBQUc7Z0JBQ3JDLElBQUksQ0FBQ2hCLFVBQVUsQ0FBQ2dCLE1BQU0sR0FBR0Y7WUFDM0I7UUFDRjtJQUNGO0lBRUE7O0dBRUMsR0FDRCxRQUF1QztRQUNyQyxNQUFNSyxNQUE4QixJQUFJQyxTQUF1QixJQUFJLEVBQUU7UUFDckUsT0FBT0Q7SUFDVDtJQUVBOztHQUVDLEdBQ0QsTUFBcUM7UUFDbkMsTUFBTUEsTUFBOEIsSUFBSUMsU0FDdEMsSUFBSSxFQUNKLElBQUksQ0FBQ2xCLEtBQUssR0FDVCxLQUFLO1FBQ1IsT0FBT2lCO0lBQ1Q7SUFFQTs7OztHQUlDLEdBQ0QsTUFBYUEsR0FBMkIsRUFBMEI7UUFDaEUsTUFBTUksUUFBZ0JKLElBQUlLLE1BQU07UUFDaEMsSUFBSUQsUUFBUSxLQUFLLElBQUksQ0FBQ3JCLEtBQUssSUFBSXFCLE9BQU87WUFDcEMsT0FBT0osS0FBSyxRQUFRO1FBQ3RCO1FBRUEsS0FBSztRQUNMLElBQUksQ0FBQ25CLFVBQVUsQ0FBQ3lCLE1BQU0sQ0FBQ0YsT0FBTztRQUM5QixFQUFFLElBQUksQ0FBQ3JCLEtBQUs7UUFFWixNQUFNd0IsT0FBK0IsSUFBSU4sU0FDdkMsSUFBSSxFQUNKRyxRQUNDLEtBQUs7UUFDUixPQUFPRztJQUNUO0lBRUE7O0dBRUMsR0FDRCxZQUFtQjtRQUNqQixJQUFLLElBQUloQixJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDUixLQUFLLEVBQUVRLElBQUs7WUFDbkNuQixrRUFBY0EsQ0FBQyxTQUFTLElBQUksQ0FBQ1MsVUFBVSxDQUFDVSxFQUFFO1lBQzFDbkIsa0VBQWNBLENBQUM7UUFDakI7SUFDRjs7YUFFdUIwQixjQUFjLElBQUksb0JBQW9COztBQUkvRDtBQUVBOztDQUVDLEdBQ00sTUFBTUc7SUFDWDs7R0FFQyxHQUNELFlBQVlRLENBQXdCLEVBQUVDLEdBQVksQ0FBRTtRQUNsRCxJQUFJLENBQUNDLElBQUksR0FBR0YsS0FBS2hDLFlBQVlnQyxJQUFJLElBQUk5QjtRQUVyQyxJQUFJLENBQUMwQixNQUFNLEdBQUdLLE9BQU9qQyxZQUFZaUMsTUFBTTtJQUN6QztJQUVBOztHQUVDLEdBQ0QsSUFBV1YsR0FBMkIsRUFBMEI7UUFDOUQsSUFBSSxDQUFDSyxNQUFNLEdBQUdMLElBQUlLLE1BQU07UUFDeEIsSUFBSSxDQUFDTSxJQUFJLEdBQUdYLElBQUlXLElBQUk7UUFDcEIsT0FBTyxJQUFJO0lBQ2I7SUFFQTs7R0FFQyxHQUNELGVBQThDO1FBQzVDLEVBQUUsSUFBSSxDQUFDTixNQUFNO1FBQ2IsT0FBTyxJQUFJO0lBQ2I7SUFFQTs7R0FFQyxHQUNELGVBQThDO1FBQzVDLEVBQUUsSUFBSSxDQUFDQSxNQUFNO1FBQ2IsT0FBTyxJQUFJO0lBQ2I7SUFFQTs7R0FFQyxHQUNELFlBQTJDO1FBQ3pDLE1BQU1XLFNBQVMsSUFBSWYsU0FBdUIsSUFBSSxDQUFDVSxJQUFJLEVBQUUsSUFBSSxDQUFDTixNQUFNLEtBQUssU0FBUztRQUM5RSxPQUFPVztJQUNUO0lBRUE7O0dBRUMsR0FDRCxZQUEyQztRQUN6QyxNQUFNQSxTQUFTLElBQUlmLFNBQXVCLElBQUksQ0FBQ1UsSUFBSSxFQUFFLElBQUksQ0FBQ04sTUFBTSxHQUFHLFNBQVM7UUFDNUUsSUFBSSxDQUFDTSxJQUFJLEdBQUdLLE9BQU9MLElBQUk7UUFDdkIsSUFBSSxDQUFDTixNQUFNLEdBQUdXLE9BQU9YLE1BQU07UUFDM0IsT0FBTyxJQUFJO0lBQ2I7SUFFQTs7R0FFQyxHQUNELE1BQW9DO1FBQ2xDLE9BQU8sSUFBSSxDQUFDTSxJQUFJLENBQUM5QixVQUFVLENBQUMsSUFBSSxDQUFDd0IsTUFBTSxDQUFDO0lBQzFDO0lBRUE7O0dBRUMsR0FDRCxTQUFnQkwsR0FBMkIsRUFBVztRQUNwRCxPQUFPLElBQUksQ0FBQ0ssTUFBTSxJQUFJTCxJQUFJSyxNQUFNLElBQUksSUFBSSxDQUFDTSxJQUFJLElBQUlYLElBQUlXLElBQUk7SUFDM0Q7QUFJRjtBQUVBLDBDQUEwQztBQUNaO1VBRWJVOzBCQUNGMUMsU0FBU3lDLDJDQUFROzBCQUVqQi9DLFVBQVUrQyw0Q0FBUzswQkFFbkJuQixXQUFXbUIsNkNBQVU7QUFFcEMsR0FQaUJDLDBCQUFBQSIsInNvdXJjZXMiOlsiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9XZWJTREsvRnJhbWV3b3JrL3NyYy90eXBlL2NzbW1hcC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IHRoZSBMaXZlMkQgT3BlbiBTb2Z0d2FyZSBsaWNlbnNlXG4gKiB0aGF0IGNhbiBiZSBmb3VuZCBhdCBodHRwczovL3d3dy5saXZlMmQuY29tL2V1bGEvbGl2ZTJkLW9wZW4tc29mdHdhcmUtbGljZW5zZS1hZ3JlZW1lbnRfZW4uaHRtbC5cbiAqL1xuXG5pbXBvcnQgeyBDdWJpc21Mb2dEZWJ1ZyB9IGZyb20gJy4uL3V0aWxzL2N1YmlzbWRlYnVnJztcblxuLyoqXG4gKiBLZXktVmFsdWXjga7jg5rjgqLjgpLlrprnvqnjgZnjgovjgq/jg6njgrlcbiAqIGNzbU1hcOOCr+ODqeOCueOBruWGhemDqOODh+ODvOOCv+OBp+S9v+eUqOOBmeOCi+OAglxuICovXG5leHBvcnQgY2xhc3MgY3NtUGFpcjxfS2V5VCwgX1ZhbFQ+IHtcbiAgLyoqXG4gICAqIOOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgKiBAcGFyYW0ga2V5IEtleeOBqOOBl+OBpuOCu+ODg+ODiOOBmeOCi+WApFxuICAgKiBAcGFyYW0gdmFsdWUgVmFsdWXjgajjgZfjgabjgrvjg4Pjg4jjgZnjgovlgKRcbiAgICovXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihrZXk/OiBfS2V5VCwgdmFsdWU/OiBfVmFsVCkge1xuICAgIHRoaXMuZmlyc3QgPSBrZXkgPT0gdW5kZWZpbmVkID8gbnVsbCA6IGtleTtcblxuICAgIHRoaXMuc2Vjb25kID0gdmFsdWUgPT0gdW5kZWZpbmVkID8gbnVsbCA6IHZhbHVlO1xuICB9XG5cbiAgcHVibGljIGZpcnN0OiBfS2V5VDsgLy8ga2V544Go44GX44Gm55So44GE44KL5aSJ5pWwXG4gIHB1YmxpYyBzZWNvbmQ6IF9WYWxUOyAvLyB2YWx1ZeOBqOOBl+OBpueUqOOBhOOCi+WkieaVsFxufVxuXG4vKipcbiAqIOODnuODg+ODl+Wei1xuICovXG5leHBvcnQgY2xhc3MgY3NtTWFwPF9LZXlULCBfVmFsVD4ge1xuICAvKipcbiAgICog5byV5pWw5LuY44GN44Kz44Oz44K544OI44Op44Kv44K/XG4gICAqIEBwYXJhbSBzaXplIOWIneacn+WMluaZgueCueOBp+eiuuS/neOBmeOCi+OCteOCpOOCulxuICAgKi9cbiAgcHVibGljIGNvbnN0cnVjdG9yKHNpemU/OiBudW1iZXIpIHtcbiAgICBpZiAoc2l6ZSAhPSB1bmRlZmluZWQpIHtcbiAgICAgIGlmIChzaXplIDwgMSkge1xuICAgICAgICB0aGlzLl9rZXlWYWx1ZXMgPSBbXTtcbiAgICAgICAgdGhpcy5fZHVtbXlWYWx1ZSA9IG51bGw7XG4gICAgICAgIHRoaXMuX3NpemUgPSAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fa2V5VmFsdWVzID0gbmV3IEFycmF5KHNpemUpO1xuICAgICAgICB0aGlzLl9zaXplID0gc2l6ZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fa2V5VmFsdWVzID0gW107XG4gICAgICB0aGlzLl9kdW1teVZhbHVlID0gbnVsbDtcbiAgICAgIHRoaXMuX3NpemUgPSAwO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDjg4fjgrnjg4jjg6njgq/jgr9cbiAgICovXG4gIHB1YmxpYyByZWxlYXNlKCkge1xuICAgIHRoaXMuY2xlYXIoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDjgq3jg7zjgpLov73liqDjgZnjgotcbiAgICogQHBhcmFtIGtleSDmlrDjgZ/jgavov73liqDjgZnjgovjgq3jg7xcbiAgICovXG4gIHB1YmxpYyBhcHBlbmRLZXkoa2V5OiBfS2V5VCk6IHZvaWQge1xuICAgIC8vIOaWsOOBl+OBj0tleS9WYWx1ZeOBruODmuOCouOCkuS9nOOCi1xuICAgIHRoaXMucHJlcGFyZUNhcGFjaXR5KHRoaXMuX3NpemUgKyAxLCBmYWxzZSk7IC8vIDHjgaTku6XkuIrlhaXjgovpmpnplpPjgpLkvZzjgotcbiAgICAvLyDmlrDjgZfjgYRrZXkvdmFsdWXjga7jgqTjg7Pjg4fjg4Pjgq/jgrnjga9fc2l6ZVxuXG4gICAgdGhpcy5fa2V5VmFsdWVzW3RoaXMuX3NpemVdID0gbmV3IGNzbVBhaXI8X0tleVQsIF9WYWxUPihrZXkpO1xuICAgIHRoaXMuX3NpemUgKz0gMTtcbiAgfVxuXG4gIC8qKlxuICAgKiDmt7vlrZfmvJTnrpflrZBba2V5XeOBruOCquODvOODkOODvOODreODvOODiShnZXQpXG4gICAqIEBwYXJhbSBrZXkg5re75a2X44GL44KJ54m55a6a44GV44KM44KLVmFsdWXlgKRcbiAgICovXG4gIHB1YmxpYyBnZXRWYWx1ZShrZXk6IF9LZXlUKTogX1ZhbFQge1xuICAgIGxldCBmb3VuZCA9IC0xO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9zaXplOyBpKyspIHtcbiAgICAgIGlmICh0aGlzLl9rZXlWYWx1ZXNbaV0uZmlyc3QgPT0ga2V5KSB7XG4gICAgICAgIGZvdW5kID0gaTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGZvdW5kID49IDApIHtcbiAgICAgIHJldHVybiB0aGlzLl9rZXlWYWx1ZXNbZm91bmRdLnNlY29uZDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hcHBlbmRLZXkoa2V5KTsgLy8g5paw6KaP44Kt44O844KS6L+95YqgXG4gICAgICByZXR1cm4gdGhpcy5fa2V5VmFsdWVzW3RoaXMuX3NpemUgLSAxXS5zZWNvbmQ7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOa3u+Wtl+a8lOeul+WtkFtrZXld44Gu44Kq44O844OQ44O844Ot44O844OJKHNldClcbiAgICogQHBhcmFtIGtleSDmt7vlrZfjgYvjgonnibnlrprjgZXjgozjgotWYWx1ZeWApFxuICAgKiBAcGFyYW0gdmFsdWUg5Luj5YWl44GZ44KLVmFsdWXlgKRcbiAgICovXG4gIHB1YmxpYyBzZXRWYWx1ZShrZXk6IF9LZXlULCB2YWx1ZTogX1ZhbFQpOiB2b2lkIHtcbiAgICBsZXQgZm91bmQgPSAtMTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fc2l6ZTsgaSsrKSB7XG4gICAgICBpZiAodGhpcy5fa2V5VmFsdWVzW2ldLmZpcnN0ID09IGtleSkge1xuICAgICAgICBmb3VuZCA9IGk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChmb3VuZCA+PSAwKSB7XG4gICAgICB0aGlzLl9rZXlWYWx1ZXNbZm91bmRdLnNlY29uZCA9IHZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFwcGVuZEtleShrZXkpOyAvLyDmlrDopo/jgq3jg7zjgpLov73liqBcbiAgICAgIHRoaXMuX2tleVZhbHVlc1t0aGlzLl9zaXplIC0gMV0uc2Vjb25kID0gdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOW8leaVsOOBp+a4oeOBl+OBn0tleeOCkuaMgeOBpOimgee0oOOBjOWtmOWcqOOBmeOCi+OBi1xuICAgKiBAcGFyYW0ga2V5IOWtmOWcqOOCkueiuuiqjeOBmeOCi2tleVxuICAgKiBAcmV0dXJuIHRydWUg5byV5pWw44Gn5rih44GX44Gfa2V544KS5oyB44Gk6KaB57Sg44GM5a2Y5Zyo44GZ44KLXG4gICAqIEByZXR1cm4gZmFsc2Ug5byV5pWw44Gn5rih44GX44Gfa2V544KS5oyB44Gk6KaB57Sg44GM5a2Y5Zyo44GX44Gq44GEXG4gICAqL1xuICBwdWJsaWMgaXNFeGlzdChrZXk6IF9LZXlUKTogYm9vbGVhbiB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9zaXplOyBpKyspIHtcbiAgICAgIGlmICh0aGlzLl9rZXlWYWx1ZXNbaV0uZmlyc3QgPT0ga2V5KSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICoga2V5VmFsdWXjga7jg53jgqTjg7Pjgr/jgpLlhajjgabop6PmlL7jgZnjgotcbiAgICovXG4gIHB1YmxpYyBjbGVhcigpOiB2b2lkIHtcbiAgICB0aGlzLl9rZXlWYWx1ZXMgPSB2b2lkIDA7XG4gICAgdGhpcy5fa2V5VmFsdWVzID0gbnVsbDtcbiAgICB0aGlzLl9rZXlWYWx1ZXMgPSBbXTtcblxuICAgIHRoaXMuX3NpemUgPSAwO1xuICB9XG5cbiAgLyoqXG4gICAqIOOCs+ODs+ODhuODiuOBruOCteOCpOOCuuOCkuWPluW+l+OBmeOCi1xuICAgKlxuICAgKiBAcmV0dXJuIOOCs+ODs+ODhuODiuOBruOCteOCpOOCulxuICAgKi9cbiAgcHVibGljIGdldFNpemUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fc2l6ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiDjgrPjg7Pjg4bjg4rjga7jgq3jg6Pjg5Hjgrfjg4bjgqPjgpLnorrkv53jgZnjgotcbiAgICogQHBhcmFtIG5ld1NpemUg5paw44Gf44Gq44Kt44Oj44OR44K344OG44Kj44CC5byV5pWw44Gu5YCk44GM54++5Zyo44Gu44K144Kk44K65pyq5rqA44Gu5aC05ZCI44Gv5L2V44KC44GX44Gq44GE44CCXG4gICAqIEBwYXJhbSBmaXRUb1NpemUgdHJ1ZeOBquOCieaMh+WumuOBl+OBn+OCteOCpOOCuuOBq+WQiOOCj+OBm+OCi+OAgmZhbHNl44Gq44KJ44K144Kk44K644KSMuWAjeeiuuS/neOBl+OBpuOBiuOBj+OAglxuICAgKi9cbiAgcHVibGljIHByZXBhcmVDYXBhY2l0eShuZXdTaXplOiBudW1iZXIsIGZpdFRvU2l6ZTogYm9vbGVhbik6IHZvaWQge1xuICAgIGlmIChuZXdTaXplID4gdGhpcy5fa2V5VmFsdWVzLmxlbmd0aCkge1xuICAgICAgaWYgKHRoaXMuX2tleVZhbHVlcy5sZW5ndGggPT0gMCkge1xuICAgICAgICBpZiAoIWZpdFRvU2l6ZSAmJiBuZXdTaXplIDwgY3NtTWFwLkRlZmF1bHRTaXplKVxuICAgICAgICAgIG5ld1NpemUgPSBjc21NYXAuRGVmYXVsdFNpemU7XG4gICAgICAgIHRoaXMuX2tleVZhbHVlcy5sZW5ndGggPSBuZXdTaXplO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCFmaXRUb1NpemUgJiYgbmV3U2l6ZSA8IHRoaXMuX2tleVZhbHVlcy5sZW5ndGggKiAyKVxuICAgICAgICAgIG5ld1NpemUgPSB0aGlzLl9rZXlWYWx1ZXMubGVuZ3RoICogMjtcbiAgICAgICAgdGhpcy5fa2V5VmFsdWVzLmxlbmd0aCA9IG5ld1NpemU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOOCs+ODs+ODhuODiuOBruWFiOmgreimgee0oOOCkui/lOOBmVxuICAgKi9cbiAgcHVibGljIGJlZ2luKCk6IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4ge1xuICAgIGNvbnN0IGl0ZTogaXRlcmF0b3I8X0tleVQsIF9WYWxUPiA9IG5ldyBpdGVyYXRvcjxfS2V5VCwgX1ZhbFQ+KHRoaXMsIDApO1xuICAgIHJldHVybiBpdGU7XG4gIH1cblxuICAvKipcbiAgICog44Kz44Oz44OG44OK44Gu57WC56uv6KaB57Sg44KS6L+U44GZXG4gICAqL1xuICBwdWJsaWMgZW5kKCk6IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4ge1xuICAgIGNvbnN0IGl0ZTogaXRlcmF0b3I8X0tleVQsIF9WYWxUPiA9IG5ldyBpdGVyYXRvcjxfS2V5VCwgX1ZhbFQ+KFxuICAgICAgdGhpcyxcbiAgICAgIHRoaXMuX3NpemVcbiAgICApOyAvLyDntYLkuoZcbiAgICByZXR1cm4gaXRlO1xuICB9XG5cbiAgLyoqXG4gICAqIOOCs+ODs+ODhuODiuOBi+OCieimgee0oOOCkuWJiumZpOOBmeOCi1xuICAgKlxuICAgKiBAcGFyYW0gaXRlIOWJiumZpOOBmeOCi+imgee0oFxuICAgKi9cbiAgcHVibGljIGVyYXNlKGl0ZTogaXRlcmF0b3I8X0tleVQsIF9WYWxUPik6IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4ge1xuICAgIGNvbnN0IGluZGV4OiBudW1iZXIgPSBpdGUuX2luZGV4O1xuICAgIGlmIChpbmRleCA8IDAgfHwgdGhpcy5fc2l6ZSA8PSBpbmRleCkge1xuICAgICAgcmV0dXJuIGl0ZTsgLy8g5YmK6Zmk56+E5Zuy5aSWXG4gICAgfVxuXG4gICAgLy8g5YmK6ZmkXG4gICAgdGhpcy5fa2V5VmFsdWVzLnNwbGljZShpbmRleCwgMSk7XG4gICAgLS10aGlzLl9zaXplO1xuXG4gICAgY29uc3QgaXRlMjogaXRlcmF0b3I8X0tleVQsIF9WYWxUPiA9IG5ldyBpdGVyYXRvcjxfS2V5VCwgX1ZhbFQ+KFxuICAgICAgdGhpcyxcbiAgICAgIGluZGV4XG4gICAgKTsgLy8g57WC5LqGXG4gICAgcmV0dXJuIGl0ZTI7XG4gIH1cblxuICAvKipcbiAgICog44Kz44Oz44OG44OK44Gu5YCk44KSMzLjg5Pjg4Pjg4jnrKblj7fku5jjgY3mlbTmlbDlnovjgafjg4Djg7Pjg5fjgZnjgotcbiAgICovXG4gIHB1YmxpYyBkdW1wQXNJbnQoKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9zaXplOyBpKyspIHtcbiAgICAgIEN1YmlzbUxvZ0RlYnVnKCd7MH0gLCcsIHRoaXMuX2tleVZhbHVlc1tpXSk7XG4gICAgICBDdWJpc21Mb2dEZWJ1ZygnXFxuJyk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIHN0YXRpYyByZWFkb25seSBEZWZhdWx0U2l6ZSA9IDEwOyAvLyDjgrPjg7Pjg4bjg4rjga7liJ3mnJ/ljJbjga7jg4fjg5Xjgqnjg6vjg4jjgrXjgqTjgrpcbiAgcHVibGljIF9rZXlWYWx1ZXM6IGNzbVBhaXI8X0tleVQsIF9WYWxUPltdOyAvLyBrZXktdmFsdWXjg5rjgqLjga7phY3liJdcbiAgcHVibGljIF9kdW1teVZhbHVlOiBfVmFsVDsgLy8g56m644Gu5YCk44KS6L+U44GZ54K644Gu44OA44Of44O8XG4gIHB1YmxpYyBfc2l6ZTogbnVtYmVyOyAvLyDjgrPjg7Pjg4bjg4rjga7opoHntKDmlbBcbn1cblxuLyoqXG4gKiBjc21NYXA8VD7jga7jgqTjg4bjg6zjg7zjgr9cbiAqL1xuZXhwb3J0IGNsYXNzIGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4ge1xuICAvKipcbiAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAqL1xuICBjb25zdHJ1Y3Rvcih2PzogY3NtTWFwPF9LZXlULCBfVmFsVD4sIGlkeD86IG51bWJlcikge1xuICAgIHRoaXMuX21hcCA9IHYgIT0gdW5kZWZpbmVkID8gdiA6IG5ldyBjc21NYXA8X0tleVQsIF9WYWxUPigpO1xuXG4gICAgdGhpcy5faW5kZXggPSBpZHggIT0gdW5kZWZpbmVkID8gaWR4IDogMDtcbiAgfVxuXG4gIC8qKlxuICAgKiA95ryU566X5a2Q44Gu44Kq44O844OQ44O844Ot44O844OJXG4gICAqL1xuICBwdWJsaWMgc2V0KGl0ZTogaXRlcmF0b3I8X0tleVQsIF9WYWxUPik6IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4ge1xuICAgIHRoaXMuX2luZGV4ID0gaXRlLl9pbmRleDtcbiAgICB0aGlzLl9tYXAgPSBpdGUuX21hcDtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiDliY3nva7jgY0rK+a8lOeul+WtkOOBruOCquODvOODkOODvOODreODvOODiVxuICAgKi9cbiAgcHVibGljIHByZUluY3JlbWVudCgpOiBpdGVyYXRvcjxfS2V5VCwgX1ZhbFQ+IHtcbiAgICArK3RoaXMuX2luZGV4O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIOWJjee9ruOBjS0t5ryU566X5a2Q44Gu44Kq44O844OQ44O844Ot44O844OJXG4gICAqL1xuICBwdWJsaWMgcHJlRGVjcmVtZW50KCk6IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4ge1xuICAgIC0tdGhpcy5faW5kZXg7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICog5b6M572u44GNKyvmvJTnrpflrZDjga7jgqrjg7zjg5Djg7zjg63jg7zjg4lcbiAgICovXG4gIHB1YmxpYyBpbmNyZW1lbnQoKTogaXRlcmF0b3I8X0tleVQsIF9WYWxUPiB7XG4gICAgY29uc3QgaXRlb2xkID0gbmV3IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4odGhpcy5fbWFwLCB0aGlzLl9pbmRleCsrKTsgLy8g5Y+k44GE5YCk44KS5L+d5a2YXG4gICAgcmV0dXJuIGl0ZW9sZDtcbiAgfVxuXG4gIC8qKlxuICAgKiDlvoznva7jgY0tLea8lOeul+WtkOOBruOCquODvOODkOODvOODreODvOODiVxuICAgKi9cbiAgcHVibGljIGRlY3JlbWVudCgpOiBpdGVyYXRvcjxfS2V5VCwgX1ZhbFQ+IHtcbiAgICBjb25zdCBpdGVvbGQgPSBuZXcgaXRlcmF0b3I8X0tleVQsIF9WYWxUPih0aGlzLl9tYXAsIHRoaXMuX2luZGV4KTsgLy8g5Y+k44GE5YCk44KS5L+d5a2YXG4gICAgdGhpcy5fbWFwID0gaXRlb2xkLl9tYXA7XG4gICAgdGhpcy5faW5kZXggPSBpdGVvbGQuX2luZGV4O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqICrmvJTnrpflrZDjga7jgqrjg7zjg5Djg7zjg63jg7zjg4lcbiAgICovXG4gIHB1YmxpYyBwdHIoKTogY3NtUGFpcjxfS2V5VCwgX1ZhbFQ+IHtcbiAgICByZXR1cm4gdGhpcy5fbWFwLl9rZXlWYWx1ZXNbdGhpcy5faW5kZXhdO1xuICB9XG5cbiAgLyoqXG4gICAqICE95ryU566XXG4gICAqL1xuICBwdWJsaWMgbm90RXF1YWwoaXRlOiBpdGVyYXRvcjxfS2V5VCwgX1ZhbFQ+KTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2luZGV4ICE9IGl0ZS5faW5kZXggfHwgdGhpcy5fbWFwICE9IGl0ZS5fbWFwO1xuICB9XG5cbiAgX2luZGV4OiBudW1iZXI7IC8vIOOCs+ODs+ODhuODiuOBruOCpOODs+ODh+ODg+OCr+OCueWApFxuICBfbWFwOiBjc21NYXA8X0tleVQsIF9WYWxUPjsgLy8g44Kz44Oz44OG44OKXG59XG5cbi8vIE5hbWVzcGFjZSBkZWZpbml0aW9uIGZvciBjb21wYXRpYmlsaXR5LlxuaW1wb3J0ICogYXMgJCBmcm9tICcuL2NzbW1hcCc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZVxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICBleHBvcnQgY29uc3QgY3NtTWFwID0gJC5jc21NYXA7XG4gIGV4cG9ydCB0eXBlIGNzbU1hcDxLLCBWPiA9ICQuY3NtTWFwPEssIFY+O1xuICBleHBvcnQgY29uc3QgY3NtUGFpciA9ICQuY3NtUGFpcjtcbiAgZXhwb3J0IHR5cGUgY3NtUGFpcjxLLCBWPiA9ICQuY3NtUGFpcjxLLCBWPjtcbiAgZXhwb3J0IGNvbnN0IGl0ZXJhdG9yID0gJC5pdGVyYXRvcjtcbiAgZXhwb3J0IHR5cGUgaXRlcmF0b3I8SywgVj4gPSAkLml0ZXJhdG9yPEssIFY+O1xufVxuIl0sIm5hbWVzIjpbIkN1YmlzbUxvZ0RlYnVnIiwiY3NtUGFpciIsImtleSIsInZhbHVlIiwiZmlyc3QiLCJ1bmRlZmluZWQiLCJzZWNvbmQiLCJjc21NYXAiLCJzaXplIiwiX2tleVZhbHVlcyIsIl9kdW1teVZhbHVlIiwiX3NpemUiLCJBcnJheSIsInJlbGVhc2UiLCJjbGVhciIsImFwcGVuZEtleSIsInByZXBhcmVDYXBhY2l0eSIsImdldFZhbHVlIiwiZm91bmQiLCJpIiwic2V0VmFsdWUiLCJpc0V4aXN0IiwiZ2V0U2l6ZSIsIm5ld1NpemUiLCJmaXRUb1NpemUiLCJsZW5ndGgiLCJEZWZhdWx0U2l6ZSIsImJlZ2luIiwiaXRlIiwiaXRlcmF0b3IiLCJlbmQiLCJlcmFzZSIsImluZGV4IiwiX2luZGV4Iiwic3BsaWNlIiwiaXRlMiIsImR1bXBBc0ludCIsInYiLCJpZHgiLCJfbWFwIiwic2V0IiwicHJlSW5jcmVtZW50IiwicHJlRGVjcmVtZW50IiwiaW5jcmVtZW50IiwiaXRlb2xkIiwiZGVjcmVtZW50IiwicHRyIiwibm90RXF1YWwiLCIkIiwiTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/type/csmmap.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/type/csmrectf.ts":
/*!***********************************************!*\
  !*** ./WebSDK/Framework/src/type/csmrectf.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework),\n/* harmony export */   csmRect: () => (/* binding */ csmRect)\n/* harmony export */ });\n/* harmony import */ var _csmrectf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csmrectf */ \"(ssr)/./WebSDK/Framework/src/type/csmrectf.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ /**\n * 矩形形状（座標・長さはfloat値）を定義するクラス\n */ class csmRect {\n    /**\n   * コンストラクタ\n   * @param x 左端X座標\n   * @param y 上端Y座標\n   * @param w 幅\n   * @param h 高さ\n   */ constructor(x, y, w, h){\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    /**\n   * 矩形中央のX座標を取得する\n   */ getCenterX() {\n        return this.x + 0.5 * this.width;\n    }\n    /**\n   * 矩形中央のY座標を取得する\n   */ getCenterY() {\n        return this.y + 0.5 * this.height;\n    }\n    /**\n   * 右側のX座標を取得する\n   */ getRight() {\n        return this.x + this.width;\n    }\n    /**\n   * 下端のY座標を取得する\n   */ getBottom() {\n        return this.y + this.height;\n    }\n    /**\n   * 矩形に値をセットする\n   * @param r 矩形のインスタンス\n   */ setRect(r) {\n        this.x = r.x;\n        this.y = r.y;\n        this.width = r.width;\n        this.height = r.height;\n    }\n    /**\n   * 矩形中央を軸にして縦横を拡縮する\n   * @param w 幅方向に拡縮する量\n   * @param h 高さ方向に拡縮する量\n   */ expand(w, h) {\n        this.x -= w;\n        this.y -= h;\n        this.width += w * 2.0;\n        this.height += h * 2.0;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.csmRect = _csmrectf__WEBPACK_IMPORTED_MODULE_0__.csmRect;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvRnJhbWV3b3JrL3NyYy90eXBlL2NzbXJlY3RmLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7OztDQUtDLEdBRUQ7O0NBRUMsR0FDTSxNQUFNQTtJQUNYOzs7Ozs7R0FNQyxHQUNELFlBQW1CQyxDQUFVLEVBQUVDLENBQVUsRUFBRUMsQ0FBVSxFQUFFQyxDQUFVLENBQUU7UUFDakUsSUFBSSxDQUFDSCxDQUFDLEdBQUdBO1FBQ1QsSUFBSSxDQUFDQyxDQUFDLEdBQUdBO1FBQ1QsSUFBSSxDQUFDRyxLQUFLLEdBQUdGO1FBQ2IsSUFBSSxDQUFDRyxNQUFNLEdBQUdGO0lBQ2hCO0lBRUE7O0dBRUMsR0FDRCxhQUE0QjtRQUMxQixPQUFPLElBQUksQ0FBQ0gsQ0FBQyxHQUFHLE1BQU0sSUFBSSxDQUFDSSxLQUFLO0lBQ2xDO0lBRUE7O0dBRUMsR0FDRCxhQUE0QjtRQUMxQixPQUFPLElBQUksQ0FBQ0gsQ0FBQyxHQUFHLE1BQU0sSUFBSSxDQUFDSSxNQUFNO0lBQ25DO0lBRUE7O0dBRUMsR0FDRCxXQUEwQjtRQUN4QixPQUFPLElBQUksQ0FBQ0wsQ0FBQyxHQUFHLElBQUksQ0FBQ0ksS0FBSztJQUM1QjtJQUVBOztHQUVDLEdBQ0QsWUFBMkI7UUFDekIsT0FBTyxJQUFJLENBQUNILENBQUMsR0FBRyxJQUFJLENBQUNJLE1BQU07SUFDN0I7SUFFQTs7O0dBR0MsR0FDRCxRQUFlTSxDQUFVLEVBQVE7UUFDL0IsSUFBSSxDQUFDWCxDQUFDLEdBQUdXLEVBQUVYLENBQUM7UUFDWixJQUFJLENBQUNDLENBQUMsR0FBR1UsRUFBRVYsQ0FBQztRQUNaLElBQUksQ0FBQ0csS0FBSyxHQUFHTyxFQUFFUCxLQUFLO1FBQ3BCLElBQUksQ0FBQ0MsTUFBTSxHQUFHTSxFQUFFTixNQUFNO0lBQ3hCO0lBRUE7Ozs7R0FJQyxHQUNELE9BQWNILENBQVMsRUFBRUMsQ0FBUyxFQUFFO1FBQ2xDLElBQUksQ0FBQ0gsQ0FBQyxJQUFJRTtRQUNWLElBQUksQ0FBQ0QsQ0FBQyxJQUFJRTtRQUNWLElBQUksQ0FBQ0MsS0FBSyxJQUFJRixJQUFJO1FBQ2xCLElBQUksQ0FBQ0csTUFBTSxJQUFJRixJQUFJO0lBQ3JCO0FBTUY7QUFFQSwwQ0FBMEM7QUFDVjtVQUVmVzswQkFDRmYsVUFBVWMsOENBQVM7QUFFbEMsR0FIaUJDLDBCQUFBQSIsInNvdXJjZXMiOlsiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9XZWJTREsvRnJhbWV3b3JrL3NyYy90eXBlL2NzbXJlY3RmLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbi8qKlxuICog55+p5b2i5b2i54q277yI5bqn5qiZ44O76ZW344GV44GvZmxvYXTlgKTvvInjgpLlrprnvqnjgZnjgovjgq/jg6njgrlcbiAqL1xuZXhwb3J0IGNsYXNzIGNzbVJlY3Qge1xuICAvKipcbiAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAqIEBwYXJhbSB4IOW3puerr1jluqfmqJlcbiAgICogQHBhcmFtIHkg5LiK56uvWeW6p+aomVxuICAgKiBAcGFyYW0gdyDluYVcbiAgICogQHBhcmFtIGgg6auY44GVXG4gICAqL1xuICBwdWJsaWMgY29uc3RydWN0b3IoeD86IG51bWJlciwgeT86IG51bWJlciwgdz86IG51bWJlciwgaD86IG51bWJlcikge1xuICAgIHRoaXMueCA9IHg7XG4gICAgdGhpcy55ID0geTtcbiAgICB0aGlzLndpZHRoID0gdztcbiAgICB0aGlzLmhlaWdodCA9IGg7XG4gIH1cblxuICAvKipcbiAgICog55+p5b2i5Lit5aSu44GuWOW6p+aomeOCkuWPluW+l+OBmeOCi1xuICAgKi9cbiAgcHVibGljIGdldENlbnRlclgoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy54ICsgMC41ICogdGhpcy53aWR0aDtcbiAgfVxuXG4gIC8qKlxuICAgKiDnn6nlvaLkuK3lpK7jga5Z5bqn5qiZ44KS5Y+W5b6X44GZ44KLXG4gICAqL1xuICBwdWJsaWMgZ2V0Q2VudGVyWSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnkgKyAwLjUgKiB0aGlzLmhlaWdodDtcbiAgfVxuXG4gIC8qKlxuICAgKiDlj7PlgbTjga5Y5bqn5qiZ44KS5Y+W5b6X44GZ44KLXG4gICAqL1xuICBwdWJsaWMgZ2V0UmlnaHQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy54ICsgdGhpcy53aWR0aDtcbiAgfVxuXG4gIC8qKlxuICAgKiDkuIvnq6/jga5Z5bqn5qiZ44KS5Y+W5b6X44GZ44KLXG4gICAqL1xuICBwdWJsaWMgZ2V0Qm90dG9tKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMueSArIHRoaXMuaGVpZ2h0O1xuICB9XG5cbiAgLyoqXG4gICAqIOefqeW9ouOBq+WApOOCkuOCu+ODg+ODiOOBmeOCi1xuICAgKiBAcGFyYW0gciDnn6nlvaLjga7jgqTjg7Pjgrnjgr/jg7PjgrlcbiAgICovXG4gIHB1YmxpYyBzZXRSZWN0KHI6IGNzbVJlY3QpOiB2b2lkIHtcbiAgICB0aGlzLnggPSByLng7XG4gICAgdGhpcy55ID0gci55O1xuICAgIHRoaXMud2lkdGggPSByLndpZHRoO1xuICAgIHRoaXMuaGVpZ2h0ID0gci5oZWlnaHQ7XG4gIH1cblxuICAvKipcbiAgICog55+p5b2i5Lit5aSu44KS6Lu444Gr44GX44Gm57im5qiq44KS5ouh57iu44GZ44KLXG4gICAqIEBwYXJhbSB3IOW5heaWueWQkeOBq+aLoee4ruOBmeOCi+mHj1xuICAgKiBAcGFyYW0gaCDpq5jjgZXmlrnlkJHjgavmi6HnuK7jgZnjgovph49cbiAgICovXG4gIHB1YmxpYyBleHBhbmQodzogbnVtYmVyLCBoOiBudW1iZXIpIHtcbiAgICB0aGlzLnggLT0gdztcbiAgICB0aGlzLnkgLT0gaDtcbiAgICB0aGlzLndpZHRoICs9IHcgKiAyLjA7XG4gICAgdGhpcy5oZWlnaHQgKz0gaCAqIDIuMDtcbiAgfVxuXG4gIHB1YmxpYyB4OiBudW1iZXI7IC8vIOW3puerr1jluqfmqJlcbiAgcHVibGljIHk6IG51bWJlcjsgLy8g5LiK56uvWeW6p+aomVxuICBwdWJsaWMgd2lkdGg6IG51bWJlcjsgLy8g5bmFXG4gIHB1YmxpYyBoZWlnaHQ6IG51bWJlcjsgLy8g6auY44GVXG59XG5cbi8vIE5hbWVzcGFjZSBkZWZpbml0aW9uIGZvciBjb21wYXRpYmlsaXR5LlxuaW1wb3J0ICogYXMgJCBmcm9tICcuL2NzbXJlY3RmJztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbmFtZXNwYWNlXG5leHBvcnQgbmFtZXNwYWNlIExpdmUyREN1YmlzbUZyYW1ld29yayB7XG4gIGV4cG9ydCBjb25zdCBjc21SZWN0ID0gJC5jc21SZWN0O1xuICBleHBvcnQgdHlwZSBjc21SZWN0ID0gJC5jc21SZWN0O1xufVxuIl0sIm5hbWVzIjpbImNzbVJlY3QiLCJ4IiwieSIsInciLCJoIiwid2lkdGgiLCJoZWlnaHQiLCJnZXRDZW50ZXJYIiwiZ2V0Q2VudGVyWSIsImdldFJpZ2h0IiwiZ2V0Qm90dG9tIiwic2V0UmVjdCIsInIiLCJleHBhbmQiLCIkIiwiTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/type/csmrectf.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/type/csmstring.ts":
/*!************************************************!*\
  !*** ./WebSDK/Framework/src/type/csmstring.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework),\n/* harmony export */   csmString: () => (/* binding */ csmString)\n/* harmony export */ });\n/* harmony import */ var _csmstring__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csmstring */ \"(ssr)/./WebSDK/Framework/src/type/csmstring.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ /**\n * 文字列クラス。\n */ class csmString {\n    /**\n   * 文字列を後方に追加する\n   *\n   * @param c 追加する文字列\n   * @return 更新された文字列\n   */ append(c, length) {\n        this.s += length !== undefined ? c.substr(0, length) : c;\n        return this;\n    }\n    /**\n   * 文字サイズを拡張して文字を埋める\n   * @param length    拡張する文字数\n   * @param v         埋める文字\n   * @return 更新された文字列\n   */ expansion(length, v) {\n        for(let i = 0; i < length; i++){\n            this.append(v);\n        }\n        return this;\n    }\n    /**\n   * 文字列の長さをバイト数で取得する\n   */ getBytes() {\n        return encodeURIComponent(this.s).replace(/%../g, 'x').length;\n    }\n    /**\n   * 文字列の長さを返す\n   */ getLength() {\n        return this.s.length;\n    }\n    /**\n   * 文字列比較 <\n   * @param s 比較する文字列\n   * @return true:    比較する文字列より小さい\n   * @return false:   比較する文字列より大きい\n   */ isLess(s) {\n        return this.s < s.s;\n    }\n    /**\n   * 文字列比較 >\n   * @param s 比較する文字列\n   * @return true:    比較する文字列より大きい\n   * @return false:   比較する文字列より小さい\n   */ isGreat(s) {\n        return this.s > s.s;\n    }\n    /**\n   * 文字列比較 ==\n   * @param s 比較する文字列\n   * @return true:    比較する文字列と等しい\n   * @return false:   比較する文字列と異なる\n   */ isEqual(s) {\n        return this.s == s;\n    }\n    /**\n   * 文字列が空かどうか\n   * @return true: 空の文字列\n   * @return false: 値が設定されている\n   */ isEmpty() {\n        return this.s.length == 0;\n    }\n    /**\n   * 引数付きコンストラクタ\n   */ constructor(s){\n        this.s = s;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.csmString = _csmstring__WEBPACK_IMPORTED_MODULE_0__.csmString;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvRnJhbWV3b3JrL3NyYy90eXBlL2NzbXN0cmluZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUVEOztDQUVDLEdBQ00sTUFBTUE7SUFDWDs7Ozs7R0FLQyxHQUNELE9BQWNFLENBQVMsRUFBRUMsTUFBZSxFQUFhO1FBQ25ELElBQUksQ0FBQ0MsQ0FBQyxJQUFJRCxXQUFXRSxZQUFZSCxFQUFFSSxNQUFNLENBQUMsR0FBR0gsVUFBVUQ7UUFFdkQsT0FBTyxJQUFJO0lBQ2I7SUFFQTs7Ozs7R0FLQyxHQUNELFVBQWlCQyxNQUFjLEVBQUVLLENBQVMsRUFBYTtRQUNyRCxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSU4sUUFBUU0sSUFBSztZQUMvQixJQUFJLENBQUNSLE1BQU0sQ0FBQ087UUFDZDtRQUVBLE9BQU8sSUFBSTtJQUNiO0lBRUE7O0dBRUMsR0FDRCxXQUEwQjtRQUN4QixPQUFPRyxtQkFBbUIsSUFBSSxDQUFDUCxDQUFDLEVBQUVRLE9BQU8sQ0FBQyxRQUFRLEtBQUtULE1BQU07SUFDL0Q7SUFFQTs7R0FFQyxHQUNELFlBQTJCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDQyxDQUFDLENBQUNELE1BQU07SUFDdEI7SUFFQTs7Ozs7R0FLQyxHQUNELE9BQWNDLENBQVksRUFBVztRQUNuQyxPQUFPLElBQUksQ0FBQ0EsQ0FBQyxHQUFHQSxFQUFFQSxDQUFDO0lBQ3JCO0lBRUE7Ozs7O0dBS0MsR0FDRCxRQUFlQSxDQUFZLEVBQVc7UUFDcEMsT0FBTyxJQUFJLENBQUNBLENBQUMsR0FBR0EsRUFBRUEsQ0FBQztJQUNyQjtJQUVBOzs7OztHQUtDLEdBQ0QsUUFBZUEsQ0FBUyxFQUFXO1FBQ2pDLE9BQU8sSUFBSSxDQUFDQSxDQUFDLElBQUlBO0lBQ25CO0lBRUE7Ozs7R0FJQyxHQUNELFVBQTBCO1FBQ3hCLE9BQU8sSUFBSSxDQUFDQSxDQUFDLENBQUNELE1BQU0sSUFBSTtJQUMxQjtJQUVBOztHQUVDLEdBQ0QsWUFBbUJDLENBQVMsQ0FBRTtRQUM1QixJQUFJLENBQUNBLENBQUMsR0FBR0E7SUFDWDtBQUdGO0FBRUEsMENBQTBDO0FBQ1Q7VUFFaEJlOzBCQUNGbkIsWUFBWWtCLGlEQUFXO0FBRXRDLEdBSGlCQywwQkFBQUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvV2ViU0RLL0ZyYW1ld29yay9zcmMvdHlwZS9jc21zdHJpbmcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuLyoqXG4gKiDmloflrZfliJfjgq/jg6njgrnjgIJcbiAqL1xuZXhwb3J0IGNsYXNzIGNzbVN0cmluZyB7XG4gIC8qKlxuICAgKiDmloflrZfliJfjgpLlvozmlrnjgavov73liqDjgZnjgotcbiAgICpcbiAgICogQHBhcmFtIGMg6L+95Yqg44GZ44KL5paH5a2X5YiXXG4gICAqIEByZXR1cm4g5pu05paw44GV44KM44Gf5paH5a2X5YiXXG4gICAqL1xuICBwdWJsaWMgYXBwZW5kKGM6IHN0cmluZywgbGVuZ3RoPzogbnVtYmVyKTogY3NtU3RyaW5nIHtcbiAgICB0aGlzLnMgKz0gbGVuZ3RoICE9PSB1bmRlZmluZWQgPyBjLnN1YnN0cigwLCBsZW5ndGgpIDogYztcblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIOaWh+Wtl+OCteOCpOOCuuOCkuaLoeW8teOBl+OBpuaWh+Wtl+OCkuWfi+OCgeOCi1xuICAgKiBAcGFyYW0gbGVuZ3RoICAgIOaLoeW8teOBmeOCi+aWh+Wtl+aVsFxuICAgKiBAcGFyYW0gdiAgICAgICAgIOWfi+OCgeOCi+aWh+Wtl1xuICAgKiBAcmV0dXJuIOabtOaWsOOBleOCjOOBn+aWh+Wtl+WIl1xuICAgKi9cbiAgcHVibGljIGV4cGFuc2lvbihsZW5ndGg6IG51bWJlciwgdjogc3RyaW5nKTogY3NtU3RyaW5nIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLmFwcGVuZCh2KTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiDmloflrZfliJfjga7plbfjgZXjgpLjg5DjgqTjg4jmlbDjgaflj5blvpfjgZnjgotcbiAgICovXG4gIHB1YmxpYyBnZXRCeXRlcygpOiBudW1iZXIge1xuICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQodGhpcy5zKS5yZXBsYWNlKC8lLi4vZywgJ3gnKS5sZW5ndGg7XG4gIH1cblxuICAvKipcbiAgICog5paH5a2X5YiX44Gu6ZW344GV44KS6L+U44GZXG4gICAqL1xuICBwdWJsaWMgZ2V0TGVuZ3RoKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMucy5sZW5ndGg7XG4gIH1cblxuICAvKipcbiAgICog5paH5a2X5YiX5q+U6LyDIDxcbiAgICogQHBhcmFtIHMg5q+U6LyD44GZ44KL5paH5a2X5YiXXG4gICAqIEByZXR1cm4gdHJ1ZTogICAg5q+U6LyD44GZ44KL5paH5a2X5YiX44KI44KK5bCP44GV44GEXG4gICAqIEByZXR1cm4gZmFsc2U6ICAg5q+U6LyD44GZ44KL5paH5a2X5YiX44KI44KK5aSn44GN44GEXG4gICAqL1xuICBwdWJsaWMgaXNMZXNzKHM6IGNzbVN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnMgPCBzLnM7XG4gIH1cblxuICAvKipcbiAgICog5paH5a2X5YiX5q+U6LyDID5cbiAgICogQHBhcmFtIHMg5q+U6LyD44GZ44KL5paH5a2X5YiXXG4gICAqIEByZXR1cm4gdHJ1ZTogICAg5q+U6LyD44GZ44KL5paH5a2X5YiX44KI44KK5aSn44GN44GEXG4gICAqIEByZXR1cm4gZmFsc2U6ICAg5q+U6LyD44GZ44KL5paH5a2X5YiX44KI44KK5bCP44GV44GEXG4gICAqL1xuICBwdWJsaWMgaXNHcmVhdChzOiBjc21TdHJpbmcpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zID4gcy5zO1xuICB9XG5cbiAgLyoqXG4gICAqIOaWh+Wtl+WIl+avlOi8gyA9PVxuICAgKiBAcGFyYW0gcyDmr5TovIPjgZnjgovmloflrZfliJdcbiAgICogQHJldHVybiB0cnVlOiAgICDmr5TovIPjgZnjgovmloflrZfliJfjgajnrYnjgZfjgYRcbiAgICogQHJldHVybiBmYWxzZTogICDmr5TovIPjgZnjgovmloflrZfliJfjgajnlbDjgarjgotcbiAgICovXG4gIHB1YmxpYyBpc0VxdWFsKHM6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnMgPT0gcztcbiAgfVxuXG4gIC8qKlxuICAgKiDmloflrZfliJfjgYznqbrjgYvjganjgYbjgYtcbiAgICogQHJldHVybiB0cnVlOiDnqbrjga7mloflrZfliJdcbiAgICogQHJldHVybiBmYWxzZTog5YCk44GM6Kit5a6a44GV44KM44Gm44GE44KLXG4gICAqL1xuICBwdWJsaWMgaXNFbXB0eSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zLmxlbmd0aCA9PSAwO1xuICB9XG5cbiAgLyoqXG4gICAqIOW8leaVsOS7mOOBjeOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgKi9cbiAgcHVibGljIGNvbnN0cnVjdG9yKHM6IHN0cmluZykge1xuICAgIHRoaXMucyA9IHM7XG4gIH1cblxuICBzOiBzdHJpbmc7XG59XG5cbi8vIE5hbWVzcGFjZSBkZWZpbml0aW9uIGZvciBjb21wYXRpYmlsaXR5LlxuaW1wb3J0ICogYXMgJCBmcm9tICcuL2NzbXN0cmluZyc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZVxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICBleHBvcnQgY29uc3QgY3NtU3RyaW5nID0gJC5jc21TdHJpbmc7XG4gIGV4cG9ydCB0eXBlIGNzbVN0cmluZyA9ICQuY3NtU3RyaW5nO1xufVxuIl0sIm5hbWVzIjpbImNzbVN0cmluZyIsImFwcGVuZCIsImMiLCJsZW5ndGgiLCJzIiwidW5kZWZpbmVkIiwic3Vic3RyIiwiZXhwYW5zaW9uIiwidiIsImkiLCJnZXRCeXRlcyIsImVuY29kZVVSSUNvbXBvbmVudCIsInJlcGxhY2UiLCJnZXRMZW5ndGgiLCJpc0xlc3MiLCJpc0dyZWF0IiwiaXNFcXVhbCIsImlzRW1wdHkiLCIkIiwiTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/type/csmstring.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/type/csmvector.ts":
/*!************************************************!*\
  !*** ./WebSDK/Framework/src/type/csmvector.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework),\n/* harmony export */   csmVector: () => (/* binding */ csmVector),\n/* harmony export */   iterator: () => (/* binding */ iterator)\n/* harmony export */ });\n/* harmony import */ var _csmvector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ /**\n * ベクター型（可変配列型）\n */ class csmVector {\n    /**\n   * 引数付きコンストラクタ\n   * @param iniitalCapacity 初期化後のキャパシティ。データサイズは_capacity * sizeof(T)\n   * @param zeroClear trueなら初期化時に確保した領域を0で埋める\n   */ constructor(initialCapacity = 0){\n        if (initialCapacity < 1) {\n            this._ptr = [];\n            this._capacity = 0;\n            this._size = 0;\n        } else {\n            this._ptr = new Array(initialCapacity);\n            this._capacity = initialCapacity;\n            this._size = 0;\n        }\n    }\n    /**\n   * インデックスで指定した要素を返す\n   */ at(index) {\n        return this._ptr[index];\n    }\n    /**\n   * 要素をセット\n   * @param index 要素をセットするインデックス\n   * @param value セットする要素\n   */ set(index, value) {\n        this._ptr[index] = value;\n    }\n    /**\n   * コンテナを取得する\n   */ get(offset = 0) {\n        const ret = new Array();\n        for(let i = offset; i < this._size; i++){\n            ret.push(this._ptr[i]);\n        }\n        return ret;\n    }\n    /**\n   * pushBack処理、コンテナに新たな要素を追加する\n   * @param value PushBack処理で追加する値\n   */ pushBack(value) {\n        if (this._size >= this._capacity) {\n            this.prepareCapacity(this._capacity == 0 ? csmVector.DefaultSize : this._capacity * 2);\n        }\n        this._ptr[this._size++] = value;\n    }\n    /**\n   * コンテナの全要素を解放する\n   */ clear() {\n        this._ptr.length = 0;\n        this._size = 0;\n    }\n    /**\n   * コンテナの要素数を返す\n   * @return コンテナの要素数\n   */ getSize() {\n        return this._size;\n    }\n    /**\n   * コンテナの全要素に対して代入処理を行う\n   * @param newSize 代入処理後のサイズ\n   * @param value 要素に代入する値\n   */ assign(newSize, value) {\n        const curSize = this._size;\n        if (curSize < newSize) {\n            this.prepareCapacity(newSize); // capacity更新\n        }\n        for(let i = 0; i < newSize; i++){\n            this._ptr[i] = value;\n        }\n        this._size = newSize;\n    }\n    /**\n   * サイズ変更\n   */ resize(newSize, value = null) {\n        this.updateSize(newSize, value, true);\n    }\n    /**\n   * サイズ変更\n   */ updateSize(newSize, value = null, callPlacementNew = true) {\n        const curSize = this._size;\n        if (curSize < newSize) {\n            this.prepareCapacity(newSize); // capacity更新\n            if (callPlacementNew) {\n                for(let i = this._size; i < newSize; i++){\n                    if (typeof value == 'function') {\n                        // new\n                        this._ptr[i] = JSON.parse(JSON.stringify(new value()));\n                    } else {\n                        this._ptr[i] = value;\n                    }\n                }\n            } else {\n                for(let i = this._size; i < newSize; i++){\n                    this._ptr[i] = value;\n                }\n            }\n        } else {\n            // newSize <= this._size\n            //---\n            const sub = this._size - newSize;\n            this._ptr.splice(this._size - sub, sub); // 不要なので破棄する\n        }\n        this._size = newSize;\n    }\n    /**\n   * コンテナにコンテナ要素を挿入する\n   * @param position 挿入する位置\n   * @param begin 挿入するコンテナの開始位置\n   * @param end 挿入するコンテナの終端位置\n   */ insert(position, begin, end) {\n        let dstSi = position._index;\n        const srcSi = begin._index;\n        const srcEi = end._index;\n        const addCount = srcEi - srcSi;\n        this.prepareCapacity(this._size + addCount);\n        // 挿入用の既存データをシフトして隙間を作る\n        const addSize = this._size - dstSi;\n        if (addSize > 0) {\n            for(let i = 0; i < addSize; i++){\n                this._ptr.splice(dstSi + i, 0, null);\n            }\n        }\n        for(let i = srcSi; i < srcEi; i++, dstSi++){\n            this._ptr[dstSi] = begin._vector._ptr[i];\n        }\n        this._size = this._size + addCount;\n    }\n    /**\n   * コンテナからインデックスで指定した要素を削除する\n   * @param index インデックス値\n   * @return true 削除実行\n   * @return false 削除範囲外\n   */ remove(index) {\n        if (index < 0 || this._size <= index) {\n            return false; // 削除範囲外\n        }\n        this._ptr.splice(index, 1);\n        --this._size;\n        return true;\n    }\n    /**\n   * コンテナから要素を削除して他の要素をシフトする\n   * @param ite 削除する要素\n   */ erase(ite) {\n        const index = ite._index;\n        if (index < 0 || this._size <= index) {\n            return ite; // 削除範囲外\n        }\n        // 削除\n        this._ptr.splice(index, 1);\n        --this._size;\n        const ite2 = new iterator(this, index); // 終了\n        return ite2;\n    }\n    /**\n   * コンテナのキャパシティを確保する\n   * @param newSize 新たなキャパシティ。引数の値が現在のサイズ未満の場合は何もしない.\n   */ prepareCapacity(newSize) {\n        if (newSize > this._capacity) {\n            if (this._capacity == 0) {\n                this._ptr = new Array(newSize);\n                this._capacity = newSize;\n            } else {\n                this._ptr.length = newSize;\n                this._capacity = newSize;\n            }\n        }\n    }\n    /**\n   * コンテナの先頭要素を返す\n   */ begin() {\n        const ite = this._size == 0 ? this.end() : new iterator(this, 0);\n        return ite;\n    }\n    /**\n   * コンテナの終端要素を返す\n   */ end() {\n        const ite = new iterator(this, this._size);\n        return ite;\n    }\n    getOffset(offset) {\n        const newVector = new csmVector();\n        newVector._ptr = this.get(offset);\n        newVector._size = this.get(offset).length;\n        newVector._capacity = this.get(offset).length;\n        return newVector;\n    }\n    static{\n        this.DefaultSize = 10; // コンテナ初期化のデフォルトサイズ\n    }\n}\nclass iterator {\n    /**\n   * コンストラクタ\n   */ constructor(v, index){\n        this._vector = v != undefined ? v : null;\n        this._index = index != undefined ? index : 0;\n    }\n    /**\n   * 代入\n   */ set(ite) {\n        this._index = ite._index;\n        this._vector = ite._vector;\n        return this;\n    }\n    /**\n   * 前置き++演算\n   */ preIncrement() {\n        ++this._index;\n        return this;\n    }\n    /**\n   * 前置き--演算\n   */ preDecrement() {\n        --this._index;\n        return this;\n    }\n    /**\n   * 後置き++演算子\n   */ increment() {\n        const iteold = new iterator(this._vector, this._index++); // 古い値を保存\n        return iteold;\n    }\n    /**\n   * 後置き--演算子\n   */ decrement() {\n        const iteold = new iterator(this._vector, this._index--); // 古い値を保存\n        return iteold;\n    }\n    /**\n   * ptr\n   */ ptr() {\n        return this._vector._ptr[this._index];\n    }\n    /**\n   * =演算子のオーバーロード\n   */ substitution(ite) {\n        this._index = ite._index;\n        this._vector = ite._vector;\n        return this;\n    }\n    /**\n   * !=演算子のオーバーロード\n   */ notEqual(ite) {\n        return this._index != ite._index || this._vector != ite._vector;\n    }\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.csmVector = _csmvector__WEBPACK_IMPORTED_MODULE_0__.csmVector;\n    Live2DCubismFramework.iterator = _csmvector__WEBPACK_IMPORTED_MODULE_0__.iterator;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/type/csmvector.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts":
/*!***************************************************!*\
  !*** ./WebSDK/Framework/src/utils/cubismdebug.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CSM_ASSERT: () => (/* binding */ CSM_ASSERT),\n/* harmony export */   CubismDebug: () => (/* binding */ CubismDebug),\n/* harmony export */   CubismLogDebug: () => (/* binding */ CubismLogDebug),\n/* harmony export */   CubismLogError: () => (/* binding */ CubismLogError),\n/* harmony export */   CubismLogInfo: () => (/* binding */ CubismLogInfo),\n/* harmony export */   CubismLogPrint: () => (/* binding */ CubismLogPrint),\n/* harmony export */   CubismLogPrintIn: () => (/* binding */ CubismLogPrintIn),\n/* harmony export */   CubismLogVerbose: () => (/* binding */ CubismLogVerbose),\n/* harmony export */   CubismLogWarning: () => (/* binding */ CubismLogWarning),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework)\n/* harmony export */ });\n/* harmony import */ var _cubismframeworkconfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cubismframeworkconfig */ \"(ssr)/./WebSDK/Framework/src/cubismframeworkconfig.ts\");\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _cubismdebug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubismdebug */ \"(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\nconst CubismLogPrint = (level, fmt, args)=>{\n    CubismDebug.print(level, '[CSM]' + fmt, args);\n};\nconst CubismLogPrintIn = (level, fmt, args)=>{\n    CubismLogPrint(level, fmt + '\\n', args);\n};\nconst CSM_ASSERT = (expr)=>{\n    console.assert(expr);\n};\nlet CubismLogVerbose;\nlet CubismLogDebug;\nlet CubismLogInfo;\nlet CubismLogWarning;\nlet CubismLogError;\nif (_cubismframeworkconfig__WEBPACK_IMPORTED_MODULE_0__.CSM_LOG_LEVEL <= _cubismframeworkconfig__WEBPACK_IMPORTED_MODULE_0__.CSM_LOG_LEVEL_VERBOSE) {\n    CubismLogVerbose = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\n    };\n    CubismLogDebug = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n    };\n    CubismLogInfo = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Info, '[I]' + fmt, args);\n    };\n    CubismLogWarning = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n    };\n    CubismLogError = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n} else if (_cubismframeworkconfig__WEBPACK_IMPORTED_MODULE_0__.CSM_LOG_LEVEL == _cubismframeworkconfig__WEBPACK_IMPORTED_MODULE_0__.CSM_LOG_LEVEL_DEBUG) {\n    CubismLogDebug = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n    };\n    CubismLogInfo = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Info, '[I]' + fmt, args);\n    };\n    CubismLogWarning = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n    };\n    CubismLogError = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n} else if (_cubismframeworkconfig__WEBPACK_IMPORTED_MODULE_0__.CSM_LOG_LEVEL == _cubismframeworkconfig__WEBPACK_IMPORTED_MODULE_0__.CSM_LOG_LEVEL_INFO) {\n    CubismLogInfo = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Info, '[I]' + fmt, args);\n    };\n    CubismLogWarning = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n    };\n    CubismLogError = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n} else if (_cubismframeworkconfig__WEBPACK_IMPORTED_MODULE_0__.CSM_LOG_LEVEL == _cubismframeworkconfig__WEBPACK_IMPORTED_MODULE_0__.CSM_LOG_LEVEL_WARNING) {\n    CubismLogWarning = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n    };\n    CubismLogError = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n} else if (_cubismframeworkconfig__WEBPACK_IMPORTED_MODULE_0__.CSM_LOG_LEVEL == _cubismframeworkconfig__WEBPACK_IMPORTED_MODULE_0__.CSM_LOG_LEVEL_ERROR) {\n    CubismLogError = (fmt, ...args)=>{\n        CubismLogPrintIn(_live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n}\n/**\n * デバッグ用のユーティリティクラス。\n * ログの出力、バイトのダンプなど\n */ class CubismDebug {\n    /**\n   * ログを出力する。第一引数にログレベルを設定する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param format 書式付き文字列\n   * @param args 可変長引数\n   */ static print(logLevel, format, args) {\n        // オプションで設定されたログ出力レベルを下回る場合はログに出さない\n        if (logLevel < _live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.CubismFramework.getLoggingLevel()) {\n            return;\n        }\n        const logPrint = _live2dcubismframework__WEBPACK_IMPORTED_MODULE_1__.CubismFramework.coreLogFunction;\n        if (!logPrint) return;\n        const buffer = format.replace(/\\{(\\d+)\\}/g, (m, k)=>{\n            return args[k];\n        });\n        logPrint(buffer);\n    }\n    /**\n   * データから指定した長さだけダンプ出力する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param data ダンプするデータ\n   * @param length ダンプする長さ\n   */ static dumpBytes(logLevel, data, length) {\n        for(let i = 0; i < length; i++){\n            if (i % 16 == 0 && i > 0) this.print(logLevel, '\\n');\n            else if (i % 8 == 0 && i > 0) this.print(logLevel, '  ');\n            this.print(logLevel, '{0} ', [\n                data[i] & 0xff\n            ]);\n        }\n        this.print(logLevel, '\\n');\n    }\n    /**\n   * private コンストラクタ\n   */ constructor(){}\n}\n// Namespace definition for compatibility.\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismDebug = _cubismdebug__WEBPACK_IMPORTED_MODULE_2__.CubismDebug;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/utils/cubismjson.ts":
/*!**************************************************!*\
  !*** ./WebSDK/Framework/src/utils/cubismjson.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismJson: () => (/* binding */ CubismJson),\n/* harmony export */   JsonArray: () => (/* binding */ JsonArray),\n/* harmony export */   JsonBoolean: () => (/* binding */ JsonBoolean),\n/* harmony export */   JsonError: () => (/* binding */ JsonError),\n/* harmony export */   JsonFloat: () => (/* binding */ JsonFloat),\n/* harmony export */   JsonMap: () => (/* binding */ JsonMap),\n/* harmony export */   JsonNullvalue: () => (/* binding */ JsonNullvalue),\n/* harmony export */   JsonString: () => (/* binding */ JsonString),\n/* harmony export */   Live2DCubismFramework: () => (/* binding */ Live2DCubismFramework),\n/* harmony export */   Value: () => (/* binding */ Value)\n/* harmony export */ });\n/* harmony import */ var _live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _type_csmmap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/csmmap */ \"(ssr)/./WebSDK/Framework/src/type/csmmap.ts\");\n/* harmony import */ var _type_csmstring__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/csmstring */ \"(ssr)/./WebSDK/Framework/src/type/csmstring.ts\");\n/* harmony import */ var _type_csmvector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _cubismdebug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cubismdebug */ \"(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\");\n/* harmony import */ var _cubismjson__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cubismjson */ \"(ssr)/./WebSDK/Framework/src/utils/cubismjson.ts\");\n/* harmony import */ var _cubismjsonextension__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cubismjsonextension */ \"(ssr)/./WebSDK/Framework/src/utils/cubismjsonextension.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n\n// StaticInitializeNotForClientCall()で初期化する\nconst CSM_JSON_ERROR_TYPE_MISMATCH = 'Error: type mismatch';\nconst CSM_JSON_ERROR_INDEX_OF_BOUNDS = 'Error: index out of bounds';\n/**\n * パースしたJSONエレメントの要素の基底クラス。\n */ class Value {\n    /**\n   * コンストラクタ\n   */ constructor(){}\n    /**\n   * 要素を文字列型で返す(string)\n   */ getRawString(defaultValue, indent) {\n        return this.getString(defaultValue, indent);\n    }\n    /**\n   * 要素を数値型で返す(number)\n   */ toInt(defaultValue = 0) {\n        return defaultValue;\n    }\n    /**\n   * 要素を数値型で返す(number)\n   */ toFloat(defaultValue = 0) {\n        return defaultValue;\n    }\n    /**\n   * 要素を真偽値で返す(boolean)\n   */ toBoolean(defaultValue = false) {\n        return defaultValue;\n    }\n    /**\n   * サイズを返す\n   */ getSize() {\n        return 0;\n    }\n    /**\n   * 要素を配列で返す(Value[])\n   */ getArray(defaultValue = null) {\n        return defaultValue;\n    }\n    /**\n   * 要素をコンテナで返す(array)\n   */ getVector(defaultValue = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector()) {\n        return defaultValue;\n    }\n    /**\n   * 要素をマップで返す(csmMap<csmString, Value>)\n   */ getMap(defaultValue) {\n        return defaultValue;\n    }\n    /**\n   * 添字演算子[index]\n   */ getValueByIndex(index) {\n        return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\n    }\n    /**\n   * 添字演算子[string | csmString]\n   */ getValueByString(s) {\n        return Value.nullValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\n    }\n    /**\n   * マップのキー一覧をコンテナで返す\n   *\n   * @return マップのキーの一覧\n   */ getKeys() {\n        return Value.dummyKeys;\n    }\n    /**\n   * Valueの種類がエラー値ならtrue\n   */ isError() {\n        return false;\n    }\n    /**\n   * Valueの種類がnullならtrue\n   */ isNull() {\n        return false;\n    }\n    /**\n   * Valueの種類が真偽値ならtrue\n   */ isBool() {\n        return false;\n    }\n    /**\n   * Valueの種類が数値型ならtrue\n   */ isFloat() {\n        return false;\n    }\n    /**\n   * Valueの種類が文字列ならtrue\n   */ isString() {\n        return false;\n    }\n    /**\n   * Valueの種類が配列ならtrue\n   */ isArray() {\n        return false;\n    }\n    /**\n   * Valueの種類がマップ型ならtrue\n   */ isMap() {\n        return false;\n    }\n    equals(value) {\n        return false;\n    }\n    /**\n   * Valueの値が静的ならtrue、静的なら解放しない\n   */ isStatic() {\n        return false;\n    }\n    /**\n   * Valueにエラー値をセットする\n   */ setErrorNotForClientCall(errorStr) {\n        return JsonError.errorValue;\n    }\n    /**\n   * 初期化用メソッド\n   */ static staticInitializeNotForClientCall() {\n        JsonBoolean.trueValue = new JsonBoolean(true);\n        JsonBoolean.falseValue = new JsonBoolean(false);\n        Value.errorValue = new JsonError('ERROR', true);\n        Value.nullValue = new JsonNullvalue();\n        Value.dummyKeys = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector();\n    }\n    /**\n   * リリース用メソッド\n   */ static staticReleaseNotForClientCall() {\n        JsonBoolean.trueValue = null;\n        JsonBoolean.falseValue = null;\n        Value.errorValue = null;\n        Value.nullValue = null;\n        Value.dummyKeys = null;\n    }\n}\n/**\n * Ascii文字のみ対応した最小限の軽量JSONパーサ。\n * 仕様はJSONのサブセットとなる。\n * 設定ファイル(model3.json)などのロード用\n *\n * [未対応項目]\n * ・日本語などの非ASCII文字\n * ・eによる指数表現\n */ class CubismJson {\n    /**\n   * コンストラクタ\n   */ constructor(buffer, length){\n        this._parseCallback = _cubismjsonextension__WEBPACK_IMPORTED_MODULE_5__.CubismJsonExtension.parseJsonObject; // パース時に使う処理のコールバック関数\n        this._error = null;\n        this._lineCount = 0;\n        this._root = null;\n        if (buffer != undefined) {\n            this.parseBytes(buffer, length, this._parseCallback);\n        }\n    }\n    /**\n   * バイトデータから直接ロードしてパースする\n   *\n   * @param buffer バッファ\n   * @param size バッファサイズ\n   * @return CubismJsonクラスのインスタンス。失敗したらNULL\n   */ static create(buffer, size) {\n        const json = new CubismJson();\n        const succeeded = json.parseBytes(buffer, size, json._parseCallback);\n        if (!succeeded) {\n            CubismJson.delete(json);\n            return null;\n        } else {\n            return json;\n        }\n    }\n    /**\n   * パースしたJSONオブジェクトの解放処理\n   *\n   * @param instance CubismJsonクラスのインスタンス\n   */ static delete(instance) {\n        instance = null;\n    }\n    /**\n   * パースしたJSONのルート要素を返す\n   */ getRoot() {\n        return this._root;\n    }\n    /**\n   *  UnicodeのバイナリをStringに変換\n   *\n   * @param buffer 変換するバイナリデータ\n   * @return 変換後の文字列\n   */ static arrayBufferToString(buffer) {\n        const uint8Array = new Uint8Array(buffer);\n        let str = '';\n        for(let i = 0, len = uint8Array.length; i < len; ++i){\n            str += '%' + this.pad(uint8Array[i].toString(16));\n        }\n        str = decodeURIComponent(str);\n        return str;\n    }\n    /**\n   * エンコード、パディング\n   */ static pad(n) {\n        return n.length < 2 ? '0' + n : n;\n    }\n    /**\n   * JSONのパースを実行する\n   * @param buffer    パース対象のデータバイト\n   * @param size      データバイトのサイズ\n   * return true : 成功\n   * return false: 失敗\n   */ parseBytes(buffer, size, parseCallback) {\n        const endPos = new Array(1); // 参照渡しにするため配列\n        const decodeBuffer = CubismJson.arrayBufferToString(buffer);\n        if (parseCallback == undefined) {\n            this._root = this.parseValue(decodeBuffer, size, 0, endPos);\n        } else {\n            // TypeScript標準のJSONパーサを使う\n            this._root = parseCallback(JSON.parse(decodeBuffer), new JsonMap());\n        }\n        if (this._error) {\n            let strbuf = '\\0';\n            strbuf = 'Json parse error : @line ' + (this._lineCount + 1) + '\\n';\n            this._root = new JsonString(strbuf);\n            (0,_cubismdebug__WEBPACK_IMPORTED_MODULE_4__.CubismLogInfo)('{0}', this._root.getRawString());\n            return false;\n        } else if (this._root == null) {\n            this._root = new JsonError(new _type_csmstring__WEBPACK_IMPORTED_MODULE_2__.csmString(this._error), false); // rootは解放されるのでエラーオブジェクトを別途作成する\n            return false;\n        }\n        return true;\n    }\n    /**\n   * パース時のエラー値を返す\n   */ getParseError() {\n        return this._error;\n    }\n    /**\n   * ルート要素の次の要素がファイルの終端だったらtrueを返す\n   */ checkEndOfFile() {\n        return this._root.getArray()[1].equals('EOF');\n    }\n    /**\n   * JSONエレメントからValue(float,String,Value*,Array,null,true,false)をパースする\n   * エレメントの書式に応じて内部でParseString(), ParseObject(), ParseArray()を呼ぶ\n   *\n   * @param   buffer      JSONエレメントのバッファ\n   * @param   length      パースする長さ\n   * @param   begin       パースを開始する位置\n   * @param   outEndPos   パース終了時の位置\n   * @return      パースから取得したValueオブジェクト\n   */ parseValue(buffer, length, begin, outEndPos) {\n        if (this._error) return null;\n        let o = null;\n        let i = begin;\n        let f;\n        for(; i < length; i++){\n            const c = buffer[i];\n            switch(c){\n                case '-':\n                case '.':\n                case '0':\n                case '1':\n                case '2':\n                case '3':\n                case '4':\n                case '5':\n                case '6':\n                case '7':\n                case '8':\n                case '9':\n                    {\n                        const afterString = new Array(1); // 参照渡しにするため\n                        f = (0,_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.strtod)(buffer.slice(i), afterString);\n                        outEndPos[0] = buffer.indexOf(afterString[0]);\n                        return new JsonFloat(f);\n                    }\n                case '\"':\n                    return new JsonString(this.parseString(buffer, length, i + 1, outEndPos)); // \\\"の次の文字から\n                case '[':\n                    o = this.parseArray(buffer, length, i + 1, outEndPos);\n                    return o;\n                case '{':\n                    o = this.parseObject(buffer, length, i + 1, outEndPos);\n                    return o;\n                case 'n':\n                    if (i + 3 < length) {\n                        o = new JsonNullvalue(); // 解放できるようにする\n                        outEndPos[0] = i + 4;\n                    } else {\n                        this._error = 'parse null';\n                    }\n                    return o;\n                case 't':\n                    if (i + 3 < length) {\n                        o = JsonBoolean.trueValue;\n                        outEndPos[0] = i + 4;\n                    } else {\n                        this._error = 'parse true';\n                    }\n                    return o;\n                case 'f':\n                    if (i + 4 < length) {\n                        o = JsonBoolean.falseValue;\n                        outEndPos[0] = i + 5;\n                    } else {\n                        this._error = \"illegal ',' position\";\n                    }\n                    return o;\n                case ',':\n                    this._error = \"illegal ',' position\";\n                    return null;\n                case ']':\n                    outEndPos[0] = i; // 同じ文字を再処理\n                    return null;\n                case '\\n':\n                    this._lineCount++;\n                // falls through\n                case ' ':\n                case '\\t':\n                case '\\r':\n                default:\n                    break;\n            }\n        }\n        this._error = 'illegal end of value';\n        return null;\n    }\n    /**\n   * 次の「\"」までの文字列をパースする。\n   *\n   * @param   string  ->  パース対象の文字列\n   * @param   length  ->  パースする長さ\n   * @param   begin   ->  パースを開始する位置\n   * @param  outEndPos   ->  パース終了時の位置\n   * @return      パースした文F字列要素\n   */ parseString(string, length, begin, outEndPos) {\n        if (this._error) {\n            return null;\n        }\n        if (!string) {\n            this._error = 'string is null';\n            return null;\n        }\n        let i = begin;\n        let c, c2;\n        const ret = new _type_csmstring__WEBPACK_IMPORTED_MODULE_2__.csmString('');\n        let bufStart = begin; // sbufに登録されていない文字の開始位置\n        for(; i < length; i++){\n            c = string[i];\n            switch(c){\n                case '\"':\n                    {\n                        // 終端の”、エスケープ文字は別に処理されるのでここに来ない\n                        outEndPos[0] = i + 1; // ”の次の文字\n                        ret.append(string.slice(bufStart), i - bufStart); // 前の文字までを登録する\n                        return ret.s;\n                    }\n                // falls through\n                case '//':\n                    {\n                        // エスケープの場合\n                        i++; // ２文字をセットで扱う\n                        if (i - 1 > bufStart) {\n                            ret.append(string.slice(bufStart), i - bufStart); // 前の文字までを登録する\n                        }\n                        bufStart = i + 1; // エスケープ（２文字)の次の文字から\n                        if (i < length) {\n                            c2 = string[i];\n                            switch(c2){\n                                case '\\\\':\n                                    ret.expansion(1, '\\\\');\n                                    break;\n                                case '\"':\n                                    ret.expansion(1, '\"');\n                                    break;\n                                case '/':\n                                    ret.expansion(1, '/');\n                                    break;\n                                case 'b':\n                                    ret.expansion(1, '\\b');\n                                    break;\n                                case 'f':\n                                    ret.expansion(1, '\\f');\n                                    break;\n                                case 'n':\n                                    ret.expansion(1, '\\n');\n                                    break;\n                                case 'r':\n                                    ret.expansion(1, '\\r');\n                                    break;\n                                case 't':\n                                    ret.expansion(1, '\\t');\n                                    break;\n                                case 'u':\n                                    this._error = 'parse string/unicord escape not supported';\n                                    break;\n                                default:\n                                    break;\n                            }\n                        } else {\n                            this._error = 'parse string/escape error';\n                        }\n                    }\n                // falls through\n                default:\n                    {\n                        break;\n                    }\n            }\n        }\n        this._error = 'parse string/illegal end';\n        return null;\n    }\n    /**\n   * JSONのオブジェクトエレメントをパースしてValueオブジェクトを返す\n   *\n   * @param buffer    JSONエレメントのバッファ\n   * @param length    パースする長さ\n   * @param begin     パースを開始する位置\n   * @param outEndPos パース終了時の位置\n   * @return パースから取得したValueオブジェクト\n   */ parseObject(buffer, length, begin, outEndPos) {\n        if (this._error) {\n            return null;\n        }\n        if (!buffer) {\n            this._error = 'buffer is null';\n            return null;\n        }\n        const ret = new JsonMap();\n        // Key: Value\n        let key = '';\n        let i = begin;\n        let c = '';\n        const localRetEndPos2 = Array(1);\n        let ok = false;\n        // , が続く限りループ\n        for(; i < length; i++){\n            FOR_LOOP: for(; i < length; i++){\n                c = buffer[i];\n                switch(c){\n                    case '\"':\n                        key = this.parseString(buffer, length, i + 1, localRetEndPos2);\n                        if (this._error) {\n                            return null;\n                        }\n                        i = localRetEndPos2[0];\n                        ok = true;\n                        break FOR_LOOP; //-- loopから出る\n                    case '}':\n                        outEndPos[0] = i + 1;\n                        return ret; // 空\n                    case ':':\n                        this._error = \"illegal ':' position\";\n                        break;\n                    case '\\n':\n                        this._lineCount++;\n                    // falls through\n                    default:\n                        break; // スキップする文字\n                }\n            }\n            if (!ok) {\n                this._error = 'key not found';\n                return null;\n            }\n            ok = false;\n            // : をチェック\n            FOR_LOOP2: for(; i < length; i++){\n                c = buffer[i];\n                switch(c){\n                    case ':':\n                        ok = true;\n                        i++;\n                        break FOR_LOOP2;\n                    case '}':\n                        this._error = \"illegal '}' position\";\n                        break;\n                    // falls through\n                    case '\\n':\n                        this._lineCount++;\n                    // case ' ': case '\\t' : case '\\r':\n                    // falls through\n                    default:\n                        break; // スキップする文字\n                }\n            }\n            if (!ok) {\n                this._error = \"':' not found\";\n                return null;\n            }\n            // 値をチェック\n            const value = this.parseValue(buffer, length, i, localRetEndPos2);\n            if (this._error) {\n                return null;\n            }\n            i = localRetEndPos2[0];\n            // ret.put(key, value);\n            ret.put(key, value);\n            FOR_LOOP3: for(; i < length; i++){\n                c = buffer[i];\n                switch(c){\n                    case ',':\n                        break FOR_LOOP3;\n                    case '}':\n                        outEndPos[0] = i + 1;\n                        return ret; // 正常終了\n                    case '\\n':\n                        this._lineCount++;\n                    // falls through\n                    default:\n                        break; // スキップ\n                }\n            }\n        }\n        this._error = 'illegal end of perseObject';\n        return null;\n    }\n    /**\n   * 次の「\"」までの文字列をパースする。\n   * @param buffer    JSONエレメントのバッファ\n   * @param length    パースする長さ\n   * @param begin     パースを開始する位置\n   * @param outEndPos パース終了時の位置\n   * @return パースから取得したValueオブジェクト\n   */ parseArray(buffer, length, begin, outEndPos) {\n        if (this._error) {\n            return null;\n        }\n        if (!buffer) {\n            this._error = 'buffer is null';\n            return null;\n        }\n        let ret = new JsonArray();\n        // key : value\n        let i = begin;\n        let c;\n        const localRetEndpos2 = new Array(1);\n        // , が続く限りループ\n        for(; i < length; i++){\n            // : をチェック\n            const value = this.parseValue(buffer, length, i, localRetEndpos2);\n            if (this._error) {\n                return null;\n            }\n            i = localRetEndpos2[0];\n            if (value) {\n                ret.add(value);\n            }\n            // FOR_LOOP3:\n            // boolean breakflag = false;\n            FOR_LOOP: for(; i < length; i++){\n                c = buffer[i];\n                switch(c){\n                    case ',':\n                        break FOR_LOOP;\n                    case ']':\n                        outEndPos[0] = i + 1;\n                        return ret; // 終了\n                    case '\\n':\n                        ++this._lineCount;\n                    //case ' ': case '\\t': case '\\r':\n                    // falls through\n                    default:\n                        break; // スキップ\n                }\n            }\n        }\n        ret = void 0;\n        this._error = 'illegal end of parseObject';\n        return null;\n    }\n}\n/**\n * パースしたJSONの要素をfloat値として扱う\n */ class JsonFloat extends Value {\n    /**\n   * コンストラクタ\n   */ constructor(v){\n        super();\n        this._value = v;\n    }\n    /**\n   * Valueの種類が数値型ならtrue\n   */ isFloat() {\n        return true;\n    }\n    /**\n   * 要素を文字列で返す(csmString型)\n   */ getString(defaultValue, indent) {\n        const strbuf = '\\0';\n        this._value = parseFloat(strbuf);\n        this._stringBuffer = strbuf;\n        return this._stringBuffer;\n    }\n    /**\n   * 要素を数値型で返す(number)\n   */ toInt(defaultValue = 0) {\n        return parseInt(this._value.toString());\n    }\n    /**\n   * 要素を数値型で返す(number)\n   */ toFloat(defaultValue = 0.0) {\n        return this._value;\n    }\n    equals(value) {\n        if ('number' === typeof value) {\n            // int\n            if (Math.round(value)) {\n                return false;\n            } else {\n                return value == this._value;\n            }\n        }\n        return false;\n    }\n}\n/**\n * パースしたJSONの要素を真偽値として扱う\n */ class JsonBoolean extends Value {\n    /**\n   * Valueの種類が真偽値ならtrue\n   */ isBool() {\n        return true;\n    }\n    /**\n   * 要素を真偽値で返す(boolean)\n   */ toBoolean(defaultValue = false) {\n        return this._boolValue;\n    }\n    /**\n   * 要素を文字列で返す(csmString型)\n   */ getString(defaultValue, indent) {\n        this._stringBuffer = this._boolValue ? 'true' : 'false';\n        return this._stringBuffer;\n    }\n    equals(value) {\n        if ('boolean' === typeof value) {\n            return value == this._boolValue;\n        }\n        return false;\n    }\n    /**\n   * Valueの値が静的ならtrue, 静的なら解放しない\n   */ isStatic() {\n        return true;\n    }\n    /**\n   * 引数付きコンストラクタ\n   */ constructor(v){\n        super();\n        this._boolValue = v;\n    }\n}\n/**\n * パースしたJSONの要素を文字列として扱う\n */ class JsonString extends Value {\n    constructor(s){\n        super();\n        if ('string' === typeof s) {\n            this._stringBuffer = s;\n        }\n        if (s instanceof _type_csmstring__WEBPACK_IMPORTED_MODULE_2__.csmString) {\n            this._stringBuffer = s.s;\n        }\n    }\n    /**\n   * Valueの種類が文字列ならtrue\n   */ isString() {\n        return true;\n    }\n    /**\n   * 要素を文字列で返す(csmString型)\n   */ getString(defaultValue, indent) {\n        return this._stringBuffer;\n    }\n    equals(value) {\n        if ('string' === typeof value) {\n            return this._stringBuffer == value;\n        }\n        if (value instanceof _type_csmstring__WEBPACK_IMPORTED_MODULE_2__.csmString) {\n            return this._stringBuffer == value.s;\n        }\n        return false;\n    }\n}\n/**\n * JSONパース時のエラー結果。文字列型のようにふるまう\n */ class JsonError extends JsonString {\n    /**\n   * Valueの値が静的ならtrue、静的なら解放しない\n   */ isStatic() {\n        return this._isStatic;\n    }\n    /**\n   * エラー情報をセットする\n   */ setErrorNotForClientCall(s) {\n        this._stringBuffer = s;\n        return this;\n    }\n    /**\n   * 引数付きコンストラクタ\n   */ constructor(s, isStatic){\n        if ('string' === typeof s) {\n            super(s);\n        } else {\n            super(s);\n        }\n        this._isStatic = isStatic;\n    }\n    /**\n   * Valueの種類がエラー値ならtrue\n   */ isError() {\n        return true;\n    }\n}\n/**\n * パースしたJSONの要素をNULL値として持つ\n */ class JsonNullvalue extends Value {\n    /**\n   * Valueの種類がNULL値ならtrue\n   */ isNull() {\n        return true;\n    }\n    /**\n   * 要素を文字列で返す(csmString型)\n   */ getString(defaultValue, indent) {\n        return this._stringBuffer;\n    }\n    /**\n   * Valueの値が静的ならtrue, 静的なら解放しない\n   */ isStatic() {\n        return true;\n    }\n    /**\n   * Valueにエラー値をセットする\n   */ setErrorNotForClientCall(s) {\n        this._stringBuffer = s;\n        return JsonError.nullValue;\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        super();\n        this._stringBuffer = 'NullValue';\n    }\n}\n/**\n * パースしたJSONの要素を配列として持つ\n */ class JsonArray extends Value {\n    /**\n   * コンストラクタ\n   */ constructor(){\n        super();\n        this._array = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector();\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        for(let ite = this._array.begin(); ite.notEqual(this._array.end()); ite.preIncrement()){\n            let v = ite.ptr();\n            if (v && !v.isStatic()) {\n                v = void 0;\n                v = null;\n            }\n        }\n    }\n    /**\n   * Valueの種類が配列ならtrue\n   */ isArray() {\n        return true;\n    }\n    /**\n   * 添字演算子[index]\n   */ getValueByIndex(index) {\n        if (index < 0 || this._array.getSize() <= index) {\n            return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_INDEX_OF_BOUNDS);\n        }\n        const v = this._array.at(index);\n        if (v == null) {\n            return Value.nullValue;\n        }\n        return v;\n    }\n    /**\n   * 添字演算子[string | csmString]\n   */ getValueByString(s) {\n        return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\n    }\n    /**\n   * 要素を文字列で返す(csmString型)\n   */ getString(defaultValue, indent) {\n        const stringBuffer = indent + '[\\n';\n        for(let ite = this._array.begin(); ite.notEqual(this._array.end()); ite.increment()){\n            const v = ite.ptr();\n            this._stringBuffer += indent + '' + v.getString(indent + ' ') + '\\n';\n        }\n        this._stringBuffer = stringBuffer + indent + ']\\n';\n        return this._stringBuffer;\n    }\n    /**\n   * 配列要素を追加する\n   * @param v 追加する要素\n   */ add(v) {\n        this._array.pushBack(v);\n    }\n    /**\n   * 要素をコンテナで返す(csmVector<Value>)\n   */ getVector(defaultValue = null) {\n        return this._array;\n    }\n    /**\n   * 要素の数を返す\n   */ getSize() {\n        return this._array.getSize();\n    }\n}\n/**\n * パースしたJSONの要素をマップとして持つ\n */ class JsonMap extends Value {\n    /**\n   * コンストラクタ\n   */ constructor(){\n        super();\n        this._map = new _type_csmmap__WEBPACK_IMPORTED_MODULE_1__.csmMap();\n    }\n    /**\n   * デストラクタ相当の処理\n   */ release() {\n        const ite = this._map.begin();\n        while(ite.notEqual(this._map.end())){\n            let v = ite.ptr().second;\n            if (v && !v.isStatic()) {\n                v = void 0;\n                v = null;\n            }\n            ite.preIncrement();\n        }\n    }\n    /**\n   * Valueの値がMap型ならtrue\n   */ isMap() {\n        return true;\n    }\n    /**\n   * 添字演算子[string | csmString]\n   */ getValueByString(s) {\n        if (s instanceof _type_csmstring__WEBPACK_IMPORTED_MODULE_2__.csmString) {\n            const ret = this._map.getValue(s.s);\n            if (ret == null) {\n                return Value.nullValue;\n            }\n            return ret;\n        }\n        for(let iter = this._map.begin(); iter.notEqual(this._map.end()); iter.preIncrement()){\n            if (iter.ptr().first == s) {\n                if (iter.ptr().second == null) {\n                    return Value.nullValue;\n                }\n                return iter.ptr().second;\n            }\n        }\n        return Value.nullValue;\n    }\n    /**\n   * 添字演算子[index]\n   */ getValueByIndex(index) {\n        return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\n    }\n    /**\n   * 要素を文字列で返す(csmString型)\n   */ getString(defaultValue, indent) {\n        this._stringBuffer = indent + '{\\n';\n        const ite = this._map.begin();\n        while(ite.notEqual(this._map.end())){\n            const key = ite.ptr().first;\n            const v = ite.ptr().second;\n            this._stringBuffer += indent + ' ' + key + ' : ' + v.getString(indent + '   ') + ' \\n';\n            ite.preIncrement();\n        }\n        this._stringBuffer += indent + '}\\n';\n        return this._stringBuffer;\n    }\n    /**\n   * 要素をMap型で返す\n   */ getMap(defaultValue) {\n        return this._map;\n    }\n    /**\n   * Mapに要素を追加する\n   */ put(key, v) {\n        this._map.setValue(key, v);\n    }\n    /**\n   * Mapからキーのリストを取得する\n   */ getKeys() {\n        if (!this._keys) {\n            this._keys = new _type_csmvector__WEBPACK_IMPORTED_MODULE_3__.csmVector();\n            const ite = this._map.begin();\n            while(ite.notEqual(this._map.end())){\n                const key = ite.ptr().first;\n                this._keys.pushBack(key);\n                ite.preIncrement();\n            }\n        }\n        return this._keys;\n    }\n    /**\n   * Mapの要素数を取得する\n   */ getSize() {\n        return this._keys.getSize();\n    }\n}\n// Namespace definition for compatibility.\n\n\n(function(Live2DCubismFramework) {\n    Live2DCubismFramework.CubismJson = _cubismjson__WEBPACK_IMPORTED_MODULE_6__.CubismJson;\n    Live2DCubismFramework.JsonArray = _cubismjson__WEBPACK_IMPORTED_MODULE_6__.JsonArray;\n    Live2DCubismFramework.JsonBoolean = _cubismjson__WEBPACK_IMPORTED_MODULE_6__.JsonBoolean;\n    Live2DCubismFramework.JsonError = _cubismjson__WEBPACK_IMPORTED_MODULE_6__.JsonError;\n    Live2DCubismFramework.JsonFloat = _cubismjson__WEBPACK_IMPORTED_MODULE_6__.JsonFloat;\n    Live2DCubismFramework.JsonMap = _cubismjson__WEBPACK_IMPORTED_MODULE_6__.JsonMap;\n    Live2DCubismFramework.JsonNullvalue = _cubismjson__WEBPACK_IMPORTED_MODULE_6__.JsonNullvalue;\n    Live2DCubismFramework.JsonString = _cubismjson__WEBPACK_IMPORTED_MODULE_6__.JsonString;\n    Live2DCubismFramework.Value = _cubismjson__WEBPACK_IMPORTED_MODULE_6__.Value;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar Live2DCubismFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/utils/cubismjson.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/Framework/src/utils/cubismjsonextension.ts":
/*!***********************************************************!*\
  !*** ./WebSDK/Framework/src/utils/cubismjsonextension.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CubismJsonExtension: () => (/* binding */ CubismJsonExtension)\n/* harmony export */ });\n/* harmony import */ var _cubismjson__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cubismjson */ \"(ssr)/./WebSDK/Framework/src/utils/cubismjson.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n/**\n * CubismJsonで実装されているJsonパーサを使用せず、\n * TypeScript標準のJsonパーサなどを使用し出力された結果を\n * Cubism SDKで定義されているJSONエレメントの要素に\n * 置き換える処理をするクラス。\n */ class CubismJsonExtension {\n    static parseJsonObject(obj, map) {\n        Object.keys(obj).forEach((key)=>{\n            if (typeof obj[key] == 'boolean') {\n                const convValue = Boolean(obj[key]);\n                map.put(key, new _cubismjson__WEBPACK_IMPORTED_MODULE_0__.JsonBoolean(convValue));\n            } else if (typeof obj[key] == 'string') {\n                const convValue = String(obj[key]);\n                map.put(key, new _cubismjson__WEBPACK_IMPORTED_MODULE_0__.JsonString(convValue));\n            } else if (typeof obj[key] == 'number') {\n                const convValue = Number(obj[key]);\n                map.put(key, new _cubismjson__WEBPACK_IMPORTED_MODULE_0__.JsonFloat(convValue));\n            } else if (obj[key] instanceof Array) {\n                map.put(key, CubismJsonExtension.parseJsonArray(obj[key]));\n            } else if (obj[key] instanceof Object) {\n                map.put(key, CubismJsonExtension.parseJsonObject(obj[key], new _cubismjson__WEBPACK_IMPORTED_MODULE_0__.JsonMap()));\n            } else if (obj[key] == null) {\n                map.put(key, new _cubismjson__WEBPACK_IMPORTED_MODULE_0__.JsonNullvalue());\n            } else {\n                // どれにも当てはまらない場合でも処理する\n                map.put(key, obj[key]);\n            }\n        });\n        return map;\n    }\n    static parseJsonArray(obj) {\n        const arr = new _cubismjson__WEBPACK_IMPORTED_MODULE_0__.JsonArray();\n        Object.keys(obj).forEach((key)=>{\n            const convKey = Number(key);\n            if (typeof convKey == 'number') {\n                if (typeof obj[key] == 'boolean') {\n                    const convValue = Boolean(obj[key]);\n                    arr.add(new _cubismjson__WEBPACK_IMPORTED_MODULE_0__.JsonBoolean(convValue));\n                } else if (typeof obj[key] == 'string') {\n                    const convValue = String(obj[key]);\n                    arr.add(new _cubismjson__WEBPACK_IMPORTED_MODULE_0__.JsonString(convValue));\n                } else if (typeof obj[key] == 'number') {\n                    const convValue = Number(obj[key]);\n                    arr.add(new _cubismjson__WEBPACK_IMPORTED_MODULE_0__.JsonFloat(convValue));\n                } else if (obj[key] instanceof Array) {\n                    arr.add(this.parseJsonArray(obj[key]));\n                } else if (obj[key] instanceof Object) {\n                    arr.add(this.parseJsonObject(obj[key], new _cubismjson__WEBPACK_IMPORTED_MODULE_0__.JsonMap()));\n                } else if (obj[key] == null) {\n                    arr.add(new _cubismjson__WEBPACK_IMPORTED_MODULE_0__.JsonNullvalue());\n                } else {\n                    // どれにも当てはまらない場合でも処理する\n                    arr.add(obj[key]);\n                }\n            } else if (obj[key] instanceof Array) {\n                arr.add(this.parseJsonArray(obj[key]));\n            } else if (obj[key] instanceof Object) {\n                arr.add(this.parseJsonObject(obj[key], new _cubismjson__WEBPACK_IMPORTED_MODULE_0__.JsonMap()));\n            } else if (obj[key] == null) {\n                arr.add(new _cubismjson__WEBPACK_IMPORTED_MODULE_0__.JsonNullvalue());\n            } else {\n                const convValue = Array(obj[key]);\n                // 配列ともObjectとも判定できなかった場合でも処理する\n                for(let i = 0; i < convValue.length; i++){\n                    arr.add(convValue[i]);\n                }\n            }\n        });\n        return arr;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/Framework/src/utils/cubismjsonextension.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/src/lappadapter.ts":
/*!***********************************!*\
  !*** ./WebSDK/src/lappadapter.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LAppAdapter: () => (/* binding */ LAppAdapter),\n/* harmony export */   s_adapter_instance: () => (/* binding */ s_adapter_instance)\n/* harmony export */ });\n/* harmony import */ var _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lapplive2dmanager */ \"(ssr)/./WebSDK/src/lapplive2dmanager.ts\");\n/* harmony import */ var _lappmodel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lappmodel */ \"(ssr)/./WebSDK/src/lappmodel.ts\");\n/* harmony import */ var _lappdefine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lappdefine */ \"(ssr)/./WebSDK/src/lappdefine.ts\");\n/* harmony import */ var _lapppal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lapppal */ \"(ssr)/./WebSDK/src/lapppal.ts\");\n/* harmony import */ var _framework_motion_cubismmotionqueuemanager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @framework/motion/cubismmotionqueuemanager */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotionqueuemanager.ts\");\n/* harmony import */ var _framework_live2dcubismframework__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @framework/live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n// @ts-nocheck\n\n\n\n\n\n\nlet s_adapter_instance = null;\nclass LAppAdapter {\n    static getInstance() {\n        if (s_adapter_instance == null) {\n            s_adapter_instance = new LAppAdapter();\n        }\n        return s_adapter_instance;\n    }\n    /* gets */ getMgr() {\n        return _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_0__.LAppLive2DManager.getInstance();\n    }\n    getModel() {\n        return this.getMgr().getModel(0);\n    }\n    getIdManager() {\n        return _framework_live2dcubismframework__WEBPACK_IMPORTED_MODULE_5__.CubismFramework.getIdManager();\n    }\n    /* motion */ getMotionGroups() {\n        let groups = [];\n        for(let i = 0; i < this.getModel()?._modelSetting.getMotionGroupCount(); i++){\n            groups.push(this.getModel()?._modelSetting.getMotionGroupName(i) ?? \"\");\n        }\n        return groups;\n    }\n    getMotionCount(group) {\n        return this.getModel()?._modelSetting.getMotionCount(group) ?? 0;\n    }\n    startMotion(group, no, priority, onFinishedMotionHandler) {\n        return this.getModel()?.startMotion(group, no, priority, onFinishedMotionHandler) ?? _framework_motion_cubismmotionqueuemanager__WEBPACK_IMPORTED_MODULE_4__.InvalidMotionQueueEntryHandleValue;\n    }\n    /* expression */ getExpressionCount() {\n        return this.getModel()?._expressions.getSize() ?? 0;\n    }\n    getExpressionName(index) {\n        return this.getModel()?._modelSetting?.getExpressionName(index) ?? '';\n    }\n    setExpression(name) {\n        this.getModel()?.setExpression(name);\n    }\n    // @deprecated\n    nextChara() {\n        this.getMgr().nextScene();\n    }\n    setChara(ModelDir, ModelName) {\n        const modelPath = (ModelDir.endsWith('/') ? ModelDir : ModelDir + '/') + ModelName + '/';\n        const modelJsonName = ModelName + '.model3.json';\n        if (_lappdefine__WEBPACK_IMPORTED_MODULE_2__.DebugLogEnable) {\n            _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.printMessage(`[APP]model Dir: ${modelPath}`);\n        }\n        this.getMgr().releaseAllModel();\n        this.getMgr()._models.pushBack(new _lappmodel__WEBPACK_IMPORTED_MODULE_1__.LAppModel());\n        this.getMgr()._models.at(0)?.loadAssets(modelPath, modelJsonName);\n    }\n    /* model position manipulation */ getModelPosition() {\n        const model = this.getModel();\n        if (model && model._modelMatrix) {\n            const matrix = model._modelMatrix.getArray();\n            return {\n                x: matrix[12],\n                y: matrix[13]\n            };\n        }\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n    setModelPosition(x, y) {\n        const model = this.getModel();\n        if (model && model._modelMatrix) {\n            const matrix = model._modelMatrix.getArray();\n            // Update the translation components\n            const newMatrix = [\n                ...matrix\n            ];\n            newMatrix[12] = x;\n            newMatrix[13] = y;\n            // Set the matrix\n            model._modelMatrix.setMatrix(newMatrix);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/src/lappadapter.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/src/lappdefine.ts":
/*!**********************************!*\
  !*** ./WebSDK/src/lappdefine.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BackImageName: () => (/* binding */ BackImageName),\n/* harmony export */   CanvasSize: () => (/* binding */ CanvasSize),\n/* harmony export */   CubismLoggingLevel: () => (/* binding */ CubismLoggingLevel),\n/* harmony export */   CurrentKScale: () => (/* binding */ CurrentKScale),\n/* harmony export */   DebugLogEnable: () => (/* binding */ DebugLogEnable),\n/* harmony export */   DebugTouchLogEnable: () => (/* binding */ DebugTouchLogEnable),\n/* harmony export */   ENABLE_LIMITED_FRAME_RATE: () => (/* binding */ ENABLE_LIMITED_FRAME_RATE),\n/* harmony export */   GearImageName: () => (/* binding */ GearImageName),\n/* harmony export */   HitAreaNameBody: () => (/* binding */ HitAreaNameBody),\n/* harmony export */   HitAreaNameHead: () => (/* binding */ HitAreaNameHead),\n/* harmony export */   LIMITED_FRAME_RATE: () => (/* binding */ LIMITED_FRAME_RATE),\n/* harmony export */   MOCConsistencyValidationEnable: () => (/* binding */ MOCConsistencyValidationEnable),\n/* harmony export */   ModelDir: () => (/* binding */ ModelDir),\n/* harmony export */   ModelDirSize: () => (/* binding */ ModelDirSize),\n/* harmony export */   ModelFileNames: () => (/* binding */ ModelFileNames),\n/* harmony export */   MotionGroupIdle: () => (/* binding */ MotionGroupIdle),\n/* harmony export */   MotionGroupTapBody: () => (/* binding */ MotionGroupTapBody),\n/* harmony export */   PowerImageName: () => (/* binding */ PowerImageName),\n/* harmony export */   PriorityForce: () => (/* binding */ PriorityForce),\n/* harmony export */   PriorityIdle: () => (/* binding */ PriorityIdle),\n/* harmony export */   PriorityNone: () => (/* binding */ PriorityNone),\n/* harmony export */   PriorityNormal: () => (/* binding */ PriorityNormal),\n/* harmony export */   RenderTargetHeight: () => (/* binding */ RenderTargetHeight),\n/* harmony export */   RenderTargetWidth: () => (/* binding */ RenderTargetWidth),\n/* harmony export */   ResourcesPath: () => (/* binding */ ResourcesPath),\n/* harmony export */   ViewLogicalBottom: () => (/* binding */ ViewLogicalBottom),\n/* harmony export */   ViewLogicalLeft: () => (/* binding */ ViewLogicalLeft),\n/* harmony export */   ViewLogicalMaxBottom: () => (/* binding */ ViewLogicalMaxBottom),\n/* harmony export */   ViewLogicalMaxLeft: () => (/* binding */ ViewLogicalMaxLeft),\n/* harmony export */   ViewLogicalMaxRight: () => (/* binding */ ViewLogicalMaxRight),\n/* harmony export */   ViewLogicalMaxTop: () => (/* binding */ ViewLogicalMaxTop),\n/* harmony export */   ViewLogicalRight: () => (/* binding */ ViewLogicalRight),\n/* harmony export */   ViewLogicalTop: () => (/* binding */ ViewLogicalTop),\n/* harmony export */   ViewMaxScale: () => (/* binding */ ViewMaxScale),\n/* harmony export */   ViewMinScale: () => (/* binding */ ViewMinScale),\n/* harmony export */   ViewScale: () => (/* binding */ ViewScale),\n/* harmony export */   updateModelConfig: () => (/* binding */ updateModelConfig)\n/* harmony export */ });\n/* harmony import */ var _framework_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @framework/live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n/**\n * Sample Appで使用する定数\n */ // Canvas width and height pixel values, or dynamic screen size ('auto').\nconst CanvasSize = 'auto';\n// 画面\nconst ViewScale = 1.0;\nlet CurrentKScale = ViewScale;\nconst ViewMaxScale = 2.0;\nconst ViewMinScale = 0.8;\nconst ViewLogicalLeft = -1.0;\nconst ViewLogicalRight = 1.0;\nconst ViewLogicalBottom = -1.0;\nconst ViewLogicalTop = 1.0;\nconst ViewLogicalMaxLeft = -2.0;\nconst ViewLogicalMaxRight = 2.0;\nconst ViewLogicalMaxBottom = -2.0;\nconst ViewLogicalMaxTop = 2.0;\n// Dynamic resource path that will be set by the model loader\nlet ResourcesPath = \"\";\n// Model directory and filename storage\nlet ModelDir = [];\nlet ModelFileNames = []; // New array to store model file names\n// Function to update model configuration with both directory and file name\nfunction updateModelConfig(resourcePath, modelDirectory, modelFileName, kScale) {\n    console.log('Updating model config:', {\n        resourcePath,\n        modelDirectory,\n        modelFileName,\n        kScale\n    });\n    ResourcesPath = resourcePath;\n    ModelDir = [\n        modelDirectory\n    ];\n    ModelFileNames = [\n        modelFileName\n    ]; // Store the actual model file name\n    if (kScale !== undefined) {\n        CurrentKScale = kScale;\n    }\n    // Update ModelDirSize when ModelDir changes\n    ModelDirSize = ModelDir.length;\n}\n// Export ModelDirSize as a variable instead of a constant\nlet ModelDirSize = ModelDir.length;\n// モデルの後ろにある背景の画像ファイル\nconst BackImageName = 'back_class_normal.png';\n// 歯車\nconst GearImageName = 'icon_gear.png';\n// 終了ボタン\nconst PowerImageName = 'CloseNormal.png';\n// モデル定義---------------------------------------------\n// モデルを配置したディレクトリ名の配列\n// ディレクトリ名とmodel3.jsonの名前を一致させておくこと\n// 外部定義ファイル（json）と合わせる\n// 外部定义文件（json）与之匹配\nconst MotionGroupIdle = 'Idle'; // アイドリング  // 空闲\nconst MotionGroupTapBody = 'TapBody'; // 体をタップしたとき  // 点击身体时\n// 外部定義ファイル（json）と合わせる\n// 外部定义文件（json）与之匹配\nconst HitAreaNameHead = 'Head';\nconst HitAreaNameBody = 'Body';\n// モーションの優先度定数\n// 动作优先级常数\nconst PriorityNone = 0;\nconst PriorityIdle = 1;\nconst PriorityNormal = 2;\nconst PriorityForce = 3;\n// MOC3の一貫性検証オプション\n// MOC3一致性验证选项\nconst MOCConsistencyValidationEnable = true;\n// デバッグ用ログの表示オプション\n// 调试用日志显示选项\nconst DebugLogEnable = false;\nconst DebugTouchLogEnable = false;\n// Frameworkから出力するログのレベル設定\n// 设置Framework输出的日志级别\nconst CubismLoggingLevel = _framework_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.LogLevel.LogLevel_Verbose;\n// デフォルトのレンダーターゲットサイズ\n// 默认的渲染目标大小\nconst RenderTargetWidth = 1900;\nconst RenderTargetHeight = 1000;\nconst ENABLE_LIMITED_FRAME_RATE = true;\nconst LIMITED_FRAME_RATE = 60;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/src/lappdefine.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/src/lappdelegate.ts":
/*!************************************!*\
  !*** ./WebSDK/src/lappdelegate.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LAppDelegate: () => (/* binding */ LAppDelegate),\n/* harmony export */   frameBuffer: () => (/* binding */ frameBuffer),\n/* harmony export */   s_instance: () => (/* binding */ s_instance)\n/* harmony export */ });\n/* harmony import */ var _framework_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @framework/live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _lappdefine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lappdefine */ \"(ssr)/./WebSDK/src/lappdefine.ts\");\n/* harmony import */ var _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lapplive2dmanager */ \"(ssr)/./WebSDK/src/lapplive2dmanager.ts\");\n/* harmony import */ var _lapppal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lapppal */ \"(ssr)/./WebSDK/src/lapppal.ts\");\n/* harmony import */ var _lapptexturemanager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lapptexturemanager */ \"(ssr)/./WebSDK/src/lapptexturemanager.ts\");\n/* harmony import */ var _lappview__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lappview */ \"(ssr)/./WebSDK/src/lappview.ts\");\n/* harmony import */ var _lappglmanager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lappglmanager */ \"(ssr)/./WebSDK/src/lappglmanager.ts\");\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n\n\n\nlet s_instance = null;\nlet frameBuffer = null;\n/**\n * アプリケーションクラス。\n * Cubism SDKの管理を行う。\n * \n * 应用程序类。\n * 管理Cubism SDK。\n * \n */ class LAppDelegate {\n    /**\n   * クラスのインスタンス（シングルトン）を返す。\n   * インスタンスが生成されていない場合は内部でインスタンスを生成する。\n   * \n   * 返回类的实例（单例）。\n   * 如果尚未创建实例，则在内部创建实例。\n   *\n   * @return クラスのインスタンス\n   */ static getInstance() {\n        if (s_instance == null) {\n            s_instance = new LAppDelegate();\n        }\n        return s_instance;\n    }\n    /**\n   * クラスのインスタンス（シングルトン）を解放する。\n   * \n   * 释放类的实例（单例）。\n   * \n   */ static releaseInstance() {\n        if (s_instance != null) {\n            s_instance.release();\n        }\n        s_instance = null;\n    }\n    /**\n   * Initialize the application.\n   */ initialize() {\n        // Comment out the following code since canvas already exists in DOM\n        // let parent = document.getElementById('live2d');\n        // if (parent) {\n        //   parent.appendChild(canvas!);\n        // } else {\n        //   document.body.appendChild(canvas!);\n        // }\n        if (_lappdefine__WEBPACK_IMPORTED_MODULE_1__.CanvasSize === 'auto') {\n            this._resizeCanvas();\n        } else {\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.width = _lappdefine__WEBPACK_IMPORTED_MODULE_1__.CanvasSize.width;\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.height = _lappdefine__WEBPACK_IMPORTED_MODULE_1__.CanvasSize.height;\n        }\n        if (!frameBuffer) {\n            frameBuffer = _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.getParameter(_lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.FRAMEBUFFER_BINDING);\n        }\n        // 透過設定\n        // 透明设置\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.enable(_lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.BLEND);\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.blendFunc(_lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.SRC_ALPHA, _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.ONE_MINUS_SRC_ALPHA);\n        const supportTouch = \"ontouchend\" in _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas;\n        if (supportTouch) {\n            // タッチ関連コールバック関数登録\n            // 注册触摸相关回调函数\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.addEventListener('touchstart', onTouchBegan, {\n                passive: true\n            });\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.addEventListener('touchmove', onTouchMoved, {\n                passive: true\n            });\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.addEventListener('touchend', onTouchEnded, {\n                passive: true\n            });\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.addEventListener('touchcancel', onTouchCancel, {\n                passive: true\n            });\n        } else {\n            // マウス関連コールバック関数登録\n            // 注册鼠标相关回调函数\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.addEventListener('mousedown', onClickBegan, {\n                passive: true\n            });\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.addEventListener('mousemove', onMouseMoved, {\n                passive: true\n            });\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.addEventListener('mouseup', onClickEnded, {\n                passive: true\n            });\n        }\n        // AppViewの初期化\n        this._view.initialize();\n        // Cubism SDKの初期化\n        this.initializeCubism();\n        return true;\n    }\n    /**\n   * Resize canvas and re-initialize view.\n   */ onResize() {\n        this._resizeCanvas();\n        // Ensure view is properly initialized\n        if (this._view) {\n            this._view.initialize();\n            this._view.initializeSprite();\n            // Try to get and center the model\n            const manager = _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_2__.LAppLive2DManager.getInstance();\n            if (manager) {\n                const model = manager.getModel(0);\n                if (model) {\n                    // Keep model centered in canvas\n                    const width = _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.width;\n                    const height = _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.height;\n                    if (width > 0 && height > 0) {\n                        // @ts-ignore\n                        if (model.setPosition) {\n                            // @ts-ignore\n                            model.setPosition(width / 2, height / 2);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n   * 解放する。\n   */ release() {\n        this._textureManager.release();\n        this._textureManager = null;\n        this._view.release();\n        this._view = null;\n        // リソースを解放\n        _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_2__.LAppLive2DManager.releaseInstance();\n        // Cubism SDKの解放\n        _framework_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.dispose();\n    }\n    /**\n   * 実行処理。\n   * 执行处理。\n   */ run() {\n        // メインループ\n        // 主循环\n        const loop = ()=>{\n            // インスタンスの有無の確認\n            // 检查实例是否存在\n            if (s_instance == null) {\n                return;\n            }\n            // 時間更新\n            if (_lappdefine__WEBPACK_IMPORTED_MODULE_1__.ENABLE_LIMITED_FRAME_RATE) {\n                _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.updateTime(false);\n                if (_lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.getDeltaTime() < 1 / _lappdefine__WEBPACK_IMPORTED_MODULE_1__.LIMITED_FRAME_RATE) {\n                    requestAnimationFrame(loop);\n                    return;\n                }\n            }\n            _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.updateTime(true);\n            // 画面の初期化\n            // 屏幕初始化\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.clearColor(0.0, 0.0, 0.0, 1.0);\n            // 深度テストを有効化\n            // 启用深度测试\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.enable(_lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.DEPTH_TEST);\n            // 近くにある物体は、遠くにある物体を覆い隠す\n            // 近距离的物体会遮挡远距离的物体\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.depthFunc(_lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.LEQUAL);\n            // カラーバッファや深度バッファをクリアする\n            // 清除颜色缓冲区和深度缓冲区\n            // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.clear(_lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.DEPTH_BUFFER_BIT);\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.clearDepth(1.0);\n            // 透過設定\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.enable(_lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.BLEND);\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.blendFunc(_lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.SRC_ALPHA, _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.ONE_MINUS_SRC_ALPHA);\n            // 描画更新\n            this._view.render();\n            // ループのために再帰呼び出し\n            // 递归调用以进行循环\n            requestAnimationFrame(loop);\n        };\n        loop();\n    }\n    /**\n   * シェーダーを登録する。\n   * 注册着色器。\n   */ createShader() {\n        // バーテックスシェーダーのコンパイル\n        // 编译顶点着色器\n        const vertexShaderId = _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.createShader(_lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.VERTEX_SHADER);\n        if (vertexShaderId == null) {\n            _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.printMessage('failed to create vertexShader');\n            return null;\n        }\n        const vertexShader = 'precision mediump float;' + 'attribute vec3 position;' + 'attribute vec2 uv;' + 'varying vec2 vuv;' + 'void main(void)' + '{' + '   gl_Position = vec4(position, 1.0);' + '   vuv = uv;' + '}';\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.shaderSource(vertexShaderId, vertexShader);\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.compileShader(vertexShaderId);\n        // フラグメントシェーダのコンパイル\n        const fragmentShaderId = _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.createShader(_lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.FRAGMENT_SHADER);\n        if (fragmentShaderId == null) {\n            _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.printMessage('failed to create fragmentShader');\n            return null;\n        }\n        const fragmentShader = 'precision mediump float;' + 'varying vec2 vuv;' + 'uniform sampler2D texture;' + 'void main(void)' + '{' + '   gl_FragColor = texture2D(texture, vuv);' + '}';\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.shaderSource(fragmentShaderId, fragmentShader);\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.compileShader(fragmentShaderId);\n        // プログラムオブジェクトの作成\n        // 创建程序对象\n        const programId = _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.createProgram();\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.attachShader(programId, vertexShaderId);\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.attachShader(programId, fragmentShaderId);\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.deleteShader(vertexShaderId);\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.deleteShader(fragmentShaderId);\n        // リンク\n        // 链接\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.linkProgram(programId);\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.useProgram(programId);\n        return programId;\n    }\n    /**\n   * View情報を取得する。\n   */ getView() {\n        return this._view;\n    }\n    getTextureManager() {\n        return this._textureManager;\n    }\n    /**\n   * コンストラクタ\n   * 构造函数\n   */ constructor(){\n        this._captured = false;\n        this._mouseX = 0.0;\n        this._mouseY = 0.0;\n        this._isEnd = false;\n        this._cubismOption = new _framework_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.Option();\n        this._view = new _lappview__WEBPACK_IMPORTED_MODULE_5__.LAppView();\n        this._textureManager = new _lapptexturemanager__WEBPACK_IMPORTED_MODULE_4__.LAppTextureManager();\n    }\n    /**\n   * Cubism SDKの初期化\n   */ initializeCubism() {\n        // setup cubism\n        this._cubismOption.logFunction = _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.printMessage;\n        this._cubismOption.loggingLevel = _lappdefine__WEBPACK_IMPORTED_MODULE_1__.CubismLoggingLevel;\n        _framework_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.startUp(this._cubismOption);\n        // initialize cubism\n        _framework_live2dcubismframework__WEBPACK_IMPORTED_MODULE_0__.CubismFramework.initialize();\n        // load model\n        _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_2__.LAppLive2DManager.getInstance();\n        _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.updateTime();\n        this._view.initializeSprite();\n    }\n    /**\n   * Resize the canvas to fill the screen.\n   */ _resizeCanvas() {\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.width = _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.clientWidth * window.devicePixelRatio;\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.height = _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.canvas.clientHeight * window.devicePixelRatio;\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.viewport(0, 0, _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.drawingBufferWidth, _lappglmanager__WEBPACK_IMPORTED_MODULE_6__.gl.drawingBufferHeight);\n    }\n}\n/**\n * クリックしたときに呼ばれる。\n * 当单击时调用。\n */ function onClickBegan(e) {\n    if (!LAppDelegate.getInstance()._view) {\n        _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.printMessage('view notfound');\n        return;\n    }\n    LAppDelegate.getInstance()._captured = true;\n    const posX = e.pageX;\n    const posY = e.pageY;\n    LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\n}\n/**\n * マウスポインタが動いたら呼ばれる。\n */ function onMouseMoved(e) {\n    if (!LAppDelegate.getInstance()._captured) {\n        return;\n    }\n    if (!LAppDelegate.getInstance()._view) {\n        _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.printMessage('view notfound');\n        return;\n    }\n    const rect = e.target.getBoundingClientRect();\n    const posX = e.clientX - rect.left;\n    const posY = e.clientY - rect.top;\n    LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\n}\n/**\n * クリックが終了したら呼ばれる。\n */ function onClickEnded(e) {\n    LAppDelegate.getInstance()._captured = false;\n    if (!LAppDelegate.getInstance()._view) {\n        _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.printMessage('view notfound');\n        return;\n    }\n    const rect = e.target.getBoundingClientRect();\n    const posX = e.clientX - rect.left;\n    const posY = e.clientY - rect.top;\n    LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\n}\n/**\n * タッチしたときに呼ばれる。\n */ function onTouchBegan(e) {\n    if (!LAppDelegate.getInstance()._view) {\n        _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.printMessage('view notfound');\n        return;\n    }\n    LAppDelegate.getInstance()._captured = true;\n    const posX = e.changedTouches[0].pageX;\n    const posY = e.changedTouches[0].pageY;\n    LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\n}\n/**\n * スワイプすると呼ばれる。\n */ function onTouchMoved(e) {\n    if (!LAppDelegate.getInstance()._captured) {\n        return;\n    }\n    if (!LAppDelegate.getInstance()._view) {\n        _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.printMessage('view notfound');\n        return;\n    }\n    const rect = e.target.getBoundingClientRect();\n    const posX = e.changedTouches[0].clientX - rect.left;\n    const posY = e.changedTouches[0].clientY - rect.top;\n    LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\n}\n/**\n * タッチが終了したら呼ばれる。\n */ function onTouchEnded(e) {\n    LAppDelegate.getInstance()._captured = false;\n    if (!LAppDelegate.getInstance()._view) {\n        _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.printMessage('view notfound');\n        return;\n    }\n    const rect = e.target.getBoundingClientRect();\n    const posX = e.changedTouches[0].clientX - rect.left;\n    const posY = e.changedTouches[0].clientY - rect.top;\n    LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\n}\n/**\n * タッチがキャンセルされると呼ばれる。\n */ function onTouchCancel(e) {\n    LAppDelegate.getInstance()._captured = false;\n    if (!LAppDelegate.getInstance()._view) {\n        _lapppal__WEBPACK_IMPORTED_MODULE_3__.LAppPal.printMessage('view notfound');\n        return;\n    }\n    const rect = e.target.getBoundingClientRect();\n    const posX = e.changedTouches[0].clientX - rect.left;\n    const posY = e.changedTouches[0].clientY - rect.top;\n    LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/src/lappdelegate.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/src/lappglmanager.ts":
/*!*************************************!*\
  !*** ./WebSDK/src/lappglmanager.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LAppGlManager: () => (/* binding */ LAppGlManager),\n/* harmony export */   canvas: () => (/* binding */ canvas),\n/* harmony export */   gl: () => (/* binding */ gl),\n/* harmony export */   s_instance: () => (/* binding */ s_instance)\n/* harmony export */ });\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ let canvas = null;\nlet gl = null;\nlet s_instance = null;\n/**\n * Cubism SDKのサンプルで使用するWebGLを管理するクラス\n */ class LAppGlManager {\n    /**\n   * クラスのインスタンス（シングルトン）を返す。\n   * インスタンスが生成されていない場合は内部でインスタンスを生成する。\n   *\n   * @return クラスのインスタンス\n   */ static getInstance() {\n        if (s_instance == null) {\n            s_instance = new LAppGlManager();\n        }\n        return s_instance;\n    }\n    /**\n   * クラスのインスタンス（シングルトン）を解放する。\n   */ static releaseInstance() {\n        if (s_instance != null) {\n            s_instance.release();\n        }\n        s_instance = null;\n    }\n    constructor(){\n        // Use existing canvas instead of creating a new one\n        canvas = document.getElementById('canvas');\n        // canvas = document.createElement(\"canvas\");\n        gl = canvas.getContext(\"webgl2\");\n        if (!gl) {\n            // gl初期化失敗\n            alert(\"Cannot initialize WebGL. This browser does not support.\");\n            gl = null;\n            document.body.innerHTML = \"This browser does not support the <code>&lt;canvas&gt;</code> element.\";\n        }\n    }\n    /**\n   * 解放する。\n   */ release() {}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvc3JjL2xhcHBnbG1hbmFnZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7OztDQUtDLEdBRU0sSUFBSUEsU0FBbUMsS0FBSztBQUM1QyxJQUFJQyxLQUFtQyxLQUFLO0FBQzVDLElBQUlDLGFBQW1DLEtBQUs7QUFDbkQ7O0NBRUMsR0FDTSxNQUFNQztJQUNYOzs7OztHQUtDLEdBQ0QsT0FBY0MsY0FBNkI7UUFDekMsSUFBSUYsY0FBYyxNQUFNO1lBQ3RCQSxhQUFhLElBQUlDO1FBQ25CO1FBRUEsT0FBT0Q7SUFDVDtJQUVBOztHQUVDLEdBQ0QsT0FBY0csa0JBQXdCO1FBQ3BDLElBQUlILGNBQWMsTUFBTTtZQUN0QkEsV0FBV0ksT0FBTztRQUNwQjtRQUVBSixhQUFhO0lBQ2Y7SUFFQSxhQUFjO1FBQ1osb0RBQW9EO1FBQ3BERixTQUFTTyxTQUFTQyxjQUFjLENBQUM7UUFDakMsNkNBQTZDO1FBRTVDUCxLQUFLRCxPQUFPUyxVQUFVLENBQUM7UUFFdkIsSUFBSSxDQUFDUixJQUFJO1lBQ1AsVUFBVTtZQUNWUyxNQUFNO1lBQ05ULEtBQUs7WUFFTE0sU0FBU0ksSUFBSSxDQUFDQyxTQUFTLEdBQ3JCO1FBQ0o7SUFDSDtJQUVBOztHQUVDLEdBQ0QsVUFBdUIsQ0FBQztBQUMxQiIsInNvdXJjZXMiOlsiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9XZWJTREsvc3JjL2xhcHBnbG1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuZXhwb3J0IGxldCBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50IHwgbnVsbCA9IG51bGw7XG5leHBvcnQgbGV0IGdsOiBXZWJHTFJlbmRlcmluZ0NvbnRleHQgfCBudWxsID0gbnVsbDtcbmV4cG9ydCBsZXQgc19pbnN0YW5jZTogTEFwcEdsTWFuYWdlciB8IG51bGwgPSBudWxsO1xuLyoqXG4gKiBDdWJpc20gU0RL44Gu44K144Oz44OX44Or44Gn5L2/55So44GZ44KLV2ViR0zjgpLnrqHnkIbjgZnjgovjgq/jg6njgrlcbiAqL1xuZXhwb3J0IGNsYXNzIExBcHBHbE1hbmFnZXIge1xuICAvKipcbiAgICog44Kv44Op44K544Gu44Kk44Oz44K544K/44Oz44K577yI44K344Oz44Kw44Or44OI44Oz77yJ44KS6L+U44GZ44CCXG4gICAqIOOCpOODs+OCueOCv+ODs+OCueOBjOeUn+aIkOOBleOCjOOBpuOBhOOBquOBhOWgtOWQiOOBr+WGhemDqOOBp+OCpOODs+OCueOCv+ODs+OCueOCkueUn+aIkOOBmeOCi+OAglxuICAgKlxuICAgKiBAcmV0dXJuIOOCr+ODqeOCueOBruOCpOODs+OCueOCv+ODs+OCuVxuICAgKi9cbiAgcHVibGljIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBMQXBwR2xNYW5hZ2VyIHtcbiAgICBpZiAoc19pbnN0YW5jZSA9PSBudWxsKSB7XG4gICAgICBzX2luc3RhbmNlID0gbmV3IExBcHBHbE1hbmFnZXIoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc19pbnN0YW5jZTtcbiAgfVxuXG4gIC8qKlxuICAgKiDjgq/jg6njgrnjga7jgqTjg7Pjgrnjgr/jg7PjgrnvvIjjgrfjg7PjgrDjg6vjg4jjg7PvvInjgpLop6PmlL7jgZnjgovjgIJcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgcmVsZWFzZUluc3RhbmNlKCk6IHZvaWQge1xuICAgIGlmIChzX2luc3RhbmNlICE9IG51bGwpIHtcbiAgICAgIHNfaW5zdGFuY2UucmVsZWFzZSgpO1xuICAgIH1cblxuICAgIHNfaW5zdGFuY2UgPSBudWxsO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgLy8gVXNlIGV4aXN0aW5nIGNhbnZhcyBpbnN0ZWFkIG9mIGNyZWF0aW5nIGEgbmV3IG9uZVxuICAgIGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYW52YXMnKSBhcyBIVE1MQ2FudmFzRWxlbWVudDtcbiAgICAvLyBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuXG4gICAgIGdsID0gY2FudmFzLmdldENvbnRleHQoXCJ3ZWJnbDJcIik7XG5cbiAgICAgaWYgKCFnbCkge1xuICAgICAgIC8vIGds5Yid5pyf5YyW5aSx5pWXXG4gICAgICAgYWxlcnQoXCJDYW5ub3QgaW5pdGlhbGl6ZSBXZWJHTC4gVGhpcyBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQuXCIpO1xuICAgICAgIGdsID0gbnVsbDtcblxuICAgICAgIGRvY3VtZW50LmJvZHkuaW5uZXJIVE1MID1cbiAgICAgICAgIFwiVGhpcyBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgdGhlIDxjb2RlPiZsdDtjYW52YXMmZ3Q7PC9jb2RlPiBlbGVtZW50LlwiO1xuICAgICB9XG4gIH1cblxuICAvKipcbiAgICog6Kej5pS+44GZ44KL44CCXG4gICAqL1xuICBwdWJsaWMgcmVsZWFzZSgpOiB2b2lkIHt9XG59XG4iXSwibmFtZXMiOlsiY2FudmFzIiwiZ2wiLCJzX2luc3RhbmNlIiwiTEFwcEdsTWFuYWdlciIsImdldEluc3RhbmNlIiwicmVsZWFzZUluc3RhbmNlIiwicmVsZWFzZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJnZXRDb250ZXh0IiwiYWxlcnQiLCJib2R5IiwiaW5uZXJIVE1MIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/src/lappglmanager.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/src/lapplive2dmanager.ts":
/*!*****************************************!*\
  !*** ./WebSDK/src/lapplive2dmanager.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LAppLive2DManager: () => (/* binding */ LAppLive2DManager),\n/* harmony export */   s_instance: () => (/* binding */ s_instance)\n/* harmony export */ });\n/* harmony import */ var _framework_math_cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @framework/math/cubismmatrix44 */ \"(ssr)/./WebSDK/Framework/src/math/cubismmatrix44.ts\");\n/* harmony import */ var _framework_type_csmvector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @framework/type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _lappdefine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lappdefine */ \"(ssr)/./WebSDK/src/lappdefine.ts\");\n/* harmony import */ var _lappglmanager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lappglmanager */ \"(ssr)/./WebSDK/src/lappglmanager.ts\");\n/* harmony import */ var _lappmodel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lappmodel */ \"(ssr)/./WebSDK/src/lappmodel.ts\");\n/* harmony import */ var _lapppal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lapppal */ \"(ssr)/./WebSDK/src/lapppal.ts\");\n// @ts-nocheck\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n\n\nlet s_instance = null;\n/**\n * サンプルアプリケーションにおいてCubismModelを管理するクラス\n * モデル生成と破棄、タップイベントの処理、モデル切り替えを行う。\n * \n * 在示例应用程序中管理CubismModel的类\n * 执行模型生成和销毁、触摸事件处理、模型切换。\n */ class LAppLive2DManager {\n    /**\n   * クラスのインスタンス（シングルトン）を返す。\n   * インスタンスが生成されていない場合は内部でインスタンスを生成する。\n   * \n   * 返回类的实例（单例）。\n   * 如果尚未创建实例，则在内部创建实例。\n   *\n   * @return クラスのインスタンス\n   */ static getInstance() {\n        if (s_instance == null) {\n            s_instance = new LAppLive2DManager();\n        }\n        return s_instance;\n    }\n    /**\n   * クラスのインスタンス（シングルトン）を解放する。\n   * \n   * 释放类的实例（单例）。\n   */ static releaseInstance() {\n        if (s_instance != null) {\n            s_instance = void 0;\n        }\n        s_instance = null;\n    }\n    /**\n   * 現在のシーンで保持しているモデルを返す。\n   *\n   * @param no モデルリストのインデックス値\n   * @return モデルのインスタンスを返す。インデックス値が範囲外の場合はNULLを返す。\n   */ getModel(no) {\n        if (no < this._models.getSize()) {\n            return this._models.at(no);\n        }\n        return null;\n    }\n    /**\n   * 現在のシーンで保持しているすべてのモデルを解放する\n   */ releaseAllModel() {\n        for(let i = 0; i < this._models.getSize(); i++){\n            this._models.at(i).release();\n            this._models.set(i, null);\n        }\n        this._models.clear();\n    }\n    /**\n   * 画面をドラッグした時の処理\n   * \n   * 当拖动屏幕时的处理\n   *\n   * @param x 画面のX座標\n   * @param y 画面のY座標\n   */ onDrag(x, y) {\n        for(let i = 0; i < this._models.getSize(); i++){\n            const model = this.getModel(i);\n            if (model) {\n                model.setDragging(x, y);\n            }\n        }\n    }\n    /**\n   * 画面をタップした時の処理\n   *\n   * @param x 画面のX座標\n   * @param y 画面のY座標\n   */ onTap(x, y) {\n        if (_lappdefine__WEBPACK_IMPORTED_MODULE_2__.DebugLogEnable) {\n            _lapppal__WEBPACK_IMPORTED_MODULE_5__.LAppPal.printMessage(`[APP]tap point: {x: ${x.toFixed(2)} y: ${y.toFixed(2)}}`);\n        }\n        for(let i = 0; i < this._models.getSize(); i++){\n            if (this._models.at(i).hitTest(_lappdefine__WEBPACK_IMPORTED_MODULE_2__.HitAreaNameHead, x, y)) {\n                if (_lappdefine__WEBPACK_IMPORTED_MODULE_2__.DebugLogEnable) {\n                    _lapppal__WEBPACK_IMPORTED_MODULE_5__.LAppPal.printMessage(`[APP]hit area: [${_lappdefine__WEBPACK_IMPORTED_MODULE_2__.HitAreaNameHead}]`);\n                }\n                this._models.at(i).setRandomExpression();\n            } else if (this._models.at(i).hitTest(_lappdefine__WEBPACK_IMPORTED_MODULE_2__.HitAreaNameBody, x, y)) {\n                if (_lappdefine__WEBPACK_IMPORTED_MODULE_2__.DebugLogEnable) {\n                    _lapppal__WEBPACK_IMPORTED_MODULE_5__.LAppPal.printMessage(`[APP]hit area: [${_lappdefine__WEBPACK_IMPORTED_MODULE_2__.HitAreaNameBody}]`);\n                }\n                this._models.at(i).startRandomMotion(_lappdefine__WEBPACK_IMPORTED_MODULE_2__.MotionGroupTapBody, _lappdefine__WEBPACK_IMPORTED_MODULE_2__.PriorityNormal, this._finishedMotion);\n            }\n        }\n    }\n    /**\n   * 画面を更新するときの処理\n   * モデルの更新処理及び描画処理を行う\n   */ onUpdate() {\n        const { width, height } = _lappglmanager__WEBPACK_IMPORTED_MODULE_3__.canvas;\n        const modelCount = this._models.getSize();\n        for(let i = 0; i < modelCount; ++i){\n            const projection = new _framework_math_cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__.CubismMatrix44();\n            const model = this.getModel(i);\n            if (model.getModel()) {\n                if (model.getModel().getCanvasWidth() > 1.0 && width < height) {\n                    // 横に長いモデルを縦長ウィンドウに表示する際モデルの横サイズでscaleを算出する\n                    model.getModelMatrix().setWidth(2.0);\n                    projection.scale(1.0, width / height);\n                } else {\n                    projection.scale(height / width, 1.0);\n                }\n                // 必要があればここで乗算\n                if (this._viewMatrix != null) {\n                    projection.multiplyByMatrix(this._viewMatrix);\n                }\n            }\n            model.update();\n            model.draw(projection); // 参照渡しなのでprojectionは変質する。\n        }\n    }\n    /**\n   * 次のシーンに切りかえる\n   * サンプルアプリケーションではモデルセットの切り替えを行う。\n   */ nextScene() {\n        const no = (this._sceneIndex + 1) % _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ModelDirSize;\n        this.changeScene(no);\n    }\n    /**\n   * シーンを切り替える\n   * サンプルアプリケーションではモデルセットの切り替えを行う。\n   */ changeScene(index) {\n        this._sceneIndex = index;\n        if (_lappdefine__WEBPACK_IMPORTED_MODULE_2__.DebugLogEnable) {\n            _lapppal__WEBPACK_IMPORTED_MODULE_5__.LAppPal.printMessage(`[APP]model index: ${this._sceneIndex}`);\n        }\n        // Use the directory name and file name from our configuration\n        const model = _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ModelDir[index];\n        const modelPath = _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ResourcesPath + model + '/';\n        // Use ModelFileNames if available, otherwise fall back to ModelDir\n        let modelJsonName = _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ModelFileNames && _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ModelFileNames[index] ? _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ModelFileNames[index] : _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ModelDir[index];\n        modelJsonName += '.model3.json';\n        if (_lappdefine__WEBPACK_IMPORTED_MODULE_2__.DebugLogEnable) {\n            _lapppal__WEBPACK_IMPORTED_MODULE_5__.LAppPal.printMessage(`[APP]model path: ${modelPath}${modelJsonName}`);\n        }\n        this.releaseAllModel();\n        this._models.pushBack(new _lappmodel__WEBPACK_IMPORTED_MODULE_4__.LAppModel());\n        this._models.at(0).loadAssets(modelPath, modelJsonName);\n    }\n    setViewMatrix(m) {\n        for(let i = 0; i < 16; i++){\n            this._viewMatrix.getArray()[i] = m.getArray()[i];\n        }\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        // モーション再生終了のコールバック関数\n        this._finishedMotion = (self)=>{\n            _lapppal__WEBPACK_IMPORTED_MODULE_5__.LAppPal.printMessage('Motion Finished:');\n            console.log(self);\n        };\n        this._viewMatrix = new _framework_math_cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__.CubismMatrix44();\n        this._models = new _framework_type_csmvector__WEBPACK_IMPORTED_MODULE_1__.csmVector();\n        this._sceneIndex = 0;\n        this.changeScene(this._sceneIndex);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvc3JjL2xhcHBsaXZlMmRtYW5hZ2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsY0FBYztBQUNkOzs7OztDQUtDLEdBRStEO0FBRVY7QUFFWDtBQUNGO0FBQ0Q7QUFDSjtBQUU3QixJQUFJTSxhQUFtRCxLQUFLO0FBRW5FOzs7Ozs7Q0FNQyxHQUNNLE1BQU1DO0lBQ1g7Ozs7Ozs7O0dBUUMsR0FDRCxPQUFjQyxjQUFpQztRQUM3QyxJQUFJRixjQUFjLE1BQU07WUFDdEJBLGFBQWEsSUFBSUM7UUFDbkI7UUFFQSxPQUFPRDtJQUNUO0lBRUE7Ozs7R0FJQyxHQUNELE9BQWNHLGtCQUF3QjtRQUNwQyxJQUFJSCxjQUFjLE1BQU07WUFDdEJBLGFBQWEsS0FBSztRQUNwQjtRQUVBQSxhQUFhO0lBQ2Y7SUFFQTs7Ozs7R0FLQyxHQUNELFNBQWdCSyxFQUFVLEVBQW9CO1FBQzVDLElBQUlBLEtBQUssSUFBSSxDQUFDQyxPQUFPLENBQUNDLE9BQU8sSUFBSTtZQUMvQixPQUFPLElBQUksQ0FBQ0QsT0FBTyxDQUFDRSxFQUFFLENBQUNIO1FBQ3pCO1FBRUEsT0FBTztJQUNUO0lBRUE7O0dBRUMsR0FDRCxrQkFBK0I7UUFDN0IsSUFBSyxJQUFJSyxJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDSixPQUFPLENBQUNDLE9BQU8sSUFBSUcsSUFBSztZQUMvQyxJQUFJLENBQUNKLE9BQU8sQ0FBQ0UsRUFBRSxDQUFDRSxHQUFHQyxPQUFPO1lBQzFCLElBQUksQ0FBQ0wsT0FBTyxDQUFDTSxHQUFHLENBQUNGLEdBQUc7UUFDdEI7UUFFQSxJQUFJLENBQUNKLE9BQU8sQ0FBQ08sS0FBSztJQUNwQjtJQUVBOzs7Ozs7O0dBT0MsR0FDRCxPQUFjRSxDQUFTLEVBQUVDLENBQVMsRUFBUTtRQUN4QyxJQUFLLElBQUlOLElBQUksR0FBR0EsSUFBSSxJQUFJLENBQUNKLE9BQU8sQ0FBQ0MsT0FBTyxJQUFJRyxJQUFLO1lBQy9DLE1BQU1PLFFBQW1CLElBQUksQ0FBQ2IsUUFBUSxDQUFDTTtZQUV2QyxJQUFJTyxPQUFPO2dCQUNUQSxNQUFNQyxXQUFXLENBQUNILEdBQUdDO1lBQ3ZCO1FBQ0Y7SUFDRjtJQUVBOzs7OztHQUtDLEdBQ0QsTUFBYUQsQ0FBUyxFQUFFQyxDQUFTLEVBQVE7UUFDdkMsSUFBSXBCLHVEQUF5QixFQUFFO1lBQzdCRyw2Q0FBT0EsQ0FBQ3NCLFlBQVksQ0FDbEIsQ0FBQyxvQkFBb0IsRUFBRU4sRUFBRU8sT0FBTyxDQUFDLEdBQUcsSUFBSSxFQUFFTixFQUFFTSxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFN0Q7UUFFQSxJQUFLLElBQUlaLElBQUksR0FBR0EsSUFBSSxJQUFJLENBQUNKLE9BQU8sQ0FBQ0MsT0FBTyxJQUFJRyxJQUFLO1lBQy9DLElBQUksSUFBSSxDQUFDSixPQUFPLENBQUNFLEVBQUUsQ0FBQ0UsR0FBR2EsT0FBTyxDQUFDM0Isd0RBQTBCLEVBQUVtQixHQUFHQyxJQUFJO2dCQUNoRSxJQUFJcEIsdURBQXlCLEVBQUU7b0JBQzdCRyw2Q0FBT0EsQ0FBQ3NCLFlBQVksQ0FDbEIsQ0FBQyxnQkFBZ0IsRUFBRXpCLHdEQUEwQixDQUFDLENBQUMsQ0FBQztnQkFFcEQ7Z0JBQ0EsSUFBSSxDQUFDVSxPQUFPLENBQUNFLEVBQUUsQ0FBQ0UsR0FBR2UsbUJBQW1CO1lBQ3hDLE9BQU8sSUFBSSxJQUFJLENBQUNuQixPQUFPLENBQUNFLEVBQUUsQ0FBQ0UsR0FBR2EsT0FBTyxDQUFDM0Isd0RBQTBCLEVBQUVtQixHQUFHQyxJQUFJO2dCQUN2RSxJQUFJcEIsdURBQXlCLEVBQUU7b0JBQzdCRyw2Q0FBT0EsQ0FBQ3NCLFlBQVksQ0FDbEIsQ0FBQyxnQkFBZ0IsRUFBRXpCLHdEQUEwQixDQUFDLENBQUMsQ0FBQztnQkFFcEQ7Z0JBQ0EsSUFBSSxDQUFDVSxPQUFPLENBQ1RFLEVBQUUsQ0FBQ0UsR0FDSGlCLGlCQUFpQixDQUNoQi9CLDJEQUE2QixFQUM3QkEsdURBQXlCLEVBQ3pCLElBQUksQ0FBQ2tDLGVBQWU7WUFFMUI7UUFDRjtJQUNGO0lBRUE7OztHQUdDLEdBQ0QsV0FBd0I7UUFDdEIsTUFBTSxFQUFFRSxLQUFLLEVBQUVDLE1BQU0sRUFBRSxHQUFHcEMsa0RBQU1BO1FBRWhDLE1BQU1xQyxhQUFxQixJQUFJLENBQUM1QixPQUFPLENBQUNDLE9BQU87UUFFL0MsSUFBSyxJQUFJRyxJQUFJLEdBQUdBLElBQUl3QixZQUFZLEVBQUV4QixFQUFHO1lBQ25DLE1BQU15QixhQUE2QixJQUFJekMsMEVBQWNBO1lBQ3JELE1BQU11QixRQUFtQixJQUFJLENBQUNiLFFBQVEsQ0FBQ007WUFFdkMsSUFBSU8sTUFBTWIsUUFBUSxJQUFJO2dCQUNwQixJQUFJYSxNQUFNYixRQUFRLEdBQUdnQyxjQUFjLEtBQUssT0FBT0osUUFBUUMsUUFBUTtvQkFDN0QsMkNBQTJDO29CQUMzQ2hCLE1BQU1vQixjQUFjLEdBQUdDLFFBQVEsQ0FBQztvQkFDaENILFdBQVdJLEtBQUssQ0FBQyxLQUFLUCxRQUFRQztnQkFDaEMsT0FBTztvQkFDTEUsV0FBV0ksS0FBSyxDQUFDTixTQUFTRCxPQUFPO2dCQUNuQztnQkFFQSxjQUFjO2dCQUNkLElBQUksSUFBSSxDQUFDUSxXQUFXLElBQUksTUFBTTtvQkFDNUJMLFdBQVdNLGdCQUFnQixDQUFDLElBQUksQ0FBQ0QsV0FBVztnQkFDOUM7WUFDRjtZQUVBdkIsTUFBTXlCLE1BQU07WUFDWnpCLE1BQU0wQixJQUFJLENBQUNSLGFBQWEsMEJBQTBCO1FBQ3BEO0lBQ0Y7SUFFQTs7O0dBR0MsR0FDRCxZQUF5QjtRQUN2QixNQUFNOUIsS0FBYSxDQUFDLElBQUksQ0FBQ3dDLFdBQVcsR0FBRyxLQUFLakQscURBQXVCO1FBQ25FLElBQUksQ0FBQ21ELFdBQVcsQ0FBQzFDO0lBQ25CO0lBRUE7OztHQUdDLEdBQ0QsWUFBbUIyQyxLQUFhLEVBQVE7UUFDdEMsSUFBSSxDQUFDSCxXQUFXLEdBQUdHO1FBQ25CLElBQUlwRCx1REFBeUIsRUFBRTtZQUM3QkcsNkNBQU9BLENBQUNzQixZQUFZLENBQUMsQ0FBQyxrQkFBa0IsRUFBRSxJQUFJLENBQUN3QixXQUFXLEVBQUU7UUFDOUQ7UUFFQSw4REFBOEQ7UUFDOUQsTUFBTTVCLFFBQWdCckIsaURBQW1CLENBQUNvRCxNQUFNO1FBQ2hELE1BQU1FLFlBQW9CdEQsc0RBQXdCLEdBQUdxQixRQUFRO1FBRTdELG1FQUFtRTtRQUNuRSxJQUFJbUMsZ0JBQXdCeEQsdURBQXlCLElBQ3pCQSx1REFBeUIsQ0FBQ29ELE1BQU0sR0FDaENwRCx1REFBeUIsQ0FBQ29ELE1BQU0sR0FDaENwRCxpREFBbUIsQ0FBQ29ELE1BQU07UUFFdERJLGlCQUFpQjtRQUVqQixJQUFJeEQsdURBQXlCLEVBQUU7WUFDN0JHLDZDQUFPQSxDQUFDc0IsWUFBWSxDQUFDLENBQUMsaUJBQWlCLEVBQUU2QixZQUFZRSxlQUFlO1FBQ3RFO1FBRUEsSUFBSSxDQUFDM0MsZUFBZTtRQUNwQixJQUFJLENBQUNILE9BQU8sQ0FBQ2dELFFBQVEsQ0FBQyxJQUFJeEQsaURBQVNBO1FBQ25DLElBQUksQ0FBQ1EsT0FBTyxDQUFDRSxFQUFFLENBQUMsR0FBRytDLFVBQVUsQ0FBQ0wsV0FBV0U7SUFDM0M7SUFFT0ksY0FBY0MsQ0FBaUIsRUFBRTtRQUN0QyxJQUFLLElBQUkvQyxJQUFJLEdBQUdBLElBQUksSUFBSUEsSUFBSztZQUMzQixJQUFJLENBQUM4QixXQUFXLENBQUNrQixRQUFRLEVBQUUsQ0FBQ2hELEVBQUUsR0FBRytDLEVBQUVDLFFBQVEsRUFBRSxDQUFDaEQsRUFBRTtRQUNsRDtJQUNGO0lBRUE7O0dBRUMsR0FDRCxhQUFjO1FBVWQscUJBQXFCO2FBQ3JCb0Isa0JBQWtCLENBQUM2QjtZQUNqQjVELDZDQUFPQSxDQUFDc0IsWUFBWSxDQUFDO1lBQ3JCdUMsUUFBUUMsR0FBRyxDQUFDRjtRQUNkO1FBYkUsSUFBSSxDQUFDbkIsV0FBVyxHQUFHLElBQUk5QywwRUFBY0E7UUFDckMsSUFBSSxDQUFDWSxPQUFPLEdBQUcsSUFBSVgsZ0VBQVNBO1FBQzVCLElBQUksQ0FBQ2tELFdBQVcsR0FBRztRQUNuQixJQUFJLENBQUNFLFdBQVcsQ0FBQyxJQUFJLENBQUNGLFdBQVc7SUFDbkM7QUFVRiIsInNvdXJjZXMiOlsiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9XZWJTREsvc3JjL2xhcHBsaXZlMmRtYW5hZ2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG4vKipcbiAqIENvcHlyaWdodChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IHRoZSBMaXZlMkQgT3BlbiBTb2Z0d2FyZSBsaWNlbnNlXG4gKiB0aGF0IGNhbiBiZSBmb3VuZCBhdCBodHRwczovL3d3dy5saXZlMmQuY29tL2V1bGEvbGl2ZTJkLW9wZW4tc29mdHdhcmUtbGljZW5zZS1hZ3JlZW1lbnRfZW4uaHRtbC5cbiAqL1xuXG5pbXBvcnQgeyBDdWJpc21NYXRyaXg0NCB9IGZyb20gJ0BmcmFtZXdvcmsvbWF0aC9jdWJpc21tYXRyaXg0NCc7XG5pbXBvcnQgeyBBQ3ViaXNtTW90aW9uIH0gZnJvbSAnQGZyYW1ld29yay9tb3Rpb24vYWN1YmlzbW1vdGlvbic7XG5pbXBvcnQgeyBjc21WZWN0b3IgfSBmcm9tICdAZnJhbWV3b3JrL3R5cGUvY3NtdmVjdG9yJztcblxuaW1wb3J0ICogYXMgTEFwcERlZmluZSBmcm9tICcuL2xhcHBkZWZpbmUnO1xuaW1wb3J0IHsgY2FudmFzIH0gZnJvbSAnLi9sYXBwZ2xtYW5hZ2VyJztcbmltcG9ydCB7IExBcHBNb2RlbCB9IGZyb20gJy4vbGFwcG1vZGVsJztcbmltcG9ydCB7IExBcHBQYWwgfSBmcm9tICcuL2xhcHBwYWwnO1xuXG5leHBvcnQgbGV0IHNfaW5zdGFuY2U6IExBcHBMaXZlMkRNYW5hZ2VyIHwgbnVsbCB8IHVuZGVmaW5lZCA9IG51bGw7XG5cbi8qKlxuICog44K144Oz44OX44Or44Ki44OX44Oq44Kx44O844K344On44Oz44Gr44GK44GE44GmQ3ViaXNtTW9kZWzjgpLnrqHnkIbjgZnjgovjgq/jg6njgrlcbiAqIOODouODh+ODq+eUn+aIkOOBqOegtOajhOOAgeOCv+ODg+ODl+OCpOODmeODs+ODiOOBruWHpueQhuOAgeODouODh+ODq+WIh+OCiuabv+OBiOOCkuihjOOBhuOAglxuICogXG4gKiDlnKjnpLrkvovlupTnlKjnqIvluo/kuK3nrqHnkIZDdWJpc21Nb2RlbOeahOexu1xuICog5omn6KGM5qih5Z6L55Sf5oiQ5ZKM6ZSA5q+B44CB6Kem5pG45LqL5Lu25aSE55CG44CB5qih5Z6L5YiH5o2i44CCXG4gKi9cbmV4cG9ydCBjbGFzcyBMQXBwTGl2ZTJETWFuYWdlciB7XG4gIC8qKlxuICAgKiDjgq/jg6njgrnjga7jgqTjg7Pjgrnjgr/jg7PjgrnvvIjjgrfjg7PjgrDjg6vjg4jjg7PvvInjgpLov5TjgZnjgIJcbiAgICog44Kk44Oz44K544K/44Oz44K544GM55Sf5oiQ44GV44KM44Gm44GE44Gq44GE5aC05ZCI44Gv5YaF6YOo44Gn44Kk44Oz44K544K/44Oz44K544KS55Sf5oiQ44GZ44KL44CCXG4gICAqIFxuICAgKiDov5Tlm57nsbvnmoTlrp7kvovvvIjljZXkvovvvInjgIJcbiAgICog5aaC5p6c5bCa5pyq5Yib5bu65a6e5L6L77yM5YiZ5Zyo5YaF6YOo5Yib5bu65a6e5L6L44CCXG4gICAqXG4gICAqIEByZXR1cm4g44Kv44Op44K544Gu44Kk44Oz44K544K/44Oz44K5XG4gICAqL1xuICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKCk6IExBcHBMaXZlMkRNYW5hZ2VyIHtcbiAgICBpZiAoc19pbnN0YW5jZSA9PSBudWxsKSB7XG4gICAgICBzX2luc3RhbmNlID0gbmV3IExBcHBMaXZlMkRNYW5hZ2VyKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHNfaW5zdGFuY2U7XG4gIH1cblxuICAvKipcbiAgICog44Kv44Op44K544Gu44Kk44Oz44K544K/44Oz44K577yI44K344Oz44Kw44Or44OI44Oz77yJ44KS6Kej5pS+44GZ44KL44CCXG4gICAqIFxuICAgKiDph4rmlL7nsbvnmoTlrp7kvovvvIjljZXkvovvvInjgIJcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgcmVsZWFzZUluc3RhbmNlKCk6IHZvaWQge1xuICAgIGlmIChzX2luc3RhbmNlICE9IG51bGwpIHtcbiAgICAgIHNfaW5zdGFuY2UgPSB2b2lkIDA7XG4gICAgfVxuXG4gICAgc19pbnN0YW5jZSA9IG51bGw7XG4gIH1cblxuICAvKipcbiAgICog54++5Zyo44Gu44K344O844Oz44Gn5L+d5oyB44GX44Gm44GE44KL44Oi44OH44Or44KS6L+U44GZ44CCXG4gICAqXG4gICAqIEBwYXJhbSBubyDjg6Ljg4fjg6vjg6rjgrnjg4jjga7jgqTjg7Pjg4fjg4Pjgq/jgrnlgKRcbiAgICogQHJldHVybiDjg6Ljg4fjg6vjga7jgqTjg7Pjgrnjgr/jg7PjgrnjgpLov5TjgZnjgILjgqTjg7Pjg4fjg4Pjgq/jgrnlgKTjgYznr4Tlm7LlpJbjga7loLTlkIjjga9OVUxM44KS6L+U44GZ44CCXG4gICAqL1xuICBwdWJsaWMgZ2V0TW9kZWwobm86IG51bWJlcik6IExBcHBNb2RlbCB8IG51bGwge1xuICAgIGlmIChubyA8IHRoaXMuX21vZGVscy5nZXRTaXplKCkpIHtcbiAgICAgIHJldHVybiB0aGlzLl9tb2RlbHMuYXQobm8pO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIOePvuWcqOOBruOCt+ODvOODs+OBp+S/neaMgeOBl+OBpuOBhOOCi+OBmeOBueOBpuOBruODouODh+ODq+OCkuino+aUvuOBmeOCi1xuICAgKi9cbiAgcHVibGljIHJlbGVhc2VBbGxNb2RlbCgpOiB2b2lkIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX21vZGVscy5nZXRTaXplKCk7IGkrKykge1xuICAgICAgdGhpcy5fbW9kZWxzLmF0KGkpLnJlbGVhc2UoKTtcbiAgICAgIHRoaXMuX21vZGVscy5zZXQoaSwgbnVsbCk7XG4gICAgfVxuXG4gICAgdGhpcy5fbW9kZWxzLmNsZWFyKCk7XG4gIH1cblxuICAvKipcbiAgICog55S76Z2i44KS44OJ44Op44OD44Kw44GX44Gf5pmC44Gu5Yem55CGXG4gICAqIFxuICAgKiDlvZPmi5bliqjlsY/luZXml7bnmoTlpITnkIZcbiAgICpcbiAgICogQHBhcmFtIHgg55S76Z2i44GuWOW6p+aomVxuICAgKiBAcGFyYW0geSDnlLvpnaLjga5Z5bqn5qiZXG4gICAqL1xuICBwdWJsaWMgb25EcmFnKHg6IG51bWJlciwgeTogbnVtYmVyKTogdm9pZCB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9tb2RlbHMuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgIGNvbnN0IG1vZGVsOiBMQXBwTW9kZWwgPSB0aGlzLmdldE1vZGVsKGkpITtcblxuICAgICAgaWYgKG1vZGVsKSB7XG4gICAgICAgIG1vZGVsLnNldERyYWdnaW5nKHgsIHkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDnlLvpnaLjgpLjgr/jg4Pjg5fjgZfjgZ/mmYLjga7lh6bnkIZcbiAgICpcbiAgICogQHBhcmFtIHgg55S76Z2i44GuWOW6p+aomVxuICAgKiBAcGFyYW0geSDnlLvpnaLjga5Z5bqn5qiZXG4gICAqL1xuICBwdWJsaWMgb25UYXAoeDogbnVtYmVyLCB5OiBudW1iZXIpOiB2b2lkIHtcbiAgICBpZiAoTEFwcERlZmluZS5EZWJ1Z0xvZ0VuYWJsZSkge1xuICAgICAgTEFwcFBhbC5wcmludE1lc3NhZ2UoXG4gICAgICAgIGBbQVBQXXRhcCBwb2ludDoge3g6ICR7eC50b0ZpeGVkKDIpfSB5OiAke3kudG9GaXhlZCgyKX19YFxuICAgICAgKTtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX21vZGVscy5nZXRTaXplKCk7IGkrKykge1xuICAgICAgaWYgKHRoaXMuX21vZGVscy5hdChpKS5oaXRUZXN0KExBcHBEZWZpbmUuSGl0QXJlYU5hbWVIZWFkLCB4LCB5KSkge1xuICAgICAgICBpZiAoTEFwcERlZmluZS5EZWJ1Z0xvZ0VuYWJsZSkge1xuICAgICAgICAgIExBcHBQYWwucHJpbnRNZXNzYWdlKFxuICAgICAgICAgICAgYFtBUFBdaGl0IGFyZWE6IFske0xBcHBEZWZpbmUuSGl0QXJlYU5hbWVIZWFkfV1gXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9tb2RlbHMuYXQoaSkuc2V0UmFuZG9tRXhwcmVzc2lvbigpO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLl9tb2RlbHMuYXQoaSkuaGl0VGVzdChMQXBwRGVmaW5lLkhpdEFyZWFOYW1lQm9keSwgeCwgeSkpIHtcbiAgICAgICAgaWYgKExBcHBEZWZpbmUuRGVidWdMb2dFbmFibGUpIHtcbiAgICAgICAgICBMQXBwUGFsLnByaW50TWVzc2FnZShcbiAgICAgICAgICAgIGBbQVBQXWhpdCBhcmVhOiBbJHtMQXBwRGVmaW5lLkhpdEFyZWFOYW1lQm9keX1dYFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fbW9kZWxzXG4gICAgICAgICAgLmF0KGkpXG4gICAgICAgICAgLnN0YXJ0UmFuZG9tTW90aW9uKFxuICAgICAgICAgICAgTEFwcERlZmluZS5Nb3Rpb25Hcm91cFRhcEJvZHksXG4gICAgICAgICAgICBMQXBwRGVmaW5lLlByaW9yaXR5Tm9ybWFsLFxuICAgICAgICAgICAgdGhpcy5fZmluaXNoZWRNb3Rpb25cbiAgICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDnlLvpnaLjgpLmm7TmlrDjgZnjgovjgajjgY3jga7lh6bnkIZcbiAgICog44Oi44OH44Or44Gu5pu05paw5Yem55CG5Y+K44Gz5o+P55S75Yem55CG44KS6KGM44GGXG4gICAqL1xuICBwdWJsaWMgb25VcGRhdGUoKTogdm9pZCB7XG4gICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0IH0gPSBjYW52YXM7XG5cbiAgICBjb25zdCBtb2RlbENvdW50OiBudW1iZXIgPSB0aGlzLl9tb2RlbHMuZ2V0U2l6ZSgpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtb2RlbENvdW50OyArK2kpIHtcbiAgICAgIGNvbnN0IHByb2plY3Rpb246IEN1YmlzbU1hdHJpeDQ0ID0gbmV3IEN1YmlzbU1hdHJpeDQ0KCk7XG4gICAgICBjb25zdCBtb2RlbDogTEFwcE1vZGVsID0gdGhpcy5nZXRNb2RlbChpKTtcblxuICAgICAgaWYgKG1vZGVsLmdldE1vZGVsKCkpIHtcbiAgICAgICAgaWYgKG1vZGVsLmdldE1vZGVsKCkuZ2V0Q2FudmFzV2lkdGgoKSA+IDEuMCAmJiB3aWR0aCA8IGhlaWdodCkge1xuICAgICAgICAgIC8vIOaoquOBq+mVt+OBhOODouODh+ODq+OCkue4pumVt+OCpuOCo+ODs+ODieOCpuOBq+ihqOekuuOBmeOCi+mam+ODouODh+ODq+OBruaoquOCteOCpOOCuuOBp3NjYWxl44KS566X5Ye644GZ44KLXG4gICAgICAgICAgbW9kZWwuZ2V0TW9kZWxNYXRyaXgoKS5zZXRXaWR0aCgyLjApO1xuICAgICAgICAgIHByb2plY3Rpb24uc2NhbGUoMS4wLCB3aWR0aCAvIGhlaWdodCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJvamVjdGlvbi5zY2FsZShoZWlnaHQgLyB3aWR0aCwgMS4wKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOW/heimgeOBjOOBguOCjOOBsOOBk+OBk+OBp+S5l+eul1xuICAgICAgICBpZiAodGhpcy5fdmlld01hdHJpeCAhPSBudWxsKSB7XG4gICAgICAgICAgcHJvamVjdGlvbi5tdWx0aXBseUJ5TWF0cml4KHRoaXMuX3ZpZXdNYXRyaXgpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1vZGVsLnVwZGF0ZSgpO1xuICAgICAgbW9kZWwuZHJhdyhwcm9qZWN0aW9uKTsgLy8g5Y+C54Wn5rih44GX44Gq44Gu44GncHJvamVjdGlvbuOBr+WkieizquOBmeOCi+OAglxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDmrKHjga7jgrfjg7zjg7PjgavliIfjgorjgYvjgYjjgotcbiAgICog44K144Oz44OX44Or44Ki44OX44Oq44Kx44O844K344On44Oz44Gn44Gv44Oi44OH44Or44K744OD44OI44Gu5YiH44KK5pu/44GI44KS6KGM44GG44CCXG4gICAqL1xuICBwdWJsaWMgbmV4dFNjZW5lKCk6IHZvaWQge1xuICAgIGNvbnN0IG5vOiBudW1iZXIgPSAodGhpcy5fc2NlbmVJbmRleCArIDEpICUgTEFwcERlZmluZS5Nb2RlbERpclNpemU7XG4gICAgdGhpcy5jaGFuZ2VTY2VuZShubyk7XG4gIH1cblxuICAvKipcbiAgICog44K344O844Oz44KS5YiH44KK5pu/44GI44KLXG4gICAqIOOCteODs+ODl+ODq+OCouODl+ODquOCseODvOOCt+ODp+ODs+OBp+OBr+ODouODh+ODq+OCu+ODg+ODiOOBruWIh+OCiuabv+OBiOOCkuihjOOBhuOAglxuICAgKi9cbiAgcHVibGljIGNoYW5nZVNjZW5lKGluZGV4OiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLl9zY2VuZUluZGV4ID0gaW5kZXg7XG4gICAgaWYgKExBcHBEZWZpbmUuRGVidWdMb2dFbmFibGUpIHtcbiAgICAgIExBcHBQYWwucHJpbnRNZXNzYWdlKGBbQVBQXW1vZGVsIGluZGV4OiAke3RoaXMuX3NjZW5lSW5kZXh9YCk7XG4gICAgfVxuXG4gICAgLy8gVXNlIHRoZSBkaXJlY3RvcnkgbmFtZSBhbmQgZmlsZSBuYW1lIGZyb20gb3VyIGNvbmZpZ3VyYXRpb25cbiAgICBjb25zdCBtb2RlbDogc3RyaW5nID0gTEFwcERlZmluZS5Nb2RlbERpcltpbmRleF07XG4gICAgY29uc3QgbW9kZWxQYXRoOiBzdHJpbmcgPSBMQXBwRGVmaW5lLlJlc291cmNlc1BhdGggKyBtb2RlbCArICcvJztcbiAgICBcbiAgICAvLyBVc2UgTW9kZWxGaWxlTmFtZXMgaWYgYXZhaWxhYmxlLCBvdGhlcndpc2UgZmFsbCBiYWNrIHRvIE1vZGVsRGlyXG4gICAgbGV0IG1vZGVsSnNvbk5hbWU6IHN0cmluZyA9IExBcHBEZWZpbmUuTW9kZWxGaWxlTmFtZXMgJiYgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExBcHBEZWZpbmUuTW9kZWxGaWxlTmFtZXNbaW5kZXhdID8gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExBcHBEZWZpbmUuTW9kZWxGaWxlTmFtZXNbaW5kZXhdIDogXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExBcHBEZWZpbmUuTW9kZWxEaXJbaW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICBtb2RlbEpzb25OYW1lICs9ICcubW9kZWwzLmpzb24nO1xuXG4gICAgaWYgKExBcHBEZWZpbmUuRGVidWdMb2dFbmFibGUpIHtcbiAgICAgIExBcHBQYWwucHJpbnRNZXNzYWdlKGBbQVBQXW1vZGVsIHBhdGg6ICR7bW9kZWxQYXRofSR7bW9kZWxKc29uTmFtZX1gKTtcbiAgICB9XG5cbiAgICB0aGlzLnJlbGVhc2VBbGxNb2RlbCgpO1xuICAgIHRoaXMuX21vZGVscy5wdXNoQmFjayhuZXcgTEFwcE1vZGVsKCkpO1xuICAgIHRoaXMuX21vZGVscy5hdCgwKS5sb2FkQXNzZXRzKG1vZGVsUGF0aCwgbW9kZWxKc29uTmFtZSk7XG4gIH1cblxuICBwdWJsaWMgc2V0Vmlld01hdHJpeChtOiBDdWJpc21NYXRyaXg0NCkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7IGkrKykge1xuICAgICAgdGhpcy5fdmlld01hdHJpeC5nZXRBcnJheSgpW2ldID0gbS5nZXRBcnJheSgpW2ldO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICovXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuX3ZpZXdNYXRyaXggPSBuZXcgQ3ViaXNtTWF0cml4NDQoKTtcbiAgICB0aGlzLl9tb2RlbHMgPSBuZXcgY3NtVmVjdG9yPExBcHBNb2RlbD4oKTtcbiAgICB0aGlzLl9zY2VuZUluZGV4ID0gMDtcbiAgICB0aGlzLmNoYW5nZVNjZW5lKHRoaXMuX3NjZW5lSW5kZXgpO1xuICB9XG5cbiAgX3ZpZXdNYXRyaXg6IEN1YmlzbU1hdHJpeDQ0OyAvLyDjg6Ljg4fjg6vmj4/nlLvjgavnlKjjgYTjgot2aWV36KGM5YiXXG4gIF9tb2RlbHM6IGNzbVZlY3RvcjxMQXBwTW9kZWw+OyAvLyDjg6Ljg4fjg6vjgqTjg7Pjgrnjgr/jg7Pjgrnjga7jgrPjg7Pjg4bjg4pcbiAgX3NjZW5lSW5kZXg6IG51bWJlcjsgLy8g6KGo56S644GZ44KL44K344O844Oz44Gu44Kk44Oz44OH44OD44Kv44K55YCkXG4gIC8vIOODouODvOOCt+ODp+ODs+WGjeeUn+e1guS6huOBruOCs+ODvOODq+ODkOODg+OCr+mWouaVsFxuICBfZmluaXNoZWRNb3Rpb24gPSAoc2VsZjogQUN1YmlzbU1vdGlvbik6IHZvaWQgPT4ge1xuICAgIExBcHBQYWwucHJpbnRNZXNzYWdlKCdNb3Rpb24gRmluaXNoZWQ6Jyk7XG4gICAgY29uc29sZS5sb2coc2VsZik7XG4gIH07XG59XG4iXSwibmFtZXMiOlsiQ3ViaXNtTWF0cml4NDQiLCJjc21WZWN0b3IiLCJMQXBwRGVmaW5lIiwiY2FudmFzIiwiTEFwcE1vZGVsIiwiTEFwcFBhbCIsInNfaW5zdGFuY2UiLCJMQXBwTGl2ZTJETWFuYWdlciIsImdldEluc3RhbmNlIiwicmVsZWFzZUluc3RhbmNlIiwiZ2V0TW9kZWwiLCJubyIsIl9tb2RlbHMiLCJnZXRTaXplIiwiYXQiLCJyZWxlYXNlQWxsTW9kZWwiLCJpIiwicmVsZWFzZSIsInNldCIsImNsZWFyIiwib25EcmFnIiwieCIsInkiLCJtb2RlbCIsInNldERyYWdnaW5nIiwib25UYXAiLCJEZWJ1Z0xvZ0VuYWJsZSIsInByaW50TWVzc2FnZSIsInRvRml4ZWQiLCJoaXRUZXN0IiwiSGl0QXJlYU5hbWVIZWFkIiwic2V0UmFuZG9tRXhwcmVzc2lvbiIsIkhpdEFyZWFOYW1lQm9keSIsInN0YXJ0UmFuZG9tTW90aW9uIiwiTW90aW9uR3JvdXBUYXBCb2R5IiwiUHJpb3JpdHlOb3JtYWwiLCJfZmluaXNoZWRNb3Rpb24iLCJvblVwZGF0ZSIsIndpZHRoIiwiaGVpZ2h0IiwibW9kZWxDb3VudCIsInByb2plY3Rpb24iLCJnZXRDYW52YXNXaWR0aCIsImdldE1vZGVsTWF0cml4Iiwic2V0V2lkdGgiLCJzY2FsZSIsIl92aWV3TWF0cml4IiwibXVsdGlwbHlCeU1hdHJpeCIsInVwZGF0ZSIsImRyYXciLCJuZXh0U2NlbmUiLCJfc2NlbmVJbmRleCIsIk1vZGVsRGlyU2l6ZSIsImNoYW5nZVNjZW5lIiwiaW5kZXgiLCJNb2RlbERpciIsIm1vZGVsUGF0aCIsIlJlc291cmNlc1BhdGgiLCJtb2RlbEpzb25OYW1lIiwiTW9kZWxGaWxlTmFtZXMiLCJwdXNoQmFjayIsImxvYWRBc3NldHMiLCJzZXRWaWV3TWF0cml4IiwibSIsImdldEFycmF5Iiwic2VsZiIsImNvbnNvbGUiLCJsb2ciXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/src/lapplive2dmanager.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/src/lappmodel.ts":
/*!*********************************!*\
  !*** ./WebSDK/src/lappmodel.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LAppModel: () => (/* binding */ LAppModel)\n/* harmony export */ });\n/* harmony import */ var _framework_cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @framework/cubismdefaultparameterid */ \"(ssr)/./WebSDK/Framework/src/cubismdefaultparameterid.ts\");\n/* harmony import */ var _framework_cubismmodelsettingjson__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @framework/cubismmodelsettingjson */ \"(ssr)/./WebSDK/Framework/src/cubismmodelsettingjson.ts\");\n/* harmony import */ var _framework_effect_cubismbreath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @framework/effect/cubismbreath */ \"(ssr)/./WebSDK/Framework/src/effect/cubismbreath.ts\");\n/* harmony import */ var _framework_effect_cubismeyeblink__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @framework/effect/cubismeyeblink */ \"(ssr)/./WebSDK/Framework/src/effect/cubismeyeblink.ts\");\n/* harmony import */ var _framework_live2dcubismframework__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @framework/live2dcubismframework */ \"(ssr)/./WebSDK/Framework/src/live2dcubismframework.ts\");\n/* harmony import */ var _framework_model_cubismusermodel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @framework/model/cubismusermodel */ \"(ssr)/./WebSDK/Framework/src/model/cubismusermodel.ts\");\n/* harmony import */ var _framework_motion_acubismmotion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @framework/motion/acubismmotion */ \"(ssr)/./WebSDK/Framework/src/motion/acubismmotion.ts\");\n/* harmony import */ var _framework_motion_cubismmotionqueuemanager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @framework/motion/cubismmotionqueuemanager */ \"(ssr)/./WebSDK/Framework/src/motion/cubismmotionqueuemanager.ts\");\n/* harmony import */ var _framework_type_csmmap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @framework/type/csmmap */ \"(ssr)/./WebSDK/Framework/src/type/csmmap.ts\");\n/* harmony import */ var _framework_type_csmvector__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @framework/type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @framework/utils/cubismdebug */ \"(ssr)/./WebSDK/Framework/src/utils/cubismdebug.ts\");\n/* harmony import */ var _lappdefine__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./lappdefine */ \"(ssr)/./WebSDK/src/lappdefine.ts\");\n/* harmony import */ var _lappdelegate__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./lappdelegate */ \"(ssr)/./WebSDK/src/lappdelegate.ts\");\n/* harmony import */ var _lappglmanager__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./lappglmanager */ \"(ssr)/./WebSDK/src/lappglmanager.ts\");\n/* harmony import */ var _lapppal__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./lapppal */ \"(ssr)/./WebSDK/src/lapppal.ts\");\n/* harmony import */ var _lappwavfilehandler__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./lappwavfilehandler */ \"(ssr)/./WebSDK/src/lappwavfilehandler.ts\");\n/* harmony import */ var _framework_model_cubismmoc__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @framework/model/cubismmoc */ \"(ssr)/./WebSDK/Framework/src/model/cubismmoc.ts\");\n// @ts-nocheck\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar LoadStep = /*#__PURE__*/ function(LoadStep) {\n    LoadStep[LoadStep[\"LoadAssets\"] = 0] = \"LoadAssets\";\n    LoadStep[LoadStep[\"LoadModel\"] = 1] = \"LoadModel\";\n    LoadStep[LoadStep[\"WaitLoadModel\"] = 2] = \"WaitLoadModel\";\n    LoadStep[LoadStep[\"LoadExpression\"] = 3] = \"LoadExpression\";\n    LoadStep[LoadStep[\"WaitLoadExpression\"] = 4] = \"WaitLoadExpression\";\n    LoadStep[LoadStep[\"LoadPhysics\"] = 5] = \"LoadPhysics\";\n    LoadStep[LoadStep[\"WaitLoadPhysics\"] = 6] = \"WaitLoadPhysics\";\n    LoadStep[LoadStep[\"LoadPose\"] = 7] = \"LoadPose\";\n    LoadStep[LoadStep[\"WaitLoadPose\"] = 8] = \"WaitLoadPose\";\n    LoadStep[LoadStep[\"SetupEyeBlink\"] = 9] = \"SetupEyeBlink\";\n    LoadStep[LoadStep[\"SetupBreath\"] = 10] = \"SetupBreath\";\n    LoadStep[LoadStep[\"LoadUserData\"] = 11] = \"LoadUserData\";\n    LoadStep[LoadStep[\"WaitLoadUserData\"] = 12] = \"WaitLoadUserData\";\n    LoadStep[LoadStep[\"SetupEyeBlinkIds\"] = 13] = \"SetupEyeBlinkIds\";\n    LoadStep[LoadStep[\"SetupLipSyncIds\"] = 14] = \"SetupLipSyncIds\";\n    LoadStep[LoadStep[\"SetupLayout\"] = 15] = \"SetupLayout\";\n    LoadStep[LoadStep[\"LoadMotion\"] = 16] = \"LoadMotion\";\n    LoadStep[LoadStep[\"WaitLoadMotion\"] = 17] = \"WaitLoadMotion\";\n    LoadStep[LoadStep[\"CompleteInitialize\"] = 18] = \"CompleteInitialize\";\n    LoadStep[LoadStep[\"CompleteSetupModel\"] = 19] = \"CompleteSetupModel\";\n    LoadStep[LoadStep[\"LoadTexture\"] = 20] = \"LoadTexture\";\n    LoadStep[LoadStep[\"WaitLoadTexture\"] = 21] = \"WaitLoadTexture\";\n    LoadStep[LoadStep[\"CompleteSetup\"] = 22] = \"CompleteSetup\";\n    return LoadStep;\n}(LoadStep || {});\n/**\n * ユーザーが実際に使用するモデルの実装クラス<br>\n * モデル生成、機能コンポーネント生成、更新処理とレンダリングの呼び出しを行う。\n */ class LAppModel extends _framework_model_cubismusermodel__WEBPACK_IMPORTED_MODULE_5__.CubismUserModel {\n    /**\n   * model3.jsonが置かれたディレクトリとファイルパスからモデルを生成する\n   * @param dir\n   * @param fileName\n   */ loadAssets(dir, fileName) {\n        this._modelHomeDir = dir;\n        fetch(`${this._modelHomeDir}${fileName}`).then((response)=>response.arrayBuffer()).then((arrayBuffer)=>{\n            const setting = new _framework_cubismmodelsettingjson__WEBPACK_IMPORTED_MODULE_1__.CubismModelSettingJson(arrayBuffer, arrayBuffer.byteLength);\n            // ステートを更新\n            this._state = 1;\n            // 結果を保存\n            this.setupModel(setting);\n        }).catch((error)=>{\n            // model3.json読み込みでエラーが発生した時点で描画は不可能なので、setupせずエラーをcatchして何もしない\n            (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CubismLogError)(`Failed to load file ${this._modelHomeDir}${fileName}`);\n        });\n    }\n    /**\n   * model3.jsonからモデルを生成する。\n   * model3.jsonの記述に従ってモデル生成、モーション、物理演算などのコンポーネント生成を行う。\n   *\n   * @param setting ICubismModelSettingのインスタンス\n   */ setupModel(setting) {\n        this._updating = true;\n        this._initialized = false;\n        this._modelSetting = setting;\n        // Log hit areas information\n        const hitAreasCount = this._modelSetting.getHitAreasCount();\n        console.log(`Model has ${hitAreasCount} hit areas`);\n        // CubismModel\n        if (this._modelSetting.getModelFileName() != \"\") {\n            const modelFileName = this._modelSetting.getModelFileName();\n            fetch(`${this._modelHomeDir}${modelFileName}`).then((response)=>{\n                if (response.ok) {\n                    return response.arrayBuffer();\n                } else if (response.status >= 400) {\n                    (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CubismLogError)(`Failed to load file ${this._modelHomeDir}${modelFileName}`);\n                    return new ArrayBuffer(0);\n                }\n            }).then((arrayBuffer)=>{\n                this.loadModel(arrayBuffer, this._mocConsistency, _lappdefine__WEBPACK_IMPORTED_MODULE_11__.CurrentKScale);\n                this._state = 3;\n                // callback\n                loadCubismExpression();\n            });\n            this._state = 2;\n        } else {\n            _lapppal__WEBPACK_IMPORTED_MODULE_14__.LAppPal.printMessage(\"Model data does not exist.\");\n        }\n        // Expression\n        const loadCubismExpression = ()=>{\n            if (this._modelSetting.getExpressionCount() > 0) {\n                const count = this._modelSetting.getExpressionCount();\n                for(let i = 0; i < count; i++){\n                    const expressionName = this._modelSetting.getExpressionName(i);\n                    const expressionFileName = this._modelSetting.getExpressionFileName(i);\n                    fetch(`${this._modelHomeDir}${expressionFileName}`).then((response)=>{\n                        if (response.ok) {\n                            return response.arrayBuffer();\n                        } else if (response.status >= 400) {\n                            (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CubismLogError)(`Failed to load file ${this._modelHomeDir}${expressionFileName}`);\n                            // ファイルが存在しなくてもresponseはnullを返却しないため、空のArrayBufferで対応する\n                            return new ArrayBuffer(0);\n                        }\n                    }).then((arrayBuffer)=>{\n                        const motion = this.loadExpression(arrayBuffer, arrayBuffer.byteLength, expressionName);\n                        if (this._expressions.getValue(expressionName) != null) {\n                            _framework_motion_acubismmotion__WEBPACK_IMPORTED_MODULE_6__.ACubismMotion.delete(this._expressions.getValue(expressionName));\n                            this._expressions.setValue(expressionName, null);\n                        }\n                        this._expressions.setValue(expressionName, motion);\n                        this._expressionCount++;\n                        if (this._expressionCount >= count) {\n                            this._state = 5;\n                            // callback\n                            loadCubismPhysics();\n                        }\n                    });\n                }\n                this._state = 4;\n            } else {\n                this._state = 5;\n                // callback\n                loadCubismPhysics();\n            }\n        };\n        // Physics\n        const loadCubismPhysics = ()=>{\n            if (this._modelSetting.getPhysicsFileName() != \"\") {\n                const physicsFileName = this._modelSetting.getPhysicsFileName();\n                fetch(`${this._modelHomeDir}${physicsFileName}`).then((response)=>{\n                    if (response.ok) {\n                        return response.arrayBuffer();\n                    } else if (response.status >= 400) {\n                        (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CubismLogError)(`Failed to load file ${this._modelHomeDir}${physicsFileName}`);\n                        return new ArrayBuffer(0);\n                    }\n                }).then((arrayBuffer)=>{\n                    this.loadPhysics(arrayBuffer, arrayBuffer.byteLength);\n                    this._state = 7;\n                    // callback\n                    loadCubismPose();\n                });\n                this._state = 6;\n            } else {\n                this._state = 7;\n                // callback\n                loadCubismPose();\n            }\n        };\n        // Pose\n        const loadCubismPose = ()=>{\n            if (this._modelSetting.getPoseFileName() != \"\") {\n                const poseFileName = this._modelSetting.getPoseFileName();\n                fetch(`${this._modelHomeDir}${poseFileName}`).then((response)=>{\n                    if (response.ok) {\n                        return response.arrayBuffer();\n                    } else if (response.status >= 400) {\n                        (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CubismLogError)(`Failed to load file ${this._modelHomeDir}${poseFileName}`);\n                        return new ArrayBuffer(0);\n                    }\n                }).then((arrayBuffer)=>{\n                    this.loadPose(arrayBuffer, arrayBuffer.byteLength);\n                    this._state = 9;\n                    // callback\n                    setupEyeBlink();\n                });\n                this._state = 8;\n            } else {\n                this._state = 9;\n                // callback\n                setupEyeBlink();\n            }\n        };\n        // EyeBlink\n        const setupEyeBlink = ()=>{\n            if (this._modelSetting.getEyeBlinkParameterCount() > 0) {\n                this._eyeBlink = _framework_effect_cubismeyeblink__WEBPACK_IMPORTED_MODULE_3__.CubismEyeBlink.create(this._modelSetting);\n                this._state = 10;\n            }\n            // callback\n            setupBreath();\n        };\n        // Breath\n        const setupBreath = ()=>{\n            this._breath = _framework_effect_cubismbreath__WEBPACK_IMPORTED_MODULE_2__.CubismBreath.create();\n            const breathParameters = new _framework_type_csmvector__WEBPACK_IMPORTED_MODULE_9__.csmVector();\n            breathParameters.pushBack(new _framework_effect_cubismbreath__WEBPACK_IMPORTED_MODULE_2__.BreathParameterData(this._idParamAngleX, 0.0, 15.0, 6.5345, 0.5));\n            breathParameters.pushBack(new _framework_effect_cubismbreath__WEBPACK_IMPORTED_MODULE_2__.BreathParameterData(this._idParamAngleY, 0.0, 8.0, 3.5345, 0.5));\n            breathParameters.pushBack(new _framework_effect_cubismbreath__WEBPACK_IMPORTED_MODULE_2__.BreathParameterData(this._idParamAngleZ, 0.0, 10.0, 5.5345, 0.5));\n            breathParameters.pushBack(new _framework_effect_cubismbreath__WEBPACK_IMPORTED_MODULE_2__.BreathParameterData(this._idParamBodyAngleX, 0.0, 4.0, 15.5345, 0.5));\n            // Add null check for CubismFramework.getIdManager()\n            const idManager = _framework_live2dcubismframework__WEBPACK_IMPORTED_MODULE_4__.CubismFramework.getIdManager();\n            if (idManager) {\n                const breathParameterId = idManager.getId(_framework_cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBreath);\n                if (breathParameterId) {\n                    breathParameters.pushBack(new _framework_effect_cubismbreath__WEBPACK_IMPORTED_MODULE_2__.BreathParameterData(breathParameterId, 0.5, 0.5, 3.2345, 1));\n                }\n            }\n            this._breath.setParameters(breathParameters);\n            this._state = 11;\n            // callback\n            loadUserData();\n        };\n        // UserData\n        const loadUserData = ()=>{\n            if (this._modelSetting.getUserDataFile() != \"\") {\n                const userDataFile = this._modelSetting.getUserDataFile();\n                fetch(`${this._modelHomeDir}${userDataFile}`).then((response)=>{\n                    if (response.ok) {\n                        return response.arrayBuffer();\n                    } else if (response.status >= 400) {\n                        (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CubismLogError)(`Failed to load file ${this._modelHomeDir}${userDataFile}`);\n                        return new ArrayBuffer(0);\n                    }\n                }).then((arrayBuffer)=>{\n                    this.loadUserData(arrayBuffer, arrayBuffer.byteLength);\n                    this._state = 13;\n                    // callback\n                    setupEyeBlinkIds();\n                });\n                this._state = 12;\n            } else {\n                this._state = 13;\n                // callback\n                setupEyeBlinkIds();\n            }\n        };\n        // EyeBlinkIds\n        const setupEyeBlinkIds = ()=>{\n            const eyeBlinkIdCount = this._modelSetting.getEyeBlinkParameterCount();\n            for(let i = 0; i < eyeBlinkIdCount; ++i){\n                this._eyeBlinkIds.pushBack(this._modelSetting.getEyeBlinkParameterId(i));\n            }\n            this._state = 14;\n            // callback\n            setupLipSyncIds();\n        };\n        // LipSyncIds\n        const setupLipSyncIds = ()=>{\n            const lipSyncIdCount = this._modelSetting.getLipSyncParameterCount();\n            for(let i = 0; i < lipSyncIdCount; ++i){\n                this._lipSyncIds.pushBack(this._modelSetting.getLipSyncParameterId(i));\n            }\n            // Fallback if no LipSync IDs are defined in the model setting\n            if (this._lipSyncIds.getSize() === 0) {\n                console.warn('[Fallback] No LipSync IDs defined in model setting. Attempting fallback to \"ParamMouthOpenY\".');\n                const idManager = _framework_live2dcubismframework__WEBPACK_IMPORTED_MODULE_4__.CubismFramework.getIdManager();\n                if (idManager) {\n                    const fallbackId = idManager.getId(_framework_cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamMouthOpenY);\n                    // Check if the model actually has this parameter before adding it\n                    if (this._model && fallbackId && this._model.getParameterIndex(fallbackId) !== -1) {\n                        this._lipSyncIds.pushBack(fallbackId);\n                        console.log('[Fallback] Successfully added \"ParamMouthOpenY\" as LipSync ID.');\n                    } else {\n                        console.warn('[Fallback] Fallback ID \"ParamMouthOpenY\" not found in the current model or model not loaded.');\n                    }\n                } else {\n                    console.warn('[Fallback] Could not access IdManager. LipSync fallback unavailable.');\n                }\n            }\n            this._state = 15;\n            // callback\n            setupLayout();\n        };\n        // Layout\n        const setupLayout = ()=>{\n            const layout = new _framework_type_csmmap__WEBPACK_IMPORTED_MODULE_8__.csmMap();\n            if (this._modelSetting == null || this._modelMatrix == null) {\n                (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CubismLogError)(\"Failed to setupLayout().\");\n                return;\n            }\n            this._modelSetting.getLayoutMap(layout);\n            this._modelMatrix.setupFromLayout(layout);\n            this._state = 16;\n            // callback\n            loadCubismMotion();\n        };\n        // Motion\n        const loadCubismMotion = ()=>{\n            this._state = 17;\n            this._model.saveParameters();\n            this._allMotionCount = 0;\n            this._motionCount = 0;\n            const group = [];\n            const motionGroupCount = this._modelSetting.getMotionGroupCount();\n            // モーションの総数を求める\n            for(let i = 0; i < motionGroupCount; i++){\n                group[i] = this._modelSetting.getMotionGroupName(i);\n                this._allMotionCount += this._modelSetting.getMotionCount(group[i]);\n            }\n            // Check if there are no actual motions to load, even if groups exist\n            if (this._allMotionCount == 0) {\n                this._state = 20;\n                // 全てのモーションを停止する\n                this._motionManager.stopAllMotions();\n                this._updating = false;\n                this._initialized = true;\n                this.createRenderer();\n                this.setupTextures();\n                this.getRenderer().startUp(_lappglmanager__WEBPACK_IMPORTED_MODULE_13__.gl);\n                return;\n            }\n            // モーションの読み込み\n            for(let i = 0; i < motionGroupCount; i++){\n                this.preLoadMotionGroup(group[i]);\n            }\n            // モーションがない場合 (Original check, now might be redundant but kept for safety)\n            if (motionGroupCount == 0) {\n                this._state = 20;\n                // 全てのモーションを停止する\n                this._motionManager.stopAllMotions();\n                this._updating = false;\n                this._initialized = true;\n                this.createRenderer();\n                this.setupTextures();\n                this.getRenderer().startUp(_lappglmanager__WEBPACK_IMPORTED_MODULE_13__.gl);\n            }\n        };\n    }\n    /**\n   * テクスチャのセットアップ\n   */ setupTextures() {\n        console.log('Setting up textures for model:', this._modelHomeDir);\n        // iPhoneでのアルファ品質向上のためTypescriptではpremultipliedAlphaを採用 (Reverted to likely original)\n        const usePremultiply = true;\n        if (this._state == 20) {\n            // テクスチャ読み込み用\n            const textureCount = this._modelSetting.getTextureCount();\n            for(let modelTextureNumber = 0; modelTextureNumber < textureCount; modelTextureNumber++){\n                // テクスチャ名が空文字だった場合はロード・バインド処理をスキップ\n                if (this._modelSetting.getTextureFileName(modelTextureNumber) == \"\") {\n                    console.log(\"getTextureFileName null\");\n                    continue;\n                }\n                // WebGLのテクスチャユニットにテクスチャをロードする\n                let texturePath = this._modelSetting.getTextureFileName(modelTextureNumber);\n                texturePath = this._modelHomeDir + texturePath;\n                // ロード完了時に呼び出すコールバック関数\n                const onLoad = (textureInfo)=>{\n                    this.getRenderer().bindTexture(modelTextureNumber, textureInfo.id);\n                    this._textureCount++;\n                    if (this._textureCount >= textureCount) {\n                        // ロード完了\n                        this._state = 22;\n                    }\n                };\n                // 読み込み\n                _lappdelegate__WEBPACK_IMPORTED_MODULE_12__.LAppDelegate.getInstance().getTextureManager().createTextureFromPngFile(texturePath, usePremultiply, onLoad);\n                this.getRenderer().setIsPremultipliedAlpha(usePremultiply);\n            }\n            this._state = 21;\n        }\n    }\n    /**\n   * レンダラを再構築する\n   */ reloadRenderer() {\n        this.deleteRenderer();\n        this.createRenderer();\n        this.setupTextures();\n    }\n    /**\n   * 更新\n   */ update() {\n        if (this._state != 22) return;\n        const deltaTimeSeconds = _lapppal__WEBPACK_IMPORTED_MODULE_14__.LAppPal.getDeltaTime();\n        this._userTimeSeconds += deltaTimeSeconds;\n        this._dragManager.update(deltaTimeSeconds);\n        this._dragX = this._dragManager.getX();\n        this._dragY = this._dragManager.getY();\n        // モーションによるパラメータ更新の有無\n        let motionUpdated = false;\n        //--------------------------------------------------------------------------\n        this._model.loadParameters(); // 前回セーブされた状態をロード\n        if (this._motionManager.isFinished()) {\n            // モーションの再生がない場合、待機モーションの中からランダムで再生する\n            this.startRandomMotion(_lappdefine__WEBPACK_IMPORTED_MODULE_11__.MotionGroupIdle, _lappdefine__WEBPACK_IMPORTED_MODULE_11__.PriorityIdle);\n        } else {\n            motionUpdated = this._motionManager.updateMotion(this._model, deltaTimeSeconds); // モーションを更新\n        }\n        this._model.saveParameters(); // 状態を保存\n        //--------------------------------------------------------------------------\n        // まばたき\n        if (!motionUpdated) {\n            if (this._eyeBlink != null) {\n                // メインモーションの更新がないとき\n                this._eyeBlink.updateParameters(this._model, deltaTimeSeconds); // 目パチ\n            }\n        }\n        if (this._expressionManager != null) {\n            this._expressionManager.updateMotion(this._model, deltaTimeSeconds); // 表情でパラメータ更新（相対変化）\n        }\n        // ドラッグによる変化\n        // ドラッグによる顔の向きの調整\n        this._model.addParameterValueById(this._idParamAngleX, this._dragX * 30); // -30から30の値を加える\n        this._model.addParameterValueById(this._idParamAngleY, this._dragY * 30);\n        this._model.addParameterValueById(this._idParamAngleZ, this._dragX * this._dragY * -30);\n        // ドラッグによる体の向きの調整\n        this._model.addParameterValueById(this._idParamBodyAngleX, this._dragX * 10); // -10から10の値を加える\n        // ドラッグによる目の向きの調整\n        this._model.addParameterValueById(this._idParamEyeBallX, this._dragX); // -1から1の値を加える\n        this._model.addParameterValueById(this._idParamEyeBallY, this._dragY);\n        // 呼吸など\n        if (this._breath != null) {\n            this._breath.updateParameters(this._model, deltaTimeSeconds);\n        }\n        // 物理演算の設定\n        if (this._physics != null) {\n            this._physics.evaluate(this._model, deltaTimeSeconds);\n        }\n        // Lip sync settings\n        if (this._lipsync) {\n            let value = 0.0;\n            this._wavFileHandler.update(deltaTimeSeconds);\n            value = this._wavFileHandler.getRms();\n            value = Math.min(1.0, value * 1.5);\n            const lipSyncWeight = 4.0;\n            for(let i = 0; i < this._lipSyncIds.getSize(); ++i){\n                this._model.addParameterValueById(this._lipSyncIds.at(i), value, lipSyncWeight);\n            }\n        }\n        // ポーズの設定\n        if (this._pose != null) {\n            this._pose.updateParameters(this._model, deltaTimeSeconds);\n        }\n        this._model.update();\n    }\n    /**\n   * 引数で指定したモーションの再生を開始する\n   * @param group モーショングループ名\n   * @param no グループ内の番号\n   * @param priority 優先度\n   * @param onFinishedMotionHandler モーション再生終了時に呼び出されるコールバック関数\n   * @return 開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するisFinished()の引数で使用する。開始できない時は[-1]\n   */ startMotion(group, no, priority, onFinishedMotionHandler) {\n        // Add a log specifically when trying to start a tap motion (which uses priority 3)\n        if (priority === 3 && _lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n            console.log(`[APP] startMotion: Attempting to start tap motion. Group: '${group}', Index: ${no}`);\n        }\n        if (priority == _lappdefine__WEBPACK_IMPORTED_MODULE_11__.PriorityForce) {\n            this._motionManager.setReservePriority(priority);\n        } else if (!this._motionManager.reserveMotion(priority)) {\n            if (this._debugMode) {\n                _lapppal__WEBPACK_IMPORTED_MODULE_14__.LAppPal.printMessage(\"[APP]can't start motion.\");\n            }\n            return _framework_motion_cubismmotionqueuemanager__WEBPACK_IMPORTED_MODULE_7__.InvalidMotionQueueEntryHandleValue;\n        }\n        const motionFileName = this._modelSetting.getMotionFileName(group, no);\n        // ex) idle_0 or _0 if group is \"\"\n        const name = `${group}_${no}`;\n        let motion = this._motions.getValue(name);\n        let autoDelete = false;\n        if (motion == null) {\n            if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n                console.log(`[APP] startMotion: Motion '${name}' not found in cache, fetching: ${motionFileName}`);\n            }\n            fetch(`${this._modelHomeDir}${motionFileName}`).then((response)=>{\n                if (response.ok) {\n                    return response.arrayBuffer();\n                } else if (response.status >= 400) {\n                    (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CubismLogError)(`Failed to load file ${this._modelHomeDir}${motionFileName}`);\n                    return new ArrayBuffer(0);\n                }\n            }).then((arrayBuffer)=>{\n                motion = this.loadMotion(arrayBuffer, arrayBuffer.byteLength, null, onFinishedMotionHandler);\n                if (motion == null) {\n                    if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n                        console.error(`[APP] startMotion: Failed to load motion from fetched data for '${name}'`);\n                    }\n                    return;\n                }\n                let fadeTime = this._modelSetting.getMotionFadeInTimeValue(group, no);\n                if (fadeTime >= 0.0) {\n                    motion.setFadeInTime(fadeTime);\n                }\n                fadeTime = this._modelSetting.getMotionFadeOutTimeValue(group, no);\n                if (fadeTime >= 0.0) {\n                    motion.setFadeOutTime(fadeTime);\n                }\n                motion.setEffectIds(this._eyeBlinkIds, this._lipSyncIds);\n                autoDelete = true; // 終了時にメモリから削除\n                // Start the motion *after* it's loaded (moved from outside)\n                if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n                    console.log(`[APP] startMotion: Starting fetched motion '${name}'`);\n                }\n                this._motionManager.startMotionPriority(motion, autoDelete, priority);\n            });\n            // Return InvalidHandle immediately because the motion starts asynchronously\n            // This might be an issue if the caller expects a valid handle right away.\n            // Let's reconsider this. Maybe startMotion should return a Promise? For now, keep original logic.\n            return _framework_motion_cubismmotionqueuemanager__WEBPACK_IMPORTED_MODULE_7__.InvalidMotionQueueEntryHandleValue;\n        } else {\n            if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n                console.log(`[APP] startMotion: Motion '${name}' found in cache. Starting.`);\n            }\n            motion.setFinishedMotionHandler(onFinishedMotionHandler);\n            // Start the motion if found in cache\n            return this._motionManager.startMotionPriority(motion, autoDelete, priority);\n        }\n    // Original code had voice logic and startMotionPriority call here, moved inside blocks\n    }\n    /**\n   * ランダムに選ばれたモーションの再生を開始する。\n   * @param group モーショングループ名\n   * @param priority 優先度\n   * @param onFinishedMotionHandler モーション再生終了時に呼び出されるコールバック関数\n   * @return 開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するisFinished()の引数で使用する。開始できない時は[-1]\n   */ startRandomMotion(group, priority, onFinishedMotionHandler) {\n        if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n            console.log(`[APP] startRandomMotion called. Group: '${group}', Priority: ${priority}`);\n        }\n        if (this._modelSetting.getMotionCount(group) == 0) {\n            if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n                console.warn(`[APP] startRandomMotion: No motions found in group '${group}'`);\n            }\n            return _framework_motion_cubismmotionqueuemanager__WEBPACK_IMPORTED_MODULE_7__.InvalidMotionQueueEntryHandleValue;\n        }\n        const no = Math.floor(Math.random() * this._modelSetting.getMotionCount(group));\n        if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n            console.log(`[APP] startRandomMotion: Selected random index ${no} from group '${group}'`);\n        }\n        return this.startMotion(group, no, priority, onFinishedMotionHandler);\n    }\n    /**\n   * 引数で指定した表情モーションをセットする\n   *\n   * @param expressionId 表情モーションのID\n   */ setExpression(expressionId) {\n        const motion = this._expressions.getValue(expressionId);\n        if (this._debugMode) {\n            _lapppal__WEBPACK_IMPORTED_MODULE_14__.LAppPal.printMessage(`[APP]expression: [${expressionId}]`);\n        }\n        if (motion != null) {\n            this._expressionManager.startMotionPriority(motion, false, _lappdefine__WEBPACK_IMPORTED_MODULE_11__.PriorityForce);\n        } else {\n            if (this._debugMode) {\n                _lapppal__WEBPACK_IMPORTED_MODULE_14__.LAppPal.printMessage(`[APP]expression[${expressionId}] is null`);\n            }\n        }\n    }\n    /**\n   * ランダムに選ばれた表情モーションをセットする\n   */ setRandomExpression() {\n        if (this._expressions.getSize() == 0) {\n            return;\n        }\n        const no = Math.floor(Math.random() * this._expressions.getSize());\n        for(let i = 0; i < this._expressions.getSize(); i++){\n            if (i == no) {\n                const name = this._expressions._keyValues[i].first;\n                this.setExpression(name);\n                return;\n            }\n        }\n    }\n    /**\n   * イベントの発火を受け取る\n   */ motionEventFired(eventValue) {\n        (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CubismLogInfo)(\"{0} is fired on LAppModel!!\", eventValue.s);\n    }\n    /**\n   * 当たり判定テスト\n   * 指定ＩＤの頂点リストから矩形を計算し、座標をが矩形範囲内か判定する。\n   *\n   * @param hitArenaName  当たり判定をテストする対象のID\n   * @param x             判定を行うX座標\n   * @param y             判定を行うY座標\n   */ hitTest(hitArenaName, x, y) {\n        // 透明時は当たり判定無し。\n        if (this._opacity < 1) {\n            return false;\n        }\n        const count = this._modelSetting.getHitAreasCount();\n        for(let i = 0; i < count; i++){\n            if (this._modelSetting.getHitAreaName(i) == hitArenaName) {\n                const drawId = this._modelSetting.getHitAreaId(i);\n                return this.isHit(drawId, x, y);\n            }\n        }\n        return false;\n    }\n    /**\n   * Test if a point hits any part of the model's defined hit areas.\n   * @param x X coordinate to test\n   * @param y Y coordinate to test\n   * @returns The name of the hit area if hit, otherwise null.\n   */ anyhitTest(x, y) {\n        // If opacity is less than 1, no hit detection\n        if (this._opacity < 1) {\n            return null;\n        }\n        const count = this._modelSetting.getHitAreasCount();\n        for(let i = 0; i < count; i++){\n            const drawId = this._modelSetting.getHitAreaId(i);\n            const hit = this.isHit(drawId, x, y);\n            if (hit) {\n                // Get the CubismIdHandle for the hit area\n                const hitAreaIdHandle = this._modelSetting.getHitAreaId(i);\n                // Attempt to access the string via the internal _id.s structure\n                // Accessing private members like this is generally discouraged but necessary if no public API exists\n                const idString = hitAreaIdHandle?._id?.s; // Cast to any to bypass potential type errors\n                // Debug log for hit area detection\n                if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n                    console.log(`[APP] anyhitTest: Hit detected. ID Handle:`, hitAreaIdHandle, ` Extracted ID String: ${idString}`);\n                }\n                // Return the ID string which should match the tapMotions keys\n                return idString || null; // Return the extracted string, or null if it failed\n            }\n        }\n        // Debug log if no hit area detected\n        if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n        // console.log(`[APP] anyhitTest: No specific hit area detected.`);\n        }\n        return null; // No hit area was hit\n    }\n    /**\n   * Load motions for the model\n   * @param group Motion group name\n   */ preLoadMotionGroup(group) {\n        for(let i = 0; i < this._modelSetting.getMotionCount(group); i++){\n            const motionFileName = this._modelSetting.getMotionFileName(group, i);\n            // ex) idle_0\n            const name = `${group}_${i}`;\n            if (this._debugMode) {\n                _lapppal__WEBPACK_IMPORTED_MODULE_14__.LAppPal.printMessage(`[APP]load motion: ${motionFileName} => [${name}]`);\n            }\n            fetch(`${this._modelHomeDir}${motionFileName}`).then((response)=>{\n                if (response.ok) {\n                    return response.arrayBuffer();\n                } else if (response.status >= 400) {\n                    (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CubismLogError)(`Failed to load file ${this._modelHomeDir}${motionFileName}`);\n                    return null; // Return null instead of empty ArrayBuffer\n                }\n            }).then((arrayBuffer)=>{\n                // Add null check before loading motion\n                if (!arrayBuffer) {\n                    // If buffer is null, reduce motion count and return\n                    this._allMotionCount--;\n                    return;\n                }\n                const tmpMotion = this.loadMotion(arrayBuffer, arrayBuffer.byteLength, name);\n                if (tmpMotion != null) {\n                    let fadeTime = this._modelSetting.getMotionFadeInTimeValue(group, i);\n                    if (fadeTime >= 0.0) {\n                        tmpMotion.setFadeInTime(fadeTime);\n                    }\n                    fadeTime = this._modelSetting.getMotionFadeOutTimeValue(group, i);\n                    if (fadeTime >= 0.0) {\n                        tmpMotion.setFadeOutTime(fadeTime);\n                    }\n                    tmpMotion.setEffectIds(this._eyeBlinkIds, this._lipSyncIds);\n                    if (this._motions.getValue(name) != null) {\n                        _framework_motion_acubismmotion__WEBPACK_IMPORTED_MODULE_6__.ACubismMotion.delete(this._motions.getValue(name));\n                    }\n                    this._motions.setValue(name, tmpMotion);\n                    this._motionCount++;\n                    if (this._motionCount >= this._allMotionCount) {\n                        this._state = 20;\n                        // 全てのモーションを停止する\n                        this._motionManager.stopAllMotions();\n                        this._updating = false;\n                        this._initialized = true;\n                        this.createRenderer();\n                        this.setupTextures();\n                        this.getRenderer().startUp(_lappglmanager__WEBPACK_IMPORTED_MODULE_13__.gl);\n                    }\n                } else {\n                    // loadMotionできなかった場合はモーションの総数がずれるので1つ減らす\n                    this._allMotionCount--;\n                }\n            }).catch((error)=>{\n                // Add error handling\n                (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CubismLogError)(`Failed to load motion: ${error}`);\n                this._allMotionCount--;\n            });\n        }\n    }\n    /**\n   * すべてのモーションデータを解放する。\n   */ releaseMotions() {\n        this._motions.clear();\n    }\n    /**\n   * 全ての表情データを解放する。\n   */ releaseExpressions() {\n        this._expressions.clear();\n    }\n    /**\n   * モデルを描画する処理。モデルを描画する空間のView-Projection行列を渡す。\n   */ doDraw() {\n        if (this._model == null) return;\n        // キャンバスサイズを渡す\n        const viewport = [\n            0,\n            0,\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_13__.canvas.width,\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_13__.canvas.height\n        ];\n        this.getRenderer().setRenderState(_lappdelegate__WEBPACK_IMPORTED_MODULE_12__.frameBuffer, viewport);\n        this.getRenderer().drawModel();\n    }\n    /**\n   * モデルを描画する処理。モデルを描画する空間のView-Projection行列を渡す。\n   */ draw(matrix) {\n        if (this._model == null) {\n            return;\n        }\n        // 各読み込み終了後\n        if (this._state == 22) {\n            matrix.multiplyByMatrix(this._modelMatrix);\n            this.getRenderer().setMvpMatrix(matrix);\n            this.doDraw();\n        }\n    }\n    async hasMocConsistencyFromFile() {\n        (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CSM_ASSERT)(this._modelSetting.getModelFileName().localeCompare(``));\n        // CubismModel\n        if (this._modelSetting.getModelFileName() != \"\") {\n            const modelFileName = this._modelSetting.getModelFileName();\n            const response = await fetch(`${this._modelHomeDir}${modelFileName}`);\n            const arrayBuffer = await response.arrayBuffer();\n            this._consistency = _framework_model_cubismmoc__WEBPACK_IMPORTED_MODULE_16__.CubismMoc.hasMocConsistency(arrayBuffer);\n            if (!this._consistency) {\n                (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CubismLogInfo)(\"Inconsistent MOC3.\");\n            } else {\n                (0,_framework_utils_cubismdebug__WEBPACK_IMPORTED_MODULE_10__.CubismLogInfo)(\"Consistent MOC3.\");\n            }\n            return this._consistency;\n        } else {\n            _lapppal__WEBPACK_IMPORTED_MODULE_14__.LAppPal.printMessage(\"Model data does not exist.\");\n        }\n    }\n    /**\n   * Test if a point hits the model's rendered area\n   * This is a fallback method when no hit areas are defined\n   * @param x X coordinate to test\n   * @param y Y coordinate to test\n   */ isHitOnModel(x, y) {\n        // Skip if model is transparent\n        if (this._opacity < 1) {\n            return false;\n        }\n        // Get drawable count\n        const drawableCount = this._model.getDrawableCount();\n        // Get model matrix\n        const matrix = this._modelMatrix.getArray();\n        // Calculate determinant\n        const det = matrix[0] * matrix[5] - matrix[1] * matrix[4];\n        if (Math.abs(det) < 0.0001) {\n            return false; // Matrix is not invertible\n        }\n        // Calculate inverse matrix elements\n        const invDet = 1.0 / det;\n        const invMatrix = {\n            a: matrix[5] * invDet,\n            b: -matrix[1] * invDet,\n            c: -matrix[4] * invDet,\n            d: matrix[0] * invDet,\n            tx: (matrix[4] * matrix[13] - matrix[5] * matrix[12]) * invDet,\n            ty: (matrix[1] * matrix[12] - matrix[0] * matrix[13]) * invDet\n        };\n        // Transform point\n        const transformedPoint = {\n            x: x * invMatrix.a + y * invMatrix.c + invMatrix.tx,\n            y: x * invMatrix.b + y * invMatrix.d + invMatrix.ty\n        };\n        // Check each drawable area\n        for(let i = 0; i < drawableCount; i++){\n            // Skip if drawable is not visible\n            if (!this._model.getDrawableDynamicFlagIsVisible(i)) {\n                continue;\n            }\n            // Get drawable vertex positions\n            const vertices = this._model.getDrawableVertices(i);\n            // Calculate bounds\n            let minX = vertices[0];\n            let minY = vertices[1];\n            let maxX = vertices[0];\n            let maxY = vertices[1];\n            for(let j = 2; j < vertices.length; j += 2){\n                const vx = vertices[j];\n                const vy = vertices[j + 1];\n                minX = Math.min(minX, vx);\n                minY = Math.min(minY, vy);\n                maxX = Math.max(maxX, vx);\n                maxY = Math.max(maxY, vy);\n            }\n            // Check if point is inside bounds\n            if (transformedPoint.x >= minX && transformedPoint.x <= maxX && transformedPoint.y >= minY && transformedPoint.y <= maxY) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n   * Performs a hit test with fallback if the first one fails.\n   * \n   * @param x - X coordinate to test\n   * @param y - Y coordinate to test\n   * @returns boolean indicating if any hit was detected\n   */ anyHitTestWithFallback(x, y) {\n        // First check named hit areas\n        const hitAreaName = this.anyhitTest(x, y);\n        // If a hit area was found, return true, otherwise fall back to general hit test\n        return hitAreaName !== null || this.isHitOnModel(x, y);\n    }\n    /**\n   * Starts a tap motion based on the hit area and configuration.\n   * @param hitAreaName The name of the hit area that was tapped, or null if no specific area was hit\n   * @param tapMotionsConfig The tap motion configuration from modelInfo\n   */ startTapMotion(hitAreaName, tapMotionsConfig) {\n        if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n            console.log(`[APP] startTapMotion called. Hit area: ${hitAreaName}`);\n        }\n        if (!tapMotionsConfig || Object.keys(tapMotionsConfig).length === 0) {\n            if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n                console.log('[APP] No tap motions configured.');\n            }\n            return;\n        }\n        let motionsToConsider = {};\n        let areaSpecificHit = false;\n        // 1. Check if a specific, configured hit area was tapped\n        if (hitAreaName && tapMotionsConfig[hitAreaName]) {\n            motionsToConsider = tapMotionsConfig[hitAreaName];\n            areaSpecificHit = true;\n            if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n                console.log(`[APP] startTapMotion: Using motions for specific area: ${hitAreaName}`, motionsToConsider);\n            }\n        }\n        // 2. If no specific area hit OR the hit area has no config, combine all motions with weight summation\n        if (!areaSpecificHit) {\n            motionsToConsider = {};\n            Object.values(tapMotionsConfig).forEach((areaMotions)=>{\n                for (const [motionName, weight] of Object.entries(areaMotions)){\n                    if (motionsToConsider[motionName]) {\n                        motionsToConsider[motionName] += Number(weight);\n                    } else {\n                        motionsToConsider[motionName] = Number(weight);\n                    }\n                }\n            });\n            if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n                console.log('[APP] startTapMotion: Using combined motions:', motionsToConsider);\n            }\n        }\n        // 3. Check if there are any motions to play\n        if (Object.keys(motionsToConsider).length === 0) {\n            if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n                console.log('[APP] startTapMotion: No motions found to consider.');\n            }\n            return;\n        }\n        // 4. Weighted random selection\n        const motionGroups = Object.keys(motionsToConsider);\n        const weights = Object.values(motionsToConsider).map(Number);\n        const totalWeight = weights.reduce((sum, w)=>sum + (isNaN(w) ? 0 : w), 0);\n        if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n            console.log(`[APP] startTapMotion: Motion groups: ${motionGroups}, Weights: ${weights}, Total weight: ${totalWeight}`);\n        }\n        if (totalWeight <= 0) {\n            if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n                console.log('[APP] startTapMotion: Total weight is zero or invalid.');\n            }\n            return;\n        }\n        let random = Math.random() * totalWeight;\n        let selectedGroupName = null;\n        for(let i = 0; i < motionGroups.length; i++){\n            const weight = isNaN(weights[i]) ? 0 : weights[i];\n            if (random < weight) {\n                selectedGroupName = motionGroups[i];\n                break;\n            }\n            random -= weight;\n        }\n        if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n            console.log(`[APP] startTapMotion: Selected group: ${selectedGroupName}`);\n        }\n        // 5. Play the selected motion group\n        if (selectedGroupName !== null) {\n            // Use PriorityForce (3) to ensure the motion plays\n            this.startRandomMotion(selectedGroupName, 3);\n        } else {\n            if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.DebugLogEnable) {\n                console.log('[APP] startTapMotion: Could not select a motion group.');\n            }\n        }\n    }\n    /**\n   * コンストラクタ\n   */ constructor(){\n        super();\n        this._modelSetting = null;\n        this._modelHomeDir = null;\n        this._userTimeSeconds = 0.0;\n        this._eyeBlinkIds = new _framework_type_csmvector__WEBPACK_IMPORTED_MODULE_9__.csmVector();\n        this._lipSyncIds = new _framework_type_csmvector__WEBPACK_IMPORTED_MODULE_9__.csmVector();\n        this._motions = new _framework_type_csmmap__WEBPACK_IMPORTED_MODULE_8__.csmMap();\n        this._expressions = new _framework_type_csmmap__WEBPACK_IMPORTED_MODULE_8__.csmMap();\n        this._hitArea = new _framework_type_csmvector__WEBPACK_IMPORTED_MODULE_9__.csmVector();\n        this._userArea = new _framework_type_csmvector__WEBPACK_IMPORTED_MODULE_9__.csmVector();\n        const idManager = _framework_live2dcubismframework__WEBPACK_IMPORTED_MODULE_4__.CubismFramework.getIdManager();\n        if (idManager) {\n            this._idParamAngleX = idManager.getId(_framework_cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamAngleX);\n            this._idParamAngleY = idManager.getId(_framework_cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamAngleY);\n            this._idParamAngleZ = idManager.getId(_framework_cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamAngleZ);\n            this._idParamEyeBallX = idManager.getId(_framework_cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamEyeBallX);\n            this._idParamEyeBallY = idManager.getId(_framework_cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamEyeBallY);\n            this._idParamBodyAngleX = idManager.getId(_framework_cubismdefaultparameterid__WEBPACK_IMPORTED_MODULE_0__.CubismDefaultParameterId.ParamBodyAngleX);\n        } else {\n            // Initialize handles with null to avoid undefined errors\n            this._idParamAngleX = null;\n            this._idParamAngleY = null;\n            this._idParamAngleZ = null;\n            this._idParamEyeBallX = null;\n            this._idParamEyeBallY = null;\n            this._idParamBodyAngleX = null;\n        }\n        if (_lappdefine__WEBPACK_IMPORTED_MODULE_11__.MOCConsistencyValidationEnable) {\n            this._mocConsistency = true;\n        }\n        this._state = 0;\n        this._expressionCount = 0;\n        this._textureCount = 0;\n        this._motionCount = 0;\n        this._allMotionCount = 0;\n        this._wavFileHandler = new _lappwavfilehandler__WEBPACK_IMPORTED_MODULE_15__.LAppWavFileHandler();\n        this._consistency = false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/src/lappmodel.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/src/lapppal.ts":
/*!*******************************!*\
  !*** ./WebSDK/src/lapppal.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LAppPal: () => (/* binding */ LAppPal)\n/* harmony export */ });\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ /**\n * プラットフォーム依存機能を抽象化する Cubism Platform Abstraction Layer.\n * 抽象化Cubism平台依赖功能。\n *\n * ファイル読み込みや時刻取得等のプラットフォームに依存する関数をまとめる。\n * 将依赖于平台的功能（如文件读取和时间获取）集中在一起。\n */ class LAppPal {\n    /**\n   * ファイルをバイトデータとして読みこむ 读取文件为字节数据\n   *\n   * @param filePath 読み込み対象ファイルのパス [Path to the file to be read]\n   * @return\n   * {\n   *      buffer,   読み込んだバイトデータ [Read byte data]\n   *      size        ファイルサイズ [File size]\n   * }\n   */ static loadFileAsBytes(filePath, callback) {\n        fetch(filePath).then((response)=>response.arrayBuffer()).then((arrayBuffer)=>callback(arrayBuffer, arrayBuffer.byteLength));\n    }\n    /**\n   * デルタ時間（前回フレームとの差分）を取得する\n   * @return デルタ時間[ms]\n   * \n   * 获取增量时间（与上一帧的差异）\n   */ static getDeltaTime() {\n        return this.s_deltaTime;\n    }\n    static updateTime(modifyLastFrameTime = true) {\n        this.s_currentFrame = Date.now();\n        this.s_deltaTime = (this.s_currentFrame - this.s_lastFrame) / 1000;\n        // this.s_lastFrame = this.s_currentFrame;\n        if (modifyLastFrameTime === true) {\n            this.s_lastFrame = this.s_currentFrame;\n        }\n    }\n    /**\n   * メッセージを出力する\n   * @param message 文字列\n   * \n   * 输出消息\n   */ static printMessage(message) {\n        console.log(message);\n    }\n    static{\n        this.lastUpdate = Date.now();\n    }\n    static{\n        this.s_currentFrame = 0.0;\n    }\n    static{\n        this.s_lastFrame = 0.0;\n    }\n    static{\n        this.s_deltaTime = 0.0;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvc3JjL2xhcHBwYWwudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztDQUtDLEdBRUQ7Ozs7OztDQU1DLEdBQ00sTUFBTUE7SUFDWDs7Ozs7Ozs7O0dBU0MsR0FDRCxPQUFjQyxnQkFDWkMsUUFBZ0IsRUFDaEJDLFFBQTBELEVBQ3BEO1FBQ05DLE1BQU1GLFVBQ0hHLElBQUksQ0FBQ0MsQ0FBQUEsV0FBWUEsU0FBU0MsV0FBVyxJQUNyQ0YsSUFBSSxDQUFDRSxDQUFBQSxjQUFlSixTQUFTSSxhQUFhQSxZQUFZQyxVQUFVO0lBQ3JFO0lBRUE7Ozs7O0dBS0MsR0FDRCxPQUFjQyxlQUF1QjtRQUNuQyxPQUFPLElBQUksQ0FBQ0MsV0FBVztJQUN6QjtJQUVBLE9BQWNDLFdBQVdDLHNCQUErQixJQUFJLEVBQVE7UUFDbEUsSUFBSSxDQUFDQyxjQUFjLEdBQUdDLEtBQUtDLEdBQUc7UUFDOUIsSUFBSSxDQUFDTCxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUNHLGNBQWMsR0FBRyxJQUFJLENBQUNHLFdBQVcsSUFBSTtRQUM5RCwwQ0FBMEM7UUFDMUMsSUFBSUosd0JBQXdCLE1BQU07WUFDaEMsSUFBSSxDQUFDSSxXQUFXLEdBQUcsSUFBSSxDQUFDSCxjQUFjO1FBQ3hDO0lBQ0Y7SUFFQTs7Ozs7R0FLQyxHQUNELE9BQWNJLGFBQWFDLE9BQWUsRUFBUTtRQUNoREMsUUFBUUMsR0FBRyxDQUFDRjtJQUNkOzthQUVPRyxhQUFhUCxLQUFLQyxHQUFHOzs7YUFFckJGLGlCQUFpQjs7O2FBQ2pCRyxjQUFjOzs7YUFDZE4sY0FBYzs7QUFDdkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvV2ViU0RLL3NyYy9sYXBwcGFsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbi8qKlxuICog44OX44Op44OD44OI44OV44Kp44O844Og5L6d5a2Y5qmf6IO944KS5oq96LGh5YyW44GZ44KLIEN1YmlzbSBQbGF0Zm9ybSBBYnN0cmFjdGlvbiBMYXllci5cbiAqIOaKveixoeWMlkN1YmlzbeW5s+WPsOS+nei1luWKn+iDveOAglxuICpcbiAqIOODleOCoeOCpOODq+iqreOBv+i+vOOBv+OChOaZguWIu+WPluW+l+etieOBruODl+ODqeODg+ODiOODleOCqeODvOODoOOBq+S+neWtmOOBmeOCi+mWouaVsOOCkuOBvuOBqOOCgeOCi+OAglxuICog5bCG5L6d6LWW5LqO5bmz5Y+w55qE5Yqf6IO977yI5aaC5paH5Lu26K+75Y+W5ZKM5pe26Ze06I635Y+W77yJ6ZuG5Lit5Zyo5LiA6LW344CCXG4gKi9cbmV4cG9ydCBjbGFzcyBMQXBwUGFsIHtcbiAgLyoqXG4gICAqIOODleOCoeOCpOODq+OCkuODkOOCpOODiOODh+ODvOOCv+OBqOOBl+OBpuiqreOBv+OBk+OCgCDor7vlj5bmlofku7bkuLrlrZfoioLmlbDmja5cbiAgICpcbiAgICogQHBhcmFtIGZpbGVQYXRoIOiqreOBv+i+vOOBv+WvvuixoeODleOCoeOCpOODq+OBruODkeOCuSBbUGF0aCB0byB0aGUgZmlsZSB0byBiZSByZWFkXVxuICAgKiBAcmV0dXJuXG4gICAqIHtcbiAgICogICAgICBidWZmZXIsICAg6Kqt44G/6L6844KT44Gg44OQ44Kk44OI44OH44O844K/IFtSZWFkIGJ5dGUgZGF0YV1cbiAgICogICAgICBzaXplICAgICAgICDjg5XjgqHjgqTjg6vjgrXjgqTjgrogW0ZpbGUgc2l6ZV1cbiAgICogfVxuICAgKi9cbiAgcHVibGljIHN0YXRpYyBsb2FkRmlsZUFzQnl0ZXMoXG4gICAgZmlsZVBhdGg6IHN0cmluZyxcbiAgICBjYWxsYmFjazogKGFycmF5QnVmZmVyOiBBcnJheUJ1ZmZlciwgc2l6ZTogbnVtYmVyKSA9PiB2b2lkXG4gICk6IHZvaWQge1xuICAgIGZldGNoKGZpbGVQYXRoKVxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuYXJyYXlCdWZmZXIoKSlcbiAgICAgIC50aGVuKGFycmF5QnVmZmVyID0+IGNhbGxiYWNrKGFycmF5QnVmZmVyLCBhcnJheUJ1ZmZlci5ieXRlTGVuZ3RoKSk7XG4gIH1cblxuICAvKipcbiAgICog44OH44Or44K/5pmC6ZaT77yI5YmN5Zue44OV44Os44O844Og44Go44Gu5beu5YiG77yJ44KS5Y+W5b6X44GZ44KLXG4gICAqIEByZXR1cm4g44OH44Or44K/5pmC6ZaTW21zXVxuICAgKiBcbiAgICog6I635Y+W5aKe6YeP5pe26Ze077yI5LiO5LiK5LiA5bin55qE5beu5byC77yJXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIGdldERlbHRhVGltZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnNfZGVsdGFUaW1lO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyB1cGRhdGVUaW1lKG1vZGlmeUxhc3RGcmFtZVRpbWU6IGJvb2xlYW4gPSB0cnVlKTogdm9pZCB7XG4gICAgdGhpcy5zX2N1cnJlbnRGcmFtZSA9IERhdGUubm93KCk7XG4gICAgdGhpcy5zX2RlbHRhVGltZSA9ICh0aGlzLnNfY3VycmVudEZyYW1lIC0gdGhpcy5zX2xhc3RGcmFtZSkgLyAxMDAwO1xuICAgIC8vIHRoaXMuc19sYXN0RnJhbWUgPSB0aGlzLnNfY3VycmVudEZyYW1lO1xuICAgIGlmIChtb2RpZnlMYXN0RnJhbWVUaW1lID09PSB0cnVlKSB7XG4gICAgICB0aGlzLnNfbGFzdEZyYW1lID0gdGhpcy5zX2N1cnJlbnRGcmFtZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog44Oh44OD44K744O844K444KS5Ye65Yqb44GZ44KLXG4gICAqIEBwYXJhbSBtZXNzYWdlIOaWh+Wtl+WIl1xuICAgKiBcbiAgICog6L6T5Ye65raI5oGvXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIHByaW50TWVzc2FnZShtZXNzYWdlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZyhtZXNzYWdlKTtcbiAgfVxuXG4gIHN0YXRpYyBsYXN0VXBkYXRlID0gRGF0ZS5ub3coKTtcblxuICBzdGF0aWMgc19jdXJyZW50RnJhbWUgPSAwLjA7XG4gIHN0YXRpYyBzX2xhc3RGcmFtZSA9IDAuMDtcbiAgc3RhdGljIHNfZGVsdGFUaW1lID0gMC4wO1xufVxuIl0sIm5hbWVzIjpbIkxBcHBQYWwiLCJsb2FkRmlsZUFzQnl0ZXMiLCJmaWxlUGF0aCIsImNhbGxiYWNrIiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJhcnJheUJ1ZmZlciIsImJ5dGVMZW5ndGgiLCJnZXREZWx0YVRpbWUiLCJzX2RlbHRhVGltZSIsInVwZGF0ZVRpbWUiLCJtb2RpZnlMYXN0RnJhbWVUaW1lIiwic19jdXJyZW50RnJhbWUiLCJEYXRlIiwibm93Iiwic19sYXN0RnJhbWUiLCJwcmludE1lc3NhZ2UiLCJtZXNzYWdlIiwiY29uc29sZSIsImxvZyIsImxhc3RVcGRhdGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/src/lapppal.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/src/lapptexturemanager.ts":
/*!******************************************!*\
  !*** ./WebSDK/src/lapptexturemanager.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LAppTextureManager: () => (/* binding */ LAppTextureManager),\n/* harmony export */   TextureInfo: () => (/* binding */ TextureInfo)\n/* harmony export */ });\n/* harmony import */ var _framework_type_csmvector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @framework/type/csmvector */ \"(ssr)/./WebSDK/Framework/src/type/csmvector.ts\");\n/* harmony import */ var _lappglmanager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lappglmanager */ \"(ssr)/./WebSDK/src/lappglmanager.ts\");\n// @ts-nocheck\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n/**\n * テクスチャ管理クラス\n * 画像読み込み、管理を行うクラス。\n */ class LAppTextureManager {\n    /**\n   * コンストラクタ\n   */ constructor(){\n        this._textures = new _framework_type_csmvector__WEBPACK_IMPORTED_MODULE_0__.csmVector();\n    }\n    /**\n   * 解放する。\n   */ release() {\n        for(let ite = this._textures.begin(); ite.notEqual(this._textures.end()); ite.preIncrement()){\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.deleteTexture(ite.ptr().id);\n        }\n        this._textures = null;\n    }\n    /**\n   * 画像読み込み\n   *\n   * @param fileName 読み込む画像ファイルパス名\n   * @param usePremultiply Premult処理を有効にするか\n   * @return 画像情報、読み込み失敗時はnullを返す\n   */ createTextureFromPngFile(fileName, usePremultiply, callback) {\n        // search loaded texture already\n        for(let ite = this._textures.begin(); ite.notEqual(this._textures.end()); ite.preIncrement()){\n            if (ite.ptr().fileName == fileName && ite.ptr().usePremultply == usePremultiply) {\n                // 2回目以降はキャッシュが使用される(待ち時間なし)\n                // WebKitでは同じImageのonloadを再度呼ぶには再インスタンスが必要\n                // 詳細：https://stackoverflow.com/a/5024181\n                ite.ptr().img = new Image();\n                ite.ptr().img.addEventListener(\"load\", ()=>callback(ite.ptr()), {\n                    passive: true\n                });\n                ite.ptr().img.src = fileName;\n                return;\n            }\n        }\n        // データのオンロードをトリガーにする\n        const img = new Image();\n        img.crossOrigin = \"anonymous\";\n        img.addEventListener(\"load\", ()=>{\n            // テクスチャオブジェクトの作成\n            const tex = _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.createTexture();\n            // テクスチャを選択\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.bindTexture(_lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, tex);\n            // テクスチャにピクセルを書き込む\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(_lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_MIN_FILTER, _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.LINEAR_MIPMAP_LINEAR);\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(_lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_MAG_FILTER, _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.LINEAR);\n            // Premult処理を行わせる\n            if (usePremultiply) {\n                _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.pixelStorei(_lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n            }\n            // テクスチャにピクセルを書き込む\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.texImage2D(_lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, 0, _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.RGBA, _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.RGBA, _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.UNSIGNED_BYTE, img);\n            // ミップマップを生成\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.generateMipmap(_lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D);\n            // テクスチャをバインド\n            _lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.bindTexture(_lappglmanager__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, null);\n            const textureInfo = new TextureInfo();\n            if (textureInfo != null) {\n                textureInfo.fileName = fileName;\n                textureInfo.width = img.width;\n                textureInfo.height = img.height;\n                textureInfo.id = tex;\n                textureInfo.img = img;\n                textureInfo.usePremultply = usePremultiply;\n                this._textures.pushBack(textureInfo);\n            }\n            callback(textureInfo);\n        }, {\n            passive: true\n        });\n        img.src = fileName;\n    }\n    /**\n   * 画像の解放\n   *\n   * 配列に存在する画像全てを解放する。\n   */ releaseTextures() {\n        for(let i = 0; i < this._textures.getSize(); i++){\n            this._textures.set(i, null);\n        }\n        this._textures.clear();\n    }\n    /**\n   * 画像の解放\n   *\n   * 指定したテクスチャの画像を解放する。\n   * @param texture 解放するテクスチャ\n   */ releaseTextureByTexture(texture) {\n        for(let i = 0; i < this._textures.getSize(); i++){\n            if (this._textures.at(i).id != texture) {\n                continue;\n            }\n            this._textures.set(i, null);\n            this._textures.remove(i);\n            break;\n        }\n    }\n    /**\n   * 画像の解放\n   *\n   * 指定した名前の画像を解放する。\n   * @param fileName 解放する画像ファイルパス名\n   */ releaseTextureByFilePath(fileName) {\n        for(let i = 0; i < this._textures.getSize(); i++){\n            if (this._textures.at(i).fileName == fileName) {\n                this._textures.set(i, null);\n                this._textures.remove(i);\n                break;\n            }\n        }\n    }\n}\n/**\n * 画像情報構造体\n */ class TextureInfo {\n    constructor(){\n        this.id = null; // テクスチャ\n        this.width = 0; // 横幅\n        this.height = 0; // 高さ\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/src/lapptexturemanager.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/src/lappview.ts":
/*!********************************!*\
  !*** ./WebSDK/src/lappview.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LAppView: () => (/* binding */ LAppView)\n/* harmony export */ });\n/* harmony import */ var _framework_math_cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @framework/math/cubismmatrix44 */ \"(ssr)/./WebSDK/Framework/src/math/cubismmatrix44.ts\");\n/* harmony import */ var _framework_math_cubismviewmatrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @framework/math/cubismviewmatrix */ \"(ssr)/./WebSDK/Framework/src/math/cubismviewmatrix.ts\");\n/* harmony import */ var _lappdefine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lappdefine */ \"(ssr)/./WebSDK/src/lappdefine.ts\");\n/* harmony import */ var _lappdelegate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lappdelegate */ \"(ssr)/./WebSDK/src/lappdelegate.ts\");\n/* harmony import */ var _lappglmanager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lappglmanager */ \"(ssr)/./WebSDK/src/lappglmanager.ts\");\n/* harmony import */ var _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lapplive2dmanager */ \"(ssr)/./WebSDK/src/lapplive2dmanager.ts\");\n/* harmony import */ var _lapppal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lapppal */ \"(ssr)/./WebSDK/src/lapppal.ts\");\n/* harmony import */ var _touchmanager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./touchmanager */ \"(ssr)/./WebSDK/src/touchmanager.ts\");\n// @ts-nocheck\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n\n\n\n\n/**\n * 描画クラス。\n */ class LAppView {\n    /**\n   * コンストラクタ\n   */ constructor(){\n        this._programId = null;\n        this._back = null;\n        // this._gear = null;\n        // タッチ関係のイベント管理\n        this._touchManager = new _touchmanager__WEBPACK_IMPORTED_MODULE_7__.TouchManager();\n        // デバイス座標からスクリーン座標に変換するための\n        this._deviceToScreen = new _framework_math_cubismmatrix44__WEBPACK_IMPORTED_MODULE_0__.CubismMatrix44();\n        // 画面の表示の拡大縮小や移動の変換を行う行列\n        this._viewMatrix = new _framework_math_cubismviewmatrix__WEBPACK_IMPORTED_MODULE_1__.CubismViewMatrix();\n    }\n    /**\n   * 初期化する。\n   */ initialize() {\n        const { width, height } = _lappglmanager__WEBPACK_IMPORTED_MODULE_4__.canvas;\n        const ratio = width / height;\n        const left = -ratio;\n        const right = ratio;\n        const bottom = _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ViewLogicalLeft;\n        const top = _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ViewLogicalRight;\n        this._viewMatrix.setScreenRect(left, right, bottom, top); // デバイスに対応する画面の範囲。 Xの左端、Xの右端、Yの下端、Yの上端\n        this._viewMatrix.scale(_lappdefine__WEBPACK_IMPORTED_MODULE_2__.ViewScale, _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ViewScale);\n        this._deviceToScreen.loadIdentity();\n        if (width > height) {\n            const screenW = Math.abs(right - left);\n            this._deviceToScreen.scaleRelative(screenW / width, -screenW / width);\n        } else {\n            const screenH = Math.abs(top - bottom);\n            this._deviceToScreen.scaleRelative(screenH / height, -screenH / height);\n        }\n        this._deviceToScreen.translateRelative(-width * 0.5, -height * 0.5);\n        // 表示範囲の設定\n        this._viewMatrix.setMaxScale(_lappdefine__WEBPACK_IMPORTED_MODULE_2__.ViewMaxScale); // 限界拡張率\n        this._viewMatrix.setMinScale(_lappdefine__WEBPACK_IMPORTED_MODULE_2__.ViewMinScale); // 限界縮小率\n        // 表示できる最大範囲\n        this._viewMatrix.setMaxScreenRect(_lappdefine__WEBPACK_IMPORTED_MODULE_2__.ViewLogicalMaxLeft, _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ViewLogicalMaxRight, _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ViewLogicalMaxBottom, _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ViewLogicalMaxTop);\n    }\n    /**\n   * 解放する\n   */ release() {\n        this._viewMatrix = null;\n        this._touchManager = null;\n        this._deviceToScreen = null;\n        // this._gear.release();\n        // this._gear = null;\n        this._back.release();\n        this._back = null;\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_4__.gl.deleteProgram(this._programId);\n        this._programId = null;\n    }\n    /**\n   * 描画する。\n   */ render() {\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_4__.gl.useProgram(this._programId);\n        if (this._back) {\n            this._back.render(this._programId);\n        }\n        // if (this._gear) {\n        //   this._gear.render(this._programId);\n        // }\n        _lappglmanager__WEBPACK_IMPORTED_MODULE_4__.gl.flush();\n        const live2DManager = _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_5__.LAppLive2DManager.getInstance();\n        live2DManager.setViewMatrix(this._viewMatrix);\n        live2DManager.onUpdate();\n    }\n    /**\n   * 画像の初期化を行う。\n   */ initializeSprite() {\n        const width = _lappglmanager__WEBPACK_IMPORTED_MODULE_4__.canvas.width;\n        const height = _lappglmanager__WEBPACK_IMPORTED_MODULE_4__.canvas.height;\n        const textureManager = _lappdelegate__WEBPACK_IMPORTED_MODULE_3__.LAppDelegate.getInstance().getTextureManager();\n        const resourcesPath = _lappdefine__WEBPACK_IMPORTED_MODULE_2__.ResourcesPath;\n        let imageName = \"\";\n        // 背景画像初期化\n        imageName = _lappdefine__WEBPACK_IMPORTED_MODULE_2__.BackImageName;\n        // gl?.clearColor(0, 0, 0, 0);\n        // 非同期なのでコールバック関数を作成\n        // 由于是异步的，所以创建回调函数\n        // const initBackGroundTexture = (textureInfo: TextureInfo): void => {\n        //   const x: number = width * 0.5;\n        //   const y: number = height * 0.5;\n        //   const fwidth = textureInfo.width * 2.0;\n        //   const fheight = height * 0.95;\n        //   this._back = new LAppSprite(x, y, fwidth, fheight, textureInfo.id);\n        // };\n        // textureManager.createTextureFromPngFile(\n        //   resourcesPath + imageName,\n        //   false,\n        //   initBackGroundTexture\n        // );\n        // 歯車画像初期化\n        // 齿轮图像初始化\n        // imageName = LAppDefine.GearImageName;\n        // const initGearTexture = (textureInfo: TextureInfo): void => {\n        //   const x = width - textureInfo.width * 0.5;\n        //   const y = height - textureInfo.height * 0.5;\n        //   const fwidth = textureInfo.width;\n        //   const fheight = textureInfo.height;\n        //   this._gear = new LAppSprite(x, y, fwidth, fheight, textureInfo.id);\n        // };\n        // textureManager.createTextureFromPngFile(\n        //   resourcesPath + imageName,\n        //   false,\n        //   initGearTexture\n        // );\n        // シェーダーを作成\n        if (this._programId == null) {\n            this._programId = _lappdelegate__WEBPACK_IMPORTED_MODULE_3__.LAppDelegate.getInstance().createShader();\n        }\n    }\n    /**\n   * タッチされた時に呼ばれる。\n   *\n   * @param pointX スクリーンX座標\n   * @param pointY スクリーンY座標\n   */ onTouchesBegan(pointX, pointY) {\n        this._touchManager.touchesBegan(pointX * window.devicePixelRatio, pointY * window.devicePixelRatio);\n    }\n    /**\n   * タッチしているときにポインタが動いたら呼ばれる。\n   *\n   * @param pointX スクリーンX座標\n   * @param pointY スクリーンY座標\n   */ onTouchesMoved(pointX, pointY) {\n        const viewX = this.transformViewX(this._touchManager.getX());\n        const viewY = this.transformViewY(this._touchManager.getY());\n        this._touchManager.touchesMoved(pointX * window.devicePixelRatio, pointY * window.devicePixelRatio);\n        const live2DManager = _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_5__.LAppLive2DManager.getInstance();\n        live2DManager.onDrag(viewX, viewY);\n    }\n    /**\n   * タッチが終了したら呼ばれる。\n   *\n   * @param pointX スクリーンX座標\n   * @param pointY スクリーンY座標\n   */ onTouchesEnded(pointX, pointY) {\n        // タッチ終了\n        const live2DManager = _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_5__.LAppLive2DManager.getInstance();\n        live2DManager.onDrag(0.0, 0.0);\n        {\n            // シングルタップ\n            const x = this._deviceToScreen.transformX(this._touchManager.getX()); // 論理座標変換した座標を取得。\n            const y = this._deviceToScreen.transformY(this._touchManager.getY()); // 論理座標変化した座標を取得。\n            if (_lappdefine__WEBPACK_IMPORTED_MODULE_2__.DebugTouchLogEnable) {\n                _lapppal__WEBPACK_IMPORTED_MODULE_6__.LAppPal.printMessage(`[APP]touchesEnded x: ${x} y: ${y}`);\n            }\n            live2DManager.onTap(x, y);\n        // 歯車にタップしたか\n        // if (\n        //   this._gear.isHit(\n        //     pointX * window.devicePixelRatio,\n        //     pointY * window.devicePixelRatio\n        //   )\n        // ) {\n        //   live2DManager.nextScene();\n        // }\n        }\n    }\n    /**\n   * X座標をView座標に変換する。\n   *\n   * @param deviceX デバイスX座標\n   */ transformViewX(deviceX) {\n        const screenX = this._deviceToScreen.transformX(deviceX); // 論理座標変換した座標を取得。\n        return this._viewMatrix.invertTransformX(screenX); // 拡大、縮小、移動後の値。\n    }\n    /**\n   * Y座標をView座標に変換する。\n   *\n   * @param deviceY デバイスY座標\n   */ transformViewY(deviceY) {\n        const screenY = this._deviceToScreen.transformY(deviceY); // 論理座標変換した座標を取得。\n        return this._viewMatrix.invertTransformY(screenY);\n    }\n    /**\n   * X座標をScreen座標に変換する。\n   * @param deviceX デバイスX座標\n   */ transformScreenX(deviceX) {\n        return this._deviceToScreen.transformX(deviceX);\n    }\n    /**\n   * Y座標をScreen座標に変換する。\n   *\n   * @param deviceY デバイスY座標\n   */ transformScreenY(deviceY) {\n        return this._deviceToScreen.transformY(deviceY);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/src/lappview.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/src/lappwavfilehandler.ts":
/*!******************************************!*\
  !*** ./WebSDK/src/lappwavfilehandler.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ByteReader: () => (/* binding */ ByteReader),\n/* harmony export */   LAppWavFileHandler: () => (/* binding */ LAppWavFileHandler),\n/* harmony export */   WavFileInfo: () => (/* binding */ WavFileInfo),\n/* harmony export */   s_instance: () => (/* binding */ s_instance)\n/* harmony export */ });\n// @ts-nocheck\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ /** @deprecated この変数は getInstance() が非推奨になったことに伴い、非推奨となりました。 */ let s_instance = null;\nclass LAppWavFileHandler {\n    /**\n   * クラスのインスタンス（シングルトン）を返す。\n   * インスタンスが生成されていない場合は内部でインスタンスを生成する。\n   *\n   * @return クラスのインスタンス\n   * @deprecated このクラスでのシングルトンパターンの使用は非推奨となりました。代わりに new LAppWavFileHandler() を使用してください。\n   */ static getInstance() {\n        if (s_instance == null) {\n            s_instance = new LAppWavFileHandler();\n        }\n        return s_instance;\n    }\n    /**\n   * クラスのインスタンス（シングルトン）を解放する。\n   *\n   * @deprecated この関数は getInstance() が非推奨になったことに伴い、非推奨となりました。\n   */ static releaseInstance() {\n        if (s_instance != null) {\n            s_instance = void 0;\n        }\n        s_instance = null;\n    }\n    update(deltaTimeSeconds) {\n        let goalOffset;\n        let rms;\n        // データロード前/ファイル末尾に達した場合は更新しない\n        if (this._pcmData == null || this._sampleOffset >= this._wavFileInfo._samplesPerChannel) {\n            this._lastRms = 0.0;\n            return false;\n        }\n        // 経過時間後の状態を保持\n        this._userTimeSeconds += deltaTimeSeconds;\n        goalOffset = Math.floor(this._userTimeSeconds * this._wavFileInfo._samplingRate);\n        if (goalOffset > this._wavFileInfo._samplesPerChannel) {\n            goalOffset = this._wavFileInfo._samplesPerChannel;\n        }\n        // RMS計測\n        rms = 0.0;\n        for(let channelCount = 0; channelCount < this._wavFileInfo._numberOfChannels; channelCount++){\n            for(let sampleCount = this._sampleOffset; sampleCount < goalOffset; sampleCount++){\n                const pcm = this._pcmData[channelCount][sampleCount];\n                rms += pcm * pcm;\n            }\n        }\n        rms = Math.sqrt(rms / (this._wavFileInfo._numberOfChannels * (goalOffset - this._sampleOffset)));\n        this._lastRms = rms;\n        this._sampleOffset = goalOffset;\n        return true;\n    }\n    start(filePath) {\n        // サンプル位参照位置を初期化\n        this._sampleOffset = 0;\n        this._userTimeSeconds = 0.0;\n        // RMS値をリセット\n        this._lastRms = 0.0;\n        this.loadWavFile(filePath);\n    }\n    getRms() {\n        return this._lastRms;\n    }\n    loadWavFile(filePath) {\n        return new Promise((resolveValue)=>{\n            let ret = false;\n            if (this._pcmData != null) {\n                this.releasePcmData();\n            }\n            // ファイルロード\n            const asyncFileLoad = async ()=>{\n                return fetch(filePath).then((responce)=>{\n                    return responce.arrayBuffer();\n                });\n            };\n            const asyncWavFileManager = (async ()=>{\n                this._byteReader._fileByte = await asyncFileLoad();\n                this._byteReader._fileDataView = new DataView(this._byteReader._fileByte);\n                this._byteReader._fileSize = this._byteReader._fileByte.byteLength;\n                this._byteReader._readOffset = 0;\n                // ファイルロードに失敗しているか、先頭のシグネチャ\"RIFF\"を入れるサイズもない場合は失敗\n                if (this._byteReader._fileByte == null || this._byteReader._fileSize < 4) {\n                    resolveValue(false);\n                    return;\n                }\n                // ファイル名\n                this._wavFileInfo._fileName = filePath;\n                try {\n                    // シグネチャ \"RIFF\"\n                    if (!this._byteReader.getCheckSignature(\"RIFF\")) {\n                        ret = false;\n                        throw new Error('Cannot find Signeture \"RIFF\".');\n                    }\n                    // ファイルサイズ-8（読み飛ばし）\n                    this._byteReader.get32LittleEndian();\n                    // シグネチャ \"WAVE\"\n                    if (!this._byteReader.getCheckSignature(\"WAVE\")) {\n                        ret = false;\n                        throw new Error('Cannot find Signeture \"WAVE\".');\n                    }\n                    // シグネチャ \"fmt \"\n                    if (!this._byteReader.getCheckSignature(\"fmt \")) {\n                        ret = false;\n                        throw new Error('Cannot find Signeture \"fmt\".');\n                    }\n                    // fmtチャンクサイズ\n                    const fmtChunkSize = this._byteReader.get32LittleEndian();\n                    // フォーマットIDは1（リニアPCM）以外受け付けない\n                    if (this._byteReader.get16LittleEndian() != 1) {\n                        ret = false;\n                        throw new Error(\"File is not linear PCM.\");\n                    }\n                    // チャンネル数\n                    this._wavFileInfo._numberOfChannels = this._byteReader.get16LittleEndian();\n                    // サンプリングレート\n                    this._wavFileInfo._samplingRate = this._byteReader.get32LittleEndian();\n                    // データ速度[byte/sec]（読み飛ばし）\n                    this._byteReader.get32LittleEndian();\n                    // ブロックサイズ（読み飛ばし）\n                    this._byteReader.get16LittleEndian();\n                    // 量子化ビット数\n                    this._wavFileInfo._bitsPerSample = this._byteReader.get16LittleEndian();\n                    // fmtチャンクの拡張部分の読み飛ばし\n                    if (fmtChunkSize > 16) {\n                        this._byteReader._readOffset += fmtChunkSize - 16;\n                    }\n                    // \"data\"チャンクが出現するまで読み飛ばし\n                    while(!this._byteReader.getCheckSignature(\"data\") && this._byteReader._readOffset < this._byteReader._fileSize){\n                        this._byteReader._readOffset += this._byteReader.get32LittleEndian() + 4;\n                    }\n                    // ファイル内に\"data\"チャンクが出現しなかった\n                    if (this._byteReader._readOffset >= this._byteReader._fileSize) {\n                        ret = false;\n                        throw new Error('Cannot find \"data\" Chunk.');\n                    }\n                    // サンプル数\n                    {\n                        const dataChunkSize = this._byteReader.get32LittleEndian();\n                        this._wavFileInfo._samplesPerChannel = dataChunkSize * 8 / (this._wavFileInfo._bitsPerSample * this._wavFileInfo._numberOfChannels);\n                    }\n                    // 領域確保\n                    this._pcmData = new Array(this._wavFileInfo._numberOfChannels);\n                    for(let channelCount = 0; channelCount < this._wavFileInfo._numberOfChannels; channelCount++){\n                        this._pcmData[channelCount] = new Float32Array(this._wavFileInfo._samplesPerChannel);\n                    }\n                    // 波形データ取得\n                    for(let sampleCount = 0; sampleCount < this._wavFileInfo._samplesPerChannel; sampleCount++){\n                        for(let channelCount = 0; channelCount < this._wavFileInfo._numberOfChannels; channelCount++){\n                            this._pcmData[channelCount][sampleCount] = this.getPcmSample();\n                        }\n                    }\n                    ret = true;\n                    resolveValue(ret);\n                } catch (e) {\n                    console.log(e);\n                }\n            })().then(()=>{\n                resolveValue(ret);\n            });\n        });\n    }\n    getPcmSample() {\n        let pcm32;\n        // 32ビット幅に拡張してから-1～1の範囲に丸める\n        switch(this._wavFileInfo._bitsPerSample){\n            case 8:\n                pcm32 = this._byteReader.get8() - 128;\n                pcm32 <<= 24;\n                break;\n            case 16:\n                pcm32 = this._byteReader.get16LittleEndian() << 16;\n                break;\n            case 24:\n                pcm32 = this._byteReader.get24LittleEndian() << 8;\n                break;\n            default:\n                // 対応していないビット幅\n                pcm32 = 0;\n                break;\n        }\n        return pcm32 / 2147483647; //Number.MAX_VALUE;\n    }\n    /**\n   * 指定したチャンネルから音声サンプルの配列を取得する\n   *\n   * @param usechannel 利用するチャンネル\n   * @returns 指定したチャンネルの音声サンプルの配列\n   */ getPcmDataChannel(usechannel) {\n        // 指定したチャンネル数がデータ用配列の長さより多いならnullを返す。\n        if (!this._pcmData || !(usechannel < this._pcmData.length)) {\n            return null;\n        }\n        // _pcmDataから新規に指定したチャンネルのFloat32Arrayを作成する。\n        return Float32Array.from(this._pcmData[usechannel]);\n    }\n    /**\n   * 音声のサンプリング周波数を取得する。\n   *\n   * @returns 音声のサンプリング周波数\n   */ getWavSamplingRate() {\n        if (!this._wavFileInfo || this._wavFileInfo._samplingRate < 1) {\n            return null;\n        }\n        return this._wavFileInfo._samplingRate;\n    }\n    releasePcmData() {\n        if (this._pcmData) {\n            for(let channelCount = 0; channelCount < this._wavFileInfo._numberOfChannels; channelCount++){\n                this._pcmData[channelCount] = undefined;\n            }\n            this._pcmData = null;\n        }\n    }\n    constructor(){\n        this._loadFiletoBytes = (arrayBuffer, length)=>{\n            this._byteReader._fileByte = arrayBuffer;\n            this._byteReader._fileDataView = new DataView(this._byteReader._fileByte);\n            this._byteReader._fileSize = length;\n        };\n        this._pcmData = null;\n        this._userTimeSeconds = 0.0;\n        this._lastRms = 0.0;\n        this._sampleOffset = 0.0;\n        this._wavFileInfo = new WavFileInfo();\n        this._byteReader = new ByteReader();\n    }\n}\nclass WavFileInfo {\n    constructor(){\n        this._fileName = \"\";\n        this._numberOfChannels = 0;\n        this._bitsPerSample = 0;\n        this._samplingRate = 0;\n        this._samplesPerChannel = 0;\n    }\n}\nclass ByteReader {\n    constructor(){\n        this._fileByte = null;\n        this._fileDataView = null;\n        this._fileSize = 0;\n        this._readOffset = 0;\n    }\n    /**\n   * @brief 8ビット読み込み\n   * @return Csm::csmUint8 読み取った8ビット値\n   */ get8() {\n        const ret = this._fileDataView.getUint8(this._readOffset);\n        this._readOffset++;\n        return ret;\n    }\n    /**\n   * @brief 16ビット読み込み（リトルエンディアン）\n   * @return Csm::csmUint16 読み取った16ビット値\n   */ get16LittleEndian() {\n        const ret = this._fileDataView.getUint8(this._readOffset + 1) << 8 | this._fileDataView.getUint8(this._readOffset);\n        this._readOffset += 2;\n        return ret;\n    }\n    /**\n   * @brief 24ビット読み込み（リトルエンディアン）\n   * @return Csm::csmUint32 読み取った24ビット値（下位24ビットに設定）\n   */ get24LittleEndian() {\n        const ret = this._fileDataView.getUint8(this._readOffset + 2) << 16 | this._fileDataView.getUint8(this._readOffset + 1) << 8 | this._fileDataView.getUint8(this._readOffset);\n        this._readOffset += 3;\n        return ret;\n    }\n    /**\n   * @brief 32ビット読み込み（リトルエンディアン）\n   * @return Csm::csmUint32 読み取った32ビット値\n   */ get32LittleEndian() {\n        const ret = this._fileDataView.getUint8(this._readOffset + 3) << 24 | this._fileDataView.getUint8(this._readOffset + 2) << 16 | this._fileDataView.getUint8(this._readOffset + 1) << 8 | this._fileDataView.getUint8(this._readOffset);\n        this._readOffset += 4;\n        return ret;\n    }\n    /**\n   * @brief シグネチャの取得と参照文字列との一致チェック\n   * @param[in] reference 検査対象のシグネチャ文字列\n   * @retval  true    一致している\n   * @retval  false   一致していない\n   */ getCheckSignature(reference) {\n        const getSignature = new Uint8Array(4);\n        const referenceString = new TextEncoder().encode(reference);\n        if (reference.length != 4) {\n            return false;\n        }\n        for(let signatureOffset = 0; signatureOffset < 4; signatureOffset++){\n            getSignature[signatureOffset] = this.get8();\n        }\n        return getSignature[0] == referenceString[0] && getSignature[1] == referenceString[1] && getSignature[2] == referenceString[2] && getSignature[3] == referenceString[3];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/src/lappwavfilehandler.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/src/main.ts":
/*!****************************!*\
  !*** ./WebSDK/src/main.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeLive2D: () => (/* binding */ initializeLive2D)\n/* harmony export */ });\n/* harmony import */ var _lappdelegate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lappdelegate */ \"(ssr)/./WebSDK/src/lappdelegate.ts\");\n/* harmony import */ var _lappdefine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lappdefine */ \"(ssr)/./WebSDK/src/lappdefine.ts\");\n/* harmony import */ var _lappglmanager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lappglmanager */ \"(ssr)/./WebSDK/src/lappglmanager.ts\");\n/* harmony import */ var _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lapplive2dmanager */ \"(ssr)/./WebSDK/src/lapplive2dmanager.ts\");\n// @ts-nocheck\n/* eslint-disable no-underscore-dangle */ /**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ \n\n\n\n/**\n * Initialize the Live2D application\n */ function initializeLive2D() {\n    console.log(\"Initializing Live2D with resourcePath:\", _lappdefine__WEBPACK_IMPORTED_MODULE_1__.ResourcesPath);\n    console.log(\"Model directories:\", _lappdefine__WEBPACK_IMPORTED_MODULE_1__.ModelDir);\n    // Clean up any existing instances first\n    if (_lappdelegate__WEBPACK_IMPORTED_MODULE_0__.LAppDelegate.getInstance()) {\n        // Release existing model resources\n        _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_3__.LAppLive2DManager.releaseInstance();\n    }\n    if (!_lappglmanager__WEBPACK_IMPORTED_MODULE_2__.LAppGlManager.getInstance() || !_lappdelegate__WEBPACK_IMPORTED_MODULE_0__.LAppDelegate.getInstance().initialize()) {\n        console.error(\"Failed to initialize Live2D\");\n        return;\n    }\n    _lappdelegate__WEBPACK_IMPORTED_MODULE_0__.LAppDelegate.getInstance().run();\n    window.getLive2DManager = ()=>_lapplive2dmanager__WEBPACK_IMPORTED_MODULE_3__.LAppLive2DManager.getInstance();\n    // Make sure LAppAdapter is available globally\n    if (!window.getLAppAdapter) {\n        console.log('Setting up getLAppAdapter function');\n        const { LAppAdapter } = __webpack_require__(/*! ./lappadapter */ \"(ssr)/./WebSDK/src/lappadapter.ts\");\n        window.getLAppAdapter = ()=>LAppAdapter.getInstance();\n    }\n}\n/**\n * Keep the original window.load handler for backwards compatibility\n * (for the standalone HTML file)\n */ /* // Comment out the window.load listener\nwindow.addEventListener(\n  \"load\",\n  (): void => {\n    initializeLive2D();\n  },\n  { passive: true }\n);\n*/ /**\n * 終了時の処理\n * 结束时的处理\n */ if (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9XZWJTREsvc3JjL21haW4udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxjQUFjO0FBQ2QsdUNBQXVDLEdBQ3ZDOzs7OztDQUtDLEdBRTZDO0FBQ0g7QUFDSztBQUNRO0FBRXhEOztDQUVDLEdBQ00sU0FBU0k7SUFDZEMsUUFBUUMsR0FBRyxDQUNULDBDQUNBTCxzREFBd0I7SUFFMUJJLFFBQVFDLEdBQUcsQ0FBQyxzQkFBc0JMLGlEQUFtQjtJQUVyRCx3Q0FBd0M7SUFDeEMsSUFBSUQsdURBQVlBLENBQUNTLFdBQVcsSUFBSTtRQUM5QixtQ0FBbUM7UUFDbkNOLGlFQUFpQkEsQ0FBQ08sZUFBZTtJQUNuQztJQUVBLElBQ0UsQ0FBQ1IseURBQWFBLENBQUNPLFdBQVcsTUFDMUIsQ0FBQ1QsdURBQVlBLENBQUNTLFdBQVcsR0FBR0UsVUFBVSxJQUN0QztRQUNBTixRQUFRTyxLQUFLLENBQUM7UUFDZDtJQUNGO0lBRUFaLHVEQUFZQSxDQUFDUyxXQUFXLEdBQUdJLEdBQUc7SUFFN0JDLE9BQWVDLGdCQUFnQixHQUFHLElBQU1aLGlFQUFpQkEsQ0FBQ00sV0FBVztJQUV0RSw4Q0FBOEM7SUFDOUMsSUFBSSxDQUFDLE9BQWdCTyxjQUFjLEVBQUU7UUFDbkNYLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE1BQU0sRUFBRVcsV0FBVyxFQUFFLEdBQUdDLG1CQUFPQSxDQUFDLHdEQUFlO1FBQzlDSixPQUFlRSxjQUFjLEdBQUcsSUFBTUMsWUFBWVIsV0FBVztJQUNoRTtBQUNGO0FBRUE7OztDQUdDLEdBQ0Q7Ozs7Ozs7O0FBUUEsR0FFQTs7O0NBR0MsR0FFRCxJQUFJLEtBQTZCLEVBQUUsRUFzQmxDIiwic291cmNlcyI6WyIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL1dlYlNESy9zcmMvbWFpbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW5kZXJzY29yZS1kYW5nbGUgKi9cbi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IExBcHBEZWxlZ2F0ZSB9IGZyb20gXCIuL2xhcHBkZWxlZ2F0ZVwiO1xuaW1wb3J0ICogYXMgTEFwcERlZmluZSBmcm9tIFwiLi9sYXBwZGVmaW5lXCI7XG5pbXBvcnQgeyBMQXBwR2xNYW5hZ2VyIH0gZnJvbSBcIi4vbGFwcGdsbWFuYWdlclwiO1xuaW1wb3J0IHsgTEFwcExpdmUyRE1hbmFnZXIgfSBmcm9tIFwiLi9sYXBwbGl2ZTJkbWFuYWdlclwiO1xuXG4vKipcbiAqIEluaXRpYWxpemUgdGhlIExpdmUyRCBhcHBsaWNhdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5pdGlhbGl6ZUxpdmUyRCgpOiB2b2lkIHtcbiAgY29uc29sZS5sb2coXG4gICAgXCJJbml0aWFsaXppbmcgTGl2ZTJEIHdpdGggcmVzb3VyY2VQYXRoOlwiLFxuICAgIExBcHBEZWZpbmUuUmVzb3VyY2VzUGF0aFxuICApO1xuICBjb25zb2xlLmxvZyhcIk1vZGVsIGRpcmVjdG9yaWVzOlwiLCBMQXBwRGVmaW5lLk1vZGVsRGlyKTtcblxuICAvLyBDbGVhbiB1cCBhbnkgZXhpc3RpbmcgaW5zdGFuY2VzIGZpcnN0XG4gIGlmIChMQXBwRGVsZWdhdGUuZ2V0SW5zdGFuY2UoKSkge1xuICAgIC8vIFJlbGVhc2UgZXhpc3RpbmcgbW9kZWwgcmVzb3VyY2VzXG4gICAgTEFwcExpdmUyRE1hbmFnZXIucmVsZWFzZUluc3RhbmNlKCk7XG4gIH1cblxuICBpZiAoXG4gICAgIUxBcHBHbE1hbmFnZXIuZ2V0SW5zdGFuY2UoKSB8fFxuICAgICFMQXBwRGVsZWdhdGUuZ2V0SW5zdGFuY2UoKS5pbml0aWFsaXplKClcbiAgKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBpbml0aWFsaXplIExpdmUyRFwiKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBMQXBwRGVsZWdhdGUuZ2V0SW5zdGFuY2UoKS5ydW4oKTtcblxuICAod2luZG93IGFzIGFueSkuZ2V0TGl2ZTJETWFuYWdlciA9ICgpID0+IExBcHBMaXZlMkRNYW5hZ2VyLmdldEluc3RhbmNlKCk7XG5cbiAgLy8gTWFrZSBzdXJlIExBcHBBZGFwdGVyIGlzIGF2YWlsYWJsZSBnbG9iYWxseVxuICBpZiAoISh3aW5kb3cgYXMgYW55KS5nZXRMQXBwQWRhcHRlcikge1xuICAgIGNvbnNvbGUubG9nKCdTZXR0aW5nIHVwIGdldExBcHBBZGFwdGVyIGZ1bmN0aW9uJyk7XG4gICAgY29uc3QgeyBMQXBwQWRhcHRlciB9ID0gcmVxdWlyZSgnLi9sYXBwYWRhcHRlcicpO1xuICAgICh3aW5kb3cgYXMgYW55KS5nZXRMQXBwQWRhcHRlciA9ICgpID0+IExBcHBBZGFwdGVyLmdldEluc3RhbmNlKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBLZWVwIHRoZSBvcmlnaW5hbCB3aW5kb3cubG9hZCBoYW5kbGVyIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuICogKGZvciB0aGUgc3RhbmRhbG9uZSBIVE1MIGZpbGUpXG4gKi9cbi8qIC8vIENvbW1lbnQgb3V0IHRoZSB3aW5kb3cubG9hZCBsaXN0ZW5lclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXG4gIFwibG9hZFwiLFxuICAoKTogdm9pZCA9PiB7XG4gICAgaW5pdGlhbGl6ZUxpdmUyRCgpO1xuICB9LFxuICB7IHBhc3NpdmU6IHRydWUgfVxuKTtcbiovXG5cbi8qKlxuICog57WC5LqG5pmC44Gu5Yem55CGXG4gKiDnu5PmnZ/ml7bnmoTlpITnkIZcbiAqL1xuXG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgXCJiZWZvcmV1bmxvYWRcIixcbiAgICAoKTogdm9pZCA9PiBMQXBwRGVsZWdhdGUucmVsZWFzZUluc3RhbmNlKCksXG4gICAgeyBwYXNzaXZlOiB0cnVlIH1cbiAgKTtcblxuICAvKipcbiAgICogUHJvY2VzcyB3aGVuIGNoYW5naW5nIHNjcmVlbiBzaXplLlxuICAgKi9cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgXCJyZXNpemVcIixcbiAgICAoKSA9PiB7XG4gICAgICBpZiAoTEFwcERlZmluZS5DYW52YXNTaXplID09PSBcImF1dG9cIikge1xuICAgICAgICBMQXBwRGVsZWdhdGUuZ2V0SW5zdGFuY2UoKS5vblJlc2l6ZSgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgeyBwYXNzaXZlOiB0cnVlIH1cbiAgKTtcblxuICAvLyBNYWtlIHRoZSBpbml0aWFsaXphdGlvbiBmdW5jdGlvbiBhdmFpbGFibGUgZ2xvYmFsbHlcbiAgKHdpbmRvdyBhcyBhbnkpLmluaXRpYWxpemVMaXZlMkQgPSBpbml0aWFsaXplTGl2ZTJEO1xufSJdLCJuYW1lcyI6WyJMQXBwRGVsZWdhdGUiLCJMQXBwRGVmaW5lIiwiTEFwcEdsTWFuYWdlciIsIkxBcHBMaXZlMkRNYW5hZ2VyIiwiaW5pdGlhbGl6ZUxpdmUyRCIsImNvbnNvbGUiLCJsb2ciLCJSZXNvdXJjZXNQYXRoIiwiTW9kZWxEaXIiLCJnZXRJbnN0YW5jZSIsInJlbGVhc2VJbnN0YW5jZSIsImluaXRpYWxpemUiLCJlcnJvciIsInJ1biIsIndpbmRvdyIsImdldExpdmUyRE1hbmFnZXIiLCJnZXRMQXBwQWRhcHRlciIsIkxBcHBBZGFwdGVyIiwicmVxdWlyZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJwYXNzaXZlIiwiQ2FudmFzU2l6ZSIsIm9uUmVzaXplIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/src/main.ts\n");

/***/ }),

/***/ "(ssr)/./WebSDK/src/touchmanager.ts":
/*!************************************!*\
  !*** ./WebSDK/src/touchmanager.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TouchManager: () => (/* binding */ TouchManager)\n/* harmony export */ });\n/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */ class TouchManager {\n    /**\n   * コンストラクタ\n   */ constructor(){\n        this._startX = 0.0;\n        this._startY = 0.0;\n        this._lastX = 0.0;\n        this._lastY = 0.0;\n        this._lastX1 = 0.0;\n        this._lastY1 = 0.0;\n        this._lastX2 = 0.0;\n        this._lastY2 = 0.0;\n        this._lastTouchDistance = 0.0;\n        this._deltaX = 0.0;\n        this._deltaY = 0.0;\n        this._scale = 1.0;\n        this._touchSingle = false;\n        this._flipAvailable = false;\n    }\n    getCenterX() {\n        return this._lastX;\n    }\n    getCenterY() {\n        return this._lastY;\n    }\n    getDeltaX() {\n        return this._deltaX;\n    }\n    getDeltaY() {\n        return this._deltaY;\n    }\n    getStartX() {\n        return this._startX;\n    }\n    getStartY() {\n        return this._startY;\n    }\n    getScale() {\n        return this._scale;\n    }\n    getX() {\n        return this._lastX;\n    }\n    getY() {\n        return this._lastY;\n    }\n    getX1() {\n        return this._lastX1;\n    }\n    getY1() {\n        return this._lastY1;\n    }\n    getX2() {\n        return this._lastX2;\n    }\n    getY2() {\n        return this._lastY2;\n    }\n    isSingleTouch() {\n        return this._touchSingle;\n    }\n    isFlickAvailable() {\n        return this._flipAvailable;\n    }\n    disableFlick() {\n        this._flipAvailable = false;\n    }\n    /**\n   * タッチ開始時イベント\n   * @param deviceX タッチした画面のxの値\n   * @param deviceY タッチした画面のyの値\n   */ touchesBegan(deviceX, deviceY) {\n        this._lastX = deviceX;\n        this._lastY = deviceY;\n        this._startX = deviceX;\n        this._startY = deviceY;\n        this._lastTouchDistance = -1.0;\n        this._flipAvailable = true;\n        this._touchSingle = true;\n    }\n    /**\n   * ドラッグ時のイベント\n   * @param deviceX タッチした画面のxの値\n   * @param deviceY タッチした画面のyの値\n   */ touchesMoved(deviceX, deviceY) {\n        this._lastX = deviceX;\n        this._lastY = deviceY;\n        this._lastTouchDistance = -1.0;\n        this._touchSingle = true;\n    }\n    /**\n   * フリックの距離測定\n   * @return フリック距離\n   */ getFlickDistance() {\n        return this.calculateDistance(this._startX, this._startY, this._lastX, this._lastY);\n    }\n    /**\n   * 点１から点２への距離を求める\n   *\n   * @param x1 １つ目のタッチした画面のxの値\n   * @param y1 １つ目のタッチした画面のyの値\n   * @param x2 ２つ目のタッチした画面のxの値\n   * @param y2 ２つ目のタッチした画面のyの値\n   */ calculateDistance(x1, y1, x2, y2) {\n        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n    }\n    /**\n   * ２つ目の値から、移動量を求める。\n   * 違う方向の場合は移動量０。同じ方向の場合は、絶対値が小さい方の値を参照する。\n   *\n   * @param v1 １つ目の移動量\n   * @param v2 ２つ目の移動量\n   *\n   * @return 小さい方の移動量\n   */ calculateMovingAmount(v1, v2) {\n        if (v1 > 0.0 != v2 > 0.0) {\n            return 0.0;\n        }\n        const sign = v1 > 0.0 ? 1.0 : -1.0;\n        const absoluteValue1 = Math.abs(v1);\n        const absoluteValue2 = Math.abs(v2);\n        return sign * (absoluteValue1 < absoluteValue2 ? absoluteValue1 : absoluteValue2);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./WebSDK/src/touchmanager.ts\n");

/***/ }),

/***/ "(ssr)/./libs/ten_vad.js":
/*!*************************!*\
  !*** ./libs/ten_vad.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar createVADModule = (()=>{\n    var _scriptDir = \"file:///Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/libs/ten_vad.js\";\n    return function(createVADModule) {\n        createVADModule = createVADModule || {};\n        var a;\n        a || (a = typeof createVADModule !== 'undefined' ? createVADModule : {});\n        var k, l;\n        a.ready = new Promise(function(b, c) {\n            k = b;\n            l = c;\n        });\n        var p = Object.assign({}, a), r = \"object\" == \"undefined\", u = \"function\" == typeof importScripts, v = \"\", w;\n        if (r || u) u ? v = self.location.href : \"undefined\" != typeof document && document.currentScript && (v = document.currentScript.src), _scriptDir && (v = _scriptDir), 0 !== v.indexOf(\"blob:\") ? v = v.substr(0, v.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1) : v = \"\", u && (w = (b)=>{\n            var c = new XMLHttpRequest;\n            c.open(\"GET\", b, !1);\n            c.responseType = \"arraybuffer\";\n            c.send(null);\n            return new Uint8Array(c.response);\n        });\n        var aa = a.print || console.log.bind(console), x = a.printErr || console.warn.bind(console);\n        Object.assign(a, p);\n        p = null;\n        var y;\n        a.wasmBinary && (y = a.wasmBinary);\n        var noExitRuntime = a.noExitRuntime || !0;\n        \"object\" != typeof WebAssembly && z(\"no native wasm support detected\");\n        var A, B = !1, C = \"undefined\" != typeof TextDecoder ? new TextDecoder(\"utf8\") : void 0, D, E, F;\n        function J() {\n            var b = A.buffer;\n            D = b;\n            a.HEAP8 = new Int8Array(b);\n            a.HEAP16 = new Int16Array(b);\n            a.HEAP32 = new Int32Array(b);\n            a.HEAPU8 = E = new Uint8Array(b);\n            a.HEAPU16 = new Uint16Array(b);\n            a.HEAPU32 = F = new Uint32Array(b);\n            a.HEAPF32 = new Float32Array(b);\n            a.HEAPF64 = new Float64Array(b);\n        }\n        var K = [], L = [], M = [];\n        function ba() {\n            var b = a.preRun.shift();\n            K.unshift(b);\n        }\n        var N = 0, O = null, P = null;\n        function z(b) {\n            if (a.onAbort) a.onAbort(b);\n            b = \"Aborted(\" + b + \")\";\n            x(b);\n            B = !0;\n            b = new WebAssembly.RuntimeError(b + \". Build with -sASSERTIONS for more info.\");\n            l(b);\n            throw b;\n        }\n        function Q() {\n            return R.startsWith(\"data:application/octet-stream;base64,\");\n        }\n        var R;\n        if (a.locateFile) {\n            if (R = \"ten_vad.wasm\", !Q()) {\n                var S = R;\n                R = a.locateFile ? a.locateFile(S, v) : v + S;\n            }\n        } else R = /* asset import */ new __webpack_require__.U(__webpack_require__(/*! ten_vad.wasm */ \"(ssr)/./libs/ten_vad.wasm\")).href;\n        function T() {\n            var b = R;\n            try {\n                if (b == R && y) return new Uint8Array(y);\n                if (w) return w(b);\n                throw \"both async and sync fetching of the wasm failed\";\n            } catch (c) {\n                z(c);\n            }\n        }\n        function ca() {\n            return y || !r && !u || \"function\" != typeof fetch ? Promise.resolve().then(function() {\n                return T();\n            }) : fetch(R, {\n                credentials: \"same-origin\"\n            }).then(function(b) {\n                if (!b.ok) throw \"failed to load wasm binary file at '\" + R + \"'\";\n                return b.arrayBuffer();\n            }).catch(function() {\n                return T();\n            });\n        }\n        function U(b) {\n            for(; 0 < b.length;)b.shift()(a);\n        }\n        var da = [\n            null,\n            [],\n            []\n        ], ea = {\n            a: function() {\n                z(\"\");\n            },\n            f: function(b, c, m) {\n                E.copyWithin(b, c, c + m);\n            },\n            c: function(b) {\n                var c = E.length;\n                b >>>= 0;\n                if (2147483648 < b) return !1;\n                for(var m = 1; 4 >= m; m *= 2){\n                    var h = c * (1 + .2 / m);\n                    h = Math.min(h, b + 100663296);\n                    var d = Math;\n                    h = Math.max(b, h);\n                    d = d.min.call(d, 2147483648, h + (65536 - h % 65536) % 65536);\n                    a: {\n                        try {\n                            A.grow(d - D.byteLength + 65535 >>> 16);\n                            J();\n                            var e = 1;\n                            break a;\n                        } catch (W) {}\n                        e = void 0;\n                    }\n                    if (e) return !0;\n                }\n                return !1;\n            },\n            e: function() {\n                return 52;\n            },\n            b: function() {\n                return 70;\n            },\n            d: function(b, c, m, h) {\n                for(var d = 0, e = 0; e < m; e++){\n                    var W = F[c >> 2], X = F[c + 4 >> 2];\n                    c += 8;\n                    for(var G = 0; G < X; G++){\n                        var f = E[W + G], H = da[b];\n                        if (0 === f || 10 === f) {\n                            f = H;\n                            for(var n = 0, q = n + NaN, t = n; f[t] && !(t >= q);)++t;\n                            if (16 < t - n && f.buffer && C) f = C.decode(f.subarray(n, t));\n                            else {\n                                for(q = \"\"; n < t;){\n                                    var g = f[n++];\n                                    if (g & 128) {\n                                        var I = f[n++] & 63;\n                                        if (192 == (g & 224)) q += String.fromCharCode((g & 31) << 6 | I);\n                                        else {\n                                            var Y = f[n++] & 63;\n                                            g = 224 == (g & 240) ? (g & 15) << 12 | I << 6 | Y : (g & 7) << 18 | I << 12 | Y << 6 | f[n++] & 63;\n                                            65536 > g ? q += String.fromCharCode(g) : (g -= 65536, q += String.fromCharCode(55296 | g >> 10, 56320 | g & 1023));\n                                        }\n                                    } else q += String.fromCharCode(g);\n                                }\n                                f = q;\n                            }\n                            (1 === b ? aa : x)(f);\n                            H.length = 0;\n                        } else H.push(f);\n                    }\n                    d += X;\n                }\n                F[h >> 2] = d;\n                return 0;\n            }\n        };\n        (function() {\n            function b(d) {\n                a.asm = d.exports;\n                A = a.asm.g;\n                J();\n                L.unshift(a.asm.h);\n                N--;\n                a.monitorRunDependencies && a.monitorRunDependencies(N);\n                0 == N && (null !== O && (clearInterval(O), O = null), P && (d = P, P = null, d()));\n            }\n            function c(d) {\n                b(d.instance);\n            }\n            function m(d) {\n                return ca().then(function(e) {\n                    return WebAssembly.instantiate(e, h);\n                }).then(function(e) {\n                    return e;\n                }).then(d, function(e) {\n                    x(\"failed to asynchronously prepare wasm: \" + e);\n                    z(e);\n                });\n            }\n            var h = {\n                a: ea\n            };\n            N++;\n            a.monitorRunDependencies && a.monitorRunDependencies(N);\n            if (a.instantiateWasm) try {\n                return a.instantiateWasm(h, b);\n            } catch (d) {\n                x(\"Module.instantiateWasm callback failed with error: \" + d), l(d);\n            }\n            (function() {\n                return y || \"function\" != typeof WebAssembly.instantiateStreaming || Q() || \"function\" != typeof fetch ? m(c) : fetch(R, {\n                    credentials: \"same-origin\"\n                }).then(function(d) {\n                    return WebAssembly.instantiateStreaming(d, h).then(c, function(e) {\n                        x(\"wasm streaming compile failed: \" + e);\n                        x(\"falling back to ArrayBuffer instantiation\");\n                        return m(c);\n                    });\n                });\n            })().catch(l);\n            return {};\n        })();\n        a.___wasm_call_ctors = function() {\n            return (a.___wasm_call_ctors = a.asm.h).apply(null, arguments);\n        };\n        a._malloc = function() {\n            return (a._malloc = a.asm.i).apply(null, arguments);\n        };\n        a._free = function() {\n            return (a._free = a.asm.j).apply(null, arguments);\n        };\n        a._ten_vad_create = function() {\n            return (a._ten_vad_create = a.asm.k).apply(null, arguments);\n        };\n        a._ten_vad_process = function() {\n            return (a._ten_vad_process = a.asm.l).apply(null, arguments);\n        };\n        a._ten_vad_destroy = function() {\n            return (a._ten_vad_destroy = a.asm.m).apply(null, arguments);\n        };\n        a._ten_vad_get_version = function() {\n            return (a._ten_vad_get_version = a.asm.n).apply(null, arguments);\n        };\n        var V;\n        P = function fa() {\n            V || Z();\n            V || (P = fa);\n        };\n        function Z() {\n            function b() {\n                if (!V && (V = !0, a.calledRun = !0, !B)) {\n                    U(L);\n                    k(a);\n                    if (a.onRuntimeInitialized) a.onRuntimeInitialized();\n                    if (a.postRun) for(\"function\" == typeof a.postRun && (a.postRun = [\n                        a.postRun\n                    ]); a.postRun.length;){\n                        var c = a.postRun.shift();\n                        M.unshift(c);\n                    }\n                    U(M);\n                }\n            }\n            if (!(0 < N)) {\n                if (a.preRun) for(\"function\" == typeof a.preRun && (a.preRun = [\n                    a.preRun\n                ]); a.preRun.length;)ba();\n                U(K);\n                0 < N || (a.setStatus ? (a.setStatus(\"Running...\"), setTimeout(function() {\n                    setTimeout(function() {\n                        a.setStatus(\"\");\n                    }, 1);\n                    b();\n                }, 1)) : b());\n            }\n        }\n        if (a.preInit) for(\"function\" == typeof a.preInit && (a.preInit = [\n            a.preInit\n        ]); 0 < a.preInit.length;)a.preInit.pop()();\n        Z();\n        return createVADModule.ready;\n    };\n})();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createVADModule);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9saWJzL3Rlbl92YWQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUNBLElBQUlBLGtCQUFrQixDQUFDO0lBQ3JCLElBQUlDLGFBQWEsNkVBQWU7SUFFaEMsT0FDRixTQUFTRCxlQUFlO1FBQ3RCQSxrQkFBa0JBLG1CQUFtQixDQUFDO1FBR3hDLElBQUlHO1FBQUVBLEtBQUlBLENBQUFBLElBQUUsT0FBT0gsb0JBQW9CLGNBQWNBLGtCQUFrQixDQUFDO1FBQUcsSUFBSUksR0FBRUM7UUFBRUYsRUFBRUcsS0FBSyxHQUFDLElBQUlDLFFBQVEsU0FBU0MsQ0FBQyxFQUFDQyxDQUFDO1lBQUVMLElBQUVJO1lBQUVILElBQUVJO1FBQUM7UUFBRyxJQUFJQyxJQUFFQyxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFFVCxJQUFHVSxJQUFFLFlBQVUsYUFBY0MsSUFBRSxjQUFZLE9BQU9DLGVBQWNDLElBQUUsSUFBR0M7UUFDM04sSUFBR0osS0FBR0MsR0FBRUEsSUFBRUUsSUFBRUUsS0FBS0MsUUFBUSxDQUFDQyxJQUFJLEdBQUMsZUFBYSxPQUFPQyxZQUFVQSxTQUFTQyxhQUFhLElBQUdOLENBQUFBLElBQUVLLFNBQVNDLGFBQWEsQ0FBQ0MsR0FBRyxHQUFFdEIsY0FBYWUsQ0FBQUEsSUFBRWYsVUFBUyxHQUFHLE1BQUllLEVBQUVRLE9BQU8sQ0FBQyxXQUFTUixJQUFFQSxFQUFFUyxNQUFNLENBQUMsR0FBRVQsRUFBRVUsT0FBTyxDQUFDLFVBQVMsSUFBSUMsV0FBVyxDQUFDLE9BQUssS0FBR1gsSUFBRSxJQUFHRixLQUFJRyxDQUFBQSxJQUFFVCxDQUFBQTtZQUFJLElBQUlDLElBQUUsSUFBSW1CO1lBQWVuQixFQUFFb0IsSUFBSSxDQUFDLE9BQU1yQixHQUFFLENBQUM7WUFBR0MsRUFBRXFCLFlBQVksR0FBQztZQUFjckIsRUFBRXNCLElBQUksQ0FBQztZQUFNLE9BQU8sSUFBSUMsV0FBV3ZCLEVBQUV3QixRQUFRO1FBQUM7UUFBRyxJQUFJQyxLQUFHL0IsRUFBRWdDLEtBQUssSUFBRUMsUUFBUUMsR0FBRyxDQUFDQyxJQUFJLENBQUNGLFVBQVNHLElBQUVwQyxFQUFFcUMsUUFBUSxJQUFFSixRQUFRSyxJQUFJLENBQUNILElBQUksQ0FBQ0Y7UUFBU3pCLE9BQU9DLE1BQU0sQ0FBQ1QsR0FBRU87UUFBR0EsSUFBRTtRQUFLLElBQUlnQztRQUFFdkMsRUFBRXdDLFVBQVUsSUFBR0QsQ0FBQUEsSUFBRXZDLEVBQUV3QyxVQUFVO1FBQ3ZmLElBQUlDLGdCQUFjekMsRUFBRXlDLGFBQWEsSUFBRSxDQUFDO1FBQUUsWUFBVSxPQUFPQyxlQUFhQyxFQUFFO1FBQW1DLElBQUlDLEdBQUVDLElBQUUsQ0FBQyxHQUFFQyxJQUFFLGVBQWEsT0FBT0MsY0FBWSxJQUFJQSxZQUFZLFVBQVEsS0FBSyxHQUFFQyxHQUFFQyxHQUFFQztRQUFFLFNBQVNDO1lBQUksSUFBSTlDLElBQUV1QyxFQUFFUSxNQUFNO1lBQUNKLElBQUUzQztZQUFFTCxFQUFFcUQsS0FBSyxHQUFDLElBQUlDLFVBQVVqRDtZQUFHTCxFQUFFdUQsTUFBTSxHQUFDLElBQUlDLFdBQVduRDtZQUFHTCxFQUFFeUQsTUFBTSxHQUFDLElBQUlDLFdBQVdyRDtZQUFHTCxFQUFFMkQsTUFBTSxHQUFDVixJQUFFLElBQUlwQixXQUFXeEI7WUFBR0wsRUFBRTRELE9BQU8sR0FBQyxJQUFJQyxZQUFZeEQ7WUFBR0wsRUFBRThELE9BQU8sR0FBQ1osSUFBRSxJQUFJYSxZQUFZMUQ7WUFBR0wsRUFBRWdFLE9BQU8sR0FBQyxJQUFJQyxhQUFhNUQ7WUFBR0wsRUFBRWtFLE9BQU8sR0FBQyxJQUFJQyxhQUFhOUQ7UUFBRTtRQUFDLElBQUkrRCxJQUFFLEVBQUUsRUFBQ0MsSUFBRSxFQUFFLEVBQUNDLElBQUUsRUFBRTtRQUNqZCxTQUFTQztZQUFLLElBQUlsRSxJQUFFTCxFQUFFd0UsTUFBTSxDQUFDQyxLQUFLO1lBQUdMLEVBQUVNLE9BQU8sQ0FBQ3JFO1FBQUU7UUFBQyxJQUFJc0UsSUFBRSxHQUFFQyxJQUFFLE1BQUtDLElBQUU7UUFBSyxTQUFTbEMsRUFBRXRDLENBQUM7WUFBRSxJQUFHTCxFQUFFOEUsT0FBTyxFQUFDOUUsRUFBRThFLE9BQU8sQ0FBQ3pFO1lBQUdBLElBQUUsYUFBV0EsSUFBRTtZQUFJK0IsRUFBRS9CO1lBQUd3QyxJQUFFLENBQUM7WUFBRXhDLElBQUUsSUFBSXFDLFlBQVlxQyxZQUFZLENBQUMxRSxJQUFFO1lBQTRDSCxFQUFFRztZQUFHLE1BQU1BO1FBQUU7UUFBQyxTQUFTMkU7WUFBSSxPQUFPQyxFQUFFQyxVQUFVLENBQUM7UUFBd0M7UUFBQyxJQUFJRDtRQUFFLElBQUdqRixFQUFFbUYsVUFBVSxFQUFDO1lBQUMsSUFBR0YsSUFBRSxnQkFBZSxDQUFDRCxLQUFJO2dCQUFDLElBQUlJLElBQUVIO2dCQUFFQSxJQUFFakYsRUFBRW1GLFVBQVUsR0FBQ25GLEVBQUVtRixVQUFVLENBQUNDLEdBQUV2RSxLQUFHQSxJQUFFdUU7WUFBQztRQUFDLE9BQU1ILElBQUUsa0hBQXdDLENBQUVoRSxJQUFJO1FBQ3RjLFNBQVNxRTtZQUFJLElBQUlqRixJQUFFNEU7WUFBRSxJQUFHO2dCQUFDLElBQUc1RSxLQUFHNEUsS0FBRzFDLEdBQUUsT0FBTyxJQUFJVixXQUFXVTtnQkFBRyxJQUFHekIsR0FBRSxPQUFPQSxFQUFFVDtnQkFBRyxNQUFLO1lBQWtELEVBQUMsT0FBTUMsR0FBRTtnQkFBQ3FDLEVBQUVyQztZQUFFO1FBQUM7UUFBQyxTQUFTaUY7WUFBSyxPQUFPaEQsS0FBRyxDQUFDN0IsS0FBRyxDQUFDQyxLQUFHLGNBQVksT0FBTzZFLFFBQU1wRixRQUFRcUYsT0FBTyxHQUFHQyxJQUFJLENBQUM7Z0JBQVcsT0FBT0o7WUFBRyxLQUFHRSxNQUFNUCxHQUFFO2dCQUFDVSxhQUFZO1lBQWEsR0FBR0QsSUFBSSxDQUFDLFNBQVNyRixDQUFDO2dCQUFFLElBQUcsQ0FBQ0EsRUFBRXVGLEVBQUUsRUFBQyxNQUFLLHlDQUF1Q1gsSUFBRTtnQkFBSSxPQUFPNUUsRUFBRXdGLFdBQVc7WUFBRSxHQUFHQyxLQUFLLENBQUM7Z0JBQVcsT0FBT1I7WUFBRztRQUFFO1FBQUMsU0FBU1MsRUFBRTFGLENBQUM7WUFBRSxNQUFLLElBQUVBLEVBQUUyRixNQUFNLEVBQUUzRixFQUFFb0UsS0FBSyxHQUFHekU7UUFBRTtRQUNoZCxJQUFJaUcsS0FBRztZQUFDO1lBQUssRUFBRTtZQUFDLEVBQUU7U0FBQyxFQUFDQyxLQUFHO1lBQUNsRyxHQUFFO2dCQUFXMkMsRUFBRTtZQUFHO1lBQUV3RCxHQUFFLFNBQVM5RixDQUFDLEVBQUNDLENBQUMsRUFBQzhGLENBQUM7Z0JBQUVuRCxFQUFFb0QsVUFBVSxDQUFDaEcsR0FBRUMsR0FBRUEsSUFBRThGO1lBQUU7WUFBRTlGLEdBQUUsU0FBU0QsQ0FBQztnQkFBRSxJQUFJQyxJQUFFMkMsRUFBRStDLE1BQU07Z0JBQUMzRixPQUFLO2dCQUFFLElBQUcsYUFBV0EsR0FBRSxPQUFNLENBQUM7Z0JBQUUsSUFBSSxJQUFJK0YsSUFBRSxHQUFFLEtBQUdBLEdBQUVBLEtBQUcsRUFBRTtvQkFBQyxJQUFJRSxJQUFFaEcsSUFBRyxLQUFFLEtBQUc4RixDQUFBQTtvQkFBR0UsSUFBRUMsS0FBS0MsR0FBRyxDQUFDRixHQUFFakcsSUFBRTtvQkFBVyxJQUFJb0csSUFBRUY7b0JBQUtELElBQUVDLEtBQUtHLEdBQUcsQ0FBQ3JHLEdBQUVpRztvQkFBR0csSUFBRUEsRUFBRUQsR0FBRyxDQUFDRyxJQUFJLENBQUNGLEdBQUUsWUFBV0gsSUFBRSxDQUFDLFFBQU1BLElBQUUsS0FBSSxJQUFHO29CQUFPdEcsR0FBRTt3QkFBQyxJQUFHOzRCQUFDNEMsRUFBRWdFLElBQUksQ0FBQ0gsSUFBRXpELEVBQUU2RCxVQUFVLEdBQUMsVUFBUTs0QkFBSTFEOzRCQUFJLElBQUkyRCxJQUFFOzRCQUFFLE1BQU05Rzt3QkFBQyxFQUFDLE9BQU0rRyxHQUFFLENBQUM7d0JBQUNELElBQUUsS0FBSztvQkFBQztvQkFBQyxJQUFHQSxHQUFFLE9BQU0sQ0FBQztnQkFBQztnQkFBQyxPQUFNLENBQUM7WUFBQztZQUFFQSxHQUFFO2dCQUFXLE9BQU87WUFBRTtZQUFFekcsR0FBRTtnQkFBVyxPQUFPO1lBQUU7WUFBRW9HLEdBQUUsU0FBU3BHLENBQUMsRUFBQ0MsQ0FBQyxFQUFDOEYsQ0FBQyxFQUFDRSxDQUFDO2dCQUFFLElBQUksSUFBSUcsSUFBRSxHQUFFSyxJQUFFLEdBQUVBLElBQUVWLEdBQUVVLElBQUk7b0JBQUMsSUFBSUMsSUFBRTdELENBQUMsQ0FBQzVDLEtBQUcsRUFBRSxFQUNwZjBHLElBQUU5RCxDQUFDLENBQUM1QyxJQUFFLEtBQUcsRUFBRTtvQkFBQ0EsS0FBRztvQkFBRSxJQUFJLElBQUkyRyxJQUFFLEdBQUVBLElBQUVELEdBQUVDLElBQUk7d0JBQUMsSUFBSWQsSUFBRWxELENBQUMsQ0FBQzhELElBQUVFLEVBQUUsRUFBQ0MsSUFBRWpCLEVBQUUsQ0FBQzVGLEVBQUU7d0JBQUMsSUFBRyxNQUFJOEYsS0FBRyxPQUFLQSxHQUFFOzRCQUFDQSxJQUFFZTs0QkFBRSxJQUFJLElBQUlDLElBQUUsR0FBRUMsSUFBRUQsSUFBRUUsS0FBSUMsSUFBRUgsR0FBRWhCLENBQUMsQ0FBQ21CLEVBQUUsSUFBRSxDQUFFQSxDQUFBQSxLQUFHRixDQUFBQSxHQUFJLEVBQUVFOzRCQUFFLElBQUcsS0FBR0EsSUFBRUgsS0FBR2hCLEVBQUUvQyxNQUFNLElBQUVOLEdBQUVxRCxJQUFFckQsRUFBRXlFLE1BQU0sQ0FBQ3BCLEVBQUVxQixRQUFRLENBQUNMLEdBQUVHO2lDQUFRO2dDQUFDLElBQUlGLElBQUUsSUFBR0QsSUFBRUcsR0FBRztvQ0FBQyxJQUFJRyxJQUFFdEIsQ0FBQyxDQUFDZ0IsSUFBSTtvQ0FBQyxJQUFHTSxJQUFFLEtBQUk7d0NBQUMsSUFBSUMsSUFBRXZCLENBQUMsQ0FBQ2dCLElBQUksR0FBQzt3Q0FBRyxJQUFHLE9BQU1NLENBQUFBLElBQUUsR0FBRSxHQUFHTCxLQUFHTyxPQUFPQyxZQUFZLENBQUMsQ0FBQ0gsSUFBRSxFQUFDLEtBQUksSUFBRUM7NkNBQU87NENBQUMsSUFBSUcsSUFBRTFCLENBQUMsQ0FBQ2dCLElBQUksR0FBQzs0Q0FBR00sSUFBRSxPQUFNQSxDQUFBQSxJQUFFLEdBQUUsSUFBRyxDQUFDQSxJQUFFLEVBQUMsS0FBSSxLQUFHQyxLQUFHLElBQUVHLElBQUUsQ0FBQ0osSUFBRSxNQUFJLEtBQUdDLEtBQUcsS0FBR0csS0FBRyxJQUFFMUIsQ0FBQyxDQUFDZ0IsSUFBSSxHQUFDOzRDQUFHLFFBQU1NLElBQUVMLEtBQUdPLE9BQU9DLFlBQVksQ0FBQ0gsS0FBSUEsQ0FBQUEsS0FBRyxPQUFNTCxLQUFHTyxPQUFPQyxZQUFZLENBQUMsUUFBTUgsS0FBRyxJQUFHLFFBQU1BLElBQUUsS0FBSTt3Q0FBRTtvQ0FBQyxPQUFNTCxLQUFHTyxPQUFPQyxZQUFZLENBQUNIO2dDQUFFO2dDQUFDdEIsSUFBRWlCOzRCQUFDOzRCQUFFLE9BQ3RmL0csSUFBRTBCLEtBQUdLLENBQUFBLEVBQUcrRDs0QkFBR2UsRUFBRWxCLE1BQU0sR0FBQzt3QkFBQyxPQUFNa0IsRUFBRVksSUFBSSxDQUFDM0I7b0JBQUU7b0JBQUNNLEtBQUdPO2dCQUFDO2dCQUFDOUQsQ0FBQyxDQUFDb0QsS0FBRyxFQUFFLEdBQUNHO2dCQUFFLE9BQU87WUFBQztRQUFDO1FBQzVEO1lBQVcsU0FBU3BHLEVBQUVvRyxDQUFDO2dCQUFFekcsRUFBRStILEdBQUcsR0FBQ3RCLEVBQUV1QixPQUFPO2dCQUFDcEYsSUFBRTVDLEVBQUUrSCxHQUFHLENBQUNOLENBQUM7Z0JBQUN0RTtnQkFBSWtCLEVBQUVLLE9BQU8sQ0FBQzFFLEVBQUUrSCxHQUFHLENBQUN6QixDQUFDO2dCQUFFM0I7Z0JBQUkzRSxFQUFFaUksc0JBQXNCLElBQUVqSSxFQUFFaUksc0JBQXNCLENBQUN0RDtnQkFBRyxLQUFHQSxLQUFJLFVBQU9DLEtBQUlzRCxDQUFBQSxjQUFjdEQsSUFBR0EsSUFBRSxJQUFHLEdBQUdDLEtBQUk0QixDQUFBQSxJQUFFNUIsR0FBRUEsSUFBRSxNQUFLNEIsR0FBRSxDQUFDO1lBQUU7WUFBQyxTQUFTbkcsRUFBRW1HLENBQUM7Z0JBQUVwRyxFQUFFb0csRUFBRTBCLFFBQVE7WUFBQztZQUFDLFNBQVMvQixFQUFFSyxDQUFDO2dCQUFFLE9BQU9sQixLQUFLRyxJQUFJLENBQUMsU0FBU29CLENBQUM7b0JBQUUsT0FBT3BFLFlBQVkwRixXQUFXLENBQUN0QixHQUFFUjtnQkFBRSxHQUFHWixJQUFJLENBQUMsU0FBU29CLENBQUM7b0JBQUUsT0FBT0E7Z0JBQUMsR0FBR3BCLElBQUksQ0FBQ2UsR0FBRSxTQUFTSyxDQUFDO29CQUFFMUUsRUFBRSw0Q0FBMEMwRTtvQkFBR25FLEVBQUVtRTtnQkFBRTtZQUFFO1lBQUMsSUFBSVIsSUFBRTtnQkFBQ3RHLEdBQUVrRztZQUFFO1lBQUV2QjtZQUFJM0UsRUFBRWlJLHNCQUFzQixJQUFFakksRUFBRWlJLHNCQUFzQixDQUFDdEQ7WUFBRyxJQUFHM0UsRUFBRXFJLGVBQWUsRUFBQyxJQUFHO2dCQUFDLE9BQU9ySSxFQUFFcUksZUFBZSxDQUFDL0IsR0FDaGhCakc7WUFBRSxFQUFDLE9BQU1vRyxHQUFFO2dCQUFDckUsRUFBRSx3REFBc0RxRSxJQUFHdkcsRUFBRXVHO1lBQUU7WUFBRTtnQkFBVyxPQUFPbEUsS0FBRyxjQUFZLE9BQU9HLFlBQVk0RixvQkFBb0IsSUFBRXRELE9BQUssY0FBWSxPQUFPUSxRQUFNWSxFQUFFOUYsS0FBR2tGLE1BQU1QLEdBQUU7b0JBQUNVLGFBQVk7Z0JBQWEsR0FBR0QsSUFBSSxDQUFDLFNBQVNlLENBQUM7b0JBQUUsT0FBTy9ELFlBQVk0RixvQkFBb0IsQ0FBQzdCLEdBQUVILEdBQUdaLElBQUksQ0FBQ3BGLEdBQUUsU0FBU3dHLENBQUM7d0JBQUUxRSxFQUFFLG9DQUFrQzBFO3dCQUFHMUUsRUFBRTt3QkFBNkMsT0FBT2dFLEVBQUU5RjtvQkFBRTtnQkFBRTtZQUFFLEtBQUt3RixLQUFLLENBQUM1RjtZQUFHLE9BQU0sQ0FBQztRQUFDO1FBQzNhRixFQUFFdUksa0JBQWtCLEdBQUM7WUFBVyxPQUFNLENBQUN2SSxFQUFFdUksa0JBQWtCLEdBQUN2SSxFQUFFK0gsR0FBRyxDQUFDekIsQ0FBQyxFQUFFa0MsS0FBSyxDQUFDLE1BQUtDO1FBQVU7UUFBRXpJLEVBQUUwSSxPQUFPLEdBQUM7WUFBVyxPQUFNLENBQUMxSSxFQUFFMEksT0FBTyxHQUFDMUksRUFBRStILEdBQUcsQ0FBQ1ksQ0FBQyxFQUFFSCxLQUFLLENBQUMsTUFBS0M7UUFBVTtRQUFFekksRUFBRTRJLEtBQUssR0FBQztZQUFXLE9BQU0sQ0FBQzVJLEVBQUU0SSxLQUFLLEdBQUM1SSxFQUFFK0gsR0FBRyxDQUFDYyxDQUFDLEVBQUVMLEtBQUssQ0FBQyxNQUFLQztRQUFVO1FBQUV6SSxFQUFFOEksZUFBZSxHQUFDO1lBQVcsT0FBTSxDQUFDOUksRUFBRThJLGVBQWUsR0FBQzlJLEVBQUUrSCxHQUFHLENBQUM5SCxDQUFDLEVBQUV1SSxLQUFLLENBQUMsTUFBS0M7UUFBVTtRQUFFekksRUFBRStJLGdCQUFnQixHQUFDO1lBQVcsT0FBTSxDQUFDL0ksRUFBRStJLGdCQUFnQixHQUFDL0ksRUFBRStILEdBQUcsQ0FBQzdILENBQUMsRUFBRXNJLEtBQUssQ0FBQyxNQUFLQztRQUFVO1FBQUV6SSxFQUFFZ0osZ0JBQWdCLEdBQUM7WUFBVyxPQUFNLENBQUNoSixFQUFFZ0osZ0JBQWdCLEdBQUNoSixFQUFFK0gsR0FBRyxDQUFDM0IsQ0FBQyxFQUFFb0MsS0FBSyxDQUFDLE1BQUtDO1FBQVU7UUFDeGV6SSxFQUFFaUosb0JBQW9CLEdBQUM7WUFBVyxPQUFNLENBQUNqSixFQUFFaUosb0JBQW9CLEdBQUNqSixFQUFFK0gsR0FBRyxDQUFDWixDQUFDLEVBQUVxQixLQUFLLENBQUMsTUFBS0M7UUFBVTtRQUFFLElBQUlTO1FBQUVyRSxJQUFFLFNBQVNzRTtZQUFLRCxLQUFHRTtZQUFJRixLQUFJckUsQ0FBQUEsSUFBRXNFLEVBQUM7UUFBRTtRQUN0SSxTQUFTQztZQUFJLFNBQVMvSTtnQkFBSSxJQUFHLENBQUM2SSxLQUFJQSxDQUFBQSxJQUFFLENBQUMsR0FBRWxKLEVBQUVxSixTQUFTLEdBQUMsQ0FBQyxHQUFFLENBQUN4RyxDQUFBQSxHQUFHO29CQUFDa0QsRUFBRTFCO29CQUFHcEUsRUFBRUQ7b0JBQUcsSUFBR0EsRUFBRXNKLG9CQUFvQixFQUFDdEosRUFBRXNKLG9CQUFvQjtvQkFBRyxJQUFHdEosRUFBRXVKLE9BQU8sRUFBQyxJQUFJLGNBQVksT0FBT3ZKLEVBQUV1SixPQUFPLElBQUd2SixDQUFBQSxFQUFFdUosT0FBTyxHQUFDO3dCQUFDdkosRUFBRXVKLE9BQU87cUJBQUMsR0FBRXZKLEVBQUV1SixPQUFPLENBQUN2RCxNQUFNLEVBQUU7d0JBQUMsSUFBSTFGLElBQUVOLEVBQUV1SixPQUFPLENBQUM5RSxLQUFLO3dCQUFHSCxFQUFFSSxPQUFPLENBQUNwRTtvQkFBRTtvQkFBQ3lGLEVBQUV6QjtnQkFBRTtZQUFDO1lBQUMsSUFBRyxDQUFFLEtBQUVLLENBQUFBLEdBQUc7Z0JBQUMsSUFBRzNFLEVBQUV3RSxNQUFNLEVBQUMsSUFBSSxjQUFZLE9BQU94RSxFQUFFd0UsTUFBTSxJQUFHeEUsQ0FBQUEsRUFBRXdFLE1BQU0sR0FBQztvQkFBQ3hFLEVBQUV3RSxNQUFNO2lCQUFDLEdBQUV4RSxFQUFFd0UsTUFBTSxDQUFDd0IsTUFBTSxFQUFFekI7Z0JBQUt3QixFQUFFM0I7Z0JBQUcsSUFBRU8sS0FBSTNFLENBQUFBLEVBQUV3SixTQUFTLEdBQUV4SixDQUFBQSxFQUFFd0osU0FBUyxDQUFDLGVBQWNDLFdBQVc7b0JBQVdBLFdBQVc7d0JBQVd6SixFQUFFd0osU0FBUyxDQUFDO29CQUFHLEdBQUU7b0JBQUduSjtnQkFBRyxHQUFFLEVBQUMsSUFBR0EsR0FBRTtZQUFFO1FBQUM7UUFDamUsSUFBR0wsRUFBRTBKLE9BQU8sRUFBQyxJQUFJLGNBQVksT0FBTzFKLEVBQUUwSixPQUFPLElBQUcxSixDQUFBQSxFQUFFMEosT0FBTyxHQUFDO1lBQUMxSixFQUFFMEosT0FBTztTQUFDLEdBQUUsSUFBRTFKLEVBQUUwSixPQUFPLENBQUMxRCxNQUFNLEVBQUVoRyxFQUFFMEosT0FBTyxDQUFDQyxHQUFHO1FBQUtQO1FBRzNHLE9BQU92SixnQkFBZ0JNLEtBQUs7SUFDOUI7QUFFQTtBQUNBLGlFQUFlTixlQUFlQSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL2xpYnMvdGVuX3ZhZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBjcmVhdGVWQURNb2R1bGUgPSAoKCkgPT4ge1xuICB2YXIgX3NjcmlwdERpciA9IGltcG9ydC5tZXRhLnVybDtcbiAgXG4gIHJldHVybiAoXG5mdW5jdGlvbihjcmVhdGVWQURNb2R1bGUpIHtcbiAgY3JlYXRlVkFETW9kdWxlID0gY3JlYXRlVkFETW9kdWxlIHx8IHt9O1xuXG5cbnZhciBhO2F8fChhPXR5cGVvZiBjcmVhdGVWQURNb2R1bGUgIT09ICd1bmRlZmluZWQnID8gY3JlYXRlVkFETW9kdWxlIDoge30pO3ZhciBrLGw7YS5yZWFkeT1uZXcgUHJvbWlzZShmdW5jdGlvbihiLGMpe2s9YjtsPWN9KTt2YXIgcD1PYmplY3QuYXNzaWduKHt9LGEpLHI9XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyx1PVwiZnVuY3Rpb25cIj09dHlwZW9mIGltcG9ydFNjcmlwdHMsdj1cIlwiLHc7XG5pZihyfHx1KXU/dj1zZWxmLmxvY2F0aW9uLmhyZWY6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGRvY3VtZW50JiZkb2N1bWVudC5jdXJyZW50U2NyaXB0JiYodj1kb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYyksX3NjcmlwdERpciYmKHY9X3NjcmlwdERpciksMCE9PXYuaW5kZXhPZihcImJsb2I6XCIpP3Y9di5zdWJzdHIoMCx2LnJlcGxhY2UoL1s/I10uKi8sXCJcIikubGFzdEluZGV4T2YoXCIvXCIpKzEpOnY9XCJcIix1JiYodz1iPT57dmFyIGM9bmV3IFhNTEh0dHBSZXF1ZXN0O2Mub3BlbihcIkdFVFwiLGIsITEpO2MucmVzcG9uc2VUeXBlPVwiYXJyYXlidWZmZXJcIjtjLnNlbmQobnVsbCk7cmV0dXJuIG5ldyBVaW50OEFycmF5KGMucmVzcG9uc2UpfSk7dmFyIGFhPWEucHJpbnR8fGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSkseD1hLnByaW50RXJyfHxjb25zb2xlLndhcm4uYmluZChjb25zb2xlKTtPYmplY3QuYXNzaWduKGEscCk7cD1udWxsO3ZhciB5O2Eud2FzbUJpbmFyeSYmKHk9YS53YXNtQmluYXJ5KTtcbnZhciBub0V4aXRSdW50aW1lPWEubm9FeGl0UnVudGltZXx8ITA7XCJvYmplY3RcIiE9dHlwZW9mIFdlYkFzc2VtYmx5JiZ6KFwibm8gbmF0aXZlIHdhc20gc3VwcG9ydCBkZXRlY3RlZFwiKTt2YXIgQSxCPSExLEM9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFRleHREZWNvZGVyP25ldyBUZXh0RGVjb2RlcihcInV0ZjhcIik6dm9pZCAwLEQsRSxGO2Z1bmN0aW9uIEooKXt2YXIgYj1BLmJ1ZmZlcjtEPWI7YS5IRUFQOD1uZXcgSW50OEFycmF5KGIpO2EuSEVBUDE2PW5ldyBJbnQxNkFycmF5KGIpO2EuSEVBUDMyPW5ldyBJbnQzMkFycmF5KGIpO2EuSEVBUFU4PUU9bmV3IFVpbnQ4QXJyYXkoYik7YS5IRUFQVTE2PW5ldyBVaW50MTZBcnJheShiKTthLkhFQVBVMzI9Rj1uZXcgVWludDMyQXJyYXkoYik7YS5IRUFQRjMyPW5ldyBGbG9hdDMyQXJyYXkoYik7YS5IRUFQRjY0PW5ldyBGbG9hdDY0QXJyYXkoYil9dmFyIEs9W10sTD1bXSxNPVtdO1xuZnVuY3Rpb24gYmEoKXt2YXIgYj1hLnByZVJ1bi5zaGlmdCgpO0sudW5zaGlmdChiKX12YXIgTj0wLE89bnVsbCxQPW51bGw7ZnVuY3Rpb24geihiKXtpZihhLm9uQWJvcnQpYS5vbkFib3J0KGIpO2I9XCJBYm9ydGVkKFwiK2IrXCIpXCI7eChiKTtCPSEwO2I9bmV3IFdlYkFzc2VtYmx5LlJ1bnRpbWVFcnJvcihiK1wiLiBCdWlsZCB3aXRoIC1zQVNTRVJUSU9OUyBmb3IgbW9yZSBpbmZvLlwiKTtsKGIpO3Rocm93IGI7fWZ1bmN0aW9uIFEoKXtyZXR1cm4gUi5zdGFydHNXaXRoKFwiZGF0YTphcHBsaWNhdGlvbi9vY3RldC1zdHJlYW07YmFzZTY0LFwiKX12YXIgUjtpZihhLmxvY2F0ZUZpbGUpe2lmKFI9XCJ0ZW5fdmFkLndhc21cIiwhUSgpKXt2YXIgUz1SO1I9YS5sb2NhdGVGaWxlP2EubG9jYXRlRmlsZShTLHYpOnYrU319ZWxzZSBSPShuZXcgVVJMKFwidGVuX3ZhZC53YXNtXCIsaW1wb3J0Lm1ldGEudXJsKSkuaHJlZjtcbmZ1bmN0aW9uIFQoKXt2YXIgYj1SO3RyeXtpZihiPT1SJiZ5KXJldHVybiBuZXcgVWludDhBcnJheSh5KTtpZih3KXJldHVybiB3KGIpO3Rocm93XCJib3RoIGFzeW5jIGFuZCBzeW5jIGZldGNoaW5nIG9mIHRoZSB3YXNtIGZhaWxlZFwiO31jYXRjaChjKXt6KGMpfX1mdW5jdGlvbiBjYSgpe3JldHVybiB5fHwhciYmIXV8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIGZldGNoP1Byb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gVCgpfSk6ZmV0Y2goUix7Y3JlZGVudGlhbHM6XCJzYW1lLW9yaWdpblwifSkudGhlbihmdW5jdGlvbihiKXtpZighYi5vayl0aHJvd1wiZmFpbGVkIHRvIGxvYWQgd2FzbSBiaW5hcnkgZmlsZSBhdCAnXCIrUitcIidcIjtyZXR1cm4gYi5hcnJheUJ1ZmZlcigpfSkuY2F0Y2goZnVuY3Rpb24oKXtyZXR1cm4gVCgpfSl9ZnVuY3Rpb24gVShiKXtmb3IoOzA8Yi5sZW5ndGg7KWIuc2hpZnQoKShhKX1cbnZhciBkYT1bbnVsbCxbXSxbXV0sZWE9e2E6ZnVuY3Rpb24oKXt6KFwiXCIpfSxmOmZ1bmN0aW9uKGIsYyxtKXtFLmNvcHlXaXRoaW4oYixjLGMrbSl9LGM6ZnVuY3Rpb24oYil7dmFyIGM9RS5sZW5ndGg7Yj4+Pj0wO2lmKDIxNDc0ODM2NDg8YilyZXR1cm4hMTtmb3IodmFyIG09MTs0Pj1tO20qPTIpe3ZhciBoPWMqKDErLjIvbSk7aD1NYXRoLm1pbihoLGIrMTAwNjYzMjk2KTt2YXIgZD1NYXRoO2g9TWF0aC5tYXgoYixoKTtkPWQubWluLmNhbGwoZCwyMTQ3NDgzNjQ4LGgrKDY1NTM2LWglNjU1MzYpJTY1NTM2KTthOnt0cnl7QS5ncm93KGQtRC5ieXRlTGVuZ3RoKzY1NTM1Pj4+MTYpO0ooKTt2YXIgZT0xO2JyZWFrIGF9Y2F0Y2goVyl7fWU9dm9pZCAwfWlmKGUpcmV0dXJuITB9cmV0dXJuITF9LGU6ZnVuY3Rpb24oKXtyZXR1cm4gNTJ9LGI6ZnVuY3Rpb24oKXtyZXR1cm4gNzB9LGQ6ZnVuY3Rpb24oYixjLG0saCl7Zm9yKHZhciBkPTAsZT0wO2U8bTtlKyspe3ZhciBXPUZbYz4+Ml0sXG5YPUZbYys0Pj4yXTtjKz04O2Zvcih2YXIgRz0wO0c8WDtHKyspe3ZhciBmPUVbVytHXSxIPWRhW2JdO2lmKDA9PT1mfHwxMD09PWYpe2Y9SDtmb3IodmFyIG49MCxxPW4rTmFOLHQ9bjtmW3RdJiYhKHQ+PXEpOykrK3Q7aWYoMTY8dC1uJiZmLmJ1ZmZlciYmQylmPUMuZGVjb2RlKGYuc3ViYXJyYXkobix0KSk7ZWxzZXtmb3IocT1cIlwiO248dDspe3ZhciBnPWZbbisrXTtpZihnJjEyOCl7dmFyIEk9ZltuKytdJjYzO2lmKDE5Mj09KGcmMjI0KSlxKz1TdHJpbmcuZnJvbUNoYXJDb2RlKChnJjMxKTw8NnxJKTtlbHNle3ZhciBZPWZbbisrXSY2MztnPTIyND09KGcmMjQwKT8oZyYxNSk8PDEyfEk8PDZ8WTooZyY3KTw8MTh8STw8MTJ8WTw8NnxmW24rK10mNjM7NjU1MzY+Zz9xKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGcpOihnLT02NTUzNixxKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDU1Mjk2fGc+PjEwLDU2MzIwfGcmMTAyMykpfX1lbHNlIHErPVN0cmluZy5mcm9tQ2hhckNvZGUoZyl9Zj1xfSgxPT09XG5iP2FhOngpKGYpO0gubGVuZ3RoPTB9ZWxzZSBILnB1c2goZil9ZCs9WH1GW2g+PjJdPWQ7cmV0dXJuIDB9fTtcbihmdW5jdGlvbigpe2Z1bmN0aW9uIGIoZCl7YS5hc209ZC5leHBvcnRzO0E9YS5hc20uZztKKCk7TC51bnNoaWZ0KGEuYXNtLmgpO04tLTthLm1vbml0b3JSdW5EZXBlbmRlbmNpZXMmJmEubW9uaXRvclJ1bkRlcGVuZGVuY2llcyhOKTswPT1OJiYobnVsbCE9PU8mJihjbGVhckludGVydmFsKE8pLE89bnVsbCksUCYmKGQ9UCxQPW51bGwsZCgpKSl9ZnVuY3Rpb24gYyhkKXtiKGQuaW5zdGFuY2UpfWZ1bmN0aW9uIG0oZCl7cmV0dXJuIGNhKCkudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gV2ViQXNzZW1ibHkuaW5zdGFudGlhdGUoZSxoKX0pLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIGV9KS50aGVuKGQsZnVuY3Rpb24oZSl7eChcImZhaWxlZCB0byBhc3luY2hyb25vdXNseSBwcmVwYXJlIHdhc206IFwiK2UpO3ooZSl9KX12YXIgaD17YTplYX07TisrO2EubW9uaXRvclJ1bkRlcGVuZGVuY2llcyYmYS5tb25pdG9yUnVuRGVwZW5kZW5jaWVzKE4pO2lmKGEuaW5zdGFudGlhdGVXYXNtKXRyeXtyZXR1cm4gYS5pbnN0YW50aWF0ZVdhc20oaCxcbmIpfWNhdGNoKGQpe3goXCJNb2R1bGUuaW5zdGFudGlhdGVXYXNtIGNhbGxiYWNrIGZhaWxlZCB3aXRoIGVycm9yOiBcIitkKSxsKGQpfShmdW5jdGlvbigpe3JldHVybiB5fHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZVN0cmVhbWluZ3x8USgpfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBmZXRjaD9tKGMpOmZldGNoKFIse2NyZWRlbnRpYWxzOlwic2FtZS1vcmlnaW5cIn0pLnRoZW4oZnVuY3Rpb24oZCl7cmV0dXJuIFdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlU3RyZWFtaW5nKGQsaCkudGhlbihjLGZ1bmN0aW9uKGUpe3goXCJ3YXNtIHN0cmVhbWluZyBjb21waWxlIGZhaWxlZDogXCIrZSk7eChcImZhbGxpbmcgYmFjayB0byBBcnJheUJ1ZmZlciBpbnN0YW50aWF0aW9uXCIpO3JldHVybiBtKGMpfSl9KX0pKCkuY2F0Y2gobCk7cmV0dXJue319KSgpO1xuYS5fX193YXNtX2NhbGxfY3RvcnM9ZnVuY3Rpb24oKXtyZXR1cm4oYS5fX193YXNtX2NhbGxfY3RvcnM9YS5hc20uaCkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTthLl9tYWxsb2M9ZnVuY3Rpb24oKXtyZXR1cm4oYS5fbWFsbG9jPWEuYXNtLmkpLmFwcGx5KG51bGwsYXJndW1lbnRzKX07YS5fZnJlZT1mdW5jdGlvbigpe3JldHVybihhLl9mcmVlPWEuYXNtLmopLmFwcGx5KG51bGwsYXJndW1lbnRzKX07YS5fdGVuX3ZhZF9jcmVhdGU9ZnVuY3Rpb24oKXtyZXR1cm4oYS5fdGVuX3ZhZF9jcmVhdGU9YS5hc20uaykuYXBwbHkobnVsbCxhcmd1bWVudHMpfTthLl90ZW5fdmFkX3Byb2Nlc3M9ZnVuY3Rpb24oKXtyZXR1cm4oYS5fdGVuX3ZhZF9wcm9jZXNzPWEuYXNtLmwpLmFwcGx5KG51bGwsYXJndW1lbnRzKX07YS5fdGVuX3ZhZF9kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuKGEuX3Rlbl92YWRfZGVzdHJveT1hLmFzbS5tKS5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xuYS5fdGVuX3ZhZF9nZXRfdmVyc2lvbj1mdW5jdGlvbigpe3JldHVybihhLl90ZW5fdmFkX2dldF92ZXJzaW9uPWEuYXNtLm4pLmFwcGx5KG51bGwsYXJndW1lbnRzKX07dmFyIFY7UD1mdW5jdGlvbiBmYSgpe1Z8fFooKTtWfHwoUD1mYSl9O1xuZnVuY3Rpb24gWigpe2Z1bmN0aW9uIGIoKXtpZighViYmKFY9ITAsYS5jYWxsZWRSdW49ITAsIUIpKXtVKEwpO2soYSk7aWYoYS5vblJ1bnRpbWVJbml0aWFsaXplZClhLm9uUnVudGltZUluaXRpYWxpemVkKCk7aWYoYS5wb3N0UnVuKWZvcihcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLnBvc3RSdW4mJihhLnBvc3RSdW49W2EucG9zdFJ1bl0pO2EucG9zdFJ1bi5sZW5ndGg7KXt2YXIgYz1hLnBvc3RSdW4uc2hpZnQoKTtNLnVuc2hpZnQoYyl9VShNKX19aWYoISgwPE4pKXtpZihhLnByZVJ1bilmb3IoXCJmdW5jdGlvblwiPT10eXBlb2YgYS5wcmVSdW4mJihhLnByZVJ1bj1bYS5wcmVSdW5dKTthLnByZVJ1bi5sZW5ndGg7KWJhKCk7VShLKTswPE58fChhLnNldFN0YXR1cz8oYS5zZXRTdGF0dXMoXCJSdW5uaW5nLi4uXCIpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YS5zZXRTdGF0dXMoXCJcIil9LDEpO2IoKX0sMSkpOmIoKSl9fVxuaWYoYS5wcmVJbml0KWZvcihcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLnByZUluaXQmJihhLnByZUluaXQ9W2EucHJlSW5pdF0pOzA8YS5wcmVJbml0Lmxlbmd0aDspYS5wcmVJbml0LnBvcCgpKCk7WigpO1xuXG5cbiAgcmV0dXJuIGNyZWF0ZVZBRE1vZHVsZS5yZWFkeVxufVxuKTtcbn0pKCk7XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVWQURNb2R1bGU7Il0sIm5hbWVzIjpbImNyZWF0ZVZBRE1vZHVsZSIsIl9zY3JpcHREaXIiLCJ1cmwiLCJhIiwiayIsImwiLCJyZWFkeSIsIlByb21pc2UiLCJiIiwiYyIsInAiLCJPYmplY3QiLCJhc3NpZ24iLCJyIiwidSIsImltcG9ydFNjcmlwdHMiLCJ2IiwidyIsInNlbGYiLCJsb2NhdGlvbiIsImhyZWYiLCJkb2N1bWVudCIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJpbmRleE9mIiwic3Vic3RyIiwicmVwbGFjZSIsImxhc3RJbmRleE9mIiwiWE1MSHR0cFJlcXVlc3QiLCJvcGVuIiwicmVzcG9uc2VUeXBlIiwic2VuZCIsIlVpbnQ4QXJyYXkiLCJyZXNwb25zZSIsImFhIiwicHJpbnQiLCJjb25zb2xlIiwibG9nIiwiYmluZCIsIngiLCJwcmludEVyciIsIndhcm4iLCJ5Iiwid2FzbUJpbmFyeSIsIm5vRXhpdFJ1bnRpbWUiLCJXZWJBc3NlbWJseSIsInoiLCJBIiwiQiIsIkMiLCJUZXh0RGVjb2RlciIsIkQiLCJFIiwiRiIsIkoiLCJidWZmZXIiLCJIRUFQOCIsIkludDhBcnJheSIsIkhFQVAxNiIsIkludDE2QXJyYXkiLCJIRUFQMzIiLCJJbnQzMkFycmF5IiwiSEVBUFU4IiwiSEVBUFUxNiIsIlVpbnQxNkFycmF5IiwiSEVBUFUzMiIsIlVpbnQzMkFycmF5IiwiSEVBUEYzMiIsIkZsb2F0MzJBcnJheSIsIkhFQVBGNjQiLCJGbG9hdDY0QXJyYXkiLCJLIiwiTCIsIk0iLCJiYSIsInByZVJ1biIsInNoaWZ0IiwidW5zaGlmdCIsIk4iLCJPIiwiUCIsIm9uQWJvcnQiLCJSdW50aW1lRXJyb3IiLCJRIiwiUiIsInN0YXJ0c1dpdGgiLCJsb2NhdGVGaWxlIiwiUyIsIlVSTCIsIlQiLCJjYSIsImZldGNoIiwicmVzb2x2ZSIsInRoZW4iLCJjcmVkZW50aWFscyIsIm9rIiwiYXJyYXlCdWZmZXIiLCJjYXRjaCIsIlUiLCJsZW5ndGgiLCJkYSIsImVhIiwiZiIsIm0iLCJjb3B5V2l0aGluIiwiaCIsIk1hdGgiLCJtaW4iLCJkIiwibWF4IiwiY2FsbCIsImdyb3ciLCJieXRlTGVuZ3RoIiwiZSIsIlciLCJYIiwiRyIsIkgiLCJuIiwicSIsIk5hTiIsInQiLCJkZWNvZGUiLCJzdWJhcnJheSIsImciLCJJIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiWSIsInB1c2giLCJhc20iLCJleHBvcnRzIiwibW9uaXRvclJ1bkRlcGVuZGVuY2llcyIsImNsZWFySW50ZXJ2YWwiLCJpbnN0YW5jZSIsImluc3RhbnRpYXRlIiwiaW5zdGFudGlhdGVXYXNtIiwiaW5zdGFudGlhdGVTdHJlYW1pbmciLCJfX193YXNtX2NhbGxfY3RvcnMiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9tYWxsb2MiLCJpIiwiX2ZyZWUiLCJqIiwiX3Rlbl92YWRfY3JlYXRlIiwiX3Rlbl92YWRfcHJvY2VzcyIsIl90ZW5fdmFkX2Rlc3Ryb3kiLCJfdGVuX3ZhZF9nZXRfdmVyc2lvbiIsIlYiLCJmYSIsIloiLCJjYWxsZWRSdW4iLCJvblJ1bnRpbWVJbml0aWFsaXplZCIsInBvc3RSdW4iLCJzZXRTdGF0dXMiLCJzZXRUaW1lb3V0IiwicHJlSW5pdCIsInBvcCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./libs/ten_vad.js\n");

/***/ }),

/***/ "(ssr)/./libs/ten_vad.wasm":
/*!***************************!*\
  !*** ./libs/ten_vad.wasm ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/ten_vad.804eed85.wasm";

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/builtin/global-error.js */ \"(ssr)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(ssr)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/metadata-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/metadata/metadata-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(ssr)/./node_modules/next/dist/lib/metadata/generate/icon-mark.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(ssr)/./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGRXRoYW5MZWUlMkZEZXNrdG9wJTJGQWR2WCUyRkFJLVdhdGNoLUJ1ZGR5JTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZidWlsdGluJTJGZ2xvYmFsLWVycm9yLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGRXRoYW5MZWUlMkZEZXNrdG9wJTJGQWR2WCUyRkFJLVdhdGNoLUJ1ZGR5JTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZjbGllbnQtcGFnZS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRkV0aGFuTGVlJTJGRGVza3RvcCUyRkFkdlglMkZBSS1XYXRjaC1CdWRkeSUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmh0dHAtYWNjZXNzLWZhbGxiYWNrJTJGZXJyb3ItYm91bmRhcnkuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmxheW91dC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRm1ldGFkYXRhJTJGYXN5bmMtbWV0YWRhdGEuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRm1ldGFkYXRhJTJGbWV0YWRhdGEtYm91bmRhcnkuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRnJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGbGliJTJGbWV0YWRhdGElMkZnZW5lcmF0ZSUyRmljb24tbWFyay5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRkV0aGFuTGVlJTJGRGVza3RvcCUyRkFkdlglMkZBSS1XYXRjaC1CdWRkeSUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZuZXh0LWRldnRvb2xzJTJGdXNlcnNwYWNlJTJGYXBwJTJGc2VnbWVudC1leHBsb3Jlci1ub2RlLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxzUEFBMEo7QUFDMUo7QUFDQSxvT0FBaUo7QUFDako7QUFDQSwwT0FBb0o7QUFDcEo7QUFDQSxvUkFBeUs7QUFDeks7QUFDQSx3T0FBbUo7QUFDbko7QUFDQSw0UEFBNko7QUFDN0o7QUFDQSxrUUFBZ0s7QUFDaEs7QUFDQSxzUUFBa0s7QUFDbEs7QUFDQSxrT0FBbUo7QUFDbko7QUFDQSw0UUFBcUsiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9idWlsdGluL2dsb2JhbC1lcnJvci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LXNlZ21lbnQuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9odHRwLWFjY2Vzcy1mYWxsYmFjay9lcnJvci1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2xheW91dC1yb3V0ZXIuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9tZXRhZGF0YS9hc3luYy1tZXRhZGF0YS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL21ldGFkYXRhL21ldGFkYXRhLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9tZXRhZGF0YS9nZW5lcmF0ZS9pY29uLW1hcmsuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LWRldnRvb2xzL3VzZXJzcGFjZS9hcHAvc2VnbWVudC1leHBsb3Jlci1ub2RlLmpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!*******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \*******************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(ssr)/./src/app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGRXRoYW5MZWUlMkZEZXNrdG9wJTJGQWR2WCUyRkFJLVdhdGNoLUJ1ZGR5JTJGZnJvbnRlbmQlMkZzcmMlMkZhcHAlMkZwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsZ0pBQTBHIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL3NyYy9hcHAvcGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fchat-context.tsx%22%2C%22ids%22%3A%5B%22ChatProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Flive2d-config-context.tsx%22%2C%22ids%22%3A%5B%22Live2DConfigProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fmicrophone-context.tsx%22%2C%22ids%22%3A%5B%22MicrophoneProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fsettings-context.tsx%22%2C%22ids%22%3A%5B%22SettingsProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Findex.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fchat-context.tsx%22%2C%22ids%22%3A%5B%22ChatProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Flive2d-config-context.tsx%22%2C%22ids%22%3A%5B%22Live2DConfigProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fmicrophone-context.tsx%22%2C%22ids%22%3A%5B%22MicrophoneProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fsettings-context.tsx%22%2C%22ids%22%3A%5B%22SettingsProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Findex.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/context/chat-context.tsx */ \"(ssr)/./src/context/chat-context.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/context/live2d-config-context.tsx */ \"(ssr)/./src/context/live2d-config-context.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/context/microphone-context.tsx */ \"(ssr)/./src/context/microphone-context.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/context/settings-context.tsx */ \"(ssr)/./src/context/settings-context.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGRXRoYW5MZWUlMkZEZXNrdG9wJTJGQWR2WCUyRkFJLVdhdGNoLUJ1ZGR5JTJGZnJvbnRlbmQlMkZzcmMlMkZjb250ZXh0JTJGY2hhdC1jb250ZXh0LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMkNoYXRQcm92aWRlciUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRkV0aGFuTGVlJTJGRGVza3RvcCUyRkFkdlglMkZBSS1XYXRjaC1CdWRkeSUyRmZyb250ZW5kJTJGc3JjJTJGY29udGV4dCUyRmxpdmUyZC1jb25maWctY29udGV4dC50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJMaXZlMkRDb25maWdQcm92aWRlciUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRkV0aGFuTGVlJTJGRGVza3RvcCUyRkFkdlglMkZBSS1XYXRjaC1CdWRkeSUyRmZyb250ZW5kJTJGc3JjJTJGY29udGV4dCUyRm1pY3JvcGhvbmUtY29udGV4dC50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJNaWNyb3Bob25lUHJvdmlkZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRnNyYyUyRmNvbnRleHQlMkZzZXR0aW5ncy1jb250ZXh0LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlNldHRpbmdzUHJvdmlkZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZFdGhhbkxlZSUyRkRlc2t0b3AlMkZBZHZYJTJGQUktV2F0Y2gtQnVkZHklMkZmcm9udGVuZCUyRnNyYyUyRmluZGV4LmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsd0tBQXdKO0FBQ3hKO0FBQ0EsMExBQXlLO0FBQ3pLO0FBQ0Esb0xBQW9LO0FBQ3BLO0FBQ0EsZ0xBQWdLIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJDaGF0UHJvdmlkZXJcIl0gKi8gXCIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL3NyYy9jb250ZXh0L2NoYXQtY29udGV4dC50c3hcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcIkxpdmUyRENvbmZpZ1Byb3ZpZGVyXCJdICovIFwiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9zcmMvY29udGV4dC9saXZlMmQtY29uZmlnLWNvbnRleHQudHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJNaWNyb3Bob25lUHJvdmlkZXJcIl0gKi8gXCIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL3NyYy9jb250ZXh0L21pY3JvcGhvbmUtY29udGV4dC50c3hcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcIlNldHRpbmdzUHJvdmlkZXJcIl0gKi8gXCIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL3NyYy9jb250ZXh0L3NldHRpbmdzLWNvbnRleHQudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fchat-context.tsx%22%2C%22ids%22%3A%5B%22ChatProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Flive2d-config-context.tsx%22%2C%22ids%22%3A%5B%22Live2DConfigProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fmicrophone-context.tsx%22%2C%22ids%22%3A%5B%22MicrophoneProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fcontext%2Fsettings-context.tsx%22%2C%22ids%22%3A%5B%22SettingsProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Findex.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ HomePage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_live2d__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/live2d */ \"(ssr)/./src/components/live2d.tsx\");\n/* harmony import */ var _components_chrome_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/chrome-browser */ \"(ssr)/./src/components/chrome-browser.tsx\");\n/* harmony import */ var _components_chat_room__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/chat-room */ \"(ssr)/./src/components/chat-room.tsx\");\n/* harmony import */ var _components_video_config_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/video-config-modal */ \"(ssr)/./src/components/video-config-modal.tsx\");\n/* harmony import */ var _components_settings_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/settings-modal */ \"(ssr)/./src/components/settings-modal.tsx\");\n/* harmony import */ var _components_websocket_handler__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/websocket-handler */ \"(ssr)/./src/components/websocket-handler.tsx\");\n/* harmony import */ var _context_settings_context__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/context/settings-context */ \"(ssr)/./src/context/settings-context.tsx\");\n/* harmony import */ var _context_chat_context__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/context/chat-context */ \"(ssr)/./src/context/chat-context.tsx\");\n/* harmony import */ var _cubismsdksamples_lappadapter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @cubismsdksamples/lappadapter */ \"(ssr)/./WebSDK/src/lappadapter.ts\");\n/* harmony import */ var _hooks_use_draggable__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/hooks/use-draggable */ \"(ssr)/./src/hooks/use-draggable.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\n\n\n\n\n\n\nfunction HomePage() {\n    console.log('HomePage component is rendering!');\n    const [browserPosition, setBrowserPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 100,\n        y: 100\n    });\n    const [live2dPosition, setLive2dPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 800,\n        y: 150\n    });\n    const [chatPosition, setChatPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 50,\n        y: 250\n    });\n    const live2dContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const { listeners: live2dListeners } = (0,_hooks_use_draggable__WEBPACK_IMPORTED_MODULE_11__.useDraggable)({\n        initialPosition: live2dPosition,\n        onPositionChange: setLive2dPosition\n    });\n    const [currentVideoUrl, setCurrentVideoUrl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [showConfigModal, setShowConfigModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showSettingsModal, setShowSettingsModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [pendingVideoUrl, setPendingVideoUrl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [sessionConfig, setSessionConfig] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [videoCurrentTime, setVideoCurrentTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const { backgroundSettings } = (0,_context_settings_context__WEBPACK_IMPORTED_MODULE_8__.useSettings)();\n    const { addMessage } = (0,_context_chat_context__WEBPACK_IMPORTED_MODULE_9__.useChat)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"HomePage.useEffect\": ()=>{\n            if (false) {}\n        }\n    }[\"HomePage.useEffect\"], [\n        addMessage\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"HomePage.useEffect\": ()=>{\n            const handleResize = {\n                \"HomePage.useEffect.handleResize\": ()=>{\n                    const vh = window.innerHeight * 0.01;\n                    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n                }\n            }[\"HomePage.useEffect.handleResize\"];\n            handleResize();\n            window.addEventListener(\"resize\", handleResize);\n            return ({\n                \"HomePage.useEffect\": ()=>window.removeEventListener(\"resize\", handleResize)\n            })[\"HomePage.useEffect\"];\n        }\n    }[\"HomePage.useEffect\"], []);\n    // Set full screen styles for immersive experience\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"HomePage.useEffect\": ()=>{\n            // Store original styles\n            const originalStyles = {\n                documentOverflow: document.documentElement.style.overflow,\n                bodyOverflow: document.body.style.overflow,\n                documentHeight: document.documentElement.style.height,\n                bodyHeight: document.body.style.height,\n                documentPosition: document.documentElement.style.position,\n                bodyPosition: document.body.style.position,\n                documentWidth: document.documentElement.style.width,\n                bodyWidth: document.body.style.width\n            };\n            // Apply full screen styles\n            document.documentElement.style.overflow = 'hidden';\n            document.body.style.overflow = 'hidden';\n            document.documentElement.style.height = '100%';\n            document.body.style.height = '100%';\n            document.documentElement.style.position = 'fixed';\n            document.body.style.position = 'fixed';\n            document.documentElement.style.width = '100%';\n            document.body.style.width = '100%';\n            // Cleanup function to restore original styles\n            return ({\n                \"HomePage.useEffect\": ()=>{\n                    document.documentElement.style.overflow = originalStyles.documentOverflow;\n                    document.body.style.overflow = originalStyles.bodyOverflow;\n                    document.documentElement.style.height = originalStyles.documentHeight;\n                    document.body.style.height = originalStyles.bodyHeight;\n                    document.documentElement.style.position = originalStyles.documentPosition;\n                    document.body.style.position = originalStyles.bodyPosition;\n                    document.documentElement.style.width = originalStyles.documentWidth;\n                    document.body.style.width = originalStyles.bodyWidth;\n                }\n            })[\"HomePage.useEffect\"];\n        }\n    }[\"HomePage.useEffect\"], []);\n    const handleVideoUrlSubmit = (url)=>{\n        setPendingVideoUrl(url);\n        setShowConfigModal(true);\n    };\n    const handleConfigConfirm = (options)=>{\n        console.log('Video configuration:', options);\n        // Store session configuration and set video URL\n        setCurrentVideoUrl(pendingVideoUrl);\n        setSessionConfig({\n            startTime: options.startTime,\n            endTime: options.endTime,\n            userRequirements: options.userRequirements\n        });\n        setShowConfigModal(false);\n    };\n    const handleConfigClose = ()=>{\n        setShowConfigModal(false);\n        setPendingVideoUrl('');\n    };\n    // Settings are now managed by SettingsModal and SettingsContext\n    // Generate background style based on settings\n    const getBackgroundStyle = ()=>{\n        if (backgroundSettings.type === 'image' && backgroundSettings.imageUrl) {\n            let backgroundSize = 'cover';\n            let backgroundPosition = `${backgroundSettings.imagePositionX}% ${backgroundSettings.imagePositionY}%`;\n            switch(backgroundSettings.imageMode){\n                case 'contain':\n                    backgroundSize = 'contain';\n                    break;\n                case 'fill':\n                    backgroundSize = '100% 100%';\n                    break;\n                case 'cover':\n                default:\n                    backgroundSize = `${backgroundSettings.imageScale * 100}%`;\n                    break;\n            }\n            return {\n                backgroundImage: `url(${backgroundSettings.imageUrl})`,\n                backgroundSize,\n                backgroundPosition,\n                backgroundRepeat: 'no-repeat'\n            };\n        } else {\n            return {\n                background: 'linear-gradient(135deg, #0f172a 0%, #0f172add 100%)'\n            };\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_websocket_handler__WEBPACK_IMPORTED_MODULE_7__.WebSocketHandler, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"w-screen h-screen overflow-hidden relative\",\n            style: getBackgroundStyle(),\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"absolute inset-0 opacity-30\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full h-full bg-gradient-to-br from-black/10 via-transparent to-black/10\"\n                    }, void 0, false, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                        lineNumber: 171,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                    lineNumber: 170,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"absolute top-6 left-6 z-30\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setShowSettingsModal(true),\n                        className: \"bg-white/90 backdrop-blur-sm rounded-full p-3 shadow-lg border border-white/20 hover:bg-white/95 transition-all duration-200 hover:scale-105\",\n                        title: \"Settings\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            className: \"w-5 h-5 text-gray-700\",\n                            fill: \"none\",\n                            stroke: \"currentColor\",\n                            viewBox: \"0 0 24 24\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    strokeLinecap: \"round\",\n                                    strokeLinejoin: \"round\",\n                                    strokeWidth: 2,\n                                    d: \"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                                    lineNumber: 182,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    strokeLinecap: \"round\",\n                                    strokeLinejoin: \"round\",\n                                    strokeWidth: 2,\n                                    d: \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                                    lineNumber: 183,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                            lineNumber: 181,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                        lineNumber: 176,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                    lineNumber: 175,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"relative w-full h-full\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_chrome_browser__WEBPACK_IMPORTED_MODULE_3__.ChromeBrowser, {\n                            videoSrc: currentVideoUrl,\n                            onUrlSubmit: handleVideoUrlSubmit,\n                            className: \"w-full max-w-5xl\",\n                            position: browserPosition,\n                            onPositionChange: setBrowserPosition,\n                            sessionConfig: sessionConfig,\n                            onVideoTimeUpdate: setVideoCurrentTime\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                            lineNumber: 191,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            ref: live2dContainerRef,\n                            style: {\n                                position: 'absolute',\n                                left: live2dPosition.x,\n                                top: live2dPosition.y,\n                                width: '34rem',\n                                height: '100%',\n                                zIndex: 20,\n                                cursor: 'move'\n                            },\n                            ...live2dListeners,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_live2d__WEBPACK_IMPORTED_MODULE_2__.Live2D, {}, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                                lineNumber: 215,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                            lineNumber: 202,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_chat_room__WEBPACK_IMPORTED_MODULE_4__.ChatRoom, {\n                            position: chatPosition,\n                            onPositionChange: setChatPosition,\n                            videoCurrentTime: videoCurrentTime\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                            lineNumber: 219,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                    lineNumber: 189,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_video_config_modal__WEBPACK_IMPORTED_MODULE_5__.VideoConfigModal, {\n                    isOpen: showConfigModal,\n                    videoUrl: pendingVideoUrl,\n                    onClose: handleConfigClose,\n                    onConfirm: handleConfigConfirm\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                    lineNumber: 227,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_settings_modal__WEBPACK_IMPORTED_MODULE_6__.SettingsModal, {\n                    isOpen: showSettingsModal,\n                    onClose: ()=>setShowSettingsModal(false)\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n                    lineNumber: 235,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n            lineNumber: 165,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/app/page.tsx\",\n        lineNumber: 164,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/page.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/chat-room.tsx":
/*!**************************************!*\
  !*** ./src/components/chat-room.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatRoom: () => (/* binding */ ChatRoom)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_chat_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/context/chat-context */ \"(ssr)/./src/context/chat-context.tsx\");\n/* harmony import */ var _context_microphone_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/context/microphone-context */ \"(ssr)/./src/context/microphone-context.tsx\");\n/* harmony import */ var _hooks_use_draggable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/hooks/use-draggable */ \"(ssr)/./src/hooks/use-draggable.ts\");\n/* harmony import */ var _context_websocket_context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/context/websocket-context */ \"(ssr)/./src/context/websocket-context.tsx\");\n/* harmony import */ var _hooks_use_action_queue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/hooks/use-action-queue */ \"(ssr)/./src/hooks/use-action-queue.ts\");\n/* harmony import */ var _barrel_optimize_names_MicrophoneIcon_heroicons_react_24_solid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=MicrophoneIcon!=!@heroicons/react/24/solid */ \"(ssr)/./node_modules/@heroicons/react/24/solid/esm/MicrophoneIcon.js\");\n/* harmony import */ var _barrel_optimize_names_MicrophoneIcon_heroicons_react_24_outline__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=MicrophoneIcon!=!@heroicons/react/24/outline */ \"(ssr)/./node_modules/@heroicons/react/24/outline/esm/MicrophoneIcon.js\");\n/* __next_internal_client_entry_do_not_use__ ChatRoom auto */ \n\n\n\n\n\n\n\n\n// Individual message component\nfunction MessageItem({ message }) {\n    const formatTime = (timestamp)=>{\n        return new Date(timestamp).toLocaleTimeString('en-US', {\n            hour12: false,\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n    };\n    const getAvatar = (type)=>{\n        switch(type){\n            case 'ai':\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"w-8 h-8 rounded-full bg-blue-500 flex items-center justify-center text-white text-xs font-bold shrink-0\",\n                    children: \"AI\"\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                    lineNumber: 33,\n                    columnNumber: 11\n                }, this);\n            case 'user':\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"w-8 h-8 rounded-full bg-green-500 flex items-center justify-center text-white text-xs font-bold shrink-0\",\n                    children: \"U\"\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                    lineNumber: 39,\n                    columnNumber: 11\n                }, this);\n            case 'system':\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"w-8 h-8 rounded-full bg-yellow-500 flex items-center justify-center text-white text-xs font-bold shrink-0\",\n                    children: \"S\"\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                    lineNumber: 45,\n                    columnNumber: 11\n                }, this);\n            default:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"w-8 h-8 rounded-full bg-gray-500 flex items-center justify-center text-white text-xs font-bold shrink-0\",\n                    children: \"?\"\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                    lineNumber: 51,\n                    columnNumber: 11\n                }, this);\n        }\n    };\n    const getUsername = (type)=>{\n        switch(type){\n            case 'ai':\n                return 'AI Companion';\n            case 'user':\n                return 'You';\n            case 'system':\n                return 'System';\n            default:\n                return 'Unknown';\n        }\n    };\n    const getTextColor = (type)=>{\n        switch(type){\n            case 'ai':\n                return 'text-blue-300';\n            case 'user':\n                return 'text-green-300';\n            case 'system':\n                return 'text-yellow-300';\n            default:\n                return 'text-gray-300';\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mb-3 animate-in slide-in-from-bottom duration-200 hover:bg-white/5 p-2 rounded-lg transition-colors\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-start gap-3\",\n            children: [\n                getAvatar(message.type),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex-1 min-w-0\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-baseline gap-2 mb-1\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: `text-sm font-medium ${getTextColor(message.type)}`,\n                                    children: getUsername(message.type)\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                                    lineNumber: 90,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-xs text-gray-500\",\n                                    children: formatTime(message.timestamp)\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                                    lineNumber: 93,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                            lineNumber: 89,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-sm leading-relaxed break-words text-gray-200\",\n                            children: message.content\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                            lineNumber: 97,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                    lineNumber: 88,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n            lineNumber: 86,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n        lineNumber: 85,\n        columnNumber: 5\n    }, this);\n}\n// Microphone button component with VAD integration\nfunction MicrophoneButton({ onVideoControl, videoCurrentTime, actionQueue, clearQueue }) {\n    const { state, isRecording, toggleRecording, error, setAudioDataCallback } = (0,_context_microphone_context__WEBPACK_IMPORTED_MODULE_3__.useMicrophone)();\n    const { sendMessage, status: wsStatus } = (0,_context_websocket_context__WEBPACK_IMPORTED_MODULE_5__.useWebSocketContext)();\n    // Setup audio data callback - set once on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MicrophoneButton.useEffect\": ()=>{\n            console.log('🎯 Setting up audio data callback');\n            setAudioDataCallback({\n                \"MicrophoneButton.useEffect\": (audioData)=>{\n                    console.log('🎵 Audio data callback triggered!', {\n                        audioSize: audioData.byteLength,\n                        wsStatus: wsStatus,\n                        timestamp: new Date().toISOString()\n                    });\n                    if (wsStatus === 'connected') {\n                        console.log('✅ WebSocket connected - processing audio input...');\n                        // Pause video when user starts speaking\n                        if (onVideoControl) {\n                            onVideoControl('pause');\n                            console.log('⏸️ Video paused for user input');\n                        }\n                        // Convert ArrayBuffer to base64 for transmission\n                        const uint8Array = new Uint8Array(audioData);\n                        // Validate audio data\n                        if (audioData.byteLength === 0) {\n                            console.warn('Empty audio data received, skipping...');\n                            return;\n                        }\n                        const base64Audio = btoa(String.fromCharCode.apply(null, Array.from(uint8Array)));\n                        // Validate base64 audio\n                        if (!base64Audio || base64Audio.length === 0) {\n                            console.warn('Failed to generate base64 audio, skipping...');\n                            return;\n                        }\n                        console.log('📼 Generated audio data:', audioData.byteLength, 'bytes,', base64Audio.length, 'base64 chars');\n                        // Create user action with audio data\n                        const userAction = {\n                            id: `user_speak_${Date.now()}`,\n                            action_type: 'SPEAK',\n                            trigger_timestamp: videoCurrentTime || 0,\n                            comment: 'User voice input',\n                            audio: base64Audio,\n                            pause_video: true\n                        };\n                        // Get current pending actions from action queue\n                        const pendingActions = actionQueue ? [\n                            ...actionQueue\n                        ] : [];\n                        // Send trigger-conversation message\n                        sendMessage({\n                            type: 'trigger-conversation',\n                            data: {\n                                user_action_list: [\n                                    userAction\n                                ],\n                                pending_action_list: pendingActions\n                            }\n                        });\n                        // Clear the action queue after sending\n                        if (clearQueue) {\n                            clearQueue();\n                        }\n                        console.log('📤 Sent trigger-conversation with user audio input');\n                        console.log('📦 Sent pending actions:', pendingActions.length);\n                    } else {\n                        console.warn('❌ WebSocket not connected!', {\n                            currentStatus: wsStatus,\n                            audioSize: audioData.byteLength,\n                            message: 'Audio data ready but cannot send - WebSocket not connected'\n                        });\n                    }\n                }\n            }[\"MicrophoneButton.useEffect\"]);\n        }\n    }[\"MicrophoneButton.useEffect\"], [\n        setAudioDataCallback,\n        wsStatus,\n        sendMessage,\n        onVideoControl,\n        videoCurrentTime,\n        actionQueue,\n        clearQueue\n    ]);\n    const getMicStyle = ()=>{\n        // Only 2 states: recording (green) or off (red)\n        if (isRecording) {\n            return 'bg-green-500 hover:bg-green-600 text-white';\n        }\n        // Microphone is off - red\n        return 'bg-red-500 hover:bg-red-600 text-white';\n    };\n    const getMicIcon = ()=>{\n        // Microphone is recording/active - normal microphone icon\n        if (isRecording) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_MicrophoneIcon_heroicons_react_24_solid__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                className: \"w-4 h-4\"\n            }, void 0, false, {\n                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                lineNumber: 210,\n                columnNumber: 14\n            }, this);\n        }\n        // Microphone is off - microphone with slash (classic muted microphone icon)\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"relative w-4 h-4\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_MicrophoneIcon_heroicons_react_24_outline__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                    className: \"w-4 h-4\"\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                    lineNumber: 216,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"absolute inset-0 flex items-center justify-center\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-5 h-0.5 bg-current transform rotate-45\"\n                    }, void 0, false, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                        lineNumber: 219,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                    lineNumber: 218,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n            lineNumber: 215,\n            columnNumber: 7\n        }, this);\n    };\n    const getTooltipText = ()=>{\n        if (error) return error;\n        if (state === 'disabled') return 'Microphone access denied';\n        if (state === 'error') return 'Microphone error';\n        if (isRecording) return 'Recording - Click to stop';\n        return 'Click to start recording';\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative flex items-center\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n            onClick: toggleRecording,\n            className: `p-2 rounded-lg transition-all duration-200 hover:scale-105 ${getMicStyle()} flex items-center justify-center`,\n            title: getTooltipText(),\n            children: getMicIcon()\n        }, void 0, false, {\n            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n            lineNumber: 235,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n        lineNumber: 234,\n        columnNumber: 5\n    }, this);\n}\nfunction ChatRoom({ className = '', position, onPositionChange, videoCurrentTime }) {\n    const { messages, addMessage, isVisible } = (0,_context_chat_context__WEBPACK_IMPORTED_MODULE_2__.useChat)();\n    const [inputText, setInputText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [isVideoPlaying, setIsVideoPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const messagesEndRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Use global WebSocket connection\n    const { sendMessage: sendWebSocketMessage, status: wsStatus, error: wsError } = (0,_context_websocket_context__WEBPACK_IMPORTED_MODULE_5__.useWebSocketContext)();\n    // Use action queue for managing pending actions\n    const { actionQueue, clearQueue } = (0,_hooks_use_action_queue__WEBPACK_IMPORTED_MODULE_6__.useActionQueue)({\n        sendMessage: sendWebSocketMessage\n    });\n    // Draggable functionality\n    const { listeners } = (0,_hooks_use_draggable__WEBPACK_IMPORTED_MODULE_4__.useDraggable)({\n        initialPosition: position || {\n            x: 50,\n            y: 100\n        },\n        onPositionChange\n    });\n    // Video control handler\n    const handleVideoControl = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ChatRoom.useCallback[handleVideoControl]\": (action)=>{\n            setIsVideoPlaying(action === 'play');\n            console.log(`🎥 Video ${action}d`);\n        // Here you would integrate with your video player\n        // For example, if you have a video player component, you could call its methods\n        // videoPlayerRef.current?.pause() or videoPlayerRef.current?.play()\n        }\n    }[\"ChatRoom.useCallback[handleVideoControl]\"], []);\n    // Send trigger-conversation for text input\n    const sendTextConversation = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ChatRoom.useCallback[sendTextConversation]\": (text)=>{\n            if (!sendWebSocketMessage) return;\n            // Pause video when user sends a message\n            handleVideoControl('pause');\n            // Get current pending actions from action queue\n            const pendingActions = [\n                ...actionQueue\n            ];\n            // Create user action with text\n            const userAction = {\n                id: `user_text_${Date.now()}`,\n                action_type: 'SPEAK',\n                trigger_timestamp: videoCurrentTime || 0,\n                comment: 'User text input',\n                text: text,\n                pause_video: true\n            };\n            // Send trigger-conversation message with pending actions\n            sendWebSocketMessage({\n                type: 'trigger-conversation',\n                data: {\n                    user_action_list: [\n                        userAction\n                    ],\n                    pending_action_list: pendingActions\n                }\n            });\n            // Clear the action queue after sending\n            clearQueue();\n            console.log('📤 Sent trigger-conversation with user text input:', text);\n            console.log('📦 Sent pending actions:', pendingActions.length);\n        }\n    }[\"ChatRoom.useCallback[sendTextConversation]\"], [\n        sendWebSocketMessage,\n        handleVideoControl,\n        videoCurrentTime,\n        actionQueue,\n        clearQueue\n    ]);\n    // Add webkit scrollbar styles\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChatRoom.useEffect\": ()=>{\n            const style = document.createElement('style');\n            style.textContent = `\n      .chat-scrollbar::-webkit-scrollbar {\n        width: 6px;\n      }\n      .chat-scrollbar::-webkit-scrollbar-track {\n        background: transparent;\n      }\n      .chat-scrollbar::-webkit-scrollbar-thumb {\n        background: rgba(75, 85, 99, 0.5);\n        border-radius: 3px;\n      }\n      .chat-scrollbar::-webkit-scrollbar-thumb:hover {\n        background: rgba(75, 85, 99, 0.7);\n      }\n    `;\n            document.head.appendChild(style);\n            return ({\n                \"ChatRoom.useEffect\": ()=>{\n                    document.head.removeChild(style);\n                }\n            })[\"ChatRoom.useEffect\"];\n        }\n    }[\"ChatRoom.useEffect\"], []);\n    // Auto-scroll to bottom when new messages arrive\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChatRoom.useEffect\": ()=>{\n            messagesEndRef.current?.scrollIntoView({\n                behavior: 'smooth'\n            });\n        }\n    }[\"ChatRoom.useEffect\"], [\n        messages\n    ]);\n    // Handle input submission\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if (inputText.trim()) {\n            // Add message to local chat\n            addMessage({\n                type: 'user',\n                content: inputText.trim()\n            });\n            // Send to backend via WebSocket\n            sendTextConversation(inputText.trim());\n            setInputText('');\n            inputRef.current?.focus();\n        }\n    };\n    // Handle keyboard shortcuts\n    const handleKeyDown = (e)=>{\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSubmit(e);\n        }\n    };\n    if (!isVisible) {\n        return null;\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: `\n        fixed flex flex-col\n        w-80 h-96\n        bg-black/70 backdrop-blur-sm\n        border border-gray-600/50\n        rounded-lg overflow-hidden\n        shadow-2xl\n        ${className}\n      `,\n        style: {\n            left: position?.x || 50,\n            top: position?.y || 100,\n            zIndex: 30\n        },\n        ...listeners,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-between p-3 bg-black/50 border-b border-gray-600/50 cursor-move\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        className: \"text-white font-medium text-sm\",\n                        children: \"Chat\"\n                    }, void 0, false, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                        lineNumber: 390,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-3\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: `w-2 h-2 rounded-full ${wsStatus === 'connected' ? 'bg-green-400' : wsStatus === 'connecting' ? 'bg-yellow-400' : wsStatus === 'error' ? 'bg-red-400' : 'bg-gray-500'}`\n                                    }, void 0, false, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                                        lineNumber: 394,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-xs text-gray-400 capitalize\",\n                                        children: wsStatus\n                                    }, void 0, false, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                                        lineNumber: 399,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                                lineNumber: 393,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-1\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-xs text-gray-400\",\n                                    children: [\n                                        messages.length,\n                                        \" msgs\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                                    lineNumber: 403,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                                lineNumber: 402,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                        lineNumber: 391,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                lineNumber: 389,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 overflow-y-auto px-2 py-1 chat-scrollbar\",\n                style: {\n                    scrollbarWidth: 'thin',\n                    scrollbarColor: 'rgba(75, 85, 99, 0.5) transparent'\n                },\n                children: messages.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col items-center justify-center h-full text-gray-500 text-sm\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            className: \"w-12 h-12 mb-2 opacity-50\",\n                            fill: \"currentColor\",\n                            viewBox: \"0 0 20 20\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                fillRule: \"evenodd\",\n                                d: \"M18 13V5a2 2 0 00-2-2H4a2 2 0 00-2 2v8a2 2 0 002 2h3l3 3 3-3h3a2 2 0 002-2zM5 7a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1zm1 3a1 1 0 100 2h3a1 1 0 100-2H6z\",\n                                clipRule: \"evenodd\"\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                                lineNumber: 419,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                            lineNumber: 418,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            children: \"No messages yet...\"\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                            lineNumber: 421,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-xs mt-1 opacity-70\",\n                            children: \"Start a conversation!\"\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                            lineNumber: 422,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                    lineNumber: 417,\n                    columnNumber: 11\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                    children: [\n                        messages.map((message)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MessageItem, {\n                                message: message\n                            }, message.id, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                                lineNumber: 428,\n                                columnNumber: 15\n                            }, this)),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            ref: messagesEndRef\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                            lineNumber: 430,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true)\n            }, void 0, false, {\n                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                lineNumber: 409,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"p-3 bg-black/50 border-t border-gray-600/50\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                        onSubmit: handleSubmit,\n                        className: \"flex gap-2 items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                ref: inputRef,\n                                type: \"text\",\n                                value: inputText,\n                                onChange: (e)=>setInputText(e.target.value),\n                                onKeyDown: handleKeyDown,\n                                placeholder: \"Type a message...\",\n                                className: \"flex-1 px-3 py-2 bg-gray-800/80 border border-gray-600/50 rounded-lg text-white text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-transparent\",\n                                maxLength: 500\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                                lineNumber: 438,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MicrophoneButton, {\n                                onVideoControl: handleVideoControl,\n                                videoCurrentTime: videoCurrentTime,\n                                actionQueue: actionQueue,\n                                clearQueue: clearQueue\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                                lineNumber: 448,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                        lineNumber: 437,\n                        columnNumber: 9\n                    }, this),\n                    inputText.length > 400 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-xs text-gray-400 mt-1 text-right\",\n                        children: [\n                            inputText.length,\n                            \"/500\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                        lineNumber: 458,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n                lineNumber: 436,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chat-room.tsx\",\n        lineNumber: 371,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/chat-room.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/chrome-browser.tsx":
/*!*******************************************!*\
  !*** ./src/components/chrome-browser.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChromeBrowser: () => (/* binding */ ChromeBrowser)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _video_player_with_controls__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./video-player-with-controls */ \"(ssr)/./src/components/video-player-with-controls.tsx\");\n/* harmony import */ var _hooks_use_draggable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/hooks/use-draggable */ \"(ssr)/./src/hooks/use-draggable.ts\");\n/* harmony import */ var _hooks_use_session__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/hooks/use-session */ \"(ssr)/./src/hooks/use-session.ts\");\n/* harmony import */ var _context_websocket_context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/context/websocket-context */ \"(ssr)/./src/context/websocket-context.tsx\");\n/* harmony import */ var _hooks_use_action_queue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/hooks/use-action-queue */ \"(ssr)/./src/hooks/use-action-queue.ts\");\n/* harmony import */ var _hooks_use_action_executor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/hooks/use-action-executor */ \"(ssr)/./src/hooks/use-action-executor.ts\");\n/* harmony import */ var _context_settings_context__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/context/settings-context */ \"(ssr)/./src/context/settings-context.tsx\");\n/* __next_internal_client_entry_do_not_use__ ChromeBrowser auto */ \n\n\n\n\n\n\n\n\nconst ChromeBrowser = ({ videoSrc, onUrlSubmit, className = \"\", position, onPositionChange, sessionConfig, onVideoTimeUpdate })=>{\n    const [urlInput, setUrlInput] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(videoSrc || \"\");\n    const [currentUrl, setCurrentUrl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(videoSrc || \"\");\n    // Update currentUrl when videoSrc prop changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChromeBrowser.useEffect\": ()=>{\n            if (videoSrc) {\n                setCurrentUrl(videoSrc);\n                setUrlInput(videoSrc);\n            }\n        }\n    }[\"ChromeBrowser.useEffect\"], [\n        videoSrc\n    ]);\n    const [currentTime, setCurrentTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const urlInputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const handleRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const videoPlayerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // Reference to VideoPlayerWithControls\n    // 添加一个 ref 来跟踪正在执行的 actions\n    const executingActionsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Set());\n    const { generalSettings } = (0,_context_settings_context__WEBPACK_IMPORTED_MODULE_8__.useSettings)();\n    const { listeners } = (0,_hooks_use_draggable__WEBPACK_IMPORTED_MODULE_3__.useDraggable)({\n        initialPosition: position,\n        onPositionChange,\n        handleRef\n    });\n    // Session management\n    const { status: sessionCreateStatus, sessionId, error: sessionError, createSession, resetSession } = (0,_hooks_use_session__WEBPACK_IMPORTED_MODULE_4__.useSession)();\n    // Message handling is now part of WebSocket context\n    // WebSocket connection is now handled globally\n    const { status: wsStatus, sendMessage, error: wsError, connect: connectWebSocket, sessionStatus, processingError, isSessionReady, receivedActions, clearReceivedActions, clearError, resetHandler } = (0,_context_websocket_context__WEBPACK_IMPORTED_MODULE_5__.useWebSocketContext)();\n    // Action queue management\n    const { actionQueue, currentActionIndex, isExecuting: isQueueExecuting, latestTriggerTime, addActions, clearQueue, resetQueue, getNextActions, removeActions, markActionExecuted, checkThreshold } = (0,_hooks_use_action_queue__WEBPACK_IMPORTED_MODULE_6__.useActionQueue)({\n        threshold: 30,\n        sendMessage\n    });\n    // Video player control interface\n    const videoPlayerControl = {\n        pause: ()=>{\n            if (videoPlayerRef.current?.pause) {\n                videoPlayerRef.current.pause();\n            }\n        },\n        resume: ()=>{\n            if (videoPlayerRef.current?.resume) {\n                videoPlayerRef.current.resume();\n            }\n        },\n        seek: (time)=>{\n            if (videoPlayerRef.current?.seek) {\n                videoPlayerRef.current.seek(time);\n            }\n        },\n        getCurrentTime: ()=>{\n            return videoPlayerRef.current?.getCurrentTime() || 0;\n        },\n        getDuration: ()=>{\n            return videoPlayerRef.current?.getDuration() || 0;\n        },\n        showPauseOverlay: ()=>{\n            if (videoPlayerRef.current?.showPauseOverlay) {\n                videoPlayerRef.current.showPauseOverlay();\n            }\n        },\n        hidePauseOverlay: ()=>{\n            if (videoPlayerRef.current?.hidePauseOverlay) {\n                videoPlayerRef.current.hidePauseOverlay();\n            }\n        },\n        showSpeakingOverlay: ()=>{\n            if (videoPlayerRef.current?.showSpeakingOverlay) {\n                videoPlayerRef.current.showSpeakingOverlay();\n            }\n        },\n        hideSpeakingOverlay: ()=>{\n            if (videoPlayerRef.current?.hideSpeakingOverlay) {\n                videoPlayerRef.current.hideSpeakingOverlay();\n            }\n        },\n        animateSeek: async (targetTime, duration)=>{\n            if (videoPlayerRef.current?.animateSeek) {\n                return videoPlayerRef.current.animateSeek(targetTime, duration);\n            }\n        },\n        setVolume: (volume)=>{\n            if (videoPlayerRef.current?.setVolume) {\n                videoPlayerRef.current.setVolume(volume);\n            }\n        },\n        getVolume: ()=>{\n            return videoPlayerRef.current?.getVolume() || 1;\n        }\n    };\n    // Action executor\n    const { executeActions, isExecuting: isExecutorExecuting } = (0,_hooks_use_action_executor__WEBPACK_IMPORTED_MODULE_7__.useActionExecutor)({\n        videoPlayerControl,\n        onActionExecuted: {\n            \"ChromeBrowser.useActionExecutor\": (action)=>{\n                markActionExecuted(action.id);\n                // 从正在执行的集合中移除\n                executingActionsRef.current.delete(action.id);\n                console.log(`Action executed and marked: ${action.id}`);\n            }\n        }[\"ChromeBrowser.useActionExecutor\"],\n        onExecutionError: {\n            \"ChromeBrowser.useActionExecutor\": (error, action)=>{\n                console.error(`Action execution failed for ${action.id}:`, error);\n                // 出错时也要从正在执行的集合中移除\n                executingActionsRef.current.delete(action.id);\n            }\n        }[\"ChromeBrowser.useActionExecutor\"]\n    });\n    // Handle URL submission - only trigger config modal, don't set URL yet\n    const handleUrlSubmit = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ChromeBrowser.useCallback[handleUrlSubmit]\": (e)=>{\n            e.preventDefault();\n            if (!urlInput.trim()) return;\n            onUrlSubmit?.(urlInput);\n        }\n    }[\"ChromeBrowser.useCallback[handleUrlSubmit]\"], [\n        urlInput,\n        onUrlSubmit\n    ]);\n    // Create session when sessionConfig is updated (from VideoConfigModal)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChromeBrowser.useEffect\": ()=>{\n            const createSessionForVideo = {\n                \"ChromeBrowser.useEffect.createSessionForVideo\": async ()=>{\n                    if (!videoSrc || !sessionConfig || Object.keys(sessionConfig).length === 0) {\n                        return;\n                    }\n                    try {\n                        // Create session with backend\n                        const sessionRequest = {\n                            video_url: videoSrc,\n                            start_time: sessionConfig.startTime || 0,\n                            end_time: sessionConfig.endTime,\n                            text: sessionConfig.userRequirements || \"You are a helpful AI companion watching videos with the user.\",\n                            character_id: \"placeholder\",\n                            user_id: \"placeholder\"\n                        };\n                        console.log(\"Creating session for URL:\", videoSrc);\n                        const newSessionId = await createSession(sessionRequest);\n                        if (newSessionId) {\n                            console.log(\"Session created successfully:\", newSessionId);\n                            // 连接 WebSocket after session is created\n                            setTimeout({\n                                \"ChromeBrowser.useEffect.createSessionForVideo\": ()=>{\n                                    connectWebSocket(newSessionId);\n                                }\n                            }[\"ChromeBrowser.useEffect.createSessionForVideo\"], 100); // 小延迟确保后端准备就绪\n                        }\n                    } catch (error) {\n                        console.error(\"Failed to create session:\", error);\n                    }\n                }\n            }[\"ChromeBrowser.useEffect.createSessionForVideo\"];\n            createSessionForVideo();\n        }\n    }[\"ChromeBrowser.useEffect\"], [\n        videoSrc,\n        sessionConfig,\n        createSession,\n        connectWebSocket\n    ]);\n    // WebSocket connection is now manually triggered after session creation\n    // Handle session status changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChromeBrowser.useEffect\": ()=>{\n            if (sessionCreateStatus === \"error\" && sessionError) {\n                console.error(\"Session creation failed:\", sessionError);\n                // Show user-friendly error (you can replace this with a proper UI notification)\n                alert(`Failed to create session: ${sessionError.message}`);\n            }\n        }\n    }[\"ChromeBrowser.useEffect\"], [\n        sessionCreateStatus,\n        sessionError\n    ]);\n    // Handle processing errors\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChromeBrowser.useEffect\": ()=>{\n            if (processingError) {\n                console.error(\"Video processing error:\", processingError);\n                alert(`Video processing failed: ${processingError.message}`);\n            }\n        }\n    }[\"ChromeBrowser.useEffect\"], [\n        processingError\n    ]);\n    // Debug: Log session and WebSocket status changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChromeBrowser.useEffect\": ()=>{\n            console.log(\"Session states:\", {\n                sessionCreateStatus,\n                sessionId,\n                wsStatus,\n                isSessionReady,\n                currentUrl: currentUrl || \"none\",\n                videoSrc: videoSrc || \"none\"\n            });\n        }\n    }[\"ChromeBrowser.useEffect\"], [\n        sessionCreateStatus,\n        sessionId,\n        wsStatus,\n        isSessionReady,\n        currentUrl,\n        videoSrc\n    ]);\n    // 添加一个独立的函数来检查和执行 actions\n    const checkAndExecuteActions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ChromeBrowser.useCallback[checkAndExecuteActions]\": (time)=>{\n            const actionsToExecute = getNextActions(time);\n            if (actionsToExecute.length > 0) {\n                // 过滤掉正在执行的 actions\n                const newActionsToExecute = actionsToExecute.filter({\n                    \"ChromeBrowser.useCallback[checkAndExecuteActions].newActionsToExecute\": (action)=>{\n                        if (executingActionsRef.current.has(action.id)) {\n                            console.log(`Action ${action.id} is already executing, skipping`);\n                            return false;\n                        }\n                        return true;\n                    }\n                }[\"ChromeBrowser.useCallback[checkAndExecuteActions].newActionsToExecute\"]);\n                if (newActionsToExecute.length > 0) {\n                    console.log(`Found ${newActionsToExecute.length} actions to execute at time ${time}s`);\n                    // 立即标记这些 actions 为正在执行\n                    newActionsToExecute.forEach({\n                        \"ChromeBrowser.useCallback[checkAndExecuteActions]\": (action)=>{\n                            executingActionsRef.current.add(action.id);\n                        }\n                    }[\"ChromeBrowser.useCallback[checkAndExecuteActions]\"]);\n                    // Remove actions from queue immediately to prevent re-execution\n                    const actionIds = newActionsToExecute.map({\n                        \"ChromeBrowser.useCallback[checkAndExecuteActions].actionIds\": (action)=>action.id\n                    }[\"ChromeBrowser.useCallback[checkAndExecuteActions].actionIds\"]);\n                    removeActions(actionIds);\n                    // Execute the actions\n                    executeActions(newActionsToExecute);\n                }\n            }\n        }\n    }[\"ChromeBrowser.useCallback[checkAndExecuteActions]\"], [\n        getNextActions,\n        removeActions,\n        executeActions\n    ]);\n    // Add received actions to queue\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChromeBrowser.useEffect\": ()=>{\n            if (receivedActions.length > 0) {\n                console.log(`Adding ${receivedActions.length} actions to queue`);\n                addActions(receivedActions);\n                clearReceivedActions();\n                checkAndExecuteActions(currentTime);\n            }\n        }\n    }[\"ChromeBrowser.useEffect\"], [\n        receivedActions,\n        addActions,\n        clearReceivedActions,\n        checkAndExecuteActions,\n        currentTime\n    ]);\n    // Clear queue when session resets\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChromeBrowser.useEffect\": ()=>{\n            if (sessionCreateStatus === \"creating\") {\n                clearQueue();\n                resetHandler();\n            }\n        }\n    }[\"ChromeBrowser.useEffect\"], [\n        sessionCreateStatus,\n        clearQueue,\n        resetHandler\n    ]);\n    // Handle current time updates for action queue management\n    const handleCurrentTimeChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ChromeBrowser.useCallback[handleCurrentTimeChange]\": (time)=>{\n            setCurrentTime(time);\n            // Pass the current time to parent component\n            onVideoTimeUpdate?.(time);\n            // Check threshold for requesting more actions\n            checkThreshold(time);\n            // Execute any actions that should trigger at this time\n            checkAndExecuteActions(time);\n        }\n    }[\"ChromeBrowser.useCallback[handleCurrentTimeChange]\"], [\n        checkThreshold,\n        checkAndExecuteActions,\n        onVideoTimeUpdate\n    ]);\n    const handleUrlKeyPress = (e)=>{\n        if (e.key === \"Enter\") {\n            handleUrlSubmit(e);\n        }\n    };\n    const isVideoUrl = (url)=>{\n        return url && (url.includes(\"youtube.com\") || url.includes(\"youtu.be\") || url.includes(\"bilibili.com\") || url.includes(\".mp4\") || url.includes(\".webm\") || url.includes(\".ogg\"));\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: `${className} bg-white rounded-lg shadow-2xl overflow-hidden border border-gray-200`,\n        style: {\n            position: \"absolute\",\n            left: position.x,\n            top: position.y,\n            zIndex: 10\n        },\n        ...listeners,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: handleRef,\n                className: \"bg-[#f1f3f4] border-b border-[#dadce0] cursor-move\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center justify-between px-2 py-1.5 h-9\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center space-x-2\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex space-x-1.5 ml-2\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"w-3 h-3 bg-[#ff5f56] rounded-full hover:bg-[#ff6259] transition-colors\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 388,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"w-3 h-3 bg-[#ffbd2e] rounded-full hover:bg-[#ffbe33] transition-colors\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 389,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"w-3 h-3 bg-[#27ca3f] rounded-full hover:bg-[#29cc42] transition-colors\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 390,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                    lineNumber: 387,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                lineNumber: 386,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-[13px] text-[#5f6368] font-normal tracking-[0.25px]\",\n                                children: \"Google Chrome\"\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                lineNumber: 393,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-16\"\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                lineNumber: 396,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                        lineNumber: 385,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-end px-2 h-8\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"relative bg-white h-8 min-w-[200px] max-w-[240px] flex items-center px-4 mr-1\",\n                                style: {\n                                    clipPath: \"polygon(8px 0%, calc(100% - 8px) 0%, 100% 100%, 0% 100%)\",\n                                    borderTop: \"1px solid #dadce0\",\n                                    borderLeft: \"1px solid #dadce0\",\n                                    borderRight: \"1px solid #dadce0\"\n                                },\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        className: \"w-4 h-4 text-[#5f6368] mr-2 flex-shrink-0\",\n                                        viewBox: \"0 0 24 24\",\n                                        fill: \"currentColor\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 416,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                        lineNumber: 411,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-[13px] text-[#202124] truncate flex-1 font-normal\",\n                                        children: isVideoUrl(currentUrl) ? \"Video Player\" : \"New Tab\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                        lineNumber: 418,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        className: \"w-4 h-4 ml-2 rounded-full hover:bg-[#f1f3f4] flex items-center justify-center flex-shrink-0\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            className: \"w-3 h-3 text-[#5f6368]\",\n                                            fill: \"none\",\n                                            stroke: \"currentColor\",\n                                            viewBox: \"0 0 24 24\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                strokeLinecap: \"round\",\n                                                strokeLinejoin: \"round\",\n                                                strokeWidth: 2,\n                                                d: \"M6 18L18 6M6 6l12 12\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                lineNumber: 428,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 422,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                        lineNumber: 421,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                lineNumber: 401,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: \"w-7 h-7 ml-1 rounded-t-md hover:bg-[#e8eaed] flex items-center justify-center\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    className: \"w-4 h-4 text-[#5f6368]\",\n                                    fill: \"none\",\n                                    stroke: \"currentColor\",\n                                    viewBox: \"0 0 24 24\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\",\n                                        strokeWidth: 2,\n                                        d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                        lineNumber: 444,\n                                        columnNumber: 15\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                    lineNumber: 438,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                lineNumber: 437,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex-1\"\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                lineNumber: 452,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                        lineNumber: 400,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"px-3 pb-2\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center space-x-1\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            className: \"w-8 h-8 rounded-full hover:bg-[#e8eaed] flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                className: \"w-4 h-4 text-[#5f6368]\",\n                                                fill: \"none\",\n                                                stroke: \"currentColor\",\n                                                viewBox: \"0 0 24 24\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    strokeLinecap: \"round\",\n                                                    strokeLinejoin: \"round\",\n                                                    strokeWidth: 2,\n                                                    d: \"M15 19l-7-7 7-7\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                    lineNumber: 467,\n                                                    columnNumber: 19\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                lineNumber: 461,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 460,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            className: \"w-8 h-8 rounded-full hover:bg-[#e8eaed] flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                className: \"w-4 h-4 text-[#5f6368]\",\n                                                fill: \"none\",\n                                                stroke: \"currentColor\",\n                                                viewBox: \"0 0 24 24\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    strokeLinecap: \"round\",\n                                                    strokeLinejoin: \"round\",\n                                                    strokeWidth: 2,\n                                                    d: \"M9 5l7 7-7 7\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                    lineNumber: 482,\n                                                    columnNumber: 19\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                lineNumber: 476,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 475,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            className: \"w-8 h-8 rounded-full hover:bg-[#e8eaed] flex items-center justify-center\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                className: \"w-4 h-4 text-[#5f6368]\",\n                                                fill: \"none\",\n                                                stroke: \"currentColor\",\n                                                viewBox: \"0 0 24 24\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    strokeLinecap: \"round\",\n                                                    strokeLinejoin: \"round\",\n                                                    strokeWidth: 2,\n                                                    d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                    lineNumber: 497,\n                                                    columnNumber: 19\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                lineNumber: 491,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 490,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                    lineNumber: 459,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                                    onSubmit: handleUrlSubmit,\n                                    className: \"flex-1 mx-2\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center bg-white border border-[#dadce0] rounded-full px-4 py-1.5 hover:shadow-sm focus-within:shadow-md focus-within:border-[#4285f4] transition-all h-9 group\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                className: \"w-4 h-4 text-[#34a853] mr-2 flex-shrink-0\",\n                                                fill: \"currentColor\",\n                                                viewBox: \"0 0 24 24\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    d: \"M18,8a2,2 0 0,1 2,2v8a2,2 0 0,1 -2,2H6a2,2 0 0,1 -2,-2V10a2,2 0 0,1 2,-2h1V6a5,5 0 0,1 10,0v2h1m-6,9a2,2 0 0,1 -2,-2a2,2 0 0,1 2,-2a2,2 0 0,1 2,2a2,2 0 0,1 -2,2z\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                    lineNumber: 515,\n                                                    columnNumber: 19\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                lineNumber: 510,\n                                                columnNumber: 17\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                ref: urlInputRef,\n                                                type: \"text\",\n                                                value: urlInput,\n                                                onChange: (e)=>setUrlInput(e.target.value),\n                                                onKeyPress: handleUrlKeyPress,\n                                                placeholder: \"Search Google or type a URL\",\n                                                className: \"flex-1 outline-none text-[14px] text-[#202124] placeholder-[#5f6368] font-normal\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                lineNumber: 517,\n                                                columnNumber: 17\n                                            }, undefined),\n                                            isVideoUrl(urlInput) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                className: \"w-4 h-4 text-[#1a73e8] ml-2 flex-shrink-0\",\n                                                fill: \"none\",\n                                                stroke: \"currentColor\",\n                                                viewBox: \"0 0 24 24\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    strokeLinecap: \"round\",\n                                                    strokeLinejoin: \"round\",\n                                                    strokeWidth: 2,\n                                                    d: \"M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h1m4 0h1m-6-8h8a2 2 0 012 2v8a2 2 0 01-2 2H8a2 2 0 01-2-2V6a2 2 0 012-2z\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                    lineNumber: 533,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                lineNumber: 527,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                        lineNumber: 509,\n                                        columnNumber: 15\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                    lineNumber: 508,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center space-x-1\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            className: \"w-8 h-8 rounded-full hover:bg-[#e8eaed] flex items-center justify-center\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                className: \"w-4 h-4 text-[#5f6368]\",\n                                                fill: \"currentColor\",\n                                                viewBox: \"0 0 24 24\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                    lineNumber: 552,\n                                                    columnNumber: 19\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                lineNumber: 547,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 546,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            className: \"w-8 h-8 rounded-full bg-[#1a73e8] text-white flex items-center justify-center text-[12px] font-medium\",\n                                            children: \"U\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 556,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            className: \"w-8 h-8 rounded-full hover:bg-[#e8eaed] flex items-center justify-center\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                className: \"w-4 h-4 text-[#5f6368]\",\n                                                fill: \"currentColor\",\n                                                viewBox: \"0 0 24 24\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                    lineNumber: 566,\n                                                    columnNumber: 19\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                lineNumber: 561,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 560,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                    lineNumber: 545,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                            lineNumber: 457,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                        lineNumber: 456,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                lineNumber: 380,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[600px] bg-white overflow-hidden\",\n                children: isVideoUrl(currentUrl) ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_video_player_with_controls__WEBPACK_IMPORTED_MODULE_2__.VideoPlayerWithControls, {\n                    ref: videoPlayerRef,\n                    src: currentUrl,\n                    className: \"w-full h-full\",\n                    isSessionReady: isSessionReady,\n                    onCurrentTimeChange: handleCurrentTimeChange\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                    lineNumber: 577,\n                    columnNumber: 11\n                }, undefined) : // New Tab Page - Chrome accurate styling\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"h-full bg-white flex flex-col items-center justify-center p-8\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-center space-y-6 w-full -mt-16\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mb-6\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    className: \"w-64 h-20 mx-auto\",\n                                    viewBox: \"0 0 272 92\",\n                                    fill: \"none\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            d: \"M115.75 47.18c0 12.77-9.99 22.18-22.25 22.18s-22.25-9.41-22.25-22.18C71.25 34.32 81.24 25 93.5 25s22.25 9.32 22.25 22.18zm-9.74 0c0-7.98-5.79-13.44-12.51-13.44S80.99 39.2 80.99 47.18c0 7.9 5.79 13.44 12.51 13.44s12.51-5.55 12.51-13.44z\",\n                                            fill: \"#EA4335\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 595,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            d: \"M163.75 47.18c0 12.77-9.99 22.18-22.25 22.18s-22.25-9.41-22.25-22.18c0-12.85 9.99-22.18 22.25-22.18s22.25 9.32 22.25 22.18zm-9.74 0c0-7.98-5.79-13.44-12.51-13.44s-12.51 5.46-12.51 13.44c0 7.9 5.79 13.44 12.51 13.44s12.51-5.55 12.51-13.44z\",\n                                            fill: \"#FBBC05\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 599,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            d: \"M209.75 26.34v39.82c0 16.38-9.66 23.07-21.08 23.07-10.75 0-17.22-7.19-19.66-13.07l8.48-3.53c1.51 3.61 5.21 7.87 11.17 7.87 7.31 0 11.84-4.51 11.84-13v-3.19h-.34c-2.18 2.69-6.38 5.04-11.68 5.04-11.09 0-21.25-9.66-21.25-22.09 0-12.52 10.16-22.26 21.25-22.26 5.29 0 9.49 2.35 11.68 4.96h.34v-3.61h9.25zm-8.56 20.92c0-7.81-5.21-13.52-11.84-13.52-6.72 0-12.35 5.71-12.35 13.52 0 7.73 5.63 13.36 12.35 13.36 6.63 0 11.84-5.63 11.84-13.36z\",\n                                            fill: \"#34A853\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 603,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            d: \"M225 3v65h-9.5V3h9.5z\",\n                                            fill: \"#EA4335\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 607,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            d: \"M262.02 54.48l7.56 5.04c-2.44 3.61-8.32 9.83-18.48 9.83-12.6 0-22.01-9.74-22.01-22.18 0-13.19 9.49-22.18 20.92-22.18 11.51 0 17.14 9.16 18.98 14.11l1.01 2.52-29.65 12.28c2.27 4.45 5.8 6.72 10.75 6.72 4.96 0 8.4-2.44 10.92-6.14zm-23.27-7.98l19.82-8.23c-1.09-2.77-4.37-4.7-8.23-4.7-4.95 0-11.84 4.37-11.59 12.93z\",\n                                            fill: \"#FBBC05\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 608,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            d: \"M35.29 41.41V32H67c.31 1.64.47 3.58.47 5.68 0 7.06-1.93 15.79-8.15 22.01-6.05 6.3-13.78 9.66-24.02 9.66C16.32 69.35.36 53.89.36 34.91.36 15.93 16.32.47 35.3.47c10.5 0 17.98 4.12 23.6 9.49l-6.64 6.64c-4.03-3.78-9.49-6.72-16.97-6.72-13.86 0-24.7 11.17-24.7 25.03 0 13.86 10.84 25.03 24.7 25.03 8.99 0 14.11-3.61 17.39-6.89 2.66-2.66 4.41-6.46 5.1-11.65l-22.49.01z\",\n                                            fill: \"#4285F4\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                            lineNumber: 612,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                    lineNumber: 590,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                lineNumber: 589,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-full max-w-xl mx-auto\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"relative\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center bg-white border border-[#dfe1e5] rounded-full px-5 py-3 hover:shadow-md focus-within:shadow-md transition-shadow\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                className: \"w-4 h-4 text-[#9aa0a6] mr-3\",\n                                                fill: \"none\",\n                                                stroke: \"currentColor\",\n                                                viewBox: \"0 0 24 24\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    strokeLinecap: \"round\",\n                                                    strokeLinejoin: \"round\",\n                                                    strokeWidth: 2,\n                                                    d: \"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                    lineNumber: 629,\n                                                    columnNumber: 23\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                lineNumber: 623,\n                                                columnNumber: 21\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                type: \"text\",\n                                                placeholder: \"Search Google or type a URL\",\n                                                className: \"flex-1 outline-none text-[16px] text-[#202124] placeholder-[#9aa0a6]\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                                lineNumber: 636,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                        lineNumber: 622,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                    lineNumber: 621,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                                lineNumber: 620,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                        lineNumber: 587,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                    lineNumber: 586,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n                lineNumber: 575,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/chrome-browser.tsx\",\n        lineNumber: 369,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/chrome-browser.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/live2d.tsx":
/*!***********************************!*\
  !*** ./src/components/live2d.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Live2D: () => (/* binding */ Live2D)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_live2d_config_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/context/live2d-config-context */ \"(ssr)/./src/context/live2d-config-context.tsx\");\n/* harmony import */ var _hooks_use_audio_task__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/hooks/use-audio-task */ \"(ssr)/./src/hooks/use-audio-task.ts\");\n/* harmony import */ var _hooks_use_live2d_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/hooks/use-live2d-model */ \"(ssr)/./src/hooks/use-live2d-model.ts\");\n/* harmony import */ var _hooks_use_live2d_resize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/hooks/use-live2d-resize */ \"(ssr)/./src/hooks/use-live2d-resize.ts\");\n/* __next_internal_client_entry_do_not_use__ Live2D auto */ \n/* eslint-disable no-shadow */ /* eslint-disable no-underscore-dangle */ /* eslint-disable @typescript-eslint/ban-ts-comment */ \n\n\n\n\nconst Live2D = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(()=>{\n    const { modelInfo } = (0,_context_live2d_config_context__WEBPACK_IMPORTED_MODULE_2__.useLive2DConfig)();\n    const internalContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Get canvasRef from useLive2DResize\n    const { canvasRef } = (0,_hooks_use_live2d_resize__WEBPACK_IMPORTED_MODULE_5__.useLive2DResize)({\n        containerRef: internalContainerRef,\n        modelInfo,\n        showSidebar: false\n    });\n    // Pass canvasRef to useLive2DModel, drag functionality is handled by parent\n    (0,_hooks_use_live2d_model__WEBPACK_IMPORTED_MODULE_4__.useLive2DModel)({\n        modelInfo,\n        canvasRef: canvasRef\n    });\n    // Setup audio task hook for audio playback with lip sync\n    (0,_hooks_use_audio_task__WEBPACK_IMPORTED_MODULE_3__.useAudioTask)();\n    const handleContextMenu = (e)=>{\n        e.preventDefault();\n        console.log(\"[ContextMenu] Right-click detected\");\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: internalContainerRef,\n        id: \"live2d-internal-wrapper\",\n        style: {\n            width: \"100%\",\n            height: \"100%\",\n            pointerEvents: \"auto\",\n            overflow: \"hidden\",\n            position: \"relative\"\n        },\n        onContextMenu: handleContextMenu,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n            id: \"canvas\",\n            ref: canvasRef,\n            style: {\n                width: \"100%\",\n                height: \"100%\",\n                pointerEvents: \"auto\",\n                display: \"block\"\n            }\n        }, void 0, false, {\n            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/live2d.tsx\",\n            lineNumber: 51,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/live2d.tsx\",\n        lineNumber: 39,\n        columnNumber: 7\n    }, undefined);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9saXZlMmQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFFQSw0QkFBNEIsR0FDNUIsdUNBQXVDLEdBQ3ZDLG9EQUFvRCxHQUNmO0FBQzZCO0FBQ1o7QUFDSTtBQUNFO0FBRXJELE1BQU1NLHVCQUFTTiwyQ0FBSUEsQ0FDeEI7SUFDRSxNQUFNLEVBQUVPLFNBQVMsRUFBRSxHQUFHTCwrRUFBZUE7SUFDckMsTUFBTU0sdUJBQXVCUCw2Q0FBTUEsQ0FBd0I7SUFFM0QscUNBQXFDO0lBQ3JDLE1BQU0sRUFBRVEsU0FBUyxFQUFFLEdBQUdKLHlFQUFlQSxDQUFDO1FBQ3BDSyxjQUFjRjtRQUNkRDtRQUNBSSxhQUFhO0lBQ2Y7SUFFQSw0RUFBNEU7SUFDNUVQLHVFQUFjQSxDQUFDO1FBQ2JHO1FBQ0FFLFdBQVdBO0lBQ2I7SUFFQSx5REFBeUQ7SUFDekROLG1FQUFZQTtJQUVaLE1BQU1TLG9CQUFvQixDQUFDQztRQUN6QkEsRUFBRUMsY0FBYztRQUNoQkMsUUFBUUMsR0FBRyxDQUFDO0lBQ2Q7SUFFQSxxQkFDRSw4REFBQ0M7UUFDQ0MsS0FBS1Y7UUFDTFcsSUFBRztRQUNIQyxPQUFPO1lBQ0xDLE9BQU87WUFDUEMsUUFBUTtZQUNSQyxlQUFlO1lBQ2ZDLFVBQVU7WUFDVkMsVUFBVTtRQUNaO1FBQ0FDLGVBQWVkO2tCQUVmLDRFQUFDZTtZQUNDUixJQUFHO1lBQ0hELEtBQUtUO1lBQ0xXLE9BQU87Z0JBQ0xDLE9BQU87Z0JBQ1BDLFFBQVE7Z0JBQ1JDLGVBQWU7Z0JBQ2ZLLFNBQVM7WUFDWDs7Ozs7Ozs7Ozs7QUFJUixHQUNBIiwic291cmNlcyI6WyIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL3NyYy9jb21wb25lbnRzL2xpdmUyZC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1zaGFkb3cgKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVyc2NvcmUtZGFuZ2xlICovXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnQgKi9cbmltcG9ydCB7IG1lbW8sIHVzZVJlZiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlTGl2ZTJEQ29uZmlnIH0gZnJvbSBcIkAvY29udGV4dC9saXZlMmQtY29uZmlnLWNvbnRleHRcIjtcbmltcG9ydCB7IHVzZUF1ZGlvVGFzayB9IGZyb20gXCJAL2hvb2tzL3VzZS1hdWRpby10YXNrXCI7XG5pbXBvcnQgeyB1c2VMaXZlMkRNb2RlbCB9IGZyb20gXCJAL2hvb2tzL3VzZS1saXZlMmQtbW9kZWxcIjtcbmltcG9ydCB7IHVzZUxpdmUyRFJlc2l6ZSB9IGZyb20gXCJAL2hvb2tzL3VzZS1saXZlMmQtcmVzaXplXCI7XG5cbmV4cG9ydCBjb25zdCBMaXZlMkQgPSBtZW1vKFxuICAoKSA9PiB7XG4gICAgY29uc3QgeyBtb2RlbEluZm8gfSA9IHVzZUxpdmUyRENvbmZpZygpO1xuICAgIGNvbnN0IGludGVybmFsQ29udGFpbmVyUmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50IHwgbnVsbD4obnVsbCk7XG5cbiAgICAvLyBHZXQgY2FudmFzUmVmIGZyb20gdXNlTGl2ZTJEUmVzaXplXG4gICAgY29uc3QgeyBjYW52YXNSZWYgfSA9IHVzZUxpdmUyRFJlc2l6ZSh7XG4gICAgICBjb250YWluZXJSZWY6IGludGVybmFsQ29udGFpbmVyUmVmIGFzIGFueSxcbiAgICAgIG1vZGVsSW5mbyxcbiAgICAgIHNob3dTaWRlYmFyOiBmYWxzZSwgLy8gTm8gc2lkZWJhciBpbiBzaW1wbGlmaWVkIHZlcnNpb25cbiAgICB9KTtcblxuICAgIC8vIFBhc3MgY2FudmFzUmVmIHRvIHVzZUxpdmUyRE1vZGVsLCBkcmFnIGZ1bmN0aW9uYWxpdHkgaXMgaGFuZGxlZCBieSBwYXJlbnRcbiAgICB1c2VMaXZlMkRNb2RlbCh7XG4gICAgICBtb2RlbEluZm8sXG4gICAgICBjYW52YXNSZWY6IGNhbnZhc1JlZiBhcyBhbnksXG4gICAgfSk7XG5cbiAgICAvLyBTZXR1cCBhdWRpbyB0YXNrIGhvb2sgZm9yIGF1ZGlvIHBsYXliYWNrIHdpdGggbGlwIHN5bmNcbiAgICB1c2VBdWRpb1Rhc2soKTtcblxuICAgIGNvbnN0IGhhbmRsZUNvbnRleHRNZW51ID0gKGU6IFJlYWN0Lk1vdXNlRXZlbnQpID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGNvbnNvbGUubG9nKFwiW0NvbnRleHRNZW51XSBSaWdodC1jbGljayBkZXRlY3RlZFwiKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgcmVmPXtpbnRlcm5hbENvbnRhaW5lclJlZn1cbiAgICAgICAgaWQ9XCJsaXZlMmQtaW50ZXJuYWwtd3JhcHBlclwiXG4gICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgICAgICAgcG9pbnRlckV2ZW50czogXCJhdXRvXCIsXG4gICAgICAgICAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG4gICAgICAgICAgcG9zaXRpb246IFwicmVsYXRpdmVcIixcbiAgICAgICAgfX1cbiAgICAgICAgb25Db250ZXh0TWVudT17aGFuZGxlQ29udGV4dE1lbnV9XG4gICAgICA+XG4gICAgICAgIDxjYW52YXNcbiAgICAgICAgICBpZD1cImNhbnZhc1wiXG4gICAgICAgICAgcmVmPXtjYW52YXNSZWZ9XG4gICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgICAgICAgICBwb2ludGVyRXZlbnRzOiBcImF1dG9cIixcbiAgICAgICAgICAgIGRpc3BsYXk6IFwiYmxvY2tcIixcbiAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfSxcbik7XG4iXSwibmFtZXMiOlsibWVtbyIsInVzZVJlZiIsInVzZUxpdmUyRENvbmZpZyIsInVzZUF1ZGlvVGFzayIsInVzZUxpdmUyRE1vZGVsIiwidXNlTGl2ZTJEUmVzaXplIiwiTGl2ZTJEIiwibW9kZWxJbmZvIiwiaW50ZXJuYWxDb250YWluZXJSZWYiLCJjYW52YXNSZWYiLCJjb250YWluZXJSZWYiLCJzaG93U2lkZWJhciIsImhhbmRsZUNvbnRleHRNZW51IiwiZSIsInByZXZlbnREZWZhdWx0IiwiY29uc29sZSIsImxvZyIsImRpdiIsInJlZiIsImlkIiwic3R5bGUiLCJ3aWR0aCIsImhlaWdodCIsInBvaW50ZXJFdmVudHMiLCJvdmVyZmxvdyIsInBvc2l0aW9uIiwib25Db250ZXh0TWVudSIsImNhbnZhcyIsImRpc3BsYXkiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/components/live2d.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/settings-modal.tsx":
/*!*******************************************!*\
  !*** ./src/components/settings-modal.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SettingsModal: () => (/* binding */ SettingsModal)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"(ssr)/./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _context_settings_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/context/settings-context */ \"(ssr)/./src/context/settings-context.tsx\");\n/* __next_internal_client_entry_do_not_use__ SettingsModal auto */ \n\n\n\nconst SettingsModal = ({ isOpen, onClose })=>{\n    const [activeTab, setActiveTab] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('general');\n    const { generalSettings, backgroundSettings, updateGeneralSettings, updateBackgroundSettings, saveSettings } = (0,_context_settings_context__WEBPACK_IMPORTED_MODULE_3__.useSettings)();\n    // Local state for temporary changes\n    const [localGeneralSettings, setLocalGeneralSettings] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(generalSettings);\n    const [localBackgroundSettings, setLocalBackgroundSettings] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(backgroundSettings);\n    const fileInputRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    // Update local state when context changes\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"SettingsModal.useEffect\": ()=>{\n            setLocalGeneralSettings(generalSettings);\n            setLocalBackgroundSettings(backgroundSettings);\n        }\n    }[\"SettingsModal.useEffect\"], [\n        generalSettings,\n        backgroundSettings\n    ]);\n    const handleConfirm = ()=>{\n        // Update context with local changes\n        updateGeneralSettings(localGeneralSettings);\n        updateBackgroundSettings(localBackgroundSettings);\n        saveSettings();\n        onClose();\n    };\n    const handleFileUpload = (event)=>{\n        const file = event.target.files?.[0];\n        if (file && file.type.startsWith('image/')) {\n            const reader = new FileReader();\n            reader.onload = (e)=>{\n                const imageUrl = e.target?.result;\n                setLocalBackgroundSettings((prev)=>({\n                        ...prev,\n                        type: 'image',\n                        imageFile: file,\n                        imageUrl: imageUrl,\n                        // Reset image adjustments for new image\n                        imageScale: 1,\n                        imagePositionX: 50,\n                        imagePositionY: 50,\n                        imageMode: 'cover'\n                    }));\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n    const handleImageUrlChange = (url)=>{\n        setLocalBackgroundSettings((prev)=>({\n                ...prev,\n                type: 'image',\n                imageUrl: url,\n                imageFile: null,\n                // Reset image adjustments for new image\n                imageScale: 1,\n                imagePositionX: 50,\n                imagePositionY: 50,\n                imageMode: 'cover'\n            }));\n    };\n    // Generate preview style for image adjustments\n    const getImagePreviewStyle = ()=>{\n        if (!localBackgroundSettings?.imageUrl) return {};\n        let backgroundSize = 'cover';\n        let backgroundPosition = `${localBackgroundSettings?.imagePositionX ?? 50}% ${localBackgroundSettings?.imagePositionY ?? 50}%`;\n        switch(localBackgroundSettings?.imageMode){\n            case 'contain':\n                backgroundSize = 'contain';\n                break;\n            case 'fill':\n                backgroundSize = '100% 100%';\n                break;\n            case 'cover':\n            default:\n                backgroundSize = `${(localBackgroundSettings?.imageScale ?? 1) * 100}%`;\n                break;\n        }\n        return {\n            backgroundImage: `url(${localBackgroundSettings?.imageUrl})`,\n            backgroundSize,\n            backgroundPosition,\n            backgroundRepeat: 'no-repeat'\n        };\n    };\n    const tabs = [\n        {\n            key: 'general',\n            label: 'General',\n            icon: '⚙️'\n        },\n        {\n            key: 'background',\n            label: 'Background',\n            icon: '🖼️'\n        },\n        {\n            key: 'user',\n            label: 'User',\n            icon: '👤'\n        },\n        {\n            key: 'character',\n            label: 'Character',\n            icon: '🎭'\n        }\n    ];\n    const renderTabContent = ()=>{\n        switch(activeTab){\n            case 'general':\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-5\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"border-b border-[#e8eaed] pb-5\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                className: \"text-[14px] font-medium text-[#202124] mb-4\",\n                                children: \"Audio Settings\"\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                lineNumber: 120,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center justify-between mb-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                className: \"text-[13px] font-medium text-[#202124]\",\n                                                children: \"Reduce video volume when AI speaks\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                lineNumber: 125,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"text-[12px] text-[#5f6368] mt-1\",\n                                                children: \"Automatically lower video volume during AI speech for better clarity\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                lineNumber: 128,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                        lineNumber: 124,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        className: \"relative inline-flex items-center cursor-pointer\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                type: \"checkbox\",\n                                                checked: localGeneralSettings?.reduceVideoVolumeOnSpeech ?? true,\n                                                onChange: (e)=>setLocalGeneralSettings((prev)=>({\n                                                            ...prev,\n                                                            reduceVideoVolumeOnSpeech: e.target.checked\n                                                        })),\n                                                className: \"sr-only peer\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                lineNumber: 133,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                lineNumber: 139,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                        lineNumber: 132,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                lineNumber: 123,\n                                columnNumber: 15\n                            }, undefined),\n                            localGeneralSettings?.reduceVideoVolumeOnSpeech && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        className: \"block text-[13px] font-medium text-[#202124] mb-2\",\n                                        children: [\n                                            \"Volume reduction: \",\n                                            localGeneralSettings?.videoVolumeReductionPercent ?? 50,\n                                            \"%\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                        lineNumber: 146,\n                                        columnNumber: 19\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"range\",\n                                        min: \"10\",\n                                        max: \"90\",\n                                        step: \"5\",\n                                        value: localGeneralSettings?.videoVolumeReductionPercent ?? 50,\n                                        onChange: (e)=>setLocalGeneralSettings((prev)=>({\n                                                    ...prev,\n                                                    videoVolumeReductionPercent: parseInt(e.target.value)\n                                                })),\n                                        className: \"w-full h-2 bg-[#e8eaed] rounded-lg appearance-none cursor-pointer slider\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                        lineNumber: 149,\n                                        columnNumber: 19\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex justify-between text-[11px] text-[#5f6368] mt-1\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: \"10%\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                lineNumber: 159,\n                                                columnNumber: 21\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: \"50%\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                lineNumber: 160,\n                                                columnNumber: 21\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: \"90%\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                lineNumber: 161,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                        lineNumber: 158,\n                                        columnNumber: 19\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-[12px] text-[#5f6368] mt-2\",\n                                        children: [\n                                            \"Video volume will be reduced to \",\n                                            localGeneralSettings?.videoVolumeReductionPercent ?? 50,\n                                            \"% of original volume\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                        lineNumber: 163,\n                                        columnNumber: 19\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                lineNumber: 145,\n                                columnNumber: 17\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                        lineNumber: 119,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                    lineNumber: 117,\n                    columnNumber: 11\n                }, undefined);\n            case 'user':\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col items-center justify-center py-16 text-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-6xl mb-4\",\n                            children: \"\\uD83D\\uDC64\"\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                            lineNumber: 176,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-[14px] font-medium text-[#202124] mb-2\",\n                            children: \"User Settings\"\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                            lineNumber: 177,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-[13px] text-[#5f6368]\",\n                            children: \"User configuration options will be available here\"\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                            lineNumber: 178,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                    lineNumber: 175,\n                    columnNumber: 11\n                }, undefined);\n            case 'background':\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-5\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"block text-[13px] font-medium text-[#202124] mb-2\",\n                                    children: \"Image URL\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 187,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"url\",\n                                    value: localBackgroundSettings?.imageUrl ?? '',\n                                    onChange: (e)=>handleImageUrlChange(e.target.value),\n                                    placeholder: \"https://example.com/image.jpg\",\n                                    className: \"w-full px-3 py-2 text-[14px] border border-[#dadce0] rounded-md focus:outline-none focus:ring-2 focus:ring-[#1a73e8] focus:ring-opacity-20 focus:border-[#1a73e8] transition-colors\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 190,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                            lineNumber: 186,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"block text-[13px] font-medium text-[#202124] mb-2\",\n                                    children: \"Or upload local image\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 201,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    ref: fileInputRef,\n                                    type: \"file\",\n                                    accept: \"image/*\",\n                                    onChange: handleFileUpload,\n                                    className: \"hidden\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 204,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: ()=>fileInputRef.current?.click(),\n                                    className: \"w-full px-4 py-3 border-2 border-dashed border-[#dadce0] rounded-lg text-[14px] text-[#5f6368] hover:border-[#1a73e8] hover:text-[#1a73e8] transition-colors\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            className: \"w-5 h-5 mx-auto mb-1\",\n                                            fill: \"none\",\n                                            stroke: \"currentColor\",\n                                            viewBox: \"0 0 24 24\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                strokeLinecap: \"round\",\n                                                strokeLinejoin: \"round\",\n                                                strokeWidth: 2,\n                                                d: \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                lineNumber: 216,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 215,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        \"Click to select image file\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 211,\n                                    columnNumber: 15\n                                }, undefined),\n                                localBackgroundSettings?.imageFile && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"mt-2 text-[12px] text-[#5f6368]\",\n                                    children: [\n                                        \"Selected: \",\n                                        localBackgroundSettings.imageFile.name\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 221,\n                                    columnNumber: 17\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                            lineNumber: 200,\n                            columnNumber: 13\n                        }, undefined),\n                        localBackgroundSettings?.imageUrl && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: \"block text-[13px] font-medium text-[#202124] mb-2\",\n                                            children: \"Display Mode\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 232,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"grid grid-cols-3 gap-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: ()=>setLocalBackgroundSettings((prev)=>({\n                                                                ...prev,\n                                                                imageMode: 'cover'\n                                                            })),\n                                                    className: `px-3 py-2 text-[12px] border rounded-md transition-colors ${localBackgroundSettings?.imageMode === 'cover' ? 'border-[#1a73e8] bg-[#e8f0fe] text-[#1a73e8]' : 'border-[#dadce0] hover:bg-[#f8f9fa] text-[#202124]'}`,\n                                                    children: \"Cover\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                    lineNumber: 236,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: ()=>setLocalBackgroundSettings((prev)=>({\n                                                                ...prev,\n                                                                imageMode: 'contain'\n                                                            })),\n                                                    className: `px-3 py-2 text-[12px] border rounded-md transition-colors ${localBackgroundSettings?.imageMode === 'contain' ? 'border-[#1a73e8] bg-[#e8f0fe] text-[#1a73e8]' : 'border-[#dadce0] hover:bg-[#f8f9fa] text-[#202124]'}`,\n                                                    children: \"Contain\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                    lineNumber: 246,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: ()=>setLocalBackgroundSettings((prev)=>({\n                                                                ...prev,\n                                                                imageMode: 'fill'\n                                                            })),\n                                                    className: `px-3 py-2 text-[12px] border rounded-md transition-colors ${localBackgroundSettings?.imageMode === 'fill' ? 'border-[#1a73e8] bg-[#e8f0fe] text-[#1a73e8]' : 'border-[#dadce0] hover:bg-[#f8f9fa] text-[#202124]'}`,\n                                                    children: \"Fill\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                    lineNumber: 256,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 235,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 231,\n                                    columnNumber: 17\n                                }, undefined),\n                                localBackgroundSettings?.imageMode === 'cover' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: \"block text-[13px] font-medium text-[#202124] mb-2\",\n                                            children: [\n                                                \"Scale: \",\n                                                Math.round((localBackgroundSettings?.imageScale ?? 1) * 100),\n                                                \"%\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 272,\n                                            columnNumber: 21\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            type: \"range\",\n                                            min: \"0.5\",\n                                            max: \"3\",\n                                            step: \"0.1\",\n                                            value: localBackgroundSettings?.imageScale ?? 1,\n                                            onChange: (e)=>setLocalBackgroundSettings((prev)=>({\n                                                        ...prev,\n                                                        imageScale: parseFloat(e.target.value)\n                                                    })),\n                                            className: \"w-full h-2 bg-[#e8eaed] rounded-lg appearance-none cursor-pointer slider\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 275,\n                                            columnNumber: 21\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex justify-between text-[11px] text-[#5f6368] mt-1\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    children: \"50%\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                    lineNumber: 285,\n                                                    columnNumber: 23\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    children: \"300%\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                    lineNumber: 286,\n                                                    columnNumber: 23\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 284,\n                                            columnNumber: 21\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 271,\n                                    columnNumber: 19\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"grid grid-cols-2 gap-4\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                    className: \"block text-[13px] font-medium text-[#202124] mb-2\",\n                                                    children: [\n                                                        \"Horizontal: \",\n                                                        localBackgroundSettings?.imagePositionX ?? 50,\n                                                        \"%\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                    lineNumber: 294,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"range\",\n                                                    min: \"0\",\n                                                    max: \"100\",\n                                                    value: localBackgroundSettings?.imagePositionX ?? 50,\n                                                    onChange: (e)=>setLocalBackgroundSettings((prev)=>({\n                                                                ...prev,\n                                                                imagePositionX: parseInt(e.target.value)\n                                                            })),\n                                                    className: \"w-full h-2 bg-[#e8eaed] rounded-lg appearance-none cursor-pointer slider\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                    lineNumber: 297,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 293,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                    className: \"block text-[13px] font-medium text-[#202124] mb-2\",\n                                                    children: [\n                                                        \"Vertical: \",\n                                                        localBackgroundSettings?.imagePositionY ?? 50,\n                                                        \"%\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                    lineNumber: 307,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"range\",\n                                                    min: \"0\",\n                                                    max: \"100\",\n                                                    value: localBackgroundSettings?.imagePositionY ?? 50,\n                                                    onChange: (e)=>setLocalBackgroundSettings((prev)=>({\n                                                                ...prev,\n                                                                imagePositionY: parseInt(e.target.value)\n                                                            })),\n                                                    className: \"w-full h-2 bg-[#e8eaed] rounded-lg appearance-none cursor-pointer slider\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                    lineNumber: 310,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 306,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 292,\n                                    columnNumber: 17\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: ()=>setLocalBackgroundSettings((prev)=>({\n                                                ...prev,\n                                                imageScale: 1,\n                                                imagePositionX: 50,\n                                                imagePositionY: 50,\n                                                imageMode: 'cover'\n                                            })),\n                                    className: \"w-full px-3 py-2 text-[13px] text-[#5f6368] border border-[#dadce0] rounded-md hover:bg-[#f8f9fa] transition-colors\",\n                                    children: \"Reset adjustments\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 322,\n                                    columnNumber: 17\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-[13px] font-medium text-[#202124] mb-2\",\n                                            children: \"Preview\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 337,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"w-full h-32 bg-[#f8f9fa] border border-[#e8eaed] rounded-lg overflow-hidden\",\n                                            style: getImagePreviewStyle(),\n                                            children: !localBackgroundSettings?.imageUrl && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-full h-full flex items-center justify-center text-[#5f6368] text-[12px]\",\n                                                children: \"Image preview\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                lineNumber: 343,\n                                                columnNumber: 23\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 338,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 336,\n                                    columnNumber: 17\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                            lineNumber: 229,\n                            columnNumber: 15\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                    lineNumber: 184,\n                    columnNumber: 11\n                }, undefined);\n            case 'character':\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col items-center justify-center py-16 text-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-6xl mb-4\",\n                            children: \"\\uD83C\\uDFAD\"\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                            lineNumber: 357,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-[14px] font-medium text-[#202124] mb-2\",\n                            children: \"Character Settings\"\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                            lineNumber: 358,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-[13px] text-[#5f6368]\",\n                            children: \"Character configuration options will be available here\"\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                            lineNumber: 359,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                    lineNumber: 356,\n                    columnNumber: 11\n                }, undefined);\n            default:\n                return null;\n        }\n    };\n    if (!isOpen) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"jsx-435806a591b5dbd9\" + \" \" + \"fixed inset-0 bg-black/50 backdrop-blur-[2px] flex items-center justify-center z-50 p-4\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-435806a591b5dbd9\" + \" \" + \"bg-white rounded-lg shadow-2xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-hidden border border-[#dadce0]\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-435806a591b5dbd9\" + \" \" + \"border-b border-[#e8eaed] p-4\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"jsx-435806a591b5dbd9\" + \" \" + \"flex items-center justify-between\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"jsx-435806a591b5dbd9\" + \" \" + \"flex items-center space-x-3\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"jsx-435806a591b5dbd9\" + \" \" + \"w-4 h-4 bg-[#5f6368] rounded-sm flex items-center justify-center\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                fill: \"none\",\n                                                stroke: \"currentColor\",\n                                                viewBox: \"0 0 24 24\",\n                                                className: \"jsx-435806a591b5dbd9\" + \" \" + \"w-2.5 h-2.5 text-white\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                        strokeLinecap: \"round\",\n                                                        strokeLinejoin: \"round\",\n                                                        strokeWidth: 2,\n                                                        d: \"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\",\n                                                        className: \"jsx-435806a591b5dbd9\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                        lineNumber: 379,\n                                                        columnNumber: 19\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                        strokeLinecap: \"round\",\n                                                        strokeLinejoin: \"round\",\n                                                        strokeWidth: 2,\n                                                        d: \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\",\n                                                        className: \"jsx-435806a591b5dbd9\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                        lineNumber: 380,\n                                                        columnNumber: 19\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                                lineNumber: 378,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 377,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                            className: \"jsx-435806a591b5dbd9\" + \" \" + \"text-[16px] font-normal text-[#202124] leading-6\",\n                                            children: \"Settings\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 383,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 376,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: onClose,\n                                    className: \"jsx-435806a591b5dbd9\" + \" \" + \"w-8 h-8 rounded-full hover:bg-[#f8f9fa] flex items-center justify-center transition-colors\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        fill: \"none\",\n                                        stroke: \"currentColor\",\n                                        viewBox: \"0 0 24 24\",\n                                        className: \"jsx-435806a591b5dbd9\" + \" \" + \"w-4 h-4 text-[#5f6368]\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            strokeLinecap: \"round\",\n                                            strokeLinejoin: \"round\",\n                                            strokeWidth: 2,\n                                            d: \"M6 18L18 6M6 6l12 12\",\n                                            className: \"jsx-435806a591b5dbd9\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 392,\n                                            columnNumber: 17\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                        lineNumber: 391,\n                                        columnNumber: 15\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 387,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                            lineNumber: 375,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                        lineNumber: 374,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-435806a591b5dbd9\" + \" \" + \"border-b border-[#e8eaed] px-4\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"jsx-435806a591b5dbd9\" + \" \" + \"flex space-x-0\",\n                            children: tabs.map((tab)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: ()=>setActiveTab(tab.key),\n                                    className: \"jsx-435806a591b5dbd9\" + \" \" + `px-4 py-3 text-[14px] font-medium border-b-2 transition-colors ${activeTab === tab.key ? 'border-[#1a73e8] text-[#1a73e8]' : 'border-transparent text-[#5f6368] hover:text-[#202124]'}`,\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"jsx-435806a591b5dbd9\" + \" \" + \"mr-2\",\n                                            children: tab.icon\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                            lineNumber: 411,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        tab.label\n                                    ]\n                                }, tab.key, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                    lineNumber: 402,\n                                    columnNumber: 15\n                                }, undefined))\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                            lineNumber: 400,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                        lineNumber: 399,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-435806a591b5dbd9\" + \" \" + \"overflow-y-auto max-h-[calc(90vh-200px)]\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"jsx-435806a591b5dbd9\" + \" \" + \"p-6\",\n                            children: renderTabContent()\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                            lineNumber: 420,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                        lineNumber: 419,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-435806a591b5dbd9\" + \" \" + \"bg-[#f8f9fa] border-t border-[#e8eaed] px-6 py-4 flex items-center justify-end space-x-3\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: onClose,\n                                className: \"jsx-435806a591b5dbd9\" + \" \" + \"px-4 py-2 text-[14px] text-[#1a73e8] font-medium hover:bg-[#e8f0fe] rounded-md transition-colors\",\n                                children: \"Cancel\"\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                lineNumber: 427,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleConfirm,\n                                className: \"jsx-435806a591b5dbd9\" + \" \" + \"px-6 py-2 bg-[#1a73e8] text-white text-[14px] font-medium rounded-md hover:bg-[#1557b0] transition-colors shadow-sm\",\n                                children: \"Apply Settings\"\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                                lineNumber: 433,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                        lineNumber: 426,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n                lineNumber: 372,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                id: \"435806a591b5dbd9\",\n                children: \".slider.jsx-435806a591b5dbd9::-webkit-slider-thumb{appearance:none;height:16px;width:16px;border-radius:50%;background:#1a73e8;cursor:pointer;box-shadow:0 2px 4px rgba(0,0,0,.2)}.slider.jsx-435806a591b5dbd9::-moz-range-thumb{height:16px;width:16px;border-radius:50%;background:#1a73e8;cursor:pointer;border:none;box-shadow:0 2px 4px rgba(0,0,0,.2)}\"\n            }, void 0, false, void 0, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/settings-modal.tsx\",\n        lineNumber: 371,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/settings-modal.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/video-config-modal.tsx":
/*!***********************************************!*\
  !*** ./src/components/video-config-modal.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VideoConfigModal: () => (/* binding */ VideoConfigModal)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ VideoConfigModal auto */ \n\nconst VideoConfigModal = ({ isOpen, videoUrl, onClose, onConfirm })=>{\n    const [options, setOptions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        startTime: 0,\n        endTime: undefined,\n        userRequirements: '',\n        additionalFiles: []\n    });\n    const handleConfirm = ()=>{\n        onConfirm(options);\n        onClose();\n    };\n    const getVideoTitle = (url)=>{\n        if (url.includes('youtube.com') || url.includes('youtu.be')) {\n            return 'YouTube Video';\n        } else if (url.includes('bilibili.com')) {\n            return 'Bilibili Video';\n        } else if (url.includes('.mp4') || url.includes('.webm')) {\n            return 'Video File';\n        }\n        return 'Video';\n    };\n    const getFaviconIcon = (url)=>{\n        if (url.includes('youtube.com') || url.includes('youtu.be')) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-4 h-4 bg-[#ff0000] rounded-sm flex items-center justify-center\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    className: \"w-3 h-3 text-white\",\n                    fill: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M21.582 6.186c-.23-1.12-1.11-2.005-2.23-2.23C17.25 3.5 12 3.5 12 3.5s-5.25 0-7.352.456c-1.12.225-2.005 1.11-2.23 2.23C2 8.289 2 12.001 2 12.001s0 3.712.418 5.814c.225 1.12 1.11 2.005 2.23 2.23C6.75 20.5 12 20.5 12 20.5s5.25 0 7.352-.455c1.12-.225 2.005-1.11 2.23-2.23C22 15.712 22 12.001 22 12.001s0-3.712-.418-5.815zM10 15.5v-7l6 3.5-6 3.5z\"\n                    }, void 0, false, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                        lineNumber: 42,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                    lineNumber: 41,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                lineNumber: 40,\n                columnNumber: 9\n            }, undefined);\n        } else if (url.includes('bilibili.com')) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-4 h-4 bg-[#00aeec] rounded-sm flex items-center justify-center\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    className: \"text-[8px] text-white font-bold\",\n                    children: \"B\"\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                    lineNumber: 49,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                lineNumber: 48,\n                columnNumber: 9\n            }, undefined);\n        }\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"w-4 h-4 bg-[#5f6368] rounded-sm flex items-center justify-center\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                className: \"w-2.5 h-2.5 text-white\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 3,\n                    d: \"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                    lineNumber: 56,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                lineNumber: 55,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n            lineNumber: 54,\n            columnNumber: 7\n        }, undefined);\n    };\n    if (!isOpen) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed inset-0 bg-black/50 backdrop-blur-[2px] flex items-center justify-center z-50 p-4\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"bg-white rounded-lg shadow-2xl max-w-lg w-full mx-4 overflow-hidden border border-[#dadce0]\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"border-b border-[#e8eaed] p-4\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center space-x-3\",\n                        children: [\n                            getFaviconIcon(videoUrl),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                        className: \"text-[16px] font-normal text-[#202124] leading-6\",\n                                        children: \"Configure Video Settings\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                        lineNumber: 72,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-[13px] text-[#5f6368] mt-0.5 break-all\",\n                                        children: videoUrl\n                                    }, void 0, false, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                        lineNumber: 75,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                lineNumber: 71,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                        lineNumber: 69,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                    lineNumber: 68,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-6 space-y-5\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                    className: \"text-[14px] font-medium text-[#202124] mb-3\",\n                                    children: \"Video Information\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                    lineNumber: 86,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-[#f8f9fa] border border-[#e8eaed] rounded-lg p-3\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center space-x-2\",\n                                        children: [\n                                            getFaviconIcon(videoUrl),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-[14px] text-[#202124] font-normal\",\n                                                children: getVideoTitle(videoUrl)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                                lineNumber: 90,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                        lineNumber: 88,\n                                        columnNumber: 15\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                    lineNumber: 87,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                            lineNumber: 85,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                    className: \"text-[14px] font-medium text-[#202124] mb-3\",\n                                    children: \"Time Range\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                    lineNumber: 99,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"grid grid-cols-2 gap-4\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                    className: \"block text-[13px] text-[#5f6368] mb-2\",\n                                                    children: \"Start time (seconds)\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                                    lineNumber: 102,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"number\",\n                                                    min: \"0\",\n                                                    value: options?.startTime ?? 0,\n                                                    onChange: (e)=>setOptions((prev)=>({\n                                                                ...prev,\n                                                                startTime: Number(e.target.value)\n                                                            })),\n                                                    className: \"w-full px-3 py-2 text-[14px] border border-[#dadce0] rounded-md focus:outline-none focus:ring-2 focus:ring-[#1a73e8] focus:ring-opacity-20 focus:border-[#1a73e8] transition-colors\",\n                                                    placeholder: \"0\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                                    lineNumber: 105,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                            lineNumber: 101,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                    className: \"block text-[13px] text-[#5f6368] mb-2\",\n                                                    children: \"End time (seconds)\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                                    lineNumber: 116,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"number\",\n                                                    min: \"0\",\n                                                    value: options?.endTime ?? '',\n                                                    onChange: (e)=>setOptions((prev)=>({\n                                                                ...prev,\n                                                                endTime: e.target.value ? Number(e.target.value) : undefined\n                                                            })),\n                                                    className: \"w-full px-3 py-2 text-[14px] border border-[#dadce0] rounded-md focus:outline-none focus:ring-2 focus:ring-[#1a73e8] focus:ring-opacity-20 focus:border-[#1a73e8] transition-colors\",\n                                                    placeholder: \"End of video\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                                    lineNumber: 119,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                            lineNumber: 115,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                    lineNumber: 100,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                            lineNumber: 98,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                    className: \"text-[14px] font-medium text-[#202124] mb-3\",\n                                    children: \"AI Companion Settings\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                    lineNumber: 133,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: \"block text-[13px] text-[#5f6368] mb-2\",\n                                            children: \"Instructions for your AI companion\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                            lineNumber: 135,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                            value: options?.userRequirements ?? '',\n                                            onChange: (e)=>setOptions((prev)=>({\n                                                        ...prev,\n                                                        userRequirements: e.target.value\n                                                    })),\n                                            placeholder: \"Describe how you'd like your AI companion to interact with this video. For example: 'Act as a movie critic and provide analysis', 'Explain technical concepts for beginners', 'Be enthusiastic and engaging'...\",\n                                            rows: 4,\n                                            className: \"w-full px-3 py-2 text-[14px] border border-[#dadce0] rounded-md focus:outline-none focus:ring-2 focus:ring-[#1a73e8] focus:ring-opacity-20 focus:border-[#1a73e8] transition-colors resize-none\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                            lineNumber: 138,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"mt-2 text-[12px] text-[#5f6368]\",\n                                            children: \"Optional: Provide context or specific instructions for personalized interaction\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                            lineNumber: 145,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                                    lineNumber: 134,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                            lineNumber: 132,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                    lineNumber: 83,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-[#f8f9fa] border-t border-[#e8eaed] px-6 py-4 flex items-center justify-end space-x-3\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: onClose,\n                            className: \"px-4 py-2 text-[14px] text-[#1a73e8] font-medium hover:bg-[#e8f0fe] rounded-md transition-colors\",\n                            children: \"Cancel\"\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                            lineNumber: 154,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: handleConfirm,\n                            className: \"px-6 py-2 bg-[#1a73e8] text-white text-[14px] font-medium rounded-md hover:bg-[#1557b0] transition-colors shadow-sm\",\n                            children: \"Start Watching\"\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                            lineNumber: 160,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n                    lineNumber: 153,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n            lineNumber: 66,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-config-modal.tsx\",\n        lineNumber: 65,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/video-config-modal.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/video-player-with-controls.tsx":
/*!*******************************************************!*\
  !*** ./src/components/video-player-with-controls.tsx ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VideoPlayerWithControls: () => (/* binding */ VideoPlayerWithControls)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-player */ \"(ssr)/./node_modules/react-player/dist/index.js\");\n/* __next_internal_client_entry_do_not_use__ VideoPlayerWithControls auto */ \n\n\nconst VideoPlayerWithControls = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(({ src, className = \"\", isSessionReady = false, onCurrentTimeChange }, ref)=>{\n    // Follow App.tsx exactly - playerRef should point to HTMLVideoElement\n    const playerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [showPauseOverlay, setShowPauseOverlay] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showSpeakingOverlay, setShowSpeakingOverlay] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const seekAnimationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Expose control methods via ref\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, {\n        \"VideoPlayerWithControls.useImperativeHandle\": ()=>({\n                pause: ({\n                    \"VideoPlayerWithControls.useImperativeHandle\": ()=>{\n                        if (playerRef.current) {\n                            playerRef.current.pause();\n                            setState({\n                                \"VideoPlayerWithControls.useImperativeHandle\": (prevState)=>({\n                                        ...prevState,\n                                        playing: false\n                                    })\n                            }[\"VideoPlayerWithControls.useImperativeHandle\"]);\n                        }\n                    }\n                })[\"VideoPlayerWithControls.useImperativeHandle\"],\n                resume: ({\n                    \"VideoPlayerWithControls.useImperativeHandle\": ()=>{\n                        if (playerRef.current && isSessionReady) {\n                            playerRef.current.play();\n                            setState({\n                                \"VideoPlayerWithControls.useImperativeHandle\": (prevState)=>({\n                                        ...prevState,\n                                        playing: true\n                                    })\n                            }[\"VideoPlayerWithControls.useImperativeHandle\"]);\n                        }\n                    }\n                })[\"VideoPlayerWithControls.useImperativeHandle\"],\n                seek: ({\n                    \"VideoPlayerWithControls.useImperativeHandle\": (time)=>{\n                        if (playerRef.current) {\n                            playerRef.current.currentTime = time;\n                        }\n                    }\n                })[\"VideoPlayerWithControls.useImperativeHandle\"],\n                getCurrentTime: ({\n                    \"VideoPlayerWithControls.useImperativeHandle\": ()=>{\n                        return playerRef.current?.currentTime || 0;\n                    }\n                })[\"VideoPlayerWithControls.useImperativeHandle\"],\n                getDuration: ({\n                    \"VideoPlayerWithControls.useImperativeHandle\": ()=>{\n                        return playerRef.current?.duration || 0;\n                    }\n                })[\"VideoPlayerWithControls.useImperativeHandle\"],\n                showPauseOverlay: ({\n                    \"VideoPlayerWithControls.useImperativeHandle\": ()=>{\n                        setShowPauseOverlay(true);\n                    }\n                })[\"VideoPlayerWithControls.useImperativeHandle\"],\n                hidePauseOverlay: ({\n                    \"VideoPlayerWithControls.useImperativeHandle\": ()=>{\n                        setShowPauseOverlay(false);\n                    }\n                })[\"VideoPlayerWithControls.useImperativeHandle\"],\n                showSpeakingOverlay: ({\n                    \"VideoPlayerWithControls.useImperativeHandle\": ()=>{\n                        setShowSpeakingOverlay(true);\n                    }\n                })[\"VideoPlayerWithControls.useImperativeHandle\"],\n                hideSpeakingOverlay: ({\n                    \"VideoPlayerWithControls.useImperativeHandle\": ()=>{\n                        setShowSpeakingOverlay(false);\n                    }\n                })[\"VideoPlayerWithControls.useImperativeHandle\"],\n                animateSeek: ({\n                    \"VideoPlayerWithControls.useImperativeHandle\": async (targetTime, duration = 1000)=>{\n                        if (!playerRef.current) return;\n                        const startTime = playerRef.current.currentTime;\n                        const startTimestamp = Date.now();\n                        // Cancel any existing animation\n                        if (seekAnimationRef.current) {\n                            cancelAnimationFrame(seekAnimationRef.current);\n                        }\n                        return new Promise({\n                            \"VideoPlayerWithControls.useImperativeHandle\": (resolve)=>{\n                                const animate = {\n                                    \"VideoPlayerWithControls.useImperativeHandle.animate\": ()=>{\n                                        const elapsed = Date.now() - startTimestamp;\n                                        const progress = Math.min(elapsed / duration, 1);\n                                        // Easing function for more natural movement\n                                        const easeInOutQuad = {\n                                            \"VideoPlayerWithControls.useImperativeHandle.animate.easeInOutQuad\": (t)=>t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t\n                                        }[\"VideoPlayerWithControls.useImperativeHandle.animate.easeInOutQuad\"];\n                                        const easedProgress = easeInOutQuad(progress);\n                                        const currentTime = startTime + (targetTime - startTime) * easedProgress;\n                                        if (playerRef.current) {\n                                            playerRef.current.currentTime = currentTime;\n                                            // Also update the progress bar\n                                            const duration = playerRef.current.duration || 0;\n                                            if (duration > 0) {\n                                                setState({\n                                                    \"VideoPlayerWithControls.useImperativeHandle.animate\": (prevState)=>({\n                                                            ...prevState,\n                                                            played: currentTime / duration,\n                                                            playedSeconds: currentTime\n                                                        })\n                                                }[\"VideoPlayerWithControls.useImperativeHandle.animate\"]);\n                                            }\n                                        }\n                                        if (progress < 1) {\n                                            seekAnimationRef.current = requestAnimationFrame(animate);\n                                        } else {\n                                            seekAnimationRef.current = null;\n                                            resolve();\n                                        }\n                                    }\n                                }[\"VideoPlayerWithControls.useImperativeHandle.animate\"];\n                                animate();\n                            }\n                        }[\"VideoPlayerWithControls.useImperativeHandle\"]);\n                    }\n                })[\"VideoPlayerWithControls.useImperativeHandle\"],\n                setVolume: ({\n                    \"VideoPlayerWithControls.useImperativeHandle\": (volume)=>{\n                        const clampedVolume = Math.max(0, Math.min(1, volume));\n                        setState({\n                            \"VideoPlayerWithControls.useImperativeHandle\": (prevState)=>({\n                                    ...prevState,\n                                    volume: clampedVolume\n                                })\n                        }[\"VideoPlayerWithControls.useImperativeHandle\"]);\n                        console.log(`Video volume set to: ${clampedVolume}`);\n                    }\n                })[\"VideoPlayerWithControls.useImperativeHandle\"],\n                getVolume: ({\n                    \"VideoPlayerWithControls.useImperativeHandle\": ()=>{\n                        return state.volume;\n                    }\n                })[\"VideoPlayerWithControls.useImperativeHandle\"]\n            })\n    }[\"VideoPlayerWithControls.useImperativeHandle\"], [\n        isSessionReady\n    ]);\n    const initialState = {\n        src: src || undefined,\n        pip: false,\n        playing: false,\n        controls: true,\n        light: false,\n        volume: 1,\n        muted: false,\n        played: 0,\n        loaded: 0,\n        duration: 0,\n        playbackRate: 1.0,\n        loop: false,\n        seeking: false,\n        loadedSeconds: 0,\n        playedSeconds: 0\n    };\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialState);\n    // Play/pause control - disabled when session is not ready\n    const handlePlayPause = ()=>{\n        if (!isSessionReady) {\n            console.log(\"Play/pause disabled: session not ready\");\n            return;\n        }\n        setState((prevState)=>({\n                ...prevState,\n                playing: !prevState.playing\n            }));\n    };\n    // Stop playback\n    const handleStop = ()=>{\n        setState((prevState)=>({\n                ...prevState,\n                playing: false\n            }));\n        if (playerRef.current) {\n            playerRef.current.currentTime = 0;\n        }\n    };\n    // Volume control\n    const handleVolumeChange = (event)=>{\n        const inputTarget = event.target;\n        setState((prevState)=>({\n                ...prevState,\n                volume: Number.parseFloat(inputTarget.value)\n            }));\n    };\n    // Toggle mute\n    const handleToggleMuted = ()=>{\n        setState((prevState)=>({\n                ...prevState,\n                muted: !prevState.muted\n            }));\n    };\n    // Playback rate control\n    const handleSetPlaybackRate = (rate)=>{\n        setState((prevState)=>({\n                ...prevState,\n                playbackRate: rate\n            }));\n    };\n    // Progress bar control - exactly like App.tsx\n    const handleSeekMouseDown = ()=>{\n        setState((prevState)=>({\n                ...prevState,\n                seeking: true\n            }));\n    };\n    const handleSeekChange = (event)=>{\n        const inputTarget = event.target;\n        setState((prevState)=>({\n                ...prevState,\n                played: Number.parseFloat(inputTarget.value)\n            }));\n    };\n    const handleSeekMouseUp = (event)=>{\n        const inputTarget = event.target;\n        setState((prevState)=>({\n                ...prevState,\n                seeking: false\n            }));\n        if (playerRef.current) {\n            playerRef.current.currentTime = Number.parseFloat(inputTarget.value) * playerRef.current.duration;\n        }\n    };\n    // Seek forward/backward buttons - using currentTime like App.tsx\n    const handleSeekBy = (seconds)=>{\n        if (playerRef.current) {\n            const newTime = Math.max(0, Math.min(playerRef.current.currentTime + seconds, playerRef.current.duration));\n            playerRef.current.currentTime = newTime;\n        }\n    };\n    // Event handlers - exactly like App.tsx\n    const handlePlay = ()=>{\n        console.log(\"onPlay\");\n        setState((prevState)=>({\n                ...prevState,\n                playing: true\n            }));\n    };\n    const handlePause = ()=>{\n        console.log(\"onPause\");\n        setState((prevState)=>({\n                ...prevState,\n                playing: false\n            }));\n    };\n    const handleProgress = ()=>{\n        const player = playerRef.current;\n        // We only want to update time slider if we are not currently seeking\n        if (!player || state.seeking || !player.buffered?.length) return;\n        console.log(\"onProgress\");\n        setState((prevState)=>({\n                ...prevState,\n                loadedSeconds: player.buffered?.end(player.buffered?.length - 1),\n                loaded: player.buffered?.end(player.buffered?.length - 1) / player.duration\n            }));\n    };\n    const handleTimeUpdate = ()=>{\n        const player = playerRef.current;\n        // We only want to update time slider if we are not currently seeking\n        if (!player || state.seeking) return;\n        console.log(\"onTimeUpdate\", player.currentTime);\n        if (!player.duration) return;\n        // Notify parent component of current time changes\n        onCurrentTimeChange?.(player.currentTime);\n        setState((prevState)=>({\n                ...prevState,\n                playedSeconds: player.currentTime,\n                played: player.currentTime / player.duration\n            }));\n    };\n    const handleEnded = ()=>{\n        console.log(\"onEnded\");\n        setState((prevState)=>({\n                ...prevState,\n                playing: prevState.loop\n            }));\n    };\n    const handleDurationChange = ()=>{\n        const player = playerRef.current;\n        if (!player) return;\n        console.log(\"onDurationChange\", player.duration);\n        setState((prevState)=>({\n                ...prevState,\n                duration: player.duration\n            }));\n    };\n    // Set player ref - exactly like App.tsx\n    const setPlayerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"VideoPlayerWithControls.useCallback[setPlayerRef]\": (player)=>{\n            if (!player) return;\n            playerRef.current = player;\n            console.log(player);\n        }\n    }[\"VideoPlayerWithControls.useCallback[setPlayerRef]\"], []);\n    if (!src) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: `${className} bg-gray-100 rounded-lg p-8 text-center`,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-gray-500\",\n                children: \"No video selected\"\n            }, void 0, false, {\n                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                lineNumber: 295,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n            lineNumber: 294,\n            columnNumber: 7\n        }, undefined);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: `${className} bg-white rounded-lg shadow-lg overflow-hidden`,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"relative bg-black\",\n            style: {\n                aspectRatio: \"16/9\"\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_player__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    ref: setPlayerRef,\n                    className: \"react-player\",\n                    style: {\n                        width: \"100%\",\n                        height: \"100%\",\n                        aspectRatio: \"16/9\"\n                    },\n                    src: src,\n                    pip: state.pip,\n                    playing: state.playing && isSessionReady,\n                    controls: state.controls,\n                    light: state.light,\n                    loop: state.loop,\n                    playbackRate: state.playbackRate,\n                    volume: state.volume,\n                    muted: state.muted,\n                    onLoadStart: ()=>console.log(\"onLoadStart\"),\n                    onPlay: handlePlay,\n                    onPause: handlePause,\n                    onSeeking: (e)=>console.log(\"onSeeking\", e),\n                    onSeeked: (e)=>console.log(\"onSeeked\", e),\n                    onEnded: handleEnded,\n                    onError: (e)=>console.log(\"onError\", e),\n                    onTimeUpdate: handleTimeUpdate,\n                    onProgress: handleProgress,\n                    onDurationChange: handleDurationChange\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                    lineNumber: 304,\n                    columnNumber: 9\n                }, undefined),\n                !isSessionReady && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"absolute inset-0 bg-black bg-opacity-75 flex items-center justify-center z-10\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-center text-white\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-white mx-auto mb-4\"\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                lineNumber: 333,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-sm text-gray-300 mt-2\",\n                                children: \"Connecting to AI companion...\"\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                lineNumber: 334,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                        lineNumber: 332,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                    lineNumber: 331,\n                    columnNumber: 11\n                }, undefined),\n                showPauseOverlay && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"absolute inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex items-center justify-center z-20 transition-all duration-300\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-white bg-opacity-20 rounded-full p-8 backdrop-blur-md animate-pulse\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                className: \"w-16 h-16 text-white\",\n                                fill: \"currentColor\",\n                                viewBox: \"0 0 24 24\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                    lineNumber: 348,\n                                    columnNumber: 19\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                lineNumber: 347,\n                                columnNumber: 17\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                            lineNumber: 346,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                        lineNumber: 344,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                    lineNumber: 343,\n                    columnNumber: 11\n                }, undefined),\n                showSpeakingOverlay && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent flex items-end justify-center z-20 transition-all duration-300\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative pb-16 w-full max-w-2xl px-8\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center justify-center gap-2 mb-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"bg-white rounded-full p-1\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            className: \"w-6 h-6 text-blue-600 animate-pulse\",\n                                            fill: \"currentColor\",\n                                            viewBox: \"0 0 24 24\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    d: \"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                                    lineNumber: 363,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    d: \"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                                    lineNumber: 364,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                            lineNumber: 362,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                        lineNumber: 361,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex gap-1\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-1 h-4 bg-white rounded-full animate-pulse\",\n                                                style: {\n                                                    animationDelay: '0ms'\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                                lineNumber: 368,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-1 h-6 bg-white rounded-full animate-pulse\",\n                                                style: {\n                                                    animationDelay: '150ms'\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                                lineNumber: 369,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-1 h-5 bg-white rounded-full animate-pulse\",\n                                                style: {\n                                                    animationDelay: '300ms'\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                                lineNumber: 370,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-1 h-7 bg-white rounded-full animate-pulse\",\n                                                style: {\n                                                    animationDelay: '450ms'\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                                lineNumber: 371,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-1 h-4 bg-white rounded-full animate-pulse\",\n                                                style: {\n                                                    animationDelay: '600ms'\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                                lineNumber: 372,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                        lineNumber: 367,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                lineNumber: 360,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-white text-center text-sm animate-fade-in\",\n                                children: \"AI is speaking...\"\n                            }, void 0, false, {\n                                fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                                lineNumber: 375,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                        lineNumber: 358,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n                    lineNumber: 357,\n                    columnNumber: 11\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n            lineNumber: 303,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/video-player-with-controls.tsx\",\n        lineNumber: 301,\n        columnNumber: 5\n    }, undefined);\n});\nVideoPlayerWithControls.displayName = 'VideoPlayerWithControls';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/video-player-with-controls.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/websocket-handler.tsx":
/*!**********************************************!*\
  !*** ./src/components/websocket-handler.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketHandler: () => (/* binding */ WebSocketHandler)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_chat_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/context/chat-context */ \"(ssr)/./src/context/chat-context.tsx\");\n/* harmony import */ var _context_settings_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/context/settings-context */ \"(ssr)/./src/context/settings-context.tsx\");\n/* harmony import */ var _hooks_use_live2d_expression__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/hooks/use-live2d-expression */ \"(ssr)/./src/hooks/use-live2d-expression.ts\");\n/* harmony import */ var _context_websocket_context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/context/websocket-context */ \"(ssr)/./src/context/websocket-context.tsx\");\n/* __next_internal_client_entry_do_not_use__ WebSocketHandler auto */ \n\n\n\n\n\nfunction WebSocketHandler({ children }) {\n    // WebSocket 连接状态\n    const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('disconnected');\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Session 状态\n    const [sessionStatus, setSessionStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('idle');\n    const [processingError, setProcessingError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // AI Actions\n    const [receivedActions, setReceivedActions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const wsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const reconnectTimeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const reconnectAttemptsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const currentSessionIdRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const { addMessage } = (0,_context_chat_context__WEBPACK_IMPORTED_MODULE_2__.useChat)();\n    const { generalSettings } = (0,_context_settings_context__WEBPACK_IMPORTED_MODULE_3__.useSettings)();\n    const { setExpression } = (0,_hooks_use_live2d_expression__WEBPACK_IMPORTED_MODULE_4__.useLive2DExpression)();\n    // Control methods\n    const clearReceivedActions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"WebSocketHandler.useCallback[clearReceivedActions]\": ()=>{\n            setReceivedActions([]);\n        }\n    }[\"WebSocketHandler.useCallback[clearReceivedActions]\"], []);\n    const clearError = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"WebSocketHandler.useCallback[clearError]\": ()=>{\n            setProcessingError(null);\n            if (sessionStatus === 'error') {\n                setSessionStatus('idle');\n            }\n        }\n    }[\"WebSocketHandler.useCallback[clearError]\"], [\n        sessionStatus\n    ]);\n    const resetHandler = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"WebSocketHandler.useCallback[resetHandler]\": ()=>{\n            setSessionStatus('idle');\n            setProcessingError(null);\n            setReceivedActions([]);\n        }\n    }[\"WebSocketHandler.useCallback[resetHandler]\"], []);\n    // Computed values\n    const isSessionReady = sessionStatus === 'ready';\n    // Helper function to validate single action data\n    const isValidSingleAction = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"WebSocketHandler.useCallback[isValidSingleAction]\": (actionData)=>{\n            return actionData && typeof actionData.action_type === 'string' && [\n                'SPEAK',\n                'PAUSE',\n                'SEEK',\n                'REPLAY_SEGMENT',\n                'END_REACTION',\n                'EXPRESSION'\n            ].includes(actionData.action_type) && typeof actionData.id === 'string' && typeof actionData.trigger_timestamp === 'number' && typeof actionData.comment === 'string';\n        }\n    }[\"WebSocketHandler.useCallback[isValidSingleAction]\"], []);\n    // 处理 WebSocket 消息 - 完整的 message handler 逻辑\n    const handleMessage = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"WebSocketHandler.useCallback[handleMessage]\": (event)=>{\n            try {\n                const message = JSON.parse(event.data);\n                console.log('📨 Received WebSocket message:', message);\n                switch(message.type){\n                    case 'session_ready':\n                        console.log('✅ Session is ready! Setting status to ready');\n                        setSessionStatus('ready');\n                        setProcessingError(null);\n                        addMessage({\n                            type: 'system',\n                            content: 'Session ready! You can start chatting.'\n                        });\n                        break;\n                    case 'processing_error':\n                        console.error('Processing error received:', message);\n                        console.error('Full error details:', JSON.stringify(message, null, 2));\n                        const error = {\n                            error_code: message.error_code || 'UNKNOWN_ERROR',\n                            message: message.message || 'An unknown error occurred'\n                        };\n                        setProcessingError(error);\n                        setSessionStatus('error');\n                        addMessage({\n                            type: 'system',\n                            content: `Processing Error: ${error.message}`\n                        });\n                        break;\n                    case 'ai_action':\n                        console.log('Received AI action message:', message);\n                        if (message.action && isValidSingleAction(message.action)) {\n                            const actionData = message.action;\n                            const action = {\n                                action_type: actionData.action_type,\n                                id: actionData.id,\n                                trigger_timestamp: actionData.trigger_timestamp,\n                                comment: actionData.comment,\n                                text: actionData.text,\n                                audio: actionData.audio,\n                                pause_video: actionData.pause_video,\n                                duration_seconds: actionData.duration_seconds,\n                                target_timestamp: actionData.target_timestamp,\n                                post_seek_behavior: actionData.post_seek_behavior,\n                                start_timestamp: actionData.start_timestamp,\n                                end_timestamp: actionData.end_timestamp,\n                                post_replay_behavior: actionData.post_replay_behavior,\n                                emotion_expressions: actionData.emotion_expressions\n                            };\n                            setReceivedActions({\n                                \"WebSocketHandler.useCallback[handleMessage]\": (prev)=>{\n                                    // Check if action with same ID already exists\n                                    const existingActionIndex = prev.findIndex({\n                                        \"WebSocketHandler.useCallback[handleMessage].existingActionIndex\": (existingAction)=>existingAction.id === action.id\n                                    }[\"WebSocketHandler.useCallback[handleMessage].existingActionIndex\"]);\n                                    if (existingActionIndex !== -1) {\n                                        console.log(`Action with ID ${action.id} already exists, skipping duplicate`);\n                                        return prev; // Don't add duplicate\n                                    }\n                                    // Insert action in the correct position based on trigger_timestamp\n                                    const newActions = [\n                                        ...prev,\n                                        action\n                                    ];\n                                    return newActions.sort({\n                                        \"WebSocketHandler.useCallback[handleMessage]\": (a, b)=>a.trigger_timestamp - b.trigger_timestamp\n                                    }[\"WebSocketHandler.useCallback[handleMessage]\"]);\n                                }\n                            }[\"WebSocketHandler.useCallback[handleMessage]\"]);\n                            // Only trigger immediate handling for non-SPEAK actions\n                            if (action.action_type !== 'SPEAK') {\n                                handleAIAction(action);\n                            }\n                        } else {\n                            console.warn('Received invalid ai_action message:', message);\n                        }\n                        break;\n                    case 'error':\n                        console.error('❌ Server error:', message);\n                        setError(message.message || 'Server error occurred');\n                        addMessage({\n                            type: 'system',\n                            content: `Server Error: ${message.message || 'Unknown server error'}`\n                        });\n                        break;\n                    case 'audio_received':\n                        console.log('✅ Audio processing acknowledged by server');\n                        break;\n                    default:\n                        console.log('Unhandled message type:', message.type);\n                        break;\n                }\n            } catch (err) {\n                console.error('Failed to parse WebSocket message:', event.data, err);\n                setError('Invalid message format received');\n            }\n        }\n    }[\"WebSocketHandler.useCallback[handleMessage]\"], [\n        addMessage,\n        isValidSingleAction\n    ]);\n    // 处理 AI 动作 - 只处理即时执行的动作，不包括SPEAK\n    const handleAIAction = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"WebSocketHandler.useCallback[handleAIAction]\": (action)=>{\n            switch(action.action_type){\n                case 'EXPRESSION':\n                    if (action.emotion_expressions) {\n                        const lappAdapter = window.getLAppAdapter?.();\n                        if (lappAdapter) {\n                            setExpression(action.emotion_expressions, lappAdapter, `Set expression to: ${action.emotion_expressions}`);\n                        }\n                    }\n                    break;\n                case 'PAUSE':\n                    console.log(`⏸️ AI pausing for ${action.duration_seconds}s`);\n                    break;\n                case 'SEEK':\n                    console.log(`⏩ AI seeking to ${action.target_timestamp}s`);\n                    break;\n                case 'REPLAY_SEGMENT':\n                    console.log(`🔄 AI replaying segment ${action.start_timestamp}s - ${action.end_timestamp}s`);\n                    break;\n                case 'END_REACTION':\n                    console.log('🏁 AI ended reaction');\n                    break;\n                default:\n                    console.warn('⚠️ Unknown AI action type:', action.action_type);\n                    break;\n            }\n        }\n    }[\"WebSocketHandler.useCallback[handleAIAction]\"], [\n        setExpression\n    ]);\n    // 发送消息\n    const sendMessage = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"WebSocketHandler.useCallback[sendMessage]\": (message)=>{\n            if (wsRef.current?.readyState === WebSocket.OPEN) {\n                try {\n                    wsRef.current.send(JSON.stringify(message));\n                    console.log('📤 Sent WebSocket message:', message);\n                } catch (err) {\n                    console.error('Failed to send WebSocket message:', err);\n                    setError('Failed to send message');\n                }\n            } else {\n                console.warn('WebSocket is not connected. Cannot send message:', message);\n                setError('WebSocket not connected');\n            }\n        }\n    }[\"WebSocketHandler.useCallback[sendMessage]\"], []);\n    // 连接 WebSocket\n    const connect = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"WebSocketHandler.useCallback[connect]\": (sessionId)=>{\n            const wsUrl = `${(0,_context_settings_context__WEBPACK_IMPORTED_MODULE_3__.getWebSocketBaseUrl)()}/${sessionId}`;\n            if (!sessionId || wsRef.current?.readyState === WebSocket.OPEN) {\n                return; // No sessionId or already connected\n            }\n            // 保存 sessionId 用于重连\n            currentSessionIdRef.current = sessionId;\n            try {\n                setError(null);\n                setStatus('connecting');\n                console.log('🔗 Connecting to WebSocket:', wsUrl);\n                wsRef.current = new WebSocket(wsUrl);\n                wsRef.current.onopen = ({\n                    \"WebSocketHandler.useCallback[connect]\": ()=>{\n                        console.log('🔗 WebSocket connected to:', wsUrl);\n                        setStatus('connected');\n                        reconnectAttemptsRef.current = 0;\n                    }\n                })[\"WebSocketHandler.useCallback[connect]\"];\n                wsRef.current.onmessage = handleMessage;\n                wsRef.current.onclose = ({\n                    \"WebSocketHandler.useCallback[connect]\": (event)=>{\n                        console.log('❌ WebSocket disconnected:', event.code, event.reason);\n                        setStatus('disconnected');\n                        // Auto-reconnect with exponential backoff\n                        if (reconnectAttemptsRef.current < 5) {\n                            reconnectAttemptsRef.current++;\n                            const delay = Math.min(1000 * Math.pow(2, reconnectAttemptsRef.current), 30000);\n                            console.log(`🔄 Attempting to reconnect in ${delay}ms (attempt ${reconnectAttemptsRef.current}/5)`);\n                            reconnectTimeoutRef.current = setTimeout({\n                                \"WebSocketHandler.useCallback[connect]\": ()=>{\n                                    if (currentSessionIdRef.current) {\n                                        connect(currentSessionIdRef.current);\n                                    }\n                                }\n                            }[\"WebSocketHandler.useCallback[connect]\"], delay);\n                        } else {\n                            setError('Connection lost. Max reconnection attempts reached.');\n                        }\n                    }\n                })[\"WebSocketHandler.useCallback[connect]\"];\n                wsRef.current.onerror = ({\n                    \"WebSocketHandler.useCallback[connect]\": (event)=>{\n                        console.error('🚨 WebSocket error:', event);\n                        setStatus('error');\n                        setError('Connection error occurred');\n                    }\n                })[\"WebSocketHandler.useCallback[connect]\"];\n            } catch (err) {\n                console.error('Failed to create WebSocket connection:', err);\n                setStatus('error');\n                setError('Failed to create connection');\n            }\n        }\n    }[\"WebSocketHandler.useCallback[connect]\"], [\n        handleMessage\n    ]);\n    // 断开连接\n    const disconnect = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"WebSocketHandler.useCallback[disconnect]\": ()=>{\n            if (reconnectTimeoutRef.current) {\n                clearTimeout(reconnectTimeoutRef.current);\n                reconnectTimeoutRef.current = null;\n            }\n            if (wsRef.current) {\n                wsRef.current.close();\n                wsRef.current = null;\n            }\n            setStatus('disconnected');\n            setSessionStatus('idle');\n            setProcessingError(null);\n            setReceivedActions([]);\n            reconnectAttemptsRef.current = 0;\n        }\n    }[\"WebSocketHandler.useCallback[disconnect]\"], []);\n    // Debug: Log session status changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WebSocketHandler.useEffect\": ()=>{\n            console.log('📊 Message handler session status changed:', sessionStatus, 'isReady:', isSessionReady);\n        }\n    }[\"WebSocketHandler.useEffect\"], [\n        sessionStatus,\n        isSessionReady\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WebSocketHandler.useEffect\": ()=>{\n            return ({\n                \"WebSocketHandler.useEffect\": ()=>{\n                    disconnect();\n                }\n            })[\"WebSocketHandler.useEffect\"];\n        }\n    }[\"WebSocketHandler.useEffect\"], []);\n    // Context value\n    const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"WebSocketHandler.useMemo[contextValue]\": ()=>({\n                // WebSocket 连接状态\n                status,\n                sendMessage,\n                error,\n                connect,\n                disconnect,\n                // Session 状态\n                sessionStatus,\n                processingError,\n                isSessionReady,\n                // AI Actions\n                receivedActions,\n                clearReceivedActions,\n                // Control methods\n                clearError,\n                resetHandler\n            })\n    }[\"WebSocketHandler.useMemo[contextValue]\"], [\n        status,\n        sendMessage,\n        error,\n        connect,\n        disconnect,\n        sessionStatus,\n        processingError,\n        isSessionReady,\n        receivedActions,\n        clearReceivedActions,\n        clearError,\n        resetHandler\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_websocket_context__WEBPACK_IMPORTED_MODULE_5__.WebSocketContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/components/websocket-handler.tsx\",\n        lineNumber: 353,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/websocket-handler.tsx\n");

/***/ }),

/***/ "(ssr)/./src/context/chat-context.tsx":
/*!**************************************!*\
  !*** ./src/context/chat-context.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatProvider: () => (/* binding */ ChatProvider),\n/* harmony export */   useChat: () => (/* binding */ useChat)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ ChatProvider,useChat auto */ \n\n// Create the chat context\nconst ChatContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Provider component\nfunction ChatProvider({ children }) {\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isVisible, setIsVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Add a new message to the chat\n    const addMessage = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ChatProvider.useCallback[addMessage]\": (message)=>{\n            const newMessage = {\n                ...message,\n                id: `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n                timestamp: Date.now()\n            };\n            setMessages({\n                \"ChatProvider.useCallback[addMessage]\": (prev)=>[\n                        ...prev,\n                        newMessage\n                    ]\n            }[\"ChatProvider.useCallback[addMessage]\"]);\n        }\n    }[\"ChatProvider.useCallback[addMessage]\"], []);\n    // Clear all messages\n    const clearMessages = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ChatProvider.useCallback[clearMessages]\": ()=>{\n            setMessages([]);\n        }\n    }[\"ChatProvider.useCallback[clearMessages]\"], []);\n    const value = {\n        messages,\n        addMessage,\n        clearMessages,\n        isVisible,\n        setIsVisible\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ChatContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/chat-context.tsx\",\n        lineNumber: 59,\n        columnNumber: 5\n    }, this);\n}\n// Hook to use the chat context\nfunction useChat() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ChatContext);\n    if (context === undefined) {\n        throw new Error('useChat must be used within a ChatProvider');\n    }\n    return context;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29udGV4dC9jaGF0LWNvbnRleHQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFFb0Y7QUF1QnBGLDBCQUEwQjtBQUMxQixNQUFNSSw0QkFBY0osb0RBQWFBLENBQStCSztBQUVoRSxxQkFBcUI7QUFDZCxTQUFTQyxhQUFhLEVBQUVDLFFBQVEsRUFBMkI7SUFDaEUsTUFBTSxDQUFDQyxVQUFVQyxZQUFZLEdBQUdQLCtDQUFRQSxDQUFnQixFQUFFO0lBQzFELE1BQU0sQ0FBQ1EsV0FBV0MsYUFBYSxHQUFHVCwrQ0FBUUEsQ0FBVTtJQUVwRCxnQ0FBZ0M7SUFDaEMsTUFBTVUsYUFBYVQsa0RBQVdBO2dEQUFDLENBQUNVO1lBQzlCLE1BQU1DLGFBQTBCO2dCQUM5QixHQUFHRCxPQUFPO2dCQUNWRSxJQUFJLENBQUMsSUFBSSxFQUFFQyxLQUFLQyxHQUFHLEdBQUcsQ0FBQyxFQUFFQyxLQUFLQyxNQUFNLEdBQUdDLFFBQVEsQ0FBQyxJQUFJQyxNQUFNLENBQUMsR0FBRyxJQUFJO2dCQUNsRUMsV0FBV04sS0FBS0MsR0FBRztZQUNyQjtZQUVBUjt3REFBWWMsQ0FBQUEsT0FBUTsyQkFBSUE7d0JBQU1UO3FCQUFXOztRQUMzQzsrQ0FBRyxFQUFFO0lBRUwscUJBQXFCO0lBQ3JCLE1BQU1VLGdCQUFnQnJCLGtEQUFXQTttREFBQztZQUNoQ00sWUFBWSxFQUFFO1FBQ2hCO2tEQUFHLEVBQUU7SUFFTCxNQUFNZ0IsUUFBMEI7UUFDOUJqQjtRQUNBSTtRQUNBWTtRQUNBZDtRQUNBQztJQUNGO0lBRUEscUJBQ0UsOERBQUNQLFlBQVlzQixRQUFRO1FBQUNELE9BQU9BO2tCQUMxQmxCOzs7Ozs7QUFHUDtBQUVBLCtCQUErQjtBQUN4QixTQUFTb0I7SUFDZCxNQUFNQyxVQUFVM0IsaURBQVVBLENBQUNHO0lBQzNCLElBQUl3QixZQUFZdkIsV0FBVztRQUN6QixNQUFNLElBQUl3QixNQUFNO0lBQ2xCO0lBQ0EsT0FBT0Q7QUFDVCIsInNvdXJjZXMiOlsiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9zcmMvY29udGV4dC9jaGF0LWNvbnRleHQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrLCBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5cbi8vIERlZmluZSBtZXNzYWdlIHR5cGVzIGZvciBkaWZmZXJlbnQgdHlwZXMgb2YgY2hhdCBtZXNzYWdlc1xuZXhwb3J0IGludGVyZmFjZSBDaGF0TWVzc2FnZSB7XG4gIGlkOiBzdHJpbmc7XG4gIHR5cGU6ICdhaScgfCAndXNlcicgfCAnc3lzdGVtJztcbiAgY29udGVudDogc3RyaW5nO1xuICB0aW1lc3RhbXA6IG51bWJlcjtcbiAgbWV0YWRhdGE/OiB7XG4gICAgYWN0aW9uX3R5cGU/OiBzdHJpbmc7XG4gICAgdHJpZ2dlcl90aW1lc3RhbXA/OiBudW1iZXI7XG4gIH07XG59XG5cbi8vIENoYXQgY29udGV4dCBpbnRlcmZhY2VcbmludGVyZmFjZSBDaGF0Q29udGV4dFZhbHVlIHtcbiAgbWVzc2FnZXM6IENoYXRNZXNzYWdlW107XG4gIGFkZE1lc3NhZ2U6IChtZXNzYWdlOiBPbWl0PENoYXRNZXNzYWdlLCAnaWQnIHwgJ3RpbWVzdGFtcCc+KSA9PiB2b2lkO1xuICBjbGVhck1lc3NhZ2VzOiAoKSA9PiB2b2lkO1xuICBpc1Zpc2libGU6IGJvb2xlYW47XG4gIHNldElzVmlzaWJsZTogKHZpc2libGU6IGJvb2xlYW4pID0+IHZvaWQ7XG59XG5cbi8vIENyZWF0ZSB0aGUgY2hhdCBjb250ZXh0XG5jb25zdCBDaGF0Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8Q2hhdENvbnRleHRWYWx1ZSB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcblxuLy8gUHJvdmlkZXIgY29tcG9uZW50XG5leHBvcnQgZnVuY3Rpb24gQ2hhdFByb3ZpZGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3ROb2RlIH0pIHtcbiAgY29uc3QgW21lc3NhZ2VzLCBzZXRNZXNzYWdlc10gPSB1c2VTdGF0ZTxDaGF0TWVzc2FnZVtdPihbXSk7XG4gIGNvbnN0IFtpc1Zpc2libGUsIHNldElzVmlzaWJsZV0gPSB1c2VTdGF0ZTxib29sZWFuPih0cnVlKTtcblxuICAvLyBBZGQgYSBuZXcgbWVzc2FnZSB0byB0aGUgY2hhdFxuICBjb25zdCBhZGRNZXNzYWdlID0gdXNlQ2FsbGJhY2soKG1lc3NhZ2U6IE9taXQ8Q2hhdE1lc3NhZ2UsICdpZCcgfCAndGltZXN0YW1wJz4pID0+IHtcbiAgICBjb25zdCBuZXdNZXNzYWdlOiBDaGF0TWVzc2FnZSA9IHtcbiAgICAgIC4uLm1lc3NhZ2UsXG4gICAgICBpZDogYG1zZ18ke0RhdGUubm93KCl9XyR7TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpfWAsXG4gICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksXG4gICAgfTtcbiAgICBcbiAgICBzZXRNZXNzYWdlcyhwcmV2ID0+IFsuLi5wcmV2LCBuZXdNZXNzYWdlXSk7XG4gIH0sIFtdKTtcblxuICAvLyBDbGVhciBhbGwgbWVzc2FnZXNcbiAgY29uc3QgY2xlYXJNZXNzYWdlcyA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzZXRNZXNzYWdlcyhbXSk7XG4gIH0sIFtdKTtcblxuICBjb25zdCB2YWx1ZTogQ2hhdENvbnRleHRWYWx1ZSA9IHtcbiAgICBtZXNzYWdlcyxcbiAgICBhZGRNZXNzYWdlLFxuICAgIGNsZWFyTWVzc2FnZXMsXG4gICAgaXNWaXNpYmxlLFxuICAgIHNldElzVmlzaWJsZSxcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxDaGF0Q29udGV4dC5Qcm92aWRlciB2YWx1ZT17dmFsdWV9PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQ2hhdENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59XG5cbi8vIEhvb2sgdG8gdXNlIHRoZSBjaGF0IGNvbnRleHRcbmV4cG9ydCBmdW5jdGlvbiB1c2VDaGF0KCkge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChDaGF0Q29udGV4dCk7XG4gIGlmIChjb250ZXh0ID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZUNoYXQgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIENoYXRQcm92aWRlcicpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufVxuIl0sIm5hbWVzIjpbImNyZWF0ZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwidXNlU3RhdGUiLCJ1c2VDYWxsYmFjayIsIkNoYXRDb250ZXh0IiwidW5kZWZpbmVkIiwiQ2hhdFByb3ZpZGVyIiwiY2hpbGRyZW4iLCJtZXNzYWdlcyIsInNldE1lc3NhZ2VzIiwiaXNWaXNpYmxlIiwic2V0SXNWaXNpYmxlIiwiYWRkTWVzc2FnZSIsIm1lc3NhZ2UiLCJuZXdNZXNzYWdlIiwiaWQiLCJEYXRlIiwibm93IiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwidGltZXN0YW1wIiwicHJldiIsImNsZWFyTWVzc2FnZXMiLCJ2YWx1ZSIsIlByb3ZpZGVyIiwidXNlQ2hhdCIsImNvbnRleHQiLCJFcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/context/chat-context.tsx\n");

/***/ }),

/***/ "(ssr)/./src/context/live2d-config-context.tsx":
/*!***********************************************!*\
  !*** ./src/context/live2d-config-context.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Live2DConfigContext: () => (/* binding */ Live2DConfigContext),\n/* harmony export */   Live2DConfigProvider: () => (/* binding */ Live2DConfigProvider),\n/* harmony export */   useLive2DConfig: () => (/* binding */ useLive2DConfig)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _settings_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings-context */ \"(ssr)/./src/context/settings-context.tsx\");\n/* __next_internal_client_entry_do_not_use__ Live2DConfigContext,Live2DConfigProvider,useLive2DConfig auto */ \n\n\n/**\n * Default model configuration with specified URL\n * Optimized for right-side companion area display\n */ const DEFAULT_MODEL_INFO = {\n    name: \"Elaina\",\n    description: \"Default Live2D model - AI Companion\",\n    url: \"/live2d-models/elaina/LSS.model3.json\",\n    kScale: 0.8,\n    initialXshift: 20,\n    initialYshift: -50,\n    idleMotionGroupName: \"Idle\",\n    defaultEmotion: 0,\n    emotionMap: {\n        neutral: 0,\n        coldness: 1,\n        disgust: 1,\n        sad: 2,\n        worry: 2,\n        confusion: 3,\n        anger: 4,\n        surprise: 5,\n        expectation: 5,\n        joy: 6,\n        excitement: 7,\n        pride: 8,\n        shy: 9,\n        stunned: 10,\n        embarrassed: 11,\n        play_cool: 12,\n        drink_tea: 13\n    },\n    pointerInteractive: true,\n    scrollToResize: true,\n    initialScale: 0.8\n};\n/**\n * Default values and constants\n */ const DEFAULT_CONFIG = {\n    modelInfo: DEFAULT_MODEL_INFO,\n    isLoading: false\n};\n/**\n * Create the Live2D configuration context\n */ const Live2DConfigContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\n/**\n * Live2D Configuration Provider Component\n * @param {Object} props - Provider props\n * @param {React.ReactNode} props.children - Child components\n */ function Live2DConfigProvider({ children }) {\n    const { generalSettings } = (0,_settings_context__WEBPACK_IMPORTED_MODULE_2__.useSettings)();\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(DEFAULT_CONFIG.isLoading);\n    const [modelInfo, setModelInfoState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(DEFAULT_CONFIG.modelInfo);\n    const setModelInfo = (info)=>{\n        if (!info?.url) {\n            setModelInfoState(undefined); // Clear state if no URL\n            return;\n        }\n        // Always use the scale defined in the incoming info object (from config)\n        const finalScale = Number(info.kScale || 0.5) * 2; // Use default scale if kScale is missing\n        console.log(\"Setting model info with default scale:\", finalScale);\n        // Build full URL using baseUrl from environment\n        const baseUrl = (0,_settings_context__WEBPACK_IMPORTED_MODULE_2__.getApiBaseUrl)();\n        const fullUrl = info.url.startsWith('http') ? info.url : `${baseUrl}${info.url}`;\n        setModelInfoState({\n            ...info,\n            url: fullUrl,\n            kScale: finalScale,\n            // Preserve other potentially user-modified settings if needed, otherwise use defaults from info\n            pointerInteractive: \"pointerInteractive\" in info ? info.pointerInteractive : modelInfo?.pointerInteractive ?? true,\n            scrollToResize: \"scrollToResize\" in info ? info.scrollToResize : modelInfo?.scrollToResize ?? true\n        });\n    };\n    // Update model URL when baseUrl changes\n    const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"Live2DConfigProvider.useMemo[contextValue]\": ()=>({\n                modelInfo: modelInfo ? {\n                    ...modelInfo,\n                    url: modelInfo.url.startsWith('http') ? modelInfo.url : `${(0,_settings_context__WEBPACK_IMPORTED_MODULE_2__.getApiBaseUrl)()}${modelInfo.url}`\n                } : undefined,\n                setModelInfo,\n                isLoading,\n                setIsLoading\n            })\n    }[\"Live2DConfigProvider.useMemo[contextValue]\"], [\n        modelInfo,\n        isLoading,\n        setIsLoading\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Live2DConfigContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/live2d-config-context.tsx\",\n        lineNumber: 185,\n        columnNumber: 5\n    }, this);\n}\n/**\n * Custom hook to use the Live2D configuration context\n * @throws {Error} If used outside of Live2DConfigProvider\n */ function useLive2DConfig() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Live2DConfigContext);\n    if (!context) {\n        throw new Error('useLive2DConfig must be used within a Live2DConfigProvider');\n    }\n    return context;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29udGV4dC9saXZlMmQtY29uZmlnLWNvbnRleHQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUllO0FBQ2lEO0FBMEVoRTs7O0NBR0MsR0FDRCxNQUFNTSxxQkFBZ0M7SUFDcENDLE1BQU07SUFDTkMsYUFBYTtJQUNiQyxLQUFLO0lBQ0xDLFFBQVE7SUFDUkMsZUFBZTtJQUNmQyxlQUFlLENBQUM7SUFDaEJDLHFCQUFxQjtJQUNyQkMsZ0JBQWdCO0lBQ2hCQyxZQUFZO1FBQ1ZDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxTQUFTO1FBQ1RDLEtBQUs7UUFDTEMsT0FBTztRQUNQQyxXQUFXO1FBQ1hDLE9BQU87UUFDUEMsVUFBVTtRQUNWQyxhQUFhO1FBQ2JDLEtBQUs7UUFDTEMsWUFBWTtRQUNaQyxPQUFPO1FBQ1BDLEtBQUs7UUFDTEMsU0FBUztRQUNUQyxhQUFhO1FBQ2JDLFdBQVc7UUFDWEMsV0FBVztJQUNiO0lBQ0FDLG9CQUFvQjtJQUNwQkMsZ0JBQWdCO0lBQ2hCQyxjQUFjO0FBQ2hCO0FBRUE7O0NBRUMsR0FDRCxNQUFNQyxpQkFBaUI7SUFDckJDLFdBQVcvQjtJQUNYZ0MsV0FBVztBQUNiO0FBRUE7O0NBRUMsR0FDTSxNQUFNQyxvQ0FBc0J2QyxvREFBYUEsQ0FBMkIsTUFBTTtBQUVqRjs7OztDQUlDLEdBQ00sU0FBU3dDLHFCQUFxQixFQUFFQyxRQUFRLEVBQWlDO0lBQzlFLE1BQU0sRUFBRUMsZUFBZSxFQUFFLEdBQUd0Qyw4REFBV0E7SUFDdkMsTUFBTSxDQUFDa0MsV0FBV0ssYUFBYSxHQUFHekMsK0NBQVFBLENBQUNrQyxlQUFlRSxTQUFTO0lBQ25FLE1BQU0sQ0FBQ0QsV0FBV08sa0JBQWtCLEdBQUcxQywrQ0FBUUEsQ0FBd0JrQyxlQUFlQyxTQUFTO0lBRS9GLE1BQU1RLGVBQWUsQ0FBQ0M7UUFDcEIsSUFBSSxDQUFDQSxNQUFNckMsS0FBSztZQUNkbUMsa0JBQWtCRyxZQUFZLHdCQUF3QjtZQUN0RDtRQUNGO1FBRUEseUVBQXlFO1FBQ3pFLE1BQU1DLGFBQWFDLE9BQU9ILEtBQUtwQyxNQUFNLElBQUksT0FBTyxHQUFHLHlDQUF5QztRQUM1RndDLFFBQVFDLEdBQUcsQ0FBQywwQ0FBMENIO1FBRXRELGdEQUFnRDtRQUNoRCxNQUFNSSxVQUFVL0MsZ0VBQWFBO1FBQzdCLE1BQU1nRCxVQUFVUCxLQUFLckMsR0FBRyxDQUFDNkMsVUFBVSxDQUFDLFVBQVVSLEtBQUtyQyxHQUFHLEdBQUcsR0FBRzJDLFVBQVVOLEtBQUtyQyxHQUFHLEVBQUU7UUFFaEZtQyxrQkFBa0I7WUFDaEIsR0FBR0UsSUFBSTtZQUNQckMsS0FBSzRDO1lBQ0wzQyxRQUFRc0M7WUFDUixnR0FBZ0c7WUFDaEdmLG9CQUNFLHdCQUF3QmEsT0FDcEJBLEtBQUtiLGtCQUFrQixHQUN0QkksV0FBV0osc0JBQXNCO1lBQ3hDQyxnQkFDRSxvQkFBb0JZLE9BQ2hCQSxLQUFLWixjQUFjLEdBQ2xCRyxXQUFXSCxrQkFBa0I7UUFDdEM7SUFDRjtJQUVBLHdDQUF3QztJQUN4QyxNQUFNcUIsZUFBZXBELDhDQUFPQTtzREFDMUIsSUFBTztnQkFDTGtDLFdBQVdBLFlBQVk7b0JBQ3JCLEdBQUdBLFNBQVM7b0JBQ1o1QixLQUFLNEIsVUFBVTVCLEdBQUcsQ0FBQzZDLFVBQVUsQ0FBQyxVQUFVakIsVUFBVTVCLEdBQUcsR0FBRyxHQUFHSixnRUFBYUEsS0FBS2dDLFVBQVU1QixHQUFHLEVBQUU7Z0JBQzlGLElBQUlzQztnQkFDSkY7Z0JBQ0FQO2dCQUNBSztZQUNGO3FEQUNBO1FBQUNOO1FBQVdDO1FBQVdLO0tBQWE7SUFHdEMscUJBQ0UsOERBQUNKLG9CQUFvQmlCLFFBQVE7UUFBQ0MsT0FBT0Y7a0JBQ2xDZDs7Ozs7O0FBR1A7QUFFQTs7O0NBR0MsR0FDTSxTQUFTaUI7SUFDZCxNQUFNQyxVQUFVMUQsaURBQVVBLENBQUNzQztJQUUzQixJQUFJLENBQUNvQixTQUFTO1FBQ1osTUFBTSxJQUFJQyxNQUFNO0lBQ2xCO0lBRUEsT0FBT0Q7QUFDVCIsInNvdXJjZXMiOlsiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9zcmMvY29udGV4dC9saXZlMmQtY29uZmlnLWNvbnRleHQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IHtcbiAgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIHVzZU1lbW8sXG59IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVNldHRpbmdzLCBnZXRBcGlCYXNlVXJsIH0gZnJvbSAnLi9zZXR0aW5ncy1jb250ZXh0JztcblxuLyoqXG4gKiBNb2RlbCBlbW90aW9uIG1hcHBpbmcgaW50ZXJmYWNlXG4gKiBAaW50ZXJmYWNlIEVtb3Rpb25NYXBcbiAqL1xuaW50ZXJmYWNlIEVtb3Rpb25NYXAge1xuICBba2V5OiBzdHJpbmddOiBudW1iZXIgfCBzdHJpbmc7XG59XG5cbi8qKlxuICogVGFwIG1vdGlvbiBtYXBwaW5nIGludGVyZmFjZVxuICogQGludGVyZmFjZSBUYXBNb3Rpb25NYXBcbiAqL1xuaW50ZXJmYWNlIFRhcE1vdGlvbk1hcCB7XG4gIFtrZXk6IHN0cmluZ106IHN0cmluZ1tdO1xufVxuXG4vKipcbiAqIExpdmUyRCBtb2RlbCBpbmZvcm1hdGlvbiBpbnRlcmZhY2VcbiAqIEBpbnRlcmZhY2UgTW9kZWxJbmZvXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTW9kZWxJbmZvIHtcbiAgLyoqIE1vZGVsIG5hbWUgKi9cbiAgbmFtZT86IHN0cmluZztcblxuICAvKiogTW9kZWwgZGVzY3JpcHRpb24gKi9cbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG5cbiAgLyoqIE1vZGVsIFVSTCAqL1xuICB1cmw6IHN0cmluZztcblxuICAvKiogU2NhbGUgZmFjdG9yICovXG4gIGtTY2FsZTogbnVtYmVyO1xuXG4gIC8qKiBJbml0aWFsIFggcG9zaXRpb24gc2hpZnQgKi9cbiAgaW5pdGlhbFhzaGlmdDogbnVtYmVyO1xuXG4gIC8qKiBJbml0aWFsIFkgcG9zaXRpb24gc2hpZnQgKi9cbiAgaW5pdGlhbFlzaGlmdDogbnVtYmVyO1xuXG4gIC8qKiBJZGxlIG1vdGlvbiBncm91cCBuYW1lICovXG4gIGlkbGVNb3Rpb25Hcm91cE5hbWU/OiBzdHJpbmc7XG5cbiAgLyoqIERlZmF1bHQgZW1vdGlvbiAqL1xuICBkZWZhdWx0RW1vdGlvbj86IG51bWJlciB8IHN0cmluZztcblxuICAvKiogRW1vdGlvbiBtYXBwaW5nIGNvbmZpZ3VyYXRpb24gKi9cbiAgZW1vdGlvbk1hcDogRW1vdGlvbk1hcDtcblxuICAvKiogRW5hYmxlIHBvaW50ZXIgaW50ZXJhY3Rpdml0eSAqL1xuICBwb2ludGVySW50ZXJhY3RpdmU/OiBib29sZWFuO1xuXG4gIC8qKiBUYXAgbW90aW9uIG1hcHBpbmcgY29uZmlndXJhdGlvbiAqL1xuICB0YXBNb3Rpb25zPzogVGFwTW90aW9uTWFwO1xuXG4gIC8qKiBFbmFibGUgc2Nyb2xsIHRvIHJlc2l6ZSAqL1xuICBzY3JvbGxUb1Jlc2l6ZT86IGJvb2xlYW47XG5cbiAgLyoqIEluaXRpYWwgc2NhbGUgKi9cbiAgaW5pdGlhbFNjYWxlPzogbnVtYmVyO1xufVxuXG4vKipcbiAqIExpdmUyRCBjb25maWd1cmF0aW9uIGNvbnRleHQgc3RhdGUgaW50ZXJmYWNlXG4gKiBAaW50ZXJmYWNlIExpdmUyRENvbmZpZ1N0YXRlXG4gKi9cbmludGVyZmFjZSBMaXZlMkRDb25maWdTdGF0ZSB7XG4gIG1vZGVsSW5mbz86IE1vZGVsSW5mbztcbiAgc2V0TW9kZWxJbmZvOiAoaW5mbzogTW9kZWxJbmZvIHwgdW5kZWZpbmVkKSA9PiB2b2lkO1xuICBpc0xvYWRpbmc6IGJvb2xlYW47XG4gIHNldElzTG9hZGluZzogKGxvYWRpbmc6IGJvb2xlYW4pID0+IHZvaWQ7XG59XG5cbi8qKlxuICogRGVmYXVsdCBtb2RlbCBjb25maWd1cmF0aW9uIHdpdGggc3BlY2lmaWVkIFVSTFxuICogT3B0aW1pemVkIGZvciByaWdodC1zaWRlIGNvbXBhbmlvbiBhcmVhIGRpc3BsYXlcbiAqL1xuY29uc3QgREVGQVVMVF9NT0RFTF9JTkZPOiBNb2RlbEluZm8gPSB7XG4gIG5hbWU6IFwiRWxhaW5hXCIsXG4gIGRlc2NyaXB0aW9uOiBcIkRlZmF1bHQgTGl2ZTJEIG1vZGVsIC0gQUkgQ29tcGFuaW9uXCIsXG4gIHVybDogXCIvbGl2ZTJkLW1vZGVscy9lbGFpbmEvTFNTLm1vZGVsMy5qc29uXCIsIC8vIFRoaXMgd2lsbCBiZSBjb21iaW5lZCB3aXRoIGJhc2VVcmwgZnJvbSBzZXR0aW5nc1xuICBrU2NhbGU6IDAuOCwgLy8gU2xpZ2h0bHkgc21hbGxlciBmb3IgY29tcGFuaW9uIGFyZWFcbiAgaW5pdGlhbFhzaGlmdDogMjAsIC8vIFNoaWZ0IHNsaWdodGx5IHJpZ2h0IHRvIGNlbnRlciBpbiByaWdodCBwYW5lbFxuICBpbml0aWFsWXNoaWZ0OiAtNTAsIC8vIFNoaWZ0IHVwIHRvIGFjY291bnQgZm9yIGNoYXQgaW50ZXJmYWNlIGF0IGJvdHRvbVxuICBpZGxlTW90aW9uR3JvdXBOYW1lOiBcIklkbGVcIixcbiAgZGVmYXVsdEVtb3Rpb246IDAsXG4gIGVtb3Rpb25NYXA6IHtcbiAgICBuZXV0cmFsOiAwLFxuICAgIGNvbGRuZXNzOiAxLFxuICAgIGRpc2d1c3Q6IDEsXG4gICAgc2FkOiAyLFxuICAgIHdvcnJ5OiAyLFxuICAgIGNvbmZ1c2lvbjogMyxcbiAgICBhbmdlcjogNCxcbiAgICBzdXJwcmlzZTogNSxcbiAgICBleHBlY3RhdGlvbjogNSxcbiAgICBqb3k6IDYsXG4gICAgZXhjaXRlbWVudDogNyxcbiAgICBwcmlkZTogOCxcbiAgICBzaHk6IDksXG4gICAgc3R1bm5lZDogMTAsXG4gICAgZW1iYXJyYXNzZWQ6IDExLFxuICAgIHBsYXlfY29vbDogMTIsXG4gICAgZHJpbmtfdGVhOiAxMyxcbiAgfSxcbiAgcG9pbnRlckludGVyYWN0aXZlOiB0cnVlLFxuICBzY3JvbGxUb1Jlc2l6ZTogdHJ1ZSxcbiAgaW5pdGlhbFNjYWxlOiAwLjgsIC8vIENvbnNpc3RlbnQgd2l0aCBrU2NhbGVcbn07XG5cbi8qKlxuICogRGVmYXVsdCB2YWx1ZXMgYW5kIGNvbnN0YW50c1xuICovXG5jb25zdCBERUZBVUxUX0NPTkZJRyA9IHtcbiAgbW9kZWxJbmZvOiBERUZBVUxUX01PREVMX0lORk8sXG4gIGlzTG9hZGluZzogZmFsc2UsXG59O1xuXG4vKipcbiAqIENyZWF0ZSB0aGUgTGl2ZTJEIGNvbmZpZ3VyYXRpb24gY29udGV4dFxuICovXG5leHBvcnQgY29uc3QgTGl2ZTJEQ29uZmlnQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8TGl2ZTJEQ29uZmlnU3RhdGUgfCBudWxsPihudWxsKTtcblxuLyoqXG4gKiBMaXZlMkQgQ29uZmlndXJhdGlvbiBQcm92aWRlciBDb21wb25lbnRcbiAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wcyAtIFByb3ZpZGVyIHByb3BzXG4gKiBAcGFyYW0ge1JlYWN0LlJlYWN0Tm9kZX0gcHJvcHMuY2hpbGRyZW4gLSBDaGlsZCBjb21wb25lbnRzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBMaXZlMkRDb25maWdQcm92aWRlcih7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSB7XG4gIGNvbnN0IHsgZ2VuZXJhbFNldHRpbmdzIH0gPSB1c2VTZXR0aW5ncygpO1xuICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUoREVGQVVMVF9DT05GSUcuaXNMb2FkaW5nKTtcbiAgY29uc3QgW21vZGVsSW5mbywgc2V0TW9kZWxJbmZvU3RhdGVdID0gdXNlU3RhdGU8TW9kZWxJbmZvIHwgdW5kZWZpbmVkPihERUZBVUxUX0NPTkZJRy5tb2RlbEluZm8pO1xuXG4gIGNvbnN0IHNldE1vZGVsSW5mbyA9IChpbmZvOiBNb2RlbEluZm8gfCB1bmRlZmluZWQpID0+IHtcbiAgICBpZiAoIWluZm8/LnVybCkge1xuICAgICAgc2V0TW9kZWxJbmZvU3RhdGUodW5kZWZpbmVkKTsgLy8gQ2xlYXIgc3RhdGUgaWYgbm8gVVJMXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gQWx3YXlzIHVzZSB0aGUgc2NhbGUgZGVmaW5lZCBpbiB0aGUgaW5jb21pbmcgaW5mbyBvYmplY3QgKGZyb20gY29uZmlnKVxuICAgIGNvbnN0IGZpbmFsU2NhbGUgPSBOdW1iZXIoaW5mby5rU2NhbGUgfHwgMC41KSAqIDI7IC8vIFVzZSBkZWZhdWx0IHNjYWxlIGlmIGtTY2FsZSBpcyBtaXNzaW5nXG4gICAgY29uc29sZS5sb2coXCJTZXR0aW5nIG1vZGVsIGluZm8gd2l0aCBkZWZhdWx0IHNjYWxlOlwiLCBmaW5hbFNjYWxlKTtcblxuICAgIC8vIEJ1aWxkIGZ1bGwgVVJMIHVzaW5nIGJhc2VVcmwgZnJvbSBlbnZpcm9ubWVudFxuICAgIGNvbnN0IGJhc2VVcmwgPSBnZXRBcGlCYXNlVXJsKCk7XG4gICAgY29uc3QgZnVsbFVybCA9IGluZm8udXJsLnN0YXJ0c1dpdGgoJ2h0dHAnKSA/IGluZm8udXJsIDogYCR7YmFzZVVybH0ke2luZm8udXJsfWA7XG5cbiAgICBzZXRNb2RlbEluZm9TdGF0ZSh7XG4gICAgICAuLi5pbmZvLFxuICAgICAgdXJsOiBmdWxsVXJsLFxuICAgICAga1NjYWxlOiBmaW5hbFNjYWxlLFxuICAgICAgLy8gUHJlc2VydmUgb3RoZXIgcG90ZW50aWFsbHkgdXNlci1tb2RpZmllZCBzZXR0aW5ncyBpZiBuZWVkZWQsIG90aGVyd2lzZSB1c2UgZGVmYXVsdHMgZnJvbSBpbmZvXG4gICAgICBwb2ludGVySW50ZXJhY3RpdmU6XG4gICAgICAgIFwicG9pbnRlckludGVyYWN0aXZlXCIgaW4gaW5mb1xuICAgICAgICAgID8gaW5mby5wb2ludGVySW50ZXJhY3RpdmVcbiAgICAgICAgICA6IChtb2RlbEluZm8/LnBvaW50ZXJJbnRlcmFjdGl2ZSA/PyB0cnVlKSxcbiAgICAgIHNjcm9sbFRvUmVzaXplOlxuICAgICAgICBcInNjcm9sbFRvUmVzaXplXCIgaW4gaW5mb1xuICAgICAgICAgID8gaW5mby5zY3JvbGxUb1Jlc2l6ZVxuICAgICAgICAgIDogKG1vZGVsSW5mbz8uc2Nyb2xsVG9SZXNpemUgPz8gdHJ1ZSksXG4gICAgfSk7XG4gIH07XG5cbiAgLy8gVXBkYXRlIG1vZGVsIFVSTCB3aGVuIGJhc2VVcmwgY2hhbmdlc1xuICBjb25zdCBjb250ZXh0VmFsdWUgPSB1c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICBtb2RlbEluZm86IG1vZGVsSW5mbyA/IHtcbiAgICAgICAgLi4ubW9kZWxJbmZvLFxuICAgICAgICB1cmw6IG1vZGVsSW5mby51cmwuc3RhcnRzV2l0aCgnaHR0cCcpID8gbW9kZWxJbmZvLnVybCA6IGAke2dldEFwaUJhc2VVcmwoKX0ke21vZGVsSW5mby51cmx9YCxcbiAgICAgIH0gOiB1bmRlZmluZWQsXG4gICAgICBzZXRNb2RlbEluZm8sXG4gICAgICBpc0xvYWRpbmcsXG4gICAgICBzZXRJc0xvYWRpbmcsXG4gICAgfSksXG4gICAgW21vZGVsSW5mbywgaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddLFxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPExpdmUyRENvbmZpZ0NvbnRleHQuUHJvdmlkZXIgdmFsdWU9e2NvbnRleHRWYWx1ZX0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9MaXZlMkRDb25maWdDb250ZXh0LlByb3ZpZGVyPlxuICApO1xufVxuXG4vKipcbiAqIEN1c3RvbSBob29rIHRvIHVzZSB0aGUgTGl2ZTJEIGNvbmZpZ3VyYXRpb24gY29udGV4dFxuICogQHRocm93cyB7RXJyb3J9IElmIHVzZWQgb3V0c2lkZSBvZiBMaXZlMkRDb25maWdQcm92aWRlclxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlTGl2ZTJEQ29uZmlnKCkge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChMaXZlMkRDb25maWdDb250ZXh0KTtcblxuICBpZiAoIWNvbnRleHQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZUxpdmUyRENvbmZpZyBtdXN0IGJlIHVzZWQgd2l0aGluIGEgTGl2ZTJEQ29uZmlnUHJvdmlkZXInKTtcbiAgfVxuXG4gIHJldHVybiBjb250ZXh0O1xufVxuIl0sIm5hbWVzIjpbImNyZWF0ZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwidXNlU3RhdGUiLCJ1c2VNZW1vIiwidXNlU2V0dGluZ3MiLCJnZXRBcGlCYXNlVXJsIiwiREVGQVVMVF9NT0RFTF9JTkZPIiwibmFtZSIsImRlc2NyaXB0aW9uIiwidXJsIiwia1NjYWxlIiwiaW5pdGlhbFhzaGlmdCIsImluaXRpYWxZc2hpZnQiLCJpZGxlTW90aW9uR3JvdXBOYW1lIiwiZGVmYXVsdEVtb3Rpb24iLCJlbW90aW9uTWFwIiwibmV1dHJhbCIsImNvbGRuZXNzIiwiZGlzZ3VzdCIsInNhZCIsIndvcnJ5IiwiY29uZnVzaW9uIiwiYW5nZXIiLCJzdXJwcmlzZSIsImV4cGVjdGF0aW9uIiwiam95IiwiZXhjaXRlbWVudCIsInByaWRlIiwic2h5Iiwic3R1bm5lZCIsImVtYmFycmFzc2VkIiwicGxheV9jb29sIiwiZHJpbmtfdGVhIiwicG9pbnRlckludGVyYWN0aXZlIiwic2Nyb2xsVG9SZXNpemUiLCJpbml0aWFsU2NhbGUiLCJERUZBVUxUX0NPTkZJRyIsIm1vZGVsSW5mbyIsImlzTG9hZGluZyIsIkxpdmUyRENvbmZpZ0NvbnRleHQiLCJMaXZlMkRDb25maWdQcm92aWRlciIsImNoaWxkcmVuIiwiZ2VuZXJhbFNldHRpbmdzIiwic2V0SXNMb2FkaW5nIiwic2V0TW9kZWxJbmZvU3RhdGUiLCJzZXRNb2RlbEluZm8iLCJpbmZvIiwidW5kZWZpbmVkIiwiZmluYWxTY2FsZSIsIk51bWJlciIsImNvbnNvbGUiLCJsb2ciLCJiYXNlVXJsIiwiZnVsbFVybCIsInN0YXJ0c1dpdGgiLCJjb250ZXh0VmFsdWUiLCJQcm92aWRlciIsInZhbHVlIiwidXNlTGl2ZTJEQ29uZmlnIiwiY29udGV4dCIsIkVycm9yIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/context/live2d-config-context.tsx\n");

/***/ }),

/***/ "(ssr)/./src/context/microphone-context.tsx":
/*!********************************************!*\
  !*** ./src/context/microphone-context.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MicrophoneProvider: () => (/* binding */ MicrophoneProvider),\n/* harmony export */   useMicrophone: () => (/* binding */ useMicrophone)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _libs_ten_vad_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../libs/ten_vad.js */ \"(ssr)/./libs/ten_vad.js\");\n/* __next_internal_client_entry_do_not_use__ MicrophoneProvider,useMicrophone auto */ \n\n\nclass TenVAD {\n    constructor(module, hopSize, threshold){\n        this.module = module;\n        this.hopSize = hopSize;\n        this.vadHandle = 0;\n        this.vadHandlePtr = 0;\n        // Add getValue helper function if missing\n        if (!this.module.getValue) {\n            this.module.getValue = function(ptr, type) {\n                switch(type){\n                    case 'i32':\n                        return module.HEAP32[ptr >> 2];\n                    case 'float':\n                        return module.HEAPF32[ptr >> 2];\n                    default:\n                        throw new Error(`Unsupported type: ${type}`);\n                }\n            };\n        }\n        console.log('🔧 Creating VAD with hopSize:', hopSize, 'threshold:', threshold);\n        try {\n            // Allocate pointer for VAD handle\n            this.vadHandlePtr = module._malloc(4);\n            console.log('🔧 Allocated vadHandlePtr:', this.vadHandlePtr);\n            // Create VAD instance - correct API: (vadHandlePtr, hopSize, threshold)\n            const result = module._ten_vad_create(this.vadHandlePtr, hopSize, threshold);\n            console.log('🔧 VAD create result:', result);\n            if (result === 0) {\n                // Get the actual VAD handle from the pointer\n                this.vadHandle = this.module.getValue(this.vadHandlePtr, 'i32');\n                console.log('✅ VAD created successfully - vadHandle:', this.vadHandle);\n            } else {\n                console.error('❌ VAD creation failed with code:', result);\n                if (this.vadHandlePtr) {\n                    module._free(this.vadHandlePtr);\n                    this.vadHandlePtr = 0;\n                }\n            }\n        } catch (error) {\n            console.error('❌ VAD creation error:', error);\n        }\n    }\n    process(audioData) {\n        if (!this.vadHandle || !this.vadHandlePtr) {\n            console.error('❌ VAD not properly initialized');\n            return null;\n        }\n        const audioPtr = this.module._malloc(this.hopSize * 2);\n        const probPtr = this.module._malloc(4);\n        const flagPtr = this.module._malloc(4);\n        try {\n            // Copy audio data to WASM heap\n            const actualSize = Math.min(audioData.length, this.hopSize);\n            const heapArray = new Int16Array(this.module.HEAP16.buffer, audioPtr, actualSize);\n            heapArray.set(audioData.subarray(0, actualSize));\n            // Fill remaining with zeros if needed\n            for(let i = actualSize; i < this.hopSize; i++){\n                heapArray[i] = 0;\n            }\n            // Process with VAD - correct API: (vadHandle, audioPtr, hopSize, probPtr, flagPtr)\n            const result = this.module._ten_vad_process(this.vadHandle, audioPtr, this.hopSize, probPtr, flagPtr);\n            if (result === 0) {\n                // Get results from output pointers\n                const probability = this.module.getValue(probPtr, 'float');\n                const flag = this.module.getValue(flagPtr, 'i32');\n                return {\n                    isVoice: flag === 1,\n                    probability: Math.max(0, Math.min(1, probability))\n                };\n            } else {\n                console.warn('⚠️ VAD process failed with code:', result);\n                return {\n                    isVoice: false,\n                    probability: 0\n                };\n            }\n        } catch (error) {\n            console.error('❌ VAD process error:', error);\n            return {\n                isVoice: false,\n                probability: 0\n            };\n        } finally{\n            // Always free temporary memory\n            this.module._free(audioPtr);\n            this.module._free(probPtr);\n            this.module._free(flagPtr);\n        }\n    }\n    destroy() {\n        console.log('🗑️ Destroying VAD instance');\n        if (this.vadHandlePtr) {\n            this.module._ten_vad_destroy(this.vadHandlePtr);\n            this.module._free(this.vadHandlePtr);\n            this.vadHandlePtr = 0;\n            this.vadHandle = 0;\n        }\n    }\n}\n// Create the microphone context\nconst MicrophoneContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Provider component\nfunction MicrophoneProvider({ children }) {\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('idle');\n    const [isListening, setIsListening] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isSpeaking, setIsSpeaking] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [hasPermission, setHasPermission] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [vadConfig, setVADConfig] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        hopSize: 256,\n        threshold: 0.5,\n        silenceTimeout: 30 // ~500ms of silence\n    });\n    const [onAudioData, setOnAudioData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    // VAD and audio processing refs\n    const vadModuleRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const vadInstanceRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const audioContextRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const streamRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const processorRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const audioBufferRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const silenceCountRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const isProcessingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    // Check if we have microphone permission\n    const checkPermission = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MicrophoneProvider.useCallback[checkPermission]\": async ()=>{\n            try {\n                if ('permissions' in navigator) {\n                    const result = await navigator.permissions.query({\n                        name: 'microphone'\n                    });\n                    setHasPermission(result.state === 'granted');\n                    if (result.state === 'denied') {\n                        setState('disabled');\n                        setError('Microphone permission denied');\n                    }\n                }\n            } catch (err) {\n                console.warn('Permission API not supported:', err);\n            }\n        }\n    }[\"MicrophoneProvider.useCallback[checkPermission]\"], []);\n    // Request microphone permission\n    const requestPermission = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MicrophoneProvider.useCallback[requestPermission]\": async ()=>{\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({\n                    audio: {\n                        sampleRate: 16000,\n                        channelCount: 1,\n                        echoCancellation: true,\n                        noiseSuppression: true\n                    }\n                });\n                setHasPermission(true);\n                setState('idle');\n                setError(null);\n                // Stop the stream immediately as we just wanted to check permission\n                stream.getTracks().forEach({\n                    \"MicrophoneProvider.useCallback[requestPermission]\": (track)=>track.stop()\n                }[\"MicrophoneProvider.useCallback[requestPermission]\"]);\n                return true;\n            } catch (err) {\n                setHasPermission(false);\n                setState('error');\n                setError('Failed to access microphone');\n                console.error('Microphone permission error:', err);\n                return false;\n            }\n        }\n    }[\"MicrophoneProvider.useCallback[requestPermission]\"], []);\n    // Initialize VAD module\n    const initVAD = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MicrophoneProvider.useCallback[initVAD]\": async ()=>{\n            try {\n                if (!vadModuleRef.current) {\n                    console.log('🎛️ Loading VAD module...');\n                    vadModuleRef.current = await (0,_libs_ten_vad_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n                    console.log('✅ VAD module loaded');\n                }\n                if (!vadInstanceRef.current) {\n                    vadInstanceRef.current = new TenVAD(vadModuleRef.current, vadConfig.hopSize, vadConfig.threshold);\n                    console.log('✅ VAD instance created');\n                }\n                return true;\n            } catch (err) {\n                console.error('❌ Failed to initialize VAD:', err);\n                setError('Failed to initialize voice detection');\n                return false;\n            }\n        }\n    }[\"MicrophoneProvider.useCallback[initVAD]\"], [\n        vadConfig\n    ]);\n    // Send accumulated audio data\n    const sendAccumulatedAudio = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MicrophoneProvider.useCallback[sendAccumulatedAudio]\": ()=>{\n            if (audioBufferRef.current.length === 0 || !onAudioData) return;\n            // Calculate total samples\n            const totalSamples = audioBufferRef.current.length * vadConfig.hopSize;\n            const combinedBuffer = new Int16Array(totalSamples);\n            // Combine all audio frames\n            let offset = 0;\n            for (const frame of audioBufferRef.current){\n                combinedBuffer.set(frame, offset);\n                offset += frame.length;\n            }\n            // Convert to ArrayBuffer and send\n            const arrayBuffer = combinedBuffer.buffer.slice(combinedBuffer.byteOffset, combinedBuffer.byteOffset + combinedBuffer.byteLength);\n            onAudioData(arrayBuffer);\n            console.log('🎵 Audio sent:', arrayBuffer.byteLength, 'bytes,', audioBufferRef.current.length, 'frames');\n            // Clear buffer\n            audioBufferRef.current = [];\n            silenceCountRef.current = 0;\n        }\n    }[\"MicrophoneProvider.useCallback[sendAccumulatedAudio]\"], [\n        vadConfig.hopSize,\n        onAudioData\n    ]);\n    // Process audio frame with VAD\n    const processAudioFrame = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MicrophoneProvider.useCallback[processAudioFrame]\": (audioData)=>{\n            if (!vadInstanceRef.current || !isProcessingRef.current) {\n                console.warn('⚠️ VAD not ready for processing');\n                return;\n            }\n            // Ensure we have the expected data size\n            if (audioData.length !== vadConfig.hopSize) {\n                console.warn('⚠️ Audio data size mismatch:', audioData.length, 'expected:', vadConfig.hopSize);\n            }\n            try {\n                // Convert Float32Array to Int16Array with proper bounds checking\n                const actualSize = Math.min(audioData.length, vadConfig.hopSize);\n                const int16Data = new Int16Array(vadConfig.hopSize);\n                // Fill the buffer, padding with zeros if needed\n                for(let i = 0; i < actualSize; i++){\n                    // Clamp the float32 value to [-1, 1] before conversion\n                    const clampedValue = Math.max(-1, Math.min(1, audioData[i]));\n                    int16Data[i] = Math.round(clampedValue * 32767);\n                }\n                // Fill remaining with zeros if audio data is shorter\n                for(let i = actualSize; i < vadConfig.hopSize; i++){\n                    int16Data[i] = 0;\n                }\n                // Reduced logging to avoid spam\n                if (Math.random() < 0.01) {\n                    console.log('🎵 Processing audio frame:', {\n                        originalSize: audioData.length,\n                        processedSize: actualSize,\n                        hopSize: vadConfig.hopSize\n                    });\n                }\n                // Process with VAD\n                const result = vadInstanceRef.current.process(int16Data);\n                if (!result) {\n                    console.warn('⚠️ VAD returned null result');\n                    return;\n                }\n                const wasSpeaking = isSpeaking;\n                const isVoiceDetected = result.isVoice;\n                if (isVoiceDetected) {\n                    // Voice detected - add to buffer and reset silence counter\n                    audioBufferRef.current.push(int16Data);\n                    silenceCountRef.current = 0;\n                    if (!wasSpeaking) {\n                        setIsSpeaking(true);\n                        setState('speaking');\n                        console.log('🗣️ Speech started');\n                    }\n                } else {\n                    // No voice detected\n                    if (wasSpeaking) {\n                        // Add silent frame to buffer (for natural speech boundaries)\n                        audioBufferRef.current.push(int16Data);\n                        silenceCountRef.current++;\n                        // Check if silence timeout reached\n                        if (silenceCountRef.current >= vadConfig.silenceTimeout) {\n                            // Send accumulated audio\n                            sendAccumulatedAudio();\n                            setIsSpeaking(false);\n                            setState('listening');\n                            console.log('🔇 Speech ended, audio sent');\n                        }\n                    }\n                }\n                // Only log voice detection changes or occasionally\n                if (isVoiceDetected !== wasSpeaking || Math.random() < 0.005) {\n                    console.log(`VAD: ${result.probability.toFixed(3)} | Voice: ${result.isVoice} | Buffer: ${audioBufferRef.current.length} frames`);\n                }\n            } catch (error) {\n                console.error('❌ Error in processAudioFrame:', error);\n            }\n        }\n    }[\"MicrophoneProvider.useCallback[processAudioFrame]\"], [\n        vadConfig,\n        isSpeaking,\n        sendAccumulatedAudio\n    ]);\n    // Start listening with VAD\n    const startListening = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MicrophoneProvider.useCallback[startListening]\": async ()=>{\n            try {\n                if (!hasPermission) {\n                    const granted = await requestPermission();\n                    if (!granted) return;\n                }\n                // Initialize VAD\n                const vadReady = await initVAD();\n                if (!vadReady) return;\n                // Create audio context\n                audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)({\n                    sampleRate: 16000\n                });\n                const stream = await navigator.mediaDevices.getUserMedia({\n                    audio: {\n                        sampleRate: 16000,\n                        channelCount: 1,\n                        echoCancellation: true,\n                        noiseSuppression: true,\n                        autoGainControl: false\n                    }\n                });\n                streamRef.current = stream;\n                const source = audioContextRef.current.createMediaStreamSource(stream);\n                // Create script processor (fallback for better compatibility)\n                const processor = audioContextRef.current.createScriptProcessor(vadConfig.hopSize, 1, 1);\n                processorRef.current = processor;\n                processor.onaudioprocess = ({\n                    \"MicrophoneProvider.useCallback[startListening]\": (event)=>{\n                        const inputBuffer = event.inputBuffer;\n                        const audioData = inputBuffer.getChannelData(0);\n                        processAudioFrame(audioData);\n                    }\n                })[\"MicrophoneProvider.useCallback[startListening]\"];\n                // Connect audio graph\n                source.connect(processor);\n                processor.connect(audioContextRef.current.destination);\n                // Start processing\n                isProcessingRef.current = true;\n                setIsListening(true);\n                setState('listening');\n                setError(null);\n                console.log('🎙️ VAD listening started');\n            } catch (err) {\n                setError('Failed to start voice detection');\n                setState('error');\n                console.error('Start listening error:', err);\n            }\n        }\n    }[\"MicrophoneProvider.useCallback[startListening]\"], [\n        hasPermission,\n        requestPermission,\n        initVAD,\n        vadConfig.hopSize,\n        processAudioFrame\n    ]);\n    // Stop listening\n    const stopListening = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MicrophoneProvider.useCallback[stopListening]\": ()=>{\n            try {\n                // Stop processing\n                isProcessingRef.current = false;\n                // Send any remaining audio\n                if (isSpeaking && audioBufferRef.current.length > 0) {\n                    sendAccumulatedAudio();\n                }\n                // Clean up audio processing\n                if (processorRef.current) {\n                    processorRef.current.disconnect();\n                    processorRef.current = null;\n                }\n                if (audioContextRef.current) {\n                    audioContextRef.current.close();\n                    audioContextRef.current = null;\n                }\n                if (streamRef.current) {\n                    streamRef.current.getTracks().forEach({\n                        \"MicrophoneProvider.useCallback[stopListening]\": (track)=>track.stop()\n                    }[\"MicrophoneProvider.useCallback[stopListening]\"]);\n                    streamRef.current = null;\n                }\n                // Clean up VAD\n                if (vadInstanceRef.current) {\n                    vadInstanceRef.current.destroy();\n                    vadInstanceRef.current = null;\n                }\n                // Reset state\n                setIsListening(false);\n                setIsSpeaking(false);\n                setState('idle');\n                audioBufferRef.current = [];\n                silenceCountRef.current = 0;\n                console.log('⏹️ VAD listening stopped');\n            } catch (err) {\n                console.error('Error stopping VAD:', err);\n            }\n        }\n    }[\"MicrophoneProvider.useCallback[stopListening]\"], [\n        isSpeaking,\n        sendAccumulatedAudio\n    ]);\n    // Toggle listening state\n    const toggleListening = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MicrophoneProvider.useCallback[toggleListening]\": async ()=>{\n            if (isListening) {\n                stopListening();\n            } else {\n                await startListening();\n            }\n        }\n    }[\"MicrophoneProvider.useCallback[toggleListening]\"], [\n        isListening,\n        startListening,\n        stopListening\n    ]);\n    // Update VAD configuration\n    const updateVADConfig = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MicrophoneProvider.useCallback[updateVADConfig]\": (config)=>{\n            setVADConfig({\n                \"MicrophoneProvider.useCallback[updateVADConfig]\": (prev)=>({\n                        ...prev,\n                        ...config\n                    })\n            }[\"MicrophoneProvider.useCallback[updateVADConfig]\"]);\n            console.log('🔧 VAD config updated:', config);\n        }\n    }[\"MicrophoneProvider.useCallback[updateVADConfig]\"], []);\n    // Set audio data callback\n    const setAudioDataCallback = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MicrophoneProvider.useCallback[setAudioDataCallback]\": (callback)=>{\n            setOnAudioData({\n                \"MicrophoneProvider.useCallback[setAudioDataCallback]\": ()=>callback\n            }[\"MicrophoneProvider.useCallback[setAudioDataCallback]\"]);\n        }\n    }[\"MicrophoneProvider.useCallback[setAudioDataCallback]\"], []);\n    // Check for microphone permission on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MicrophoneProvider.useEffect\": ()=>{\n            checkPermission();\n        }\n    }[\"MicrophoneProvider.useEffect\"], [\n        checkPermission\n    ]);\n    const value = {\n        state,\n        isListening,\n        isSpeaking,\n        isRecording: isListening,\n        hasPermission,\n        error,\n        vadConfig,\n        startListening,\n        stopListening,\n        toggleListening,\n        toggleRecording: toggleListening,\n        requestPermission,\n        updateVADConfig,\n        onAudioData: onAudioData,\n        setAudioDataCallback\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MicrophoneContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/microphone-context.tsx\",\n        lineNumber: 535,\n        columnNumber: 5\n    }, this);\n}\n// Hook to use the microphone context\nfunction useMicrophone() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(MicrophoneContext);\n    if (context === undefined) {\n        throw new Error('useMicrophone must be used within a MicrophoneProvider');\n    }\n    return context;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/context/microphone-context.tsx\n");

/***/ }),

/***/ "(ssr)/./src/context/settings-context.tsx":
/*!******************************************!*\
  !*** ./src/context/settings-context.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SettingsProvider: () => (/* binding */ SettingsProvider),\n/* harmony export */   getApiBaseUrl: () => (/* binding */ getApiBaseUrl),\n/* harmony export */   getWebSocketBaseUrl: () => (/* binding */ getWebSocketBaseUrl),\n/* harmony export */   useSettings: () => (/* binding */ useSettings)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ getApiBaseUrl,getWebSocketBaseUrl,useSettings,SettingsProvider auto */ \n\n// Environment-based URL configuration\nconst getApiBaseUrl = ()=>\"http://127.0.0.1:8000\" || 0;\nconst getWebSocketBaseUrl = ()=>\"ws://127.0.0.1:8000/ws\" || 0;\nconst defaultGeneralSettings = {\n    reduceVideoVolumeOnSpeech: true,\n    videoVolumeReductionPercent: 50\n};\nconst defaultBackgroundSettings = {\n    type: 'image',\n    imageUrl: '',\n    imageFile: null,\n    imageScale: 1,\n    imagePositionX: 50,\n    imagePositionY: 50,\n    imageMode: 'cover'\n};\nconst SettingsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useSettings = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(SettingsContext);\n    if (context === undefined) {\n        throw new Error('useSettings must be used within a SettingsProvider');\n    }\n    return context;\n};\nconst SettingsProvider = ({ children })=>{\n    const [generalSettings, setGeneralSettings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultGeneralSettings);\n    const [backgroundSettings, setBackgroundSettings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultBackgroundSettings);\n    // Load settings from localStorage on mount (only for non-URL settings)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"SettingsProvider.useEffect\": ()=>{\n            loadSettings();\n            console.log(\"Environment variables:\", {\n                NEXT_PUBLIC_API_BASE_URL: \"http://127.0.0.1:8000\",\n                NEXT_PUBLIC_WEBSOCKET_BASE_URL: \"ws://127.0.0.1:8000/ws\",\n                defaultGeneralSettings\n            });\n        }\n    }[\"SettingsProvider.useEffect\"], []);\n    const updateGeneralSettings = (settings)=>{\n        setGeneralSettings((prev)=>({\n                ...prev,\n                ...settings\n            }));\n    };\n    const updateBackgroundSettings = (settings)=>{\n        setBackgroundSettings(settings);\n    };\n    const saveSettings = ()=>{\n        try {\n            // Save general settings (excluding URL settings)\n            localStorage.setItem('generalSettings', JSON.stringify(generalSettings));\n            // Save background settings (excluding imageFile as it can't be serialized)\n            const backgroundSettingsToSave = {\n                ...backgroundSettings,\n                imageFile: null\n            };\n            localStorage.setItem('backgroundSettings', JSON.stringify(backgroundSettingsToSave));\n            console.log('Settings saved successfully');\n        } catch (error) {\n            console.error('Failed to save settings:', error);\n        }\n    };\n    const loadSettings = ()=>{\n        try {\n            // Load general settings (excluding URL settings)\n            const savedGeneralSettings = localStorage.getItem('generalSettings');\n            if (savedGeneralSettings) {\n                const parsed = JSON.parse(savedGeneralSettings);\n                setGeneralSettings({\n                    ...defaultGeneralSettings,\n                    ...parsed\n                });\n            }\n            // Load background settings\n            const savedBackgroundSettings = localStorage.getItem('backgroundSettings');\n            if (savedBackgroundSettings) {\n                const parsed = JSON.parse(savedBackgroundSettings);\n                setBackgroundSettings({\n                    ...defaultBackgroundSettings,\n                    ...parsed,\n                    imageFile: null // Always reset imageFile as it can't be serialized\n                });\n            }\n            console.log('Settings loaded successfully');\n        } catch (error) {\n            console.error('Failed to load settings:', error);\n            // Reset to defaults and clear corrupted localStorage data\n            setGeneralSettings(defaultGeneralSettings);\n            setBackgroundSettings(defaultBackgroundSettings);\n            try {\n                localStorage.removeItem('generalSettings');\n                localStorage.removeItem('backgroundSettings');\n            } catch (storageError) {\n                console.error('Failed to clear corrupted localStorage:', storageError);\n            }\n        }\n    };\n    const value = {\n        generalSettings,\n        backgroundSettings,\n        updateGeneralSettings,\n        updateBackgroundSettings,\n        saveSettings,\n        loadSettings\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SettingsContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/EthanLee/Desktop/AdvX/AI-Watch-Buddy/frontend/src/context/settings-context.tsx\",\n        lineNumber: 152,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/context/settings-context.tsx\n");

/***/ }),

/***/ "(ssr)/./src/context/websocket-context.tsx":
/*!*******************************************!*\
  !*** ./src/context/websocket-context.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketContext: () => (/* binding */ WebSocketContext),\n/* harmony export */   useWebSocketContext: () => (/* binding */ useWebSocketContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ useWebSocketContext,WebSocketContext auto */ \n// 创建 WebSocket Context\nconst WebSocketContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n// Hook 用于访问 WebSocket context\nfunction useWebSocketContext() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(WebSocketContext);\n    if (context === undefined) {\n        throw new Error('useWebSocketContext must be used within a WebSocketProvider');\n    }\n    return context;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29udGV4dC93ZWJzb2NrZXQtY29udGV4dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7OzswRkFFNkQ7QUF1RTdELHVCQUF1QjtBQUN2QixNQUFNRSxpQ0FBbUJGLG9EQUFhQSxDQUFvQ0c7QUFFMUUsOEJBQThCO0FBQ3ZCLFNBQVNDO0lBQ2QsTUFBTUMsVUFBVUosaURBQVVBLENBQUNDO0lBQzNCLElBQUlHLFlBQVlGLFdBQVc7UUFDekIsTUFBTSxJQUFJRyxNQUFNO0lBQ2xCO0lBQ0EsT0FBT0Q7QUFDVDtBQUU0QiIsInNvdXJjZXMiOlsiL1VzZXJzL0V0aGFuTGVlL0Rlc2t0b3AvQWR2WC9BSS1XYXRjaC1CdWRkeS9mcm9udGVuZC9zcmMvY29udGV4dC93ZWJzb2NrZXQtY29udGV4dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5cbi8vIFdlYlNvY2tldCDnirbmgIHnsbvlnotcbmV4cG9ydCB0eXBlIFdlYlNvY2tldFN0YXR1cyA9ICdjb25uZWN0aW5nJyB8ICdjb25uZWN0ZWQnIHwgJ2Rpc2Nvbm5lY3RlZCcgfCAnZXJyb3InO1xuXG4vLyBTZXNzaW9uIOeKtuaAgeexu+Wei1xuZXhwb3J0IHR5cGUgU2Vzc2lvblN0YXR1cyA9ICdpZGxlJyB8ICdwcmVwYXJpbmcnIHwgJ3JlYWR5JyB8ICdlcnJvcic7XG5cbi8vIFdlYlNvY2tldCDmtojmga/nsbvlnotcbmV4cG9ydCBpbnRlcmZhY2UgV2ViU29ja2V0TWVzc2FnZSB7XG4gIHR5cGU6IHN0cmluZztcbiAgW2tleTogc3RyaW5nXTogYW55O1xufVxuXG4vLyBBSSBBY3Rpb24g57G75Z6LXG5leHBvcnQgaW50ZXJmYWNlIEFJQWN0aW9uIHtcbiAgYWN0aW9uX3R5cGU6ICdTUEVBSycgfCAnUEFVU0UnIHwgJ1NFRUsnIHwgJ1JFUExBWV9TRUdNRU5UJyB8ICdFTkRfUkVBQ1RJT04nIHwgJ0VYUFJFU1NJT04nO1xuICBpZDogc3RyaW5nO1xuICB0cmlnZ2VyX3RpbWVzdGFtcDogbnVtYmVyO1xuICBjb21tZW50OiBzdHJpbmc7XG5cbiAgLy8gU1BFQUsgYWN0aW9uIGZpZWxkc1xuICB0ZXh0Pzogc3RyaW5nO1xuICBhdWRpbz86IHN0cmluZztcbiAgcGF1c2VfdmlkZW8/OiBib29sZWFuO1xuXG4gIC8vIFBBVVNFIGFjdGlvbiBmaWVsZHNcbiAgZHVyYXRpb25fc2Vjb25kcz86IG51bWJlcjtcblxuICAvLyBTRUVLIGFjdGlvbiBmaWVsZHNcbiAgdGFyZ2V0X3RpbWVzdGFtcD86IG51bWJlcjtcbiAgcG9zdF9zZWVrX2JlaGF2aW9yPzogJ1JFU1VNRV9QTEFZQkFDSycgfCAnU1RBWV9QQVVTRUQnO1xuXG4gIC8vIFJFUExBWV9TRUdNRU5UIGFjdGlvbiBmaWVsZHNcbiAgc3RhcnRfdGltZXN0YW1wPzogbnVtYmVyO1xuICBlbmRfdGltZXN0YW1wPzogbnVtYmVyO1xuICBwb3N0X3JlcGxheV9iZWhhdmlvcj86ICdSRVNVTUVfRlJPTV9PUklHSU5BTCcgfCAnU1RBWV9QQVVTRURfQVRfRU5EJztcblxuICAvLyBFWFBSRVNTSU9OIGFjdGlvbiBmaWVsZHNcbiAgZW1vdGlvbl9leHByZXNzaW9ucz86IHN0cmluZztcbn1cblxuLy8gUHJvY2Vzc2luZyBFcnJvciDnsbvlnotcbmV4cG9ydCBpbnRlcmZhY2UgUHJvY2Vzc2luZ0Vycm9yIHtcbiAgZXJyb3JfY29kZTogc3RyaW5nO1xuICBtZXNzYWdlOiBzdHJpbmc7XG59XG5cbi8vIFdlYlNvY2tldCBDb250ZXh0IOaOpeWPo1xuaW50ZXJmYWNlIFdlYlNvY2tldENvbnRleHRWYWx1ZSB7XG4gIC8vIFdlYlNvY2tldCDov57mjqXnirbmgIFcbiAgc3RhdHVzOiBXZWJTb2NrZXRTdGF0dXM7XG4gIHNlbmRNZXNzYWdlOiAobWVzc2FnZTogV2ViU29ja2V0TWVzc2FnZSkgPT4gdm9pZDtcbiAgZXJyb3I6IHN0cmluZyB8IG51bGw7XG4gIGNvbm5lY3Q6IChzZXNzaW9uSWQ6IHN0cmluZykgPT4gdm9pZDtcbiAgZGlzY29ubmVjdDogKCkgPT4gdm9pZDtcblxuICAvLyBTZXNzaW9uIOeKtuaAgVxuICBzZXNzaW9uU3RhdHVzOiBTZXNzaW9uU3RhdHVzO1xuICBwcm9jZXNzaW5nRXJyb3I6IFByb2Nlc3NpbmdFcnJvciB8IG51bGw7XG4gIGlzU2Vzc2lvblJlYWR5OiBib29sZWFuO1xuXG4gIC8vIEFJIEFjdGlvbnNcbiAgcmVjZWl2ZWRBY3Rpb25zOiBBSUFjdGlvbltdO1xuICBjbGVhclJlY2VpdmVkQWN0aW9uczogKCkgPT4gdm9pZDtcblxuICAvLyBDb250cm9sIG1ldGhvZHNcbiAgY2xlYXJFcnJvcjogKCkgPT4gdm9pZDtcbiAgcmVzZXRIYW5kbGVyOiAoKSA9PiB2b2lkO1xufVxuXG4vLyDliJvlu7ogV2ViU29ja2V0IENvbnRleHRcbmNvbnN0IFdlYlNvY2tldENvbnRleHQgPSBjcmVhdGVDb250ZXh0PFdlYlNvY2tldENvbnRleHRWYWx1ZSB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcblxuLy8gSG9vayDnlKjkuo7orr/pl64gV2ViU29ja2V0IGNvbnRleHRcbmV4cG9ydCBmdW5jdGlvbiB1c2VXZWJTb2NrZXRDb250ZXh0KCkge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChXZWJTb2NrZXRDb250ZXh0KTtcbiAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlV2ViU29ja2V0Q29udGV4dCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgV2ViU29ja2V0UHJvdmlkZXInKTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn1cblxuZXhwb3J0IHsgV2ViU29ja2V0Q29udGV4dCB9OyAiXSwibmFtZXMiOlsiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJXZWJTb2NrZXRDb250ZXh0IiwidW5kZWZpbmVkIiwidXNlV2ViU29ja2V0Q29udGV4dCIsImNvbnRleHQiLCJFcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/context/websocket-context.tsx\n");

/***/ }),

/***/ "(ssr)/./src/hooks/use-action-executor.ts":
/*!******************************************!*\
  !*** ./src/hooks/use-action-executor.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useActionExecutor: () => (/* binding */ useActionExecutor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _use_audio_task__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use-audio-task */ \"(ssr)/./src/hooks/use-audio-task.ts\");\n/* harmony import */ var _use_live2d_expression__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use-live2d-expression */ \"(ssr)/./src/hooks/use-live2d-expression.ts\");\n/* harmony import */ var _context_live2d_config_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/context/live2d-config-context */ \"(ssr)/./src/context/live2d-config-context.tsx\");\n/* harmony import */ var _context_chat_context__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/context/chat-context */ \"(ssr)/./src/context/chat-context.tsx\");\n/* harmony import */ var _context_settings_context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/context/settings-context */ \"(ssr)/./src/context/settings-context.tsx\");\n\n\n\n\n\n\nconst useActionExecutor = (options = {})=>{\n    const { videoPlayerControl, onActionExecuted, onExecutionError } = options;\n    const { addAudioTask, stopCurrentAudioAndLipSync } = (0,_use_audio_task__WEBPACK_IMPORTED_MODULE_1__.useAudioTask)();\n    const { setExpression } = (0,_use_live2d_expression__WEBPACK_IMPORTED_MODULE_2__.useLive2DExpression)();\n    const { modelInfo } = (0,_context_live2d_config_context__WEBPACK_IMPORTED_MODULE_3__.useLive2DConfig)();\n    const { addMessage } = (0,_context_chat_context__WEBPACK_IMPORTED_MODULE_4__.useChat)();\n    const { generalSettings } = (0,_context_settings_context__WEBPACK_IMPORTED_MODULE_5__.useSettings)();\n    const [isExecuting, setIsExecuting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const originalVolumeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(1);\n    // Individual action executors - defined first so they can be referenced\n    const executeExpressionAction = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionExecutor.useCallback[executeExpressionAction]\": async (action)=>{\n            if (!action.emotion_expressions) {\n                console.warn('EXPRESSION action missing emotion_expressions');\n                return;\n            }\n            console.log(`Setting Live2D expression: ${action.emotion_expressions} (${action.comment})`);\n            try {\n                // Get the Live2D adapter\n                const lappAdapter = window.getLAppAdapter?.();\n                if (!lappAdapter) {\n                    console.error('Live2D adapter not available for expression');\n                    return;\n                }\n                // Map emotion name to expression index using emotionMap\n                const emotionMap = modelInfo?.emotionMap;\n                if (!emotionMap) {\n                    console.warn('No emotion map available in model info');\n                    return;\n                }\n                const expressionIndex = emotionMap[action.emotion_expressions];\n                if (expressionIndex === undefined) {\n                    console.warn(`Emotion \"${action.emotion_expressions}\" not found in emotion map`);\n                    return;\n                }\n                // Set the expression\n                setExpression(expressionIndex, lappAdapter, `Set expression to: ${action.emotion_expressions} (index: ${expressionIndex})`);\n                console.log(`Successfully set Live2D expression: ${action.emotion_expressions}`);\n            } catch (error) {\n                console.error('Failed to execute expression action:', error);\n            }\n        }\n    }[\"useActionExecutor.useCallback[executeExpressionAction]\"], [\n        setExpression,\n        modelInfo\n    ]);\n    const executePauseAction = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionExecutor.useCallback[executePauseAction]\": async (action)=>{\n            if (!videoPlayerControl) {\n                console.warn('No video player control available for PAUSE action');\n                return;\n            }\n            const duration = action.duration_seconds || 1.0; // Default to 1 second if not specified\n            console.log(`Pausing video for ${duration}s for action: ${action.comment}`);\n            // Show pause overlay and pause the video\n            videoPlayerControl.showPauseOverlay();\n            videoPlayerControl.pause();\n            // Wait for the specified duration, then resume\n            await new Promise({\n                \"useActionExecutor.useCallback[executePauseAction]\": (resolve)=>setTimeout(resolve, duration * 1000)\n            }[\"useActionExecutor.useCallback[executePauseAction]\"]);\n            // Hide overlay and resume\n            videoPlayerControl.hidePauseOverlay();\n            videoPlayerControl.resume();\n            console.log(`Resumed video after ${duration}s pause`);\n        }\n    }[\"useActionExecutor.useCallback[executePauseAction]\"], [\n        videoPlayerControl\n    ]);\n    const executeSpeakAction = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionExecutor.useCallback[executeSpeakAction]\": async (action)=>{\n            if (!action.text) {\n                console.warn('SPEAK action missing text content');\n                return;\n            }\n            const shouldPauseVideo = action.pause_video !== false; // Default to true if not specified\n            console.log(`AI speaking: \"${action.text}\" (pause_video: ${shouldPauseVideo})`);\n            // Add AI message to chat when actually speaking\n            addMessage({\n                type: 'ai',\n                content: action.text\n            });\n            // Stop any current audio to prevent overlapping\n            stopCurrentAudioAndLipSync();\n            // Store the current video time and playing state\n            let videoWasPlaying = false;\n            let currentVideoTime = 0;\n            // Handle video volume reduction if enabled\n            if (videoPlayerControl && generalSettings.reduceVideoVolumeOnSpeech) {\n                originalVolumeRef.current = videoPlayerControl.getVolume();\n                const reducedVolume = originalVolumeRef.current * (generalSettings.videoVolumeReductionPercent / 100);\n                videoPlayerControl.setVolume(reducedVolume);\n                console.log(`Reduced video volume from ${originalVolumeRef.current} to ${reducedVolume} (${generalSettings.videoVolumeReductionPercent}%)`);\n            }\n            // Show speaking overlay\n            if (videoPlayerControl) {\n                videoPlayerControl.showSpeakingOverlay();\n            }\n            // Pause video if requested\n            if (shouldPauseVideo && videoPlayerControl) {\n                // Check if video was playing before we pause it\n                currentVideoTime = videoPlayerControl.getCurrentTime();\n                // Assume video was playing if we're pausing it for speech\n                videoWasPlaying = true;\n                videoPlayerControl.pause();\n            }\n            // If audio data is available, use it for lip sync\n            if (action.audio && action.audio.trim().length > 10) {\n                try {\n                    console.log(`Playing AI audio with ${action.audio.length} chars of base64 data`);\n                    await addAudioTask({\n                        audioBase64: action.audio,\n                        volumes: [],\n                        sliceLength: 0.1,\n                        expressions: null // Could be extended to support expressions\n                    });\n                    console.log('Audio playback with lip sync completed');\n                } catch (error) {\n                    console.error('Failed to play audio with lip sync:', error);\n                    // Fallback: just display the text\n                    console.log(`Fallback text display: \"${action.text}\"`);\n                    // Simulate a delay for text-only speech\n                    await new Promise({\n                        \"useActionExecutor.useCallback[executeSpeakAction]\": (resolve)=>setTimeout(resolve, 2000)\n                    }[\"useActionExecutor.useCallback[executeSpeakAction]\"]);\n                }\n            } else {\n                // No audio available, just display text\n                console.log(`Text-only speech: \"${action.text}\" (no audio data: ${action.audio?.length || 0} chars)`);\n                // Simulate a delay for text-only speech\n                await new Promise({\n                    \"useActionExecutor.useCallback[executeSpeakAction]\": (resolve)=>setTimeout(resolve, 2000)\n                }[\"useActionExecutor.useCallback[executeSpeakAction]\"]);\n            }\n            // Hide speaking overlay\n            if (videoPlayerControl) {\n                videoPlayerControl.hideSpeakingOverlay();\n            }\n            // Restore original video volume if it was reduced\n            if (videoPlayerControl && generalSettings.reduceVideoVolumeOnSpeech) {\n                videoPlayerControl.setVolume(originalVolumeRef.current);\n                console.log(`Restored video volume to ${originalVolumeRef.current}`);\n            }\n            // Resume video if it was paused and was playing before\n            if (shouldPauseVideo && videoPlayerControl && videoWasPlaying) {\n                // Ensure we're at the right position (in case something changed)\n                const expectedTime = currentVideoTime + (action.duration_seconds || 0);\n                const actualTime = videoPlayerControl.getCurrentTime();\n                // If the video time hasn't advanced as expected, seek to where it should be\n                if (Math.abs(actualTime - expectedTime) > 0.1) {\n                    console.log(`Video time mismatch after speech. Expected: ${expectedTime}s, Actual: ${actualTime}s`);\n                // Don't seek - let the video continue from where it is\n                }\n                console.log('Resuming video playback after speech');\n                videoPlayerControl.resume();\n            }\n        }\n    }[\"useActionExecutor.useCallback[executeSpeakAction]\"], [\n        addAudioTask,\n        stopCurrentAudioAndLipSync,\n        videoPlayerControl,\n        addMessage,\n        generalSettings\n    ]);\n    const executeSeekAction = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionExecutor.useCallback[executeSeekAction]\": async (action)=>{\n            if (!videoPlayerControl) {\n                console.warn('No video player control available for SEEK action');\n                return;\n            }\n            if (action.target_timestamp === undefined) {\n                console.warn('SEEK action missing target_timestamp');\n                return;\n            }\n            const duration = videoPlayerControl.getDuration();\n            const targetTime = Math.max(0, Math.min(action.target_timestamp, duration));\n            const currentTime = videoPlayerControl.getCurrentTime();\n            // Calculate seek duration based on distance (300ms per 10 seconds, min 500ms, max 2000ms)\n            const distance = Math.abs(targetTime - currentTime);\n            const seekDuration = Math.max(500, Math.min(2000, distance * 30));\n            console.log(`Animating seek from ${currentTime}s to ${targetTime}s over ${seekDuration}ms`);\n            // Use animated seek instead of instant seek\n            await videoPlayerControl.animateSeek(targetTime, seekDuration);\n            // Handle post-seek behavior\n            const postSeekBehavior = action.post_seek_behavior || 'STAY_PAUSED';\n            if (postSeekBehavior === 'RESUME_PLAYBACK') {\n                console.log('Resuming playback after seek');\n                videoPlayerControl.resume();\n            } else {\n                console.log('Staying paused after seek');\n            }\n        }\n    }[\"useActionExecutor.useCallback[executeSeekAction]\"], [\n        videoPlayerControl\n    ]);\n    const executeReplaySegmentAction = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionExecutor.useCallback[executeReplaySegmentAction]\": async (action)=>{\n            if (!videoPlayerControl) {\n                console.warn('No video player control available for REPLAY_SEGMENT action');\n                return;\n            }\n            if (action.start_timestamp === undefined || action.end_timestamp === undefined) {\n                console.warn('REPLAY_SEGMENT action missing start_timestamp or end_timestamp');\n                return;\n            }\n            const duration = videoPlayerControl.getDuration();\n            const startTime = Math.max(0, Math.min(action.start_timestamp, duration));\n            const endTime = Math.max(startTime, Math.min(action.end_timestamp, duration));\n            const originalTime = videoPlayerControl.getCurrentTime();\n            console.log(`Replaying segment from ${startTime}s to ${endTime}s (original position: ${originalTime}s)`);\n            // Animate seek to start of segment\n            const seekDuration = Math.max(500, Math.min(1500, Math.abs(originalTime - startTime) * 30));\n            await videoPlayerControl.animateSeek(startTime, seekDuration);\n            videoPlayerControl.resume();\n            // Wait for the segment to play\n            const segmentDuration = endTime - startTime;\n            await new Promise({\n                \"useActionExecutor.useCallback[executeReplaySegmentAction]\": (resolve)=>setTimeout(resolve, segmentDuration * 1000)\n            }[\"useActionExecutor.useCallback[executeReplaySegmentAction]\"]);\n            // Handle post-replay behavior\n            const postReplayBehavior = action.post_replay_behavior || 'RESUME_FROM_ORIGINAL';\n            if (postReplayBehavior === 'RESUME_FROM_ORIGINAL') {\n                console.log(`Returning to original position: ${originalTime}s`);\n                const returnDuration = Math.max(500, Math.min(1500, Math.abs(endTime - originalTime) * 30));\n                await videoPlayerControl.animateSeek(originalTime, returnDuration);\n                videoPlayerControl.resume();\n            } else {\n                console.log(`Staying at end of segment: ${endTime}s`);\n                await videoPlayerControl.animateSeek(endTime, 300);\n                videoPlayerControl.pause();\n            }\n        }\n    }[\"useActionExecutor.useCallback[executeReplaySegmentAction]\"], [\n        videoPlayerControl\n    ]);\n    const executeEndReactionAction = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionExecutor.useCallback[executeEndReactionAction]\": async (action)=>{\n            console.log(`End reaction reached: ${action.comment}`);\n            // Stop any ongoing audio\n            stopCurrentAudioAndLipSync();\n            // Pause the video to wait for next user input or trigger\n            if (videoPlayerControl) {\n                videoPlayerControl.pause();\n            }\n            console.log('Reaction sequence ended, waiting for next trigger');\n        }\n    }[\"useActionExecutor.useCallback[executeEndReactionAction]\"], [\n        videoPlayerControl,\n        stopCurrentAudioAndLipSync\n    ]);\n    // Execute a single action\n    const executeAction = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionExecutor.useCallback[executeAction]\": async (action)=>{\n            console.log(`Executing action: ${action.action_type} at ${action.trigger_timestamp}s`, action);\n            try {\n                switch(action.action_type){\n                    case 'PAUSE':\n                        await executePauseAction(action);\n                        break;\n                    case 'SPEAK':\n                        await executeSpeakAction(action);\n                        break;\n                    case 'SEEK':\n                        await executeSeekAction(action);\n                        break;\n                    case 'REPLAY_SEGMENT':\n                        await executeReplaySegmentAction(action);\n                        break;\n                    case 'END_REACTION':\n                        await executeEndReactionAction(action);\n                        break;\n                    case 'EXPRESSION':\n                        await executeExpressionAction(action);\n                        break;\n                    default:\n                        console.warn(`Unknown action type: ${action.action_type}`);\n                        break;\n                }\n                console.log(`Successfully executed action: ${action.id}`);\n                // Mark action as executed after successful completion\n                onActionExecuted?.(action);\n            } catch (error) {\n                console.error(`Failed to execute action ${action.id}:`, error);\n                onExecutionError?.(error, action);\n                // Still mark as executed to prevent retry\n                onActionExecuted?.(action);\n            }\n        }\n    }[\"useActionExecutor.useCallback[executeAction]\"], [\n        videoPlayerControl,\n        onActionExecuted,\n        onExecutionError,\n        executeExpressionAction,\n        executePauseAction,\n        executeSpeakAction,\n        executeSeekAction,\n        executeReplaySegmentAction,\n        executeEndReactionAction\n    ]);\n    // Execute multiple actions (typically with same trigger_time)\n    const executeActions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionExecutor.useCallback[executeActions]\": async (actions)=>{\n            if (actions.length === 0) return;\n            setIsExecuting(true);\n            try {\n                console.log(`Executing ${actions.length} actions in sequence`);\n                // Execute actions in the correct order based on their priority\n                // EXPRESSION -> PAUSE -> SEEK -> REPLAY_SEGMENT -> SPEAK -> END_REACTION\n                const sortedActions = [\n                    ...actions\n                ].sort({\n                    \"useActionExecutor.useCallback[executeActions].sortedActions\": (a, b)=>{\n                        const priorityOrder = {\n                            'EXPRESSION': 0,\n                            'PAUSE': 1,\n                            'SEEK': 2,\n                            'REPLAY_SEGMENT': 3,\n                            'SPEAK': 4,\n                            'END_REACTION': 5\n                        };\n                        const aPriority = priorityOrder[a.action_type] ?? 99;\n                        const bPriority = priorityOrder[b.action_type] ?? 99;\n                        return aPriority - bPriority;\n                    }\n                }[\"useActionExecutor.useCallback[executeActions].sortedActions\"]);\n                for (const action of sortedActions){\n                    await executeAction(action);\n                    // Small delay between actions if needed\n                    if (sortedActions.indexOf(action) < sortedActions.length - 1) {\n                        await new Promise({\n                            \"useActionExecutor.useCallback[executeActions]\": (resolve)=>setTimeout(resolve, 10)\n                        }[\"useActionExecutor.useCallback[executeActions]\"]);\n                    }\n                }\n            } finally{\n                setIsExecuting(false);\n            }\n        }\n    }[\"useActionExecutor.useCallback[executeActions]\"], [\n        executeAction\n    ]);\n    return {\n        executeAction,\n        executeActions,\n        isExecuting\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/hooks/use-action-executor.ts\n");

/***/ }),

/***/ "(ssr)/./src/hooks/use-action-queue.ts":
/*!***************************************!*\
  !*** ./src/hooks/use-action-queue.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useActionQueue: () => (/* binding */ useActionQueue)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst useActionQueue = (options = {})=>{\n    const { threshold = 30, sendMessage } = options; // Default 30 seconds threshold\n    const [actionQueue, setActionQueue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [executedActionIds, setExecutedActionIds] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Set());\n    const [isExecuting, setIsExecuting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [hasRequestedMore, setHasRequestedMore] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Calculate current action index based on executed actions\n    const currentActionIndex = actionQueue.findIndex((action)=>!executedActionIds.has(action.id));\n    // Get latest trigger time from the queue\n    const latestTriggerTime = actionQueue.length > 0 ? Math.max(...actionQueue.map((action)=>action.trigger_timestamp)) : 0;\n    // Add new actions to the queue\n    const addActions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionQueue.useCallback[addActions]\": (actions)=>{\n            if (actions.length === 0) return;\n            setActionQueue({\n                \"useActionQueue.useCallback[addActions]\": (prevQueue)=>{\n                    // Filter out actions that already exist in the queue\n                    const existingIds = new Set(prevQueue.map({\n                        \"useActionQueue.useCallback[addActions]\": (action)=>action.id\n                    }[\"useActionQueue.useCallback[addActions]\"]));\n                    const newActions = actions.filter({\n                        \"useActionQueue.useCallback[addActions].newActions\": (action)=>!existingIds.has(action.id)\n                    }[\"useActionQueue.useCallback[addActions].newActions\"]);\n                    if (newActions.length === 0) {\n                        console.log('All actions already exist in queue, skipping duplicates');\n                        return prevQueue;\n                    }\n                    // Combine and sort all actions by trigger_timestamp\n                    const newQueue = [\n                        ...prevQueue,\n                        ...newActions\n                    ];\n                    const sortedQueue = newQueue.sort({\n                        \"useActionQueue.useCallback[addActions].sortedQueue\": (a, b)=>{\n                            // Primary sort by trigger_timestamp\n                            if (a.trigger_timestamp !== b.trigger_timestamp) {\n                                return a.trigger_timestamp - b.trigger_timestamp;\n                            }\n                            // Secondary sort by action type priority for same trigger_timestamp\n                            // EXPRESSION -> PAUSE -> SEEK -> REPLAY_SEGMENT -> SPEAK -> END_REACTION\n                            const priorityOrder = {\n                                'EXPRESSION': 0,\n                                'PAUSE': 1,\n                                'SEEK': 2,\n                                'REPLAY_SEGMENT': 3,\n                                'SPEAK': 4,\n                                'END_REACTION': 5\n                            };\n                            const aPriority = priorityOrder[a.action_type] ?? 99;\n                            const bPriority = priorityOrder[b.action_type] ?? 99;\n                            return aPriority - bPriority;\n                        }\n                    }[\"useActionQueue.useCallback[addActions].sortedQueue\"]);\n                    console.log(`Added ${newActions.length} new actions to queue (${actions.length - newActions.length} duplicates skipped). New queue size: ${sortedQueue.length}`);\n                    return sortedQueue;\n                }\n            }[\"useActionQueue.useCallback[addActions]\"]);\n            // Reset the request flag when new actions arrive\n            setHasRequestedMore(false);\n        }\n    }[\"useActionQueue.useCallback[addActions]\"], []);\n    // Remove actions from queue by their IDs\n    const removeActions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionQueue.useCallback[removeActions]\": (actionIds)=>{\n            if (actionIds.length === 0) return;\n            const idsToRemove = new Set(actionIds);\n            setActionQueue({\n                \"useActionQueue.useCallback[removeActions]\": (prevQueue)=>{\n                    const newQueue = prevQueue.filter({\n                        \"useActionQueue.useCallback[removeActions].newQueue\": (action)=>!idsToRemove.has(action.id)\n                    }[\"useActionQueue.useCallback[removeActions].newQueue\"]);\n                    console.log(`Removed ${actionIds.length} actions from queue. New queue size: ${newQueue.length}`);\n                    return newQueue;\n                }\n            }[\"useActionQueue.useCallback[removeActions]\"]);\n        }\n    }[\"useActionQueue.useCallback[removeActions]\"], []);\n    // Clear all actions from queue\n    const clearQueue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionQueue.useCallback[clearQueue]\": ()=>{\n            setActionQueue([]);\n            setExecutedActionIds(new Set());\n            setIsExecuting(false);\n            setHasRequestedMore(false);\n        }\n    }[\"useActionQueue.useCallback[clearQueue]\"], []);\n    // Reset queue state but keep actions\n    const resetQueue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionQueue.useCallback[resetQueue]\": ()=>{\n            setExecutedActionIds(new Set());\n            setIsExecuting(false);\n            setHasRequestedMore(false);\n        }\n    }[\"useActionQueue.useCallback[resetQueue]\"], []);\n    // Get actions that should be executed at current time\n    const getNextActions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionQueue.useCallback[getNextActions]\": (currentTime)=>{\n            // No tolerance - actions can be late but not early\n            const actionsToExecute = actionQueue.filter({\n                \"useActionQueue.useCallback[getNextActions].actionsToExecute\": (action)=>{\n                    const shouldExecute = !executedActionIds.has(action.id) && action.trigger_timestamp <= currentTime;\n                    return shouldExecute;\n                }\n            }[\"useActionQueue.useCallback[getNextActions].actionsToExecute\"]);\n            return actionsToExecute;\n        }\n    }[\"useActionQueue.useCallback[getNextActions]\"], [\n        actionQueue,\n        executedActionIds\n    ]);\n    // Mark an action as executed\n    const markActionExecuted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionQueue.useCallback[markActionExecuted]\": (actionId)=>{\n            setExecutedActionIds({\n                \"useActionQueue.useCallback[markActionExecuted]\": (prev)=>{\n                    const newSet = new Set(prev);\n                    newSet.add(actionId);\n                    return newSet;\n                }\n            }[\"useActionQueue.useCallback[markActionExecuted]\"]);\n        }\n    }[\"useActionQueue.useCallback[markActionExecuted]\"], []);\n    // Threshold checking for requesting more actions\n    const checkThreshold = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useActionQueue.useCallback[checkThreshold]\": (currentTime)=>{\n            // Don't request if we already requested or no sendMessage function\n            if (hasRequestedMore || !sendMessage) {\n                return;\n            }\n            // Check if we need more actions\n            const timeUntilEnd = latestTriggerTime - currentTime;\n            if (timeUntilEnd <= threshold && timeUntilEnd > 0) {\n                console.log(`Requesting more actions: current=${currentTime}, latest=${latestTriggerTime}, threshold=${threshold}`);\n                setHasRequestedMore(true);\n                sendMessage({\n                    type: \"trigger-load-next\"\n                });\n            }\n        }\n    }[\"useActionQueue.useCallback[checkThreshold]\"], [\n        latestTriggerTime,\n        threshold,\n        hasRequestedMore,\n        sendMessage\n    ]);\n    return {\n        actionQueue,\n        currentActionIndex,\n        isExecuting,\n        latestTriggerTime,\n        addActions,\n        clearQueue,\n        resetQueue,\n        getNextActions,\n        removeActions,\n        markActionExecuted,\n        checkThreshold\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvaG9va3MvdXNlLWFjdGlvbi1xdWV1ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUU7QUFzQjFELE1BQU1FLGlCQUFpQixDQUFDQyxVQUE4QixDQUFDLENBQUM7SUFDN0QsTUFBTSxFQUFFQyxZQUFZLEVBQUUsRUFBRUMsV0FBVyxFQUFFLEdBQUdGLFNBQVMsK0JBQStCO0lBRWhGLE1BQU0sQ0FBQ0csYUFBYUMsZUFBZSxHQUFHUCwrQ0FBUUEsQ0FBYSxFQUFFO0lBQzdELE1BQU0sQ0FBQ1EsbUJBQW1CQyxxQkFBcUIsR0FBR1QsK0NBQVFBLENBQWMsSUFBSVU7SUFDNUUsTUFBTSxDQUFDQyxhQUFhQyxlQUFlLEdBQUdaLCtDQUFRQSxDQUFDO0lBQy9DLE1BQU0sQ0FBQ2Esa0JBQWtCQyxvQkFBb0IsR0FBR2QsK0NBQVFBLENBQUM7SUFFekQsMkRBQTJEO0lBQzNELE1BQU1lLHFCQUFxQlQsWUFBWVUsU0FBUyxDQUFDQyxDQUFBQSxTQUFVLENBQUNULGtCQUFrQlUsR0FBRyxDQUFDRCxPQUFPRSxFQUFFO0lBRTNGLHlDQUF5QztJQUN6QyxNQUFNQyxvQkFBb0JkLFlBQVllLE1BQU0sR0FBRyxJQUMzQ0MsS0FBS0MsR0FBRyxJQUFJakIsWUFBWWtCLEdBQUcsQ0FBQ1AsQ0FBQUEsU0FBVUEsT0FBT1EsaUJBQWlCLEtBQzlEO0lBRUosK0JBQStCO0lBQy9CLE1BQU1DLGFBQWF6QixrREFBV0E7a0RBQUMsQ0FBQzBCO1lBQzlCLElBQUlBLFFBQVFOLE1BQU0sS0FBSyxHQUFHO1lBRTFCZDswREFBZXFCLENBQUFBO29CQUNiLHFEQUFxRDtvQkFDckQsTUFBTUMsY0FBYyxJQUFJbkIsSUFBSWtCLFVBQVVKLEdBQUc7a0VBQUNQLENBQUFBLFNBQVVBLE9BQU9FLEVBQUU7O29CQUM3RCxNQUFNVyxhQUFhSCxRQUFRSSxNQUFNOzZFQUFDZCxDQUFBQSxTQUFVLENBQUNZLFlBQVlYLEdBQUcsQ0FBQ0QsT0FBT0UsRUFBRTs7b0JBRXRFLElBQUlXLFdBQVdULE1BQU0sS0FBSyxHQUFHO3dCQUMzQlcsUUFBUUMsR0FBRyxDQUFDO3dCQUNaLE9BQU9MO29CQUNUO29CQUVBLG9EQUFvRDtvQkFDcEQsTUFBTU0sV0FBVzsyQkFBSU47MkJBQWNFO3FCQUFXO29CQUM5QyxNQUFNSyxjQUFjRCxTQUFTRSxJQUFJOzhFQUFDLENBQUNDLEdBQUdDOzRCQUNwQyxvQ0FBb0M7NEJBQ3BDLElBQUlELEVBQUVaLGlCQUFpQixLQUFLYSxFQUFFYixpQkFBaUIsRUFBRTtnQ0FDL0MsT0FBT1ksRUFBRVosaUJBQWlCLEdBQUdhLEVBQUViLGlCQUFpQjs0QkFDbEQ7NEJBQ0Esb0VBQW9FOzRCQUNwRSx5RUFBeUU7NEJBQ3pFLE1BQU1jLGdCQUFnQjtnQ0FBRSxjQUFjO2dDQUFHLFNBQVM7Z0NBQUcsUUFBUTtnQ0FBRyxrQkFBa0I7Z0NBQUcsU0FBUztnQ0FBRyxnQkFBZ0I7NEJBQUU7NEJBQ25ILE1BQU1DLFlBQVlELGFBQWEsQ0FBQ0YsRUFBRUksV0FBVyxDQUFDLElBQUk7NEJBQ2xELE1BQU1DLFlBQVlILGFBQWEsQ0FBQ0QsRUFBRUcsV0FBVyxDQUFDLElBQUk7NEJBQ2xELE9BQU9ELFlBQVlFO3dCQUNyQjs7b0JBRUFWLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRUgsV0FBV1QsTUFBTSxDQUFDLHVCQUF1QixFQUFFTSxRQUFRTixNQUFNLEdBQUdTLFdBQVdULE1BQU0sQ0FBQyxzQ0FBc0MsRUFBRWMsWUFBWWQsTUFBTSxFQUFFO29CQUMvSixPQUFPYztnQkFDVDs7WUFFQSxpREFBaUQ7WUFDakRyQixvQkFBb0I7UUFDdEI7aURBQUcsRUFBRTtJQUVMLHlDQUF5QztJQUN6QyxNQUFNNkIsZ0JBQWdCMUMsa0RBQVdBO3FEQUFDLENBQUMyQztZQUNqQyxJQUFJQSxVQUFVdkIsTUFBTSxLQUFLLEdBQUc7WUFFNUIsTUFBTXdCLGNBQWMsSUFBSW5DLElBQUlrQztZQUM1QnJDOzZEQUFlcUIsQ0FBQUE7b0JBQ2IsTUFBTU0sV0FBV04sVUFBVUcsTUFBTTs4RUFBQ2QsQ0FBQUEsU0FBVSxDQUFDNEIsWUFBWTNCLEdBQUcsQ0FBQ0QsT0FBT0UsRUFBRTs7b0JBQ3RFYSxRQUFRQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUVXLFVBQVV2QixNQUFNLENBQUMscUNBQXFDLEVBQUVhLFNBQVNiLE1BQU0sRUFBRTtvQkFDaEcsT0FBT2E7Z0JBQ1Q7O1FBQ0Y7b0RBQUcsRUFBRTtJQUVMLCtCQUErQjtJQUMvQixNQUFNWSxhQUFhN0Msa0RBQVdBO2tEQUFDO1lBQzdCTSxlQUFlLEVBQUU7WUFDakJFLHFCQUFxQixJQUFJQztZQUN6QkUsZUFBZTtZQUNmRSxvQkFBb0I7UUFDdEI7aURBQUcsRUFBRTtJQUVMLHFDQUFxQztJQUNyQyxNQUFNaUMsYUFBYTlDLGtEQUFXQTtrREFBQztZQUM3QlEscUJBQXFCLElBQUlDO1lBQ3pCRSxlQUFlO1lBQ2ZFLG9CQUFvQjtRQUN0QjtpREFBRyxFQUFFO0lBRUwsc0RBQXNEO0lBQ3RELE1BQU1rQyxpQkFBaUIvQyxrREFBV0E7c0RBQUMsQ0FBQ2dEO1lBQ2xDLG1EQUFtRDtZQUNuRCxNQUFNQyxtQkFBbUI1QyxZQUFZeUIsTUFBTTsrRUFBQ2QsQ0FBQUE7b0JBQzFDLE1BQU1rQyxnQkFBZ0IsQ0FBQzNDLGtCQUFrQlUsR0FBRyxDQUFDRCxPQUFPRSxFQUFFLEtBQ2pDRixPQUFPUSxpQkFBaUIsSUFBSXdCO29CQUNqRCxPQUFPRTtnQkFDVDs7WUFFQSxPQUFPRDtRQUNUO3FEQUFHO1FBQUM1QztRQUFhRTtLQUFrQjtJQUVuQyw2QkFBNkI7SUFDN0IsTUFBTTRDLHFCQUFxQm5ELGtEQUFXQTswREFBQyxDQUFDb0Q7WUFDdEM1QztrRUFBcUI2QyxDQUFBQTtvQkFDbkIsTUFBTUMsU0FBUyxJQUFJN0MsSUFBSTRDO29CQUN2QkMsT0FBT0MsR0FBRyxDQUFDSDtvQkFDWCxPQUFPRTtnQkFDVDs7UUFDRjt5REFBRyxFQUFFO0lBRUwsaURBQWlEO0lBQ2pELE1BQU1FLGlCQUFpQnhELGtEQUFXQTtzREFBQyxDQUFDZ0Q7WUFDbEMsbUVBQW1FO1lBQ25FLElBQUlwQyxvQkFBb0IsQ0FBQ1IsYUFBYTtnQkFDcEM7WUFDRjtZQUVBLGdDQUFnQztZQUNoQyxNQUFNcUQsZUFBZXRDLG9CQUFvQjZCO1lBRXpDLElBQUlTLGdCQUFnQnRELGFBQWFzRCxlQUFlLEdBQUc7Z0JBQ2pEMUIsUUFBUUMsR0FBRyxDQUFDLENBQUMsaUNBQWlDLEVBQUVnQixZQUFZLFNBQVMsRUFBRTdCLGtCQUFrQixZQUFZLEVBQUVoQixXQUFXO2dCQUVsSFUsb0JBQW9CO2dCQUNwQlQsWUFBWTtvQkFDVnNELE1BQU07Z0JBQ1I7WUFDRjtRQUNGO3FEQUFHO1FBQUN2QztRQUFtQmhCO1FBQVdTO1FBQWtCUjtLQUFZO0lBRWhFLE9BQU87UUFDTEM7UUFDQVM7UUFDQUo7UUFDQVM7UUFDQU07UUFDQW9CO1FBQ0FDO1FBQ0FDO1FBQ0FMO1FBQ0FTO1FBQ0FLO0lBQ0Y7QUFDRixFQUFFIiwic291cmNlcyI6WyIvVXNlcnMvRXRoYW5MZWUvRGVza3RvcC9BZHZYL0FJLVdhdGNoLUJ1ZGR5L2Zyb250ZW5kL3NyYy9ob29rcy91c2UtYWN0aW9uLXF1ZXVlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBBSUFjdGlvbiwgV2ViU29ja2V0TWVzc2FnZSB9IGZyb20gJy4uL2NvbnRleHQvd2Vic29ja2V0LWNvbnRleHQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEFjdGlvblF1ZXVlT3B0aW9ucyB7XG4gIHRocmVzaG9sZD86IG51bWJlcjsgLy8gVGltZSB0aHJlc2hvbGQgaW4gc2Vjb25kcyB0byByZXF1ZXN0IG1vcmUgYWN0aW9uc1xuICBzZW5kTWVzc2FnZT86IChtZXNzYWdlOiBXZWJTb2NrZXRNZXNzYWdlKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFVzZUFjdGlvblF1ZXVlUmV0dXJuIHtcbiAgYWN0aW9uUXVldWU6IEFJQWN0aW9uW107XG4gIGN1cnJlbnRBY3Rpb25JbmRleDogbnVtYmVyO1xuICBpc0V4ZWN1dGluZzogYm9vbGVhbjtcbiAgbGF0ZXN0VHJpZ2dlclRpbWU6IG51bWJlcjtcbiAgYWRkQWN0aW9uczogKGFjdGlvbnM6IEFJQWN0aW9uW10pID0+IHZvaWQ7XG4gIGNsZWFyUXVldWU6ICgpID0+IHZvaWQ7XG4gIHJlc2V0UXVldWU6ICgpID0+IHZvaWQ7XG4gIGdldE5leHRBY3Rpb25zOiAoY3VycmVudFRpbWU6IG51bWJlcikgPT4gQUlBY3Rpb25bXTtcbiAgcmVtb3ZlQWN0aW9uczogKGFjdGlvbklkczogc3RyaW5nW10pID0+IHZvaWQ7XG4gIG1hcmtBY3Rpb25FeGVjdXRlZDogKGFjdGlvbklkOiBzdHJpbmcpID0+IHZvaWQ7XG4gIGNoZWNrVGhyZXNob2xkOiAoY3VycmVudFRpbWU6IG51bWJlcikgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGNvbnN0IHVzZUFjdGlvblF1ZXVlID0gKG9wdGlvbnM6IEFjdGlvblF1ZXVlT3B0aW9ucyA9IHt9KTogVXNlQWN0aW9uUXVldWVSZXR1cm4gPT4ge1xuICBjb25zdCB7IHRocmVzaG9sZCA9IDMwLCBzZW5kTWVzc2FnZSB9ID0gb3B0aW9uczsgLy8gRGVmYXVsdCAzMCBzZWNvbmRzIHRocmVzaG9sZFxuICBcbiAgY29uc3QgW2FjdGlvblF1ZXVlLCBzZXRBY3Rpb25RdWV1ZV0gPSB1c2VTdGF0ZTxBSUFjdGlvbltdPihbXSk7XG4gIGNvbnN0IFtleGVjdXRlZEFjdGlvbklkcywgc2V0RXhlY3V0ZWRBY3Rpb25JZHNdID0gdXNlU3RhdGU8U2V0PHN0cmluZz4+KG5ldyBTZXQoKSk7XG4gIGNvbnN0IFtpc0V4ZWN1dGluZywgc2V0SXNFeGVjdXRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbaGFzUmVxdWVzdGVkTW9yZSwgc2V0SGFzUmVxdWVzdGVkTW9yZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgLy8gQ2FsY3VsYXRlIGN1cnJlbnQgYWN0aW9uIGluZGV4IGJhc2VkIG9uIGV4ZWN1dGVkIGFjdGlvbnNcbiAgY29uc3QgY3VycmVudEFjdGlvbkluZGV4ID0gYWN0aW9uUXVldWUuZmluZEluZGV4KGFjdGlvbiA9PiAhZXhlY3V0ZWRBY3Rpb25JZHMuaGFzKGFjdGlvbi5pZCkpO1xuXG4gIC8vIEdldCBsYXRlc3QgdHJpZ2dlciB0aW1lIGZyb20gdGhlIHF1ZXVlXG4gIGNvbnN0IGxhdGVzdFRyaWdnZXJUaW1lID0gYWN0aW9uUXVldWUubGVuZ3RoID4gMFxuICAgID8gTWF0aC5tYXgoLi4uYWN0aW9uUXVldWUubWFwKGFjdGlvbiA9PiBhY3Rpb24udHJpZ2dlcl90aW1lc3RhbXApKVxuICAgIDogMDtcblxuICAvLyBBZGQgbmV3IGFjdGlvbnMgdG8gdGhlIHF1ZXVlXG4gIGNvbnN0IGFkZEFjdGlvbnMgPSB1c2VDYWxsYmFjaygoYWN0aW9uczogQUlBY3Rpb25bXSkgPT4ge1xuICAgIGlmIChhY3Rpb25zLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuXG4gICAgc2V0QWN0aW9uUXVldWUocHJldlF1ZXVlID0+IHtcbiAgICAgIC8vIEZpbHRlciBvdXQgYWN0aW9ucyB0aGF0IGFscmVhZHkgZXhpc3QgaW4gdGhlIHF1ZXVlXG4gICAgICBjb25zdCBleGlzdGluZ0lkcyA9IG5ldyBTZXQocHJldlF1ZXVlLm1hcChhY3Rpb24gPT4gYWN0aW9uLmlkKSk7XG4gICAgICBjb25zdCBuZXdBY3Rpb25zID0gYWN0aW9ucy5maWx0ZXIoYWN0aW9uID0+ICFleGlzdGluZ0lkcy5oYXMoYWN0aW9uLmlkKSk7XG4gICAgICBcbiAgICAgIGlmIChuZXdBY3Rpb25zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjb25zb2xlLmxvZygnQWxsIGFjdGlvbnMgYWxyZWFkeSBleGlzdCBpbiBxdWV1ZSwgc2tpcHBpbmcgZHVwbGljYXRlcycpO1xuICAgICAgICByZXR1cm4gcHJldlF1ZXVlO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBDb21iaW5lIGFuZCBzb3J0IGFsbCBhY3Rpb25zIGJ5IHRyaWdnZXJfdGltZXN0YW1wXG4gICAgICBjb25zdCBuZXdRdWV1ZSA9IFsuLi5wcmV2UXVldWUsIC4uLm5ld0FjdGlvbnNdO1xuICAgICAgY29uc3Qgc29ydGVkUXVldWUgPSBuZXdRdWV1ZS5zb3J0KChhLCBiKSA9PiB7XG4gICAgICAgIC8vIFByaW1hcnkgc29ydCBieSB0cmlnZ2VyX3RpbWVzdGFtcFxuICAgICAgICBpZiAoYS50cmlnZ2VyX3RpbWVzdGFtcCAhPT0gYi50cmlnZ2VyX3RpbWVzdGFtcCkge1xuICAgICAgICAgIHJldHVybiBhLnRyaWdnZXJfdGltZXN0YW1wIC0gYi50cmlnZ2VyX3RpbWVzdGFtcDtcbiAgICAgICAgfVxuICAgICAgICAvLyBTZWNvbmRhcnkgc29ydCBieSBhY3Rpb24gdHlwZSBwcmlvcml0eSBmb3Igc2FtZSB0cmlnZ2VyX3RpbWVzdGFtcFxuICAgICAgICAvLyBFWFBSRVNTSU9OIC0+IFBBVVNFIC0+IFNFRUsgLT4gUkVQTEFZX1NFR01FTlQgLT4gU1BFQUsgLT4gRU5EX1JFQUNUSU9OXG4gICAgICAgIGNvbnN0IHByaW9yaXR5T3JkZXIgPSB7ICdFWFBSRVNTSU9OJzogMCwgJ1BBVVNFJzogMSwgJ1NFRUsnOiAyLCAnUkVQTEFZX1NFR01FTlQnOiAzLCAnU1BFQUsnOiA0LCAnRU5EX1JFQUNUSU9OJzogNSB9O1xuICAgICAgICBjb25zdCBhUHJpb3JpdHkgPSBwcmlvcml0eU9yZGVyW2EuYWN0aW9uX3R5cGVdID8/IDk5O1xuICAgICAgICBjb25zdCBiUHJpb3JpdHkgPSBwcmlvcml0eU9yZGVyW2IuYWN0aW9uX3R5cGVdID8/IDk5O1xuICAgICAgICByZXR1cm4gYVByaW9yaXR5IC0gYlByaW9yaXR5O1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnNvbGUubG9nKGBBZGRlZCAke25ld0FjdGlvbnMubGVuZ3RofSBuZXcgYWN0aW9ucyB0byBxdWV1ZSAoJHthY3Rpb25zLmxlbmd0aCAtIG5ld0FjdGlvbnMubGVuZ3RofSBkdXBsaWNhdGVzIHNraXBwZWQpLiBOZXcgcXVldWUgc2l6ZTogJHtzb3J0ZWRRdWV1ZS5sZW5ndGh9YCk7XG4gICAgICByZXR1cm4gc29ydGVkUXVldWU7XG4gICAgfSk7XG5cbiAgICAvLyBSZXNldCB0aGUgcmVxdWVzdCBmbGFnIHdoZW4gbmV3IGFjdGlvbnMgYXJyaXZlXG4gICAgc2V0SGFzUmVxdWVzdGVkTW9yZShmYWxzZSk7XG4gIH0sIFtdKTtcblxuICAvLyBSZW1vdmUgYWN0aW9ucyBmcm9tIHF1ZXVlIGJ5IHRoZWlyIElEc1xuICBjb25zdCByZW1vdmVBY3Rpb25zID0gdXNlQ2FsbGJhY2soKGFjdGlvbklkczogc3RyaW5nW10pID0+IHtcbiAgICBpZiAoYWN0aW9uSWRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIFxuICAgIGNvbnN0IGlkc1RvUmVtb3ZlID0gbmV3IFNldChhY3Rpb25JZHMpO1xuICAgIHNldEFjdGlvblF1ZXVlKHByZXZRdWV1ZSA9PiB7XG4gICAgICBjb25zdCBuZXdRdWV1ZSA9IHByZXZRdWV1ZS5maWx0ZXIoYWN0aW9uID0+ICFpZHNUb1JlbW92ZS5oYXMoYWN0aW9uLmlkKSk7XG4gICAgICBjb25zb2xlLmxvZyhgUmVtb3ZlZCAke2FjdGlvbklkcy5sZW5ndGh9IGFjdGlvbnMgZnJvbSBxdWV1ZS4gTmV3IHF1ZXVlIHNpemU6ICR7bmV3UXVldWUubGVuZ3RofWApO1xuICAgICAgcmV0dXJuIG5ld1F1ZXVlO1xuICAgIH0pO1xuICB9LCBbXSk7XG5cbiAgLy8gQ2xlYXIgYWxsIGFjdGlvbnMgZnJvbSBxdWV1ZVxuICBjb25zdCBjbGVhclF1ZXVlID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldEFjdGlvblF1ZXVlKFtdKTtcbiAgICBzZXRFeGVjdXRlZEFjdGlvbklkcyhuZXcgU2V0KCkpO1xuICAgIHNldElzRXhlY3V0aW5nKGZhbHNlKTtcbiAgICBzZXRIYXNSZXF1ZXN0ZWRNb3JlKGZhbHNlKTtcbiAgfSwgW10pO1xuXG4gIC8vIFJlc2V0IHF1ZXVlIHN0YXRlIGJ1dCBrZWVwIGFjdGlvbnNcbiAgY29uc3QgcmVzZXRRdWV1ZSA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzZXRFeGVjdXRlZEFjdGlvbklkcyhuZXcgU2V0KCkpO1xuICAgIHNldElzRXhlY3V0aW5nKGZhbHNlKTtcbiAgICBzZXRIYXNSZXF1ZXN0ZWRNb3JlKGZhbHNlKTtcbiAgfSwgW10pO1xuXG4gIC8vIEdldCBhY3Rpb25zIHRoYXQgc2hvdWxkIGJlIGV4ZWN1dGVkIGF0IGN1cnJlbnQgdGltZVxuICBjb25zdCBnZXROZXh0QWN0aW9ucyA9IHVzZUNhbGxiYWNrKChjdXJyZW50VGltZTogbnVtYmVyKTogQUlBY3Rpb25bXSA9PiB7XG4gICAgLy8gTm8gdG9sZXJhbmNlIC0gYWN0aW9ucyBjYW4gYmUgbGF0ZSBidXQgbm90IGVhcmx5XG4gICAgY29uc3QgYWN0aW9uc1RvRXhlY3V0ZSA9IGFjdGlvblF1ZXVlLmZpbHRlcihhY3Rpb24gPT4ge1xuICAgICAgY29uc3Qgc2hvdWxkRXhlY3V0ZSA9ICFleGVjdXRlZEFjdGlvbklkcy5oYXMoYWN0aW9uLmlkKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJfdGltZXN0YW1wIDw9IGN1cnJlbnRUaW1lO1xuICAgICAgcmV0dXJuIHNob3VsZEV4ZWN1dGU7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gYWN0aW9uc1RvRXhlY3V0ZTtcbiAgfSwgW2FjdGlvblF1ZXVlLCBleGVjdXRlZEFjdGlvbklkc10pO1xuXG4gIC8vIE1hcmsgYW4gYWN0aW9uIGFzIGV4ZWN1dGVkXG4gIGNvbnN0IG1hcmtBY3Rpb25FeGVjdXRlZCA9IHVzZUNhbGxiYWNrKChhY3Rpb25JZDogc3RyaW5nKSA9PiB7XG4gICAgc2V0RXhlY3V0ZWRBY3Rpb25JZHMocHJldiA9PiB7XG4gICAgICBjb25zdCBuZXdTZXQgPSBuZXcgU2V0KHByZXYpO1xuICAgICAgbmV3U2V0LmFkZChhY3Rpb25JZCk7XG4gICAgICByZXR1cm4gbmV3U2V0O1xuICAgIH0pO1xuICB9LCBbXSk7XG5cbiAgLy8gVGhyZXNob2xkIGNoZWNraW5nIGZvciByZXF1ZXN0aW5nIG1vcmUgYWN0aW9uc1xuICBjb25zdCBjaGVja1RocmVzaG9sZCA9IHVzZUNhbGxiYWNrKChjdXJyZW50VGltZTogbnVtYmVyKSA9PiB7XG4gICAgLy8gRG9uJ3QgcmVxdWVzdCBpZiB3ZSBhbHJlYWR5IHJlcXVlc3RlZCBvciBubyBzZW5kTWVzc2FnZSBmdW5jdGlvblxuICAgIGlmIChoYXNSZXF1ZXN0ZWRNb3JlIHx8ICFzZW5kTWVzc2FnZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIENoZWNrIGlmIHdlIG5lZWQgbW9yZSBhY3Rpb25zXG4gICAgY29uc3QgdGltZVVudGlsRW5kID0gbGF0ZXN0VHJpZ2dlclRpbWUgLSBjdXJyZW50VGltZTtcbiAgICBcbiAgICBpZiAodGltZVVudGlsRW5kIDw9IHRocmVzaG9sZCAmJiB0aW1lVW50aWxFbmQgPiAwKSB7XG4gICAgICBjb25zb2xlLmxvZyhgUmVxdWVzdGluZyBtb3JlIGFjdGlvbnM6IGN1cnJlbnQ9JHtjdXJyZW50VGltZX0sIGxhdGVzdD0ke2xhdGVzdFRyaWdnZXJUaW1lfSwgdGhyZXNob2xkPSR7dGhyZXNob2xkfWApO1xuICAgICAgXG4gICAgICBzZXRIYXNSZXF1ZXN0ZWRNb3JlKHRydWUpO1xuICAgICAgc2VuZE1lc3NhZ2Uoe1xuICAgICAgICB0eXBlOiBcInRyaWdnZXItbG9hZC1uZXh0XCIsXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIFtsYXRlc3RUcmlnZ2VyVGltZSwgdGhyZXNob2xkLCBoYXNSZXF1ZXN0ZWRNb3JlLCBzZW5kTWVzc2FnZV0pO1xuXG4gIHJldHVybiB7XG4gICAgYWN0aW9uUXVldWUsXG4gICAgY3VycmVudEFjdGlvbkluZGV4LFxuICAgIGlzRXhlY3V0aW5nLFxuICAgIGxhdGVzdFRyaWdnZXJUaW1lLFxuICAgIGFkZEFjdGlvbnMsXG4gICAgY2xlYXJRdWV1ZSxcbiAgICByZXNldFF1ZXVlLFxuICAgIGdldE5leHRBY3Rpb25zLFxuICAgIHJlbW92ZUFjdGlvbnMsXG4gICAgbWFya0FjdGlvbkV4ZWN1dGVkLFxuICAgIGNoZWNrVGhyZXNob2xkXG4gIH07XG59OyAiXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VDYWxsYmFjayIsInVzZUFjdGlvblF1ZXVlIiwib3B0aW9ucyIsInRocmVzaG9sZCIsInNlbmRNZXNzYWdlIiwiYWN0aW9uUXVldWUiLCJzZXRBY3Rpb25RdWV1ZSIsImV4ZWN1dGVkQWN0aW9uSWRzIiwic2V0RXhlY3V0ZWRBY3Rpb25JZHMiLCJTZXQiLCJpc0V4ZWN1dGluZyIsInNldElzRXhlY3V0aW5nIiwiaGFzUmVxdWVzdGVkTW9yZSIsInNldEhhc1JlcXVlc3RlZE1vcmUiLCJjdXJyZW50QWN0aW9uSW5kZXgiLCJmaW5kSW5kZXgiLCJhY3Rpb24iLCJoYXMiLCJpZCIsImxhdGVzdFRyaWdnZXJUaW1lIiwibGVuZ3RoIiwiTWF0aCIsIm1heCIsIm1hcCIsInRyaWdnZXJfdGltZXN0YW1wIiwiYWRkQWN0aW9ucyIsImFjdGlvbnMiLCJwcmV2UXVldWUiLCJleGlzdGluZ0lkcyIsIm5ld0FjdGlvbnMiLCJmaWx0ZXIiLCJjb25zb2xlIiwibG9nIiwibmV3UXVldWUiLCJzb3J0ZWRRdWV1ZSIsInNvcnQiLCJhIiwiYiIsInByaW9yaXR5T3JkZXIiLCJhUHJpb3JpdHkiLCJhY3Rpb25fdHlwZSIsImJQcmlvcml0eSIsInJlbW92ZUFjdGlvbnMiLCJhY3Rpb25JZHMiLCJpZHNUb1JlbW92ZSIsImNsZWFyUXVldWUiLCJyZXNldFF1ZXVlIiwiZ2V0TmV4dEFjdGlvbnMiLCJjdXJyZW50VGltZSIsImFjdGlvbnNUb0V4ZWN1dGUiLCJzaG91bGRFeGVjdXRlIiwibWFya0FjdGlvbkV4ZWN1dGVkIiwiYWN0aW9uSWQiLCJwcmV2IiwibmV3U2V0IiwiYWRkIiwiY2hlY2tUaHJlc2hvbGQiLCJ0aW1lVW50aWxFbmQiLCJ0eXBlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/hooks/use-action-queue.ts\n");

/***/ }),

/***/ "(ssr)/./src/hooks/use-audio-task.ts":
/*!*************************************!*\
  !*** ./src/hooks/use-audio-task.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAudioTask: () => (/* binding */ useAudioTask)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _hooks_use_live2d_expression__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/hooks/use-live2d-expression */ \"(ssr)/./src/hooks/use-live2d-expression.ts\");\n/* harmony import */ var _cubismsdksamples_lappdefine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @cubismsdksamples/lappdefine */ \"(ssr)/./WebSDK/src/lappdefine.ts\");\n/* __next_internal_client_entry_do_not_use__ useAudioTask auto */ /* eslint-disable func-names */ /* eslint-disable no-underscore-dangle */ /* eslint-disable @typescript-eslint/ban-ts-comment */ \n\n\n/**\n * Custom hook for handling audio playback tasks with Live2D lip sync\n */ const useAudioTask = ()=>{\n    const { setExpression } = (0,_hooks_use_live2d_expression__WEBPACK_IMPORTED_MODULE_1__.useLive2DExpression)();\n    // Track current audio and model\n    const currentAudioRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const currentModelRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    /**\n   * Stop current audio playback and lip sync\n   */ const stopCurrentAudioAndLipSync = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAudioTask.useCallback[stopCurrentAudioAndLipSync]\": ()=>{\n            if (currentAudioRef.current) {\n                console.log('Stopping current audio and lip sync');\n                const audio = currentAudioRef.current;\n                audio.pause();\n                audio.src = '';\n                audio.load();\n                const model = currentModelRef.current;\n                if (model && model._wavFileHandler) {\n                    try {\n                        // Release PCM data to stop lip sync calculation in update()\n                        model._wavFileHandler.releasePcmData();\n                        console.log('Called _wavFileHandler.releasePcmData()');\n                        // Additional reset of state variables as fallback\n                        model._wavFileHandler._lastRms = 0.0;\n                        model._wavFileHandler._sampleOffset = 0;\n                        model._wavFileHandler._userTimeSeconds = 0.0;\n                        console.log('Also reset _lastRms, _sampleOffset, _userTimeSeconds as fallback');\n                    } catch (e) {\n                        console.error('Error stopping/resetting wavFileHandler:', e);\n                    }\n                } else if (model) {\n                    console.warn('Current model does not have _wavFileHandler to stop/reset.');\n                } else {\n                    console.log('No associated model found to stop lip sync.');\n                }\n                currentAudioRef.current = null;\n                currentModelRef.current = null;\n            } else {\n                console.log('No current audio playing to stop.');\n            }\n        }\n    }[\"useAudioTask.useCallback[stopCurrentAudioAndLipSync]\"], []);\n    /**\n   * Handle audio playback with Live2D lip sync\n   */ const handleAudioPlayback = (options)=>new Promise((resolve)=>{\n            const { audioBase64, expressions } = options;\n            try {\n                // Check if audioBase64 is valid before proceeding\n                if (!audioBase64 || audioBase64.trim() === '' || audioBase64.trim().length < 10) {\n                    console.log(`No valid audio data provided (${audioBase64?.length || 0} chars), skipping audio playback`);\n                    resolve();\n                    return;\n                }\n                // Validate base64 string format\n                const base64Pattern = /^[A-Za-z0-9+/]*={0,2}$/;\n                if (!base64Pattern.test(audioBase64.trim())) {\n                    console.error('Invalid base64 audio data format');\n                    resolve();\n                    return;\n                }\n                stopCurrentAudioAndLipSync();\n                // Process audio if available\n                if (audioBase64) {\n                    // Change the MIME type to audio/wav\n                    const audioDataUrl = `data:audio/wav;base64,${audioBase64}`;\n                    // Validate the data URL\n                    if (!audioDataUrl || audioDataUrl === 'data:audio/wav;base64,') {\n                        console.error('Invalid audio data URL generated');\n                        resolve();\n                        return;\n                    }\n                    // Get Live2D manager and model\n                    const live2dManager = window.getLive2DManager?.();\n                    if (!live2dManager) {\n                        console.error('Live2D manager not found');\n                        resolve();\n                        return;\n                    }\n                    const model = live2dManager.getModel(0);\n                    if (!model) {\n                        console.error('Live2D model not found at index 0');\n                        resolve();\n                        return;\n                    }\n                    console.log('Found model for audio playback');\n                    currentModelRef.current = model;\n                    if (!model._wavFileHandler) {\n                        console.warn('Model does not have _wavFileHandler for lip sync');\n                    } else {\n                        console.log('Model has _wavFileHandler available');\n                    }\n                    // Set expression if available\n                    const lappAdapter = window.getLAppAdapter?.();\n                    if (lappAdapter && expressions?.[0] !== undefined) {\n                        setExpression(expressions[0], lappAdapter, `Set expression to: ${expressions[0]}`);\n                    }\n                    // Start talk motion\n                    if (_cubismsdksamples_lappdefine__WEBPACK_IMPORTED_MODULE_2__ && _cubismsdksamples_lappdefine__WEBPACK_IMPORTED_MODULE_2__.PriorityNormal) {\n                        console.log(\"Starting random 'Talk' motion\");\n                        model.startRandomMotion(\"Talk\", _cubismsdksamples_lappdefine__WEBPACK_IMPORTED_MODULE_2__.PriorityNormal);\n                    } else {\n                        console.warn(\"LAppDefine.PriorityNormal not found - cannot start talk motion\");\n                    }\n                    // Setup audio element\n                    const audio = new Audio();\n                    currentAudioRef.current = audio;\n                    let isFinished = false;\n                    let isCleanedUp = false;\n                    const cleanup = ()=>{\n                        if (isCleanedUp) return; // 防止重复清理\n                        isCleanedUp = true;\n                        console.log('Cleaning up audio playback');\n                        // 只清理当前正在播放的音频\n                        if (currentAudioRef.current === audio) {\n                            currentAudioRef.current = null;\n                            currentModelRef.current = null;\n                        }\n                        if (!isFinished) {\n                            isFinished = true;\n                            resolve();\n                        }\n                    };\n                    // Enhance lip sync sensitivity\n                    const lipSyncScale = 2.0;\n                    audio.addEventListener('canplaythrough', ()=>{\n                        // Check for interruption before playback\n                        if (currentAudioRef.current !== audio || isCleanedUp) {\n                            console.warn('Audio playback cancelled due to new audio or cleanup');\n                            cleanup();\n                            return;\n                        }\n                        console.log('Starting audio playback with lip sync');\n                        audio.play().catch((err)=>{\n                            console.error(\"Audio play error:\", err);\n                            cleanup();\n                        });\n                        // Setup lip sync\n                        if (model._wavFileHandler && !isCleanedUp) {\n                            if (!model._wavFileHandler._initialized) {\n                                console.log('Applying enhanced lip sync');\n                                model._wavFileHandler._initialized = true;\n                                const originalUpdate = model._wavFileHandler.update.bind(model._wavFileHandler);\n                                model._wavFileHandler.update = function(deltaTimeSeconds) {\n                                    const result = originalUpdate(deltaTimeSeconds);\n                                    // @ts-ignore\n                                    this._lastRms = Math.min(2.0, this._lastRms * lipSyncScale);\n                                    return result;\n                                };\n                            }\n                            if (currentAudioRef.current === audio && !isCleanedUp) {\n                                model._wavFileHandler.start(audioDataUrl);\n                            } else {\n                                console.warn('WavFileHandler start skipped - audio was stopped or cleaned up');\n                            }\n                        }\n                    });\n                    audio.addEventListener('ended', ()=>{\n                        if (!isCleanedUp) {\n                            console.log(\"Audio playback completed\");\n                            cleanup();\n                        }\n                    });\n                    audio.addEventListener('error', (error)=>{\n                        // 只处理当前活跃音频的错误，忽略已经清理的音频错误\n                        if (currentAudioRef.current !== audio || isCleanedUp) {\n                            console.log('Ignoring error from stopped/cleaned audio');\n                            return;\n                        }\n                        console.error(\"Audio playback error:\", error);\n                        // Add more detailed error information\n                        const audioElement = error.target;\n                        console.error(\"Audio error code:\", audioElement.error?.code);\n                        console.error(\"Audio error message:\", audioElement.error?.message);\n                        console.error(\"Audio src:\", audioElement.src?.substring(0, 50) + '...');\n                        console.error(\"Audio readyState:\", audioElement.readyState);\n                        console.error(\"Audio networkState:\", audioElement.networkState);\n                        // Provide user-friendly error messages\n                        switch(audioElement.error?.code){\n                            case 1:\n                                console.error(\"Audio playback was aborted\");\n                                break;\n                            case 2:\n                                console.error(\"Network error occurred while loading audio\");\n                                break;\n                            case 3:\n                                console.error(\"Audio decoding error - invalid format\");\n                                break;\n                            case 4:\n                                console.error(\"Audio source not supported or empty\");\n                                break;\n                            default:\n                                console.error(\"Unknown audio error\");\n                        }\n                        cleanup();\n                    });\n                    // Set the source after adding event listeners\n                    // Double-check audioDataUrl before setting\n                    if (audioDataUrl && audioDataUrl.length > 'data:audio/wav;base64,'.length && audioDataUrl !== 'data:audio/wav;base64,' && !audioDataUrl.endsWith('base64,')) {\n                        console.log('Setting audio source, data URL length:', audioDataUrl.length);\n                        audio.src = audioDataUrl;\n                        audio.load();\n                    } else {\n                        console.error('Cannot set audio source: invalid or empty audioDataUrl:', audioDataUrl?.substring(0, 50) + '...');\n                        cleanup();\n                        return;\n                    }\n                } else {\n                    resolve();\n                }\n            } catch (error) {\n                console.error('Audio playback setup error:', error);\n                currentAudioRef.current = null;\n                currentModelRef.current = null;\n                resolve();\n            }\n        });\n    /**\n   * Add a new audio task to the queue\n   */ const addAudioTask = async (options)=>{\n        console.log(`Playing audio with expressions: ${options.expressions}`);\n        await handleAudioPlayback(options);\n    };\n    return {\n        addAudioTask,\n        stopCurrentAudioAndLipSync\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/hooks/use-audio-task.ts\n");

/***/ }),

/***/ "(ssr)/./src/hooks/use-draggable.ts":
/*!************************************!*\
  !*** ./src/hooks/use-draggable.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useDraggable: () => (/* binding */ useDraggable)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ useDraggable auto */ \nconst useDraggable = ({ initialPosition = {\n    x: 0,\n    y: 0\n}, onPositionChange, handleRef })=>{\n    const [isDragging, setIsDragging] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const positionRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(initialPosition);\n    const dragStartRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        x: 0,\n        y: 0\n    });\n    const handleMouseDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useDraggable.useCallback[handleMouseDown]\": (e)=>{\n            const target = e.target;\n            // Do not interfere with clicks on interactive elements like inputs or buttons\n            if (target.tagName === \"INPUT\" || target.tagName === \"TEXTAREA\" || target.tagName === \"BUTTON\" || target.isContentEditable) {\n                return;\n            }\n            setIsDragging(true);\n            dragStartRef.current = {\n                x: e.clientX - positionRef.current.x,\n                y: e.clientY - positionRef.current.y\n            };\n            // Prevent text selection while dragging\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }[\"useDraggable.useCallback[handleMouseDown]\"], []);\n    const handleMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useDraggable.useCallback[handleMouseMove]\": (e)=>{\n            if (!isDragging) return;\n            const newX = e.clientX - dragStartRef.current.x;\n            const newY = e.clientY - dragStartRef.current.y;\n            positionRef.current = {\n                x: newX,\n                y: newY\n            };\n            if (onPositionChange) {\n                onPositionChange({\n                    x: newX,\n                    y: newY\n                });\n            }\n        }\n    }[\"useDraggable.useCallback[handleMouseMove]\"], [\n        isDragging,\n        onPositionChange\n    ]);\n    const handleMouseUp = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useDraggable.useCallback[handleMouseUp]\": ()=>{\n            setIsDragging(false);\n        }\n    }[\"useDraggable.useCallback[handleMouseUp]\"], []);\n    return {\n        isDragging,\n        listeners: {\n            onMouseDown: handleMouseDown,\n            onMouseMove: handleMouseMove,\n            onMouseUp: handleMouseUp,\n            onMouseLeave: handleMouseUp\n        }\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvaG9va3MvdXNlLWRyYWdnYWJsZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7a0VBRWlFO0FBYTFELE1BQU1HLGVBQWUsQ0FBQyxFQUMzQkMsa0JBQWtCO0lBQUVDLEdBQUc7SUFBR0MsR0FBRztBQUFFLENBQUMsRUFDaENDLGdCQUFnQixFQUNoQkMsU0FBUyxFQUNTO0lBQ2xCLE1BQU0sQ0FBQ0MsWUFBWUMsY0FBYyxHQUFHViwrQ0FBUUEsQ0FBQztJQUM3QyxNQUFNVyxjQUFjVCw2Q0FBTUEsQ0FBV0U7SUFDckMsTUFBTVEsZUFBZVYsNkNBQU1BLENBQVc7UUFBRUcsR0FBRztRQUFHQyxHQUFHO0lBQUU7SUFFbkQsTUFBTU8sa0JBQWtCWixrREFBV0E7cURBQUMsQ0FBQ2E7WUFDbkMsTUFBTUMsU0FBU0QsRUFBRUMsTUFBTTtZQUV2Qiw4RUFBOEU7WUFDOUUsSUFDRUEsT0FBT0MsT0FBTyxLQUFLLFdBQ25CRCxPQUFPQyxPQUFPLEtBQUssY0FDbkJELE9BQU9DLE9BQU8sS0FBSyxZQUNuQkQsT0FBT0UsaUJBQWlCLEVBQ3hCO2dCQUNBO1lBQ0Y7WUFFQVAsY0FBYztZQUNkRSxhQUFhTSxPQUFPLEdBQUc7Z0JBQ3JCYixHQUFHUyxFQUFFSyxPQUFPLEdBQUdSLFlBQVlPLE9BQU8sQ0FBQ2IsQ0FBQztnQkFDcENDLEdBQUdRLEVBQUVNLE9BQU8sR0FBR1QsWUFBWU8sT0FBTyxDQUFDWixDQUFDO1lBQ3RDO1lBQ0Esd0NBQXdDO1lBQ3hDUSxFQUFFTyxjQUFjO1lBQ2hCUCxFQUFFUSxlQUFlO1FBQ25CO29EQUFHLEVBQUU7SUFHTCxNQUFNQyxrQkFBa0J0QixrREFBV0E7cURBQUMsQ0FBQ2E7WUFDbkMsSUFBSSxDQUFDTCxZQUFZO1lBRWpCLE1BQU1lLE9BQU9WLEVBQUVLLE9BQU8sR0FBR1AsYUFBYU0sT0FBTyxDQUFDYixDQUFDO1lBQy9DLE1BQU1vQixPQUFPWCxFQUFFTSxPQUFPLEdBQUdSLGFBQWFNLE9BQU8sQ0FBQ1osQ0FBQztZQUUvQ0ssWUFBWU8sT0FBTyxHQUFHO2dCQUFFYixHQUFHbUI7Z0JBQU1sQixHQUFHbUI7WUFBSztZQUV6QyxJQUFJbEIsa0JBQWtCO2dCQUNwQkEsaUJBQWlCO29CQUFFRixHQUFHbUI7b0JBQU1sQixHQUFHbUI7Z0JBQUs7WUFDdEM7UUFDRjtvREFBRztRQUFDaEI7UUFBWUY7S0FBaUI7SUFFakMsTUFBTW1CLGdCQUFnQnpCLGtEQUFXQTttREFBQztZQUNoQ1MsY0FBYztRQUNoQjtrREFBRyxFQUFFO0lBRUwsT0FBTztRQUNMRDtRQUNBa0IsV0FBVztZQUNUQyxhQUFhZjtZQUNiZ0IsYUFBYU47WUFDYk8sV0FBV0o7WUFDWEssY0FBY0w7UUFDaEI7SUFDRjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvc3JjL2hvb2tzL3VzZS1kcmFnZ2FibGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgUmVmT2JqZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgUG9zaXRpb24ge1xuICB4OiBudW1iZXI7XG4gIHk6IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIFVzZURyYWdnYWJsZVByb3BzIHtcbiAgaW5pdGlhbFBvc2l0aW9uPzogUG9zaXRpb247XG4gIG9uUG9zaXRpb25DaGFuZ2U/OiAocG9zaXRpb246IFBvc2l0aW9uKSA9PiB2b2lkO1xuICBoYW5kbGVSZWY/OiBSZWZPYmplY3Q8SFRNTEVsZW1lbnQ+O1xufVxuXG5leHBvcnQgY29uc3QgdXNlRHJhZ2dhYmxlID0gKHsgXG4gIGluaXRpYWxQb3NpdGlvbiA9IHsgeDogMCwgeTogMCB9LFxuICBvblBvc2l0aW9uQ2hhbmdlLFxuICBoYW5kbGVSZWZcbn06IFVzZURyYWdnYWJsZVByb3BzKSA9PiB7XG4gIGNvbnN0IFtpc0RyYWdnaW5nLCBzZXRJc0RyYWdnaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgcG9zaXRpb25SZWYgPSB1c2VSZWY8UG9zaXRpb24+KGluaXRpYWxQb3NpdGlvbik7XG4gIGNvbnN0IGRyYWdTdGFydFJlZiA9IHVzZVJlZjxQb3NpdGlvbj4oeyB4OiAwLCB5OiAwIH0pO1xuXG4gIGNvbnN0IGhhbmRsZU1vdXNlRG93biA9IHVzZUNhbGxiYWNrKChlOiBSZWFjdC5Nb3VzZUV2ZW50KSA9PiB7XG4gICAgY29uc3QgdGFyZ2V0ID0gZS50YXJnZXQgYXMgSFRNTEVsZW1lbnQ7XG5cbiAgICAvLyBEbyBub3QgaW50ZXJmZXJlIHdpdGggY2xpY2tzIG9uIGludGVyYWN0aXZlIGVsZW1lbnRzIGxpa2UgaW5wdXRzIG9yIGJ1dHRvbnNcbiAgICBpZiAoXG4gICAgICB0YXJnZXQudGFnTmFtZSA9PT0gXCJJTlBVVFwiIHx8XG4gICAgICB0YXJnZXQudGFnTmFtZSA9PT0gXCJURVhUQVJFQVwiIHx8XG4gICAgICB0YXJnZXQudGFnTmFtZSA9PT0gXCJCVVRUT05cIiB8fFxuICAgICAgdGFyZ2V0LmlzQ29udGVudEVkaXRhYmxlXG4gICAgKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc2V0SXNEcmFnZ2luZyh0cnVlKTtcbiAgICBkcmFnU3RhcnRSZWYuY3VycmVudCA9IHtcbiAgICAgIHg6IGUuY2xpZW50WCAtIHBvc2l0aW9uUmVmLmN1cnJlbnQueCxcbiAgICAgIHk6IGUuY2xpZW50WSAtIHBvc2l0aW9uUmVmLmN1cnJlbnQueSxcbiAgICB9O1xuICAgIC8vIFByZXZlbnQgdGV4dCBzZWxlY3Rpb24gd2hpbGUgZHJhZ2dpbmdcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfSwgW10pO1xuXG5cbiAgY29uc3QgaGFuZGxlTW91c2VNb3ZlID0gdXNlQ2FsbGJhY2soKGU6IFJlYWN0Lk1vdXNlRXZlbnQpID0+IHtcbiAgICBpZiAoIWlzRHJhZ2dpbmcpIHJldHVybjtcblxuICAgIGNvbnN0IG5ld1ggPSBlLmNsaWVudFggLSBkcmFnU3RhcnRSZWYuY3VycmVudC54O1xuICAgIGNvbnN0IG5ld1kgPSBlLmNsaWVudFkgLSBkcmFnU3RhcnRSZWYuY3VycmVudC55O1xuICAgIFxuICAgIHBvc2l0aW9uUmVmLmN1cnJlbnQgPSB7IHg6IG5ld1gsIHk6IG5ld1kgfTtcblxuICAgIGlmIChvblBvc2l0aW9uQ2hhbmdlKSB7XG4gICAgICBvblBvc2l0aW9uQ2hhbmdlKHsgeDogbmV3WCwgeTogbmV3WSB9KTtcbiAgICB9XG4gIH0sIFtpc0RyYWdnaW5nLCBvblBvc2l0aW9uQ2hhbmdlXSk7XG5cbiAgY29uc3QgaGFuZGxlTW91c2VVcCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzZXRJc0RyYWdnaW5nKGZhbHNlKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiB7XG4gICAgaXNEcmFnZ2luZyxcbiAgICBsaXN0ZW5lcnM6IHtcbiAgICAgIG9uTW91c2VEb3duOiBoYW5kbGVNb3VzZURvd24sXG4gICAgICBvbk1vdXNlTW92ZTogaGFuZGxlTW91c2VNb3ZlLFxuICAgICAgb25Nb3VzZVVwOiBoYW5kbGVNb3VzZVVwLFxuICAgICAgb25Nb3VzZUxlYXZlOiBoYW5kbGVNb3VzZVVwLCAvLyBBbHNvIHN0b3AgZHJhZ2dpbmcgaWYgbW91c2UgbGVhdmVzIHRoZSBlbGVtZW50XG4gICAgfSxcbiAgfTtcbn07ICJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUNhbGxiYWNrIiwidXNlUmVmIiwidXNlRHJhZ2dhYmxlIiwiaW5pdGlhbFBvc2l0aW9uIiwieCIsInkiLCJvblBvc2l0aW9uQ2hhbmdlIiwiaGFuZGxlUmVmIiwiaXNEcmFnZ2luZyIsInNldElzRHJhZ2dpbmciLCJwb3NpdGlvblJlZiIsImRyYWdTdGFydFJlZiIsImhhbmRsZU1vdXNlRG93biIsImUiLCJ0YXJnZXQiLCJ0YWdOYW1lIiwiaXNDb250ZW50RWRpdGFibGUiLCJjdXJyZW50IiwiY2xpZW50WCIsImNsaWVudFkiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImhhbmRsZU1vdXNlTW92ZSIsIm5ld1giLCJuZXdZIiwiaGFuZGxlTW91c2VVcCIsImxpc3RlbmVycyIsIm9uTW91c2VEb3duIiwib25Nb3VzZU1vdmUiLCJvbk1vdXNlVXAiLCJvbk1vdXNlTGVhdmUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/hooks/use-draggable.ts\n");

/***/ }),

/***/ "(ssr)/./src/hooks/use-live2d-expression.ts":
/*!********************************************!*\
  !*** ./src/hooks/use-live2d-expression.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLive2DExpression: () => (/* binding */ useLive2DExpression)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ useLive2DExpression auto */ \n/**\n * Custom hook for handling Live2D model expressions\n */ const useLive2DExpression = ()=>{\n    /**\n   * Set expression for Live2D model\n   * @param expressionValue - Expression name (string) or index (number)\n   * @param lappAdapter - LAppAdapter instance\n   * @param logMessage - Optional message to log on success\n   */ const setExpression = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DExpression.useCallback[setExpression]\": (expressionValue, lappAdapter, logMessage)=>{\n            try {\n                if (typeof expressionValue === 'string') {\n                    // Set expression by name\n                    lappAdapter.setExpression(expressionValue);\n                } else if (typeof expressionValue === 'number') {\n                    // Set expression by index\n                    const expressionName = lappAdapter.getExpressionName(expressionValue);\n                    if (expressionName) {\n                        lappAdapter.setExpression(expressionName);\n                    }\n                }\n                if (logMessage) {\n                    console.log(logMessage);\n                }\n            } catch (error) {\n                console.error('Failed to set expression:', error);\n            }\n        }\n    }[\"useLive2DExpression.useCallback[setExpression]\"], []);\n    /**\n   * Reset expression to default\n   * @param lappAdapter - LAppAdapter instance\n   * @param modelInfo - Current model information\n   */ const resetExpression = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DExpression.useCallback[resetExpression]\": (lappAdapter, modelInfo)=>{\n            if (!lappAdapter) return;\n            try {\n                // Check if model is loaded and has expressions\n                const model = lappAdapter.getModel();\n                if (!model || !model._modelSetting) {\n                    console.log('Model or model settings not loaded yet, skipping expression reset');\n                    return;\n                }\n                // If model has a default emotion defined, use it\n                if (modelInfo?.defaultEmotion !== undefined) {\n                    setExpression(modelInfo.defaultEmotion, lappAdapter, `Reset expression to default: ${modelInfo.defaultEmotion}`);\n                } else {\n                    // Check if model has any expressions before trying to get the first one\n                    const expressionCount = lappAdapter.getExpressionCount();\n                    if (expressionCount > 0) {\n                        const defaultExpressionName = lappAdapter.getExpressionName(0);\n                        if (defaultExpressionName) {\n                            setExpression(defaultExpressionName, lappAdapter);\n                        }\n                    }\n                }\n            } catch (error) {\n                console.log('Failed to reset expression:', error);\n            }\n        }\n    }[\"useLive2DExpression.useCallback[resetExpression]\"], [\n        setExpression\n    ]);\n    return {\n        setExpression,\n        resetExpression\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvaG9va3MvdXNlLWxpdmUyZC1leHByZXNzaW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozt5RUFFb0M7QUFHcEM7O0NBRUMsR0FDTSxNQUFNQyxzQkFBc0I7SUFDakM7Ozs7O0dBS0MsR0FDRCxNQUFNQyxnQkFBZ0JGLGtEQUFXQTswREFBQyxDQUNoQ0csaUJBQ0FDLGFBQ0FDO1lBRUEsSUFBSTtnQkFDRixJQUFJLE9BQU9GLG9CQUFvQixVQUFVO29CQUN2Qyx5QkFBeUI7b0JBQ3pCQyxZQUFZRixhQUFhLENBQUNDO2dCQUM1QixPQUFPLElBQUksT0FBT0Esb0JBQW9CLFVBQVU7b0JBQzlDLDBCQUEwQjtvQkFDMUIsTUFBTUcsaUJBQWlCRixZQUFZRyxpQkFBaUIsQ0FBQ0o7b0JBQ3JELElBQUlHLGdCQUFnQjt3QkFDbEJGLFlBQVlGLGFBQWEsQ0FBQ0k7b0JBQzVCO2dCQUNGO2dCQUNBLElBQUlELFlBQVk7b0JBQ2RHLFFBQVFDLEdBQUcsQ0FBQ0o7Z0JBQ2Q7WUFDRixFQUFFLE9BQU9LLE9BQU87Z0JBQ2RGLFFBQVFFLEtBQUssQ0FBQyw2QkFBNkJBO1lBQzdDO1FBQ0Y7eURBQUcsRUFBRTtJQUVMOzs7O0dBSUMsR0FDRCxNQUFNQyxrQkFBa0JYLGtEQUFXQTs0REFBQyxDQUNsQ0ksYUFDQVE7WUFFQSxJQUFJLENBQUNSLGFBQWE7WUFFbEIsSUFBSTtnQkFDRiwrQ0FBK0M7Z0JBQy9DLE1BQU1TLFFBQVFULFlBQVlVLFFBQVE7Z0JBQ2xDLElBQUksQ0FBQ0QsU0FBUyxDQUFDQSxNQUFNRSxhQUFhLEVBQUU7b0JBQ2xDUCxRQUFRQyxHQUFHLENBQUM7b0JBQ1o7Z0JBQ0Y7Z0JBRUEsaURBQWlEO2dCQUNqRCxJQUFJRyxXQUFXSSxtQkFBbUJDLFdBQVc7b0JBQzNDZixjQUNFVSxVQUFVSSxjQUFjLEVBQ3hCWixhQUNBLENBQUMsNkJBQTZCLEVBQUVRLFVBQVVJLGNBQWMsRUFBRTtnQkFFOUQsT0FBTztvQkFDTCx3RUFBd0U7b0JBQ3hFLE1BQU1FLGtCQUFrQmQsWUFBWWUsa0JBQWtCO29CQUN0RCxJQUFJRCxrQkFBa0IsR0FBRzt3QkFDdkIsTUFBTUUsd0JBQXdCaEIsWUFBWUcsaUJBQWlCLENBQUM7d0JBQzVELElBQUlhLHVCQUF1Qjs0QkFDekJsQixjQUNFa0IsdUJBQ0FoQjt3QkFFSjtvQkFDRjtnQkFDRjtZQUNGLEVBQUUsT0FBT00sT0FBTztnQkFDZEYsUUFBUUMsR0FBRyxDQUFDLCtCQUErQkM7WUFDN0M7UUFDRjsyREFBRztRQUFDUjtLQUFjO0lBRWxCLE9BQU87UUFDTEE7UUFDQVM7SUFDRjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9FdGhhbkxlZS9EZXNrdG9wL0FkdlgvQUktV2F0Y2gtQnVkZHkvZnJvbnRlbmQvc3JjL2hvb2tzL3VzZS1saXZlMmQtZXhwcmVzc2lvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTW9kZWxJbmZvIH0gZnJvbSAnQC9jb250ZXh0L2xpdmUyZC1jb25maWctY29udGV4dCc7XG5cbi8qKlxuICogQ3VzdG9tIGhvb2sgZm9yIGhhbmRsaW5nIExpdmUyRCBtb2RlbCBleHByZXNzaW9uc1xuICovXG5leHBvcnQgY29uc3QgdXNlTGl2ZTJERXhwcmVzc2lvbiA9ICgpID0+IHtcbiAgLyoqXG4gICAqIFNldCBleHByZXNzaW9uIGZvciBMaXZlMkQgbW9kZWxcbiAgICogQHBhcmFtIGV4cHJlc3Npb25WYWx1ZSAtIEV4cHJlc3Npb24gbmFtZSAoc3RyaW5nKSBvciBpbmRleCAobnVtYmVyKVxuICAgKiBAcGFyYW0gbGFwcEFkYXB0ZXIgLSBMQXBwQWRhcHRlciBpbnN0YW5jZVxuICAgKiBAcGFyYW0gbG9nTWVzc2FnZSAtIE9wdGlvbmFsIG1lc3NhZ2UgdG8gbG9nIG9uIHN1Y2Nlc3NcbiAgICovXG4gIGNvbnN0IHNldEV4cHJlc3Npb24gPSB1c2VDYWxsYmFjaygoXG4gICAgZXhwcmVzc2lvblZhbHVlOiBzdHJpbmcgfCBudW1iZXIsXG4gICAgbGFwcEFkYXB0ZXI6IGFueSxcbiAgICBsb2dNZXNzYWdlPzogc3RyaW5nLFxuICApID0+IHtcbiAgICB0cnkge1xuICAgICAgaWYgKHR5cGVvZiBleHByZXNzaW9uVmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIC8vIFNldCBleHByZXNzaW9uIGJ5IG5hbWVcbiAgICAgICAgbGFwcEFkYXB0ZXIuc2V0RXhwcmVzc2lvbihleHByZXNzaW9uVmFsdWUpO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwcmVzc2lvblZhbHVlID09PSAnbnVtYmVyJykge1xuICAgICAgICAvLyBTZXQgZXhwcmVzc2lvbiBieSBpbmRleFxuICAgICAgICBjb25zdCBleHByZXNzaW9uTmFtZSA9IGxhcHBBZGFwdGVyLmdldEV4cHJlc3Npb25OYW1lKGV4cHJlc3Npb25WYWx1ZSk7XG4gICAgICAgIGlmIChleHByZXNzaW9uTmFtZSkge1xuICAgICAgICAgIGxhcHBBZGFwdGVyLnNldEV4cHJlc3Npb24oZXhwcmVzc2lvbk5hbWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobG9nTWVzc2FnZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhsb2dNZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHNldCBleHByZXNzaW9uOicsIGVycm9yKTtcbiAgICB9XG4gIH0sIFtdKTtcblxuICAvKipcbiAgICogUmVzZXQgZXhwcmVzc2lvbiB0byBkZWZhdWx0XG4gICAqIEBwYXJhbSBsYXBwQWRhcHRlciAtIExBcHBBZGFwdGVyIGluc3RhbmNlXG4gICAqIEBwYXJhbSBtb2RlbEluZm8gLSBDdXJyZW50IG1vZGVsIGluZm9ybWF0aW9uXG4gICAqL1xuICBjb25zdCByZXNldEV4cHJlc3Npb24gPSB1c2VDYWxsYmFjaygoXG4gICAgbGFwcEFkYXB0ZXI6IGFueSxcbiAgICBtb2RlbEluZm8/OiBNb2RlbEluZm8sXG4gICkgPT4ge1xuICAgIGlmICghbGFwcEFkYXB0ZXIpIHJldHVybjtcblxuICAgIHRyeSB7XG4gICAgICAvLyBDaGVjayBpZiBtb2RlbCBpcyBsb2FkZWQgYW5kIGhhcyBleHByZXNzaW9uc1xuICAgICAgY29uc3QgbW9kZWwgPSBsYXBwQWRhcHRlci5nZXRNb2RlbCgpO1xuICAgICAgaWYgKCFtb2RlbCB8fCAhbW9kZWwuX21vZGVsU2V0dGluZykge1xuICAgICAgICBjb25zb2xlLmxvZygnTW9kZWwgb3IgbW9kZWwgc2V0dGluZ3Mgbm90IGxvYWRlZCB5ZXQsIHNraXBwaW5nIGV4cHJlc3Npb24gcmVzZXQnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBJZiBtb2RlbCBoYXMgYSBkZWZhdWx0IGVtb3Rpb24gZGVmaW5lZCwgdXNlIGl0XG4gICAgICBpZiAobW9kZWxJbmZvPy5kZWZhdWx0RW1vdGlvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHNldEV4cHJlc3Npb24oXG4gICAgICAgICAgbW9kZWxJbmZvLmRlZmF1bHRFbW90aW9uLFxuICAgICAgICAgIGxhcHBBZGFwdGVyLFxuICAgICAgICAgIGBSZXNldCBleHByZXNzaW9uIHRvIGRlZmF1bHQ6ICR7bW9kZWxJbmZvLmRlZmF1bHRFbW90aW9ufWAsXG4gICAgICAgICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBDaGVjayBpZiBtb2RlbCBoYXMgYW55IGV4cHJlc3Npb25zIGJlZm9yZSB0cnlpbmcgdG8gZ2V0IHRoZSBmaXJzdCBvbmVcbiAgICAgICAgY29uc3QgZXhwcmVzc2lvbkNvdW50ID0gbGFwcEFkYXB0ZXIuZ2V0RXhwcmVzc2lvbkNvdW50KCk7XG4gICAgICAgIGlmIChleHByZXNzaW9uQ291bnQgPiAwKSB7XG4gICAgICAgICAgY29uc3QgZGVmYXVsdEV4cHJlc3Npb25OYW1lID0gbGFwcEFkYXB0ZXIuZ2V0RXhwcmVzc2lvbk5hbWUoMCk7XG4gICAgICAgICAgaWYgKGRlZmF1bHRFeHByZXNzaW9uTmFtZSkge1xuICAgICAgICAgICAgc2V0RXhwcmVzc2lvbihcbiAgICAgICAgICAgICAgZGVmYXVsdEV4cHJlc3Npb25OYW1lLFxuICAgICAgICAgICAgICBsYXBwQWRhcHRlcixcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdGYWlsZWQgdG8gcmVzZXQgZXhwcmVzc2lvbjonLCBlcnJvcik7XG4gICAgfVxuICB9LCBbc2V0RXhwcmVzc2lvbl0pO1xuXG4gIHJldHVybiB7XG4gICAgc2V0RXhwcmVzc2lvbixcbiAgICByZXNldEV4cHJlc3Npb24sXG4gIH07XG59O1xuIl0sIm5hbWVzIjpbInVzZUNhbGxiYWNrIiwidXNlTGl2ZTJERXhwcmVzc2lvbiIsInNldEV4cHJlc3Npb24iLCJleHByZXNzaW9uVmFsdWUiLCJsYXBwQWRhcHRlciIsImxvZ01lc3NhZ2UiLCJleHByZXNzaW9uTmFtZSIsImdldEV4cHJlc3Npb25OYW1lIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwicmVzZXRFeHByZXNzaW9uIiwibW9kZWxJbmZvIiwibW9kZWwiLCJnZXRNb2RlbCIsIl9tb2RlbFNldHRpbmciLCJkZWZhdWx0RW1vdGlvbiIsInVuZGVmaW5lZCIsImV4cHJlc3Npb25Db3VudCIsImdldEV4cHJlc3Npb25Db3VudCIsImRlZmF1bHRFeHByZXNzaW9uTmFtZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/hooks/use-live2d-expression.ts\n");

/***/ }),

/***/ "(ssr)/./src/hooks/use-live2d-model.ts":
/*!***************************************!*\
  !*** ./src/hooks/use-live2d-model.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLive2DModel: () => (/* binding */ useLive2DModel)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _cubismsdksamples_lappdefine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cubismsdksamples/lappdefine */ \"(ssr)/./WebSDK/src/lappdefine.ts\");\n/* harmony import */ var _cubismsdksamples_main__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @cubismsdksamples/main */ \"(ssr)/./WebSDK/src/main.ts\");\n/* __next_internal_client_entry_do_not_use__ useLive2DModel auto */ /* eslint-disable no-underscore-dangle */ /* eslint-disable @typescript-eslint/ban-ts-comment */ /* eslint-disable no-use-before-define */ /* eslint-disable no-param-reassign */ /* eslint-disable @typescript-eslint/no-unused-vars */ // @ts-nocheck\n\n\n\n// Thresholds for tap vs drag detection\nconst TAP_DURATION_THRESHOLD_MS = 200; // Max duration for a tap\nconst DRAG_DISTANCE_THRESHOLD_PX = 5; // Min distance to be considered a drag\nfunction parseModelUrl(url) {\n    try {\n        const urlObj = new URL(url);\n        const { pathname } = urlObj;\n        const lastSlashIndex = pathname.lastIndexOf('/');\n        if (lastSlashIndex === -1) {\n            throw new Error('Invalid model URL format');\n        }\n        const fullFileName = pathname.substring(lastSlashIndex + 1);\n        const modelFileName = fullFileName.replace('.model3.json', '');\n        const secondLastSlashIndex = pathname.lastIndexOf('/', lastSlashIndex - 1);\n        if (secondLastSlashIndex === -1) {\n            throw new Error('Invalid model URL format');\n        }\n        const modelDir = pathname.substring(secondLastSlashIndex + 1, lastSlashIndex);\n        const baseUrl = `${urlObj.protocol}//${urlObj.host}${pathname.substring(0, secondLastSlashIndex + 1)}`;\n        return {\n            baseUrl,\n            modelDir,\n            modelFileName\n        };\n    } catch (error) {\n        console.error('Error parsing model URL:', error);\n        throw error;\n    }\n}\nconst useLive2DModel = ({ modelInfo, canvasRef })=>{\n    const [isDragging, setIsDragging] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [position, setPosition] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        x: 0,\n        y: 0\n    });\n    const dragStartPos = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        x: 0,\n        y: 0\n    }); // Screen coordinates at drag start\n    const modelStartPos = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        x: 0,\n        y: 0\n    }); // Model coordinates at drag start\n    const modelPositionRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        x: 0,\n        y: 0\n    });\n    const prevModelUrlRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    // --- State for Tap vs Drag ---\n    const mouseDownTimeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    const mouseDownPosRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        x: 0,\n        y: 0\n    }); // Screen coords at mousedown\n    const isPotentialTapRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false); // Flag for ongoing potential tap/drag action\n    // ---\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useLive2DModel.useEffect\": ()=>{\n            const currentUrl = modelInfo?.url;\n            const sdkScale = window.LAppDefine?.CurrentKScale;\n            const modelScale = modelInfo?.kScale !== undefined ? Number(modelInfo.kScale) : undefined;\n            const needsUpdate = currentUrl && (currentUrl !== prevModelUrlRef.current || sdkScale !== undefined && modelScale !== undefined && sdkScale !== modelScale);\n            if (needsUpdate) {\n                prevModelUrlRef.current = currentUrl;\n                try {\n                    const { baseUrl, modelDir, modelFileName } = parseModelUrl(currentUrl);\n                    if (baseUrl && modelDir) {\n                        (0,_cubismsdksamples_lappdefine__WEBPACK_IMPORTED_MODULE_1__.updateModelConfig)(baseUrl, modelDir, modelFileName, Number(modelInfo.kScale));\n                        if (window.LAppLive2DManager?.releaseInstance) {\n                            window.LAppLive2DManager.releaseInstance();\n                        }\n                        (0,_cubismsdksamples_main__WEBPACK_IMPORTED_MODULE_2__.initializeLive2D)();\n                    }\n                } catch (error) {\n                    console.error('Error processing model URL:', error);\n                }\n            }\n        }\n    }[\"useLive2DModel.useEffect\"], [\n        modelInfo?.url,\n        modelInfo?.kScale\n    ]);\n    const getModelPosition = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DModel.useCallback[getModelPosition]\": ()=>{\n            const adapter = window.getLAppAdapter?.();\n            if (adapter) {\n                const model = adapter.getModel();\n                if (model && model._modelMatrix) {\n                    const matrix = model._modelMatrix.getArray();\n                    return {\n                        x: matrix[12],\n                        y: matrix[13]\n                    };\n                }\n            }\n            return {\n                x: 0,\n                y: 0\n            };\n        }\n    }[\"useLive2DModel.useCallback[getModelPosition]\"], []);\n    const setModelPosition = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DModel.useCallback[setModelPosition]\": (x, y)=>{\n            const adapter = window.getLAppAdapter?.();\n            if (adapter) {\n                const model = adapter.getModel();\n                if (model && model._modelMatrix) {\n                    const matrix = model._modelMatrix.getArray();\n                    const newMatrix = [\n                        ...matrix\n                    ];\n                    newMatrix[12] = x;\n                    newMatrix[13] = y;\n                    model._modelMatrix.setMatrix(newMatrix);\n                    modelPositionRef.current = {\n                        x,\n                        y\n                    };\n                }\n            }\n        }\n    }[\"useLive2DModel.useCallback[setModelPosition]\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useLive2DModel.useEffect\": ()=>{\n            const timer = setTimeout({\n                \"useLive2DModel.useEffect.timer\": ()=>{\n                    const currentPos = getModelPosition();\n                    modelPositionRef.current = currentPos;\n                    setPosition(currentPos);\n                }\n            }[\"useLive2DModel.useEffect.timer\"], 500);\n            return ({\n                \"useLive2DModel.useEffect\": ()=>clearTimeout(timer)\n            })[\"useLive2DModel.useEffect\"];\n        }\n    }[\"useLive2DModel.useEffect\"], [\n        modelInfo?.url,\n        getModelPosition\n    ]);\n    const getCanvasScale = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DModel.useCallback[getCanvasScale]\": ()=>{\n            const canvas = document.getElementById('canvas');\n            if (!canvas) return {\n                width: 1,\n                height: 1,\n                scale: 1\n            };\n            const { width } = canvas;\n            const { height } = canvas;\n            const scale = width / canvas.clientWidth;\n            return {\n                width,\n                height,\n                scale\n            };\n        }\n    }[\"useLive2DModel.useCallback[getCanvasScale]\"], []);\n    const screenToModelPosition = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DModel.useCallback[screenToModelPosition]\": (screenX, screenY)=>{\n            const { width, height, scale } = getCanvasScale();\n            const x = screenX * scale / width * 2 - 1;\n            const y = -(screenY * scale / height) * 2 + 1;\n            return {\n                x,\n                y\n            };\n        }\n    }[\"useLive2DModel.useCallback[screenToModelPosition]\"], [\n        getCanvasScale\n    ]);\n    const handleMouseDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DModel.useCallback[handleMouseDown]\": (e)=>{\n        // Drag functionality is now handled by useDraggable on the parent component.\n        // This is kept to avoid breaking dependencies but the logic is removed.\n        }\n    }[\"useLive2DModel.useCallback[handleMouseDown]\"], []);\n    const handleMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DModel.useCallback[handleMouseMove]\": (e)=>{\n        // Drag functionality is now handled by useDraggable on the parent component.\n        }\n    }[\"useLive2DModel.useCallback[handleMouseMove]\"], []);\n    const handleMouseUp = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DModel.useCallback[handleMouseUp]\": (e)=>{\n            // Drag functionality is now handled by useDraggable on the parent component.\n            if (isDragging) {\n                setIsDragging(false);\n            }\n            if (isPotentialTapRef.current) {\n                isPotentialTapRef.current = false;\n            }\n        }\n    }[\"useLive2DModel.useCallback[handleMouseUp]\"], [\n        isDragging\n    ]);\n    const handleMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DModel.useCallback[handleMouseLeave]\": (e)=>{\n            // Stop any ongoing drag when mouse leaves the component\n            if (isDragging) {\n                console.log('[Drag] Mouse leave - stopping drag');\n                setIsDragging(false);\n            }\n            if (isPotentialTapRef.current) {\n                isPotentialTapRef.current = false;\n            }\n        }\n    }[\"useLive2DModel.useCallback[handleMouseLeave]\"], [\n        isDragging\n    ]);\n    return {\n        position,\n        isDragging,\n        handlers: {\n            onMouseDown: handleMouseDown,\n            onMouseMove: handleMouseMove,\n            onMouseUp: handleMouseUp,\n            onMouseLeave: handleMouseLeave\n        }\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/hooks/use-live2d-model.ts\n");

/***/ }),

/***/ "(ssr)/./src/hooks/use-live2d-resize.ts":
/*!****************************************!*\
  !*** ./src/hooks/use-live2d-resize.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyScale: () => (/* binding */ applyScale),\n/* harmony export */   resetModelPosition: () => (/* binding */ resetModelPosition),\n/* harmony export */   setModelScale: () => (/* binding */ setModelScale),\n/* harmony export */   useLive2DResize: () => (/* binding */ useLive2DResize)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _cubismsdksamples_lappdelegate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cubismsdksamples/lappdelegate */ \"(ssr)/./WebSDK/src/lappdelegate.ts\");\n/* harmony import */ var _cubismsdksamples_lapplive2dmanager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @cubismsdksamples/lapplive2dmanager */ \"(ssr)/./WebSDK/src/lapplive2dmanager.ts\");\n/* __next_internal_client_entry_do_not_use__ applyScale,useLive2DResize,setModelScale,resetModelPosition auto */ /* eslint-disable no-use-before-define */ /* eslint-disable @typescript-eslint/ban-ts-comment */ /* eslint-disable no-underscore-dangle */ \n\n\n// Constants for model scaling behavior\nconst MIN_SCALE = 0.1;\nconst MAX_SCALE = 5.0;\nconst EASING_FACTOR = 0.3; // Controls animation smoothness\nconst WHEEL_SCALE_STEP = 0.03; // Scale change per wheel tick\nconst DEFAULT_SCALE = 1.0; // Default scale if not specified\n/**\n * Applies scale to both model and view matrices\n * @param scale - The scale value to apply\n */ const applyScale = (scale)=>{\n    try {\n        const manager = _cubismsdksamples_lapplive2dmanager__WEBPACK_IMPORTED_MODULE_2__.LAppLive2DManager.getInstance();\n        if (!manager) return;\n        const model = manager.getModel(0);\n        if (!model) return;\n        // @ts-ignore\n        model._modelMatrix.scale(scale, scale);\n    } catch (error) {\n        console.debug('Model not ready for scaling yet');\n    }\n};\n/**\n * Hook to handle Live2D model resizing and scaling\n * Provides smooth scaling animation and window resize handling\n */ const useLive2DResize = ({ containerRef, modelInfo, showSidebar })=>{\n    const animationFrameIdRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const isResizingRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    // Initialize scale references\n    const initialScale = modelInfo?.kScale || DEFAULT_SCALE;\n    const lastScaleRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(initialScale);\n    const targetScaleRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(initialScale);\n    const animationFrameRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const isAnimatingRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const hasAppliedInitialScale = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    // Previous container dimensions for change detection\n    const lastContainerDimensionsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        width: 0,\n        height: 0\n    });\n    // Previous sidebar state\n    const prevSidebarStateRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(showSidebar);\n    /**\n   * Reset scale state when model changes\n   */ (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useLive2DResize.useEffect\": ()=>{\n            const newInitialScale = modelInfo?.kScale || DEFAULT_SCALE;\n            lastScaleRef.current = newInitialScale;\n            targetScaleRef.current = newInitialScale;\n            hasAppliedInitialScale.current = false;\n            if (animationFrameRef.current) {\n                cancelAnimationFrame(animationFrameRef.current);\n                isAnimatingRef.current = false;\n            }\n            const resizeHandle = requestAnimationFrame({\n                \"useLive2DResize.useEffect.resizeHandle\": ()=>{\n                    handleResize();\n                }\n            }[\"useLive2DResize.useEffect.resizeHandle\"]);\n            return ({\n                \"useLive2DResize.useEffect\": ()=>cancelAnimationFrame(resizeHandle)\n            })[\"useLive2DResize.useEffect\"];\n        }\n    }[\"useLive2DResize.useEffect\"], [\n        modelInfo?.url,\n        modelInfo?.kScale\n    ]);\n    /**\n   * Smooth animation loop for scaling\n   * Uses linear interpolation for smooth transitions\n   */ const animateEase = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DResize.useCallback[animateEase]\": ()=>{\n            const clampedTargetScale = Math.max(MIN_SCALE, Math.min(MAX_SCALE, targetScaleRef.current));\n            const currentScale = lastScaleRef.current;\n            const diff = clampedTargetScale - currentScale;\n            const newScale = currentScale + diff * EASING_FACTOR;\n            applyScale(newScale);\n            lastScaleRef.current = newScale;\n            animationFrameRef.current = requestAnimationFrame(animateEase);\n        }\n    }[\"useLive2DResize.useCallback[animateEase]\"], []);\n    /**\n   * Handles mouse wheel events for scaling\n   * Initiates smooth scaling animation\n   */ const handleWheel = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DResize.useCallback[handleWheel]\": (e)=>{\n            e.preventDefault();\n            if (!modelInfo?.scrollToResize) return;\n            const direction = e.deltaY > 0 ? -1 : 1;\n            const increment = WHEEL_SCALE_STEP * direction;\n            const currentActualScale = lastScaleRef.current;\n            const newTargetScale = Math.max(MIN_SCALE, Math.min(MAX_SCALE, currentActualScale + increment));\n            targetScaleRef.current = newTargetScale;\n            if (!isAnimatingRef.current) {\n                isAnimatingRef.current = true;\n                animationFrameRef.current = requestAnimationFrame(animateEase);\n            }\n        }\n    }[\"useLive2DResize.useCallback[handleWheel]\"], [\n        modelInfo?.scrollToResize,\n        animateEase\n    ]);\n    /**\n   * Pre-process container resize\n   * Preserve aspect ratio temporarily before actual change\n   */ const beforeResize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DResize.useCallback[beforeResize]\": ()=>{\n            const canvas = canvasRef.current;\n            if (!canvas) return;\n            isResizingRef.current = true;\n            if (animationFrameIdRef.current !== null) {\n                cancelAnimationFrame(animationFrameIdRef.current);\n                animationFrameIdRef.current = null;\n            }\n        }\n    }[\"useLive2DResize.useCallback[beforeResize]\"], []);\n    /**\n   * Handles window/container resize events\n   * Updates canvas dimensions and model scaling\n   */ const handleResize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLive2DResize.useCallback[handleResize]\": ()=>{\n            const canvas = canvasRef.current;\n            if (!canvas) {\n                return;\n            }\n            if (!isResizingRef.current) {\n                beforeResize();\n            }\n            try {\n                const containerBounds = containerRef.current?.getBoundingClientRect();\n                let { width, height } = containerBounds || {\n                    width: 0,\n                    height: 0\n                };\n                // For the new layout, adjust dimensions to fit the right side container better\n                if (width > 0 && height > 0) {\n                    // Scale down to fit better in the companion area\n                    const scaleFactor = 0.85; // Leave some padding\n                    width = width * scaleFactor;\n                    height = height * scaleFactor;\n                }\n                const lastDimensions = lastContainerDimensionsRef.current;\n                const sidebarChanged = prevSidebarStateRef.current !== showSidebar;\n                const dimensionsChanged = Math.abs(lastDimensions.width - width) > 1 || Math.abs(lastDimensions.height - height) > 1;\n                const hasChanged = dimensionsChanged || sidebarChanged;\n                if (!hasChanged && hasAppliedInitialScale.current) {\n                    isResizingRef.current = false;\n                    return;\n                }\n                lastContainerDimensionsRef.current = {\n                    width,\n                    height\n                };\n                prevSidebarStateRef.current = showSidebar;\n                if (width === 0 || height === 0) {\n                    console.warn('[Resize] Width or Height is zero, skipping canvas/delegate update.');\n                    isResizingRef.current = false;\n                    return;\n                }\n                const dpr = window.devicePixelRatio || 1;\n                canvas.width = Math.round(width * dpr);\n                canvas.height = Math.round(height * dpr);\n                canvas.style.width = `${width}px`;\n                canvas.style.height = `${height}px`;\n                const delegate = _cubismsdksamples_lappdelegate__WEBPACK_IMPORTED_MODULE_1__.LAppDelegate.getInstance();\n                if (delegate) {\n                    delegate.onResize();\n                } else {\n                    console.warn('[Resize] LAppDelegate instance not found.');\n                }\n                isResizingRef.current = false;\n            } catch (error) {\n                isResizingRef.current = false;\n            }\n        }\n    }[\"useLive2DResize.useCallback[handleResize]\"], [\n        containerRef,\n        modelInfo?.kScale,\n        modelInfo?.initialXshift,\n        modelInfo?.initialYshift,\n        showSidebar,\n        beforeResize,\n        canvasRef\n    ]);\n    // Immediately respond to sidebar state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useLive2DResize.useEffect\": ()=>{\n            if (prevSidebarStateRef.current !== showSidebar) {\n                if (animationFrameIdRef.current !== null) {\n                    cancelAnimationFrame(animationFrameIdRef.current);\n                }\n                animationFrameIdRef.current = requestAnimationFrame({\n                    \"useLive2DResize.useEffect\": ()=>{\n                        handleResize();\n                        animationFrameIdRef.current = null;\n                    }\n                }[\"useLive2DResize.useEffect\"]);\n            }\n        }\n    }[\"useLive2DResize.useEffect\"], [\n        showSidebar,\n        handleResize\n    ]);\n    // Set up event listeners and cleanup for wheel scaling\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useLive2DResize.useEffect\": ()=>{\n            const canvasElement = canvasRef.current;\n            if (canvasElement) {\n                canvasElement.addEventListener('wheel', handleWheel, {\n                    passive: false\n                });\n                return ({\n                    \"useLive2DResize.useEffect\": ()=>{\n                        canvasElement.removeEventListener('wheel', handleWheel);\n                    }\n                })[\"useLive2DResize.useEffect\"];\n            }\n            return undefined;\n        }\n    }[\"useLive2DResize.useEffect\"], [\n        handleWheel,\n        canvasRef\n    ]);\n    // Clean up animations on unmount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useLive2DResize.useEffect\": ()=>({\n                \"useLive2DResize.useEffect\": ()=>{\n                    if (animationFrameRef.current) {\n                        cancelAnimationFrame(animationFrameRef.current);\n                        animationFrameRef.current = undefined;\n                    }\n                    if (animationFrameIdRef.current !== null) {\n                        cancelAnimationFrame(animationFrameIdRef.current);\n                        animationFrameIdRef.current = null;\n                    }\n                }\n            })[\"useLive2DResize.useEffect\"]\n    }[\"useLive2DResize.useEffect\"], []);\n    // Monitor container size changes using ResizeObserver\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useLive2DResize.useEffect\": ()=>{\n            const containerElement = containerRef.current;\n            if (!containerElement) {\n                return undefined;\n            }\n            if (animationFrameIdRef.current !== null) cancelAnimationFrame(animationFrameIdRef.current);\n            animationFrameIdRef.current = requestAnimationFrame({\n                \"useLive2DResize.useEffect\": ()=>{\n                    handleResize();\n                    animationFrameIdRef.current = null;\n                }\n            }[\"useLive2DResize.useEffect\"]);\n            const observer = new ResizeObserver({\n                \"useLive2DResize.useEffect\": ()=>{\n                    if (!isResizingRef.current) {\n                        if (animationFrameIdRef.current !== null) cancelAnimationFrame(animationFrameIdRef.current);\n                        animationFrameIdRef.current = requestAnimationFrame({\n                            \"useLive2DResize.useEffect\": ()=>{\n                                handleResize();\n                                animationFrameIdRef.current = null;\n                            }\n                        }[\"useLive2DResize.useEffect\"]);\n                    }\n                }\n            }[\"useLive2DResize.useEffect\"]);\n            observer.observe(containerElement);\n            return ({\n                \"useLive2DResize.useEffect\": ()=>{\n                    if (animationFrameIdRef.current !== null) {\n                        cancelAnimationFrame(animationFrameIdRef.current);\n                        animationFrameIdRef.current = null;\n                    }\n                    observer.disconnect();\n                }\n            })[\"useLive2DResize.useEffect\"];\n        }\n    }[\"useLive2DResize.useEffect\"], [\n        containerRef,\n        handleResize\n    ]);\n    // Monitor window size changes (mainly for 'pet' mode or fallback)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useLive2DResize.useEffect\": ()=>{\n            const handleWindowResize = {\n                \"useLive2DResize.useEffect.handleWindowResize\": ()=>{\n                    if (!isResizingRef.current) {\n                        if (animationFrameIdRef.current !== null) cancelAnimationFrame(animationFrameIdRef.current);\n                        animationFrameIdRef.current = requestAnimationFrame({\n                            \"useLive2DResize.useEffect.handleWindowResize\": ()=>{\n                                handleResize();\n                                animationFrameIdRef.current = null;\n                            }\n                        }[\"useLive2DResize.useEffect.handleWindowResize\"]);\n                    }\n                }\n            }[\"useLive2DResize.useEffect.handleWindowResize\"];\n            window.addEventListener('resize', handleWindowResize);\n            return ({\n                \"useLive2DResize.useEffect\": ()=>{\n                    window.removeEventListener('resize', handleWindowResize);\n                    if (animationFrameIdRef.current !== null) {\n                        cancelAnimationFrame(animationFrameIdRef.current);\n                        animationFrameIdRef.current = null;\n                    }\n                }\n            })[\"useLive2DResize.useEffect\"];\n        }\n    }[\"useLive2DResize.useEffect\"], [\n        handleResize\n    ]);\n    return {\n        canvasRef,\n        handleResize\n    };\n};\n/**\n * Helper function to set model scale with device pixel ratio consideration\n * @deprecated This logic might be better handled within the view matrix scaling\n */ const setModelScale = (model, kScale)=>{\n    if (!model || kScale === undefined) return;\n    console.warn(\"setModelScale is potentially deprecated; scaling is primarily handled by view matrix now.\");\n};\n/**\n * Helper function to center model in container with optional offset\n * This is now primarily handled within handleResize\n */ const resetModelPosition = (model, width, height, initialXshift, initialYshift)=>{\n    if (!model || typeof model.setPosition !== 'function') return;\n    const dpr = window.devicePixelRatio || 1;\n    const canvasWidth = width * dpr; // Calculate canvas pixel dimensions\n    const canvasHeight = height * dpr;\n    const initXshiftPixels = Number(initialXshift || 0) * dpr; // Convert shift to canvas pixels\n    const initYshiftPixels = Number(initialYshift || 0) * dpr;\n    const centerX = canvasWidth / 2 + initXshiftPixels;\n    const centerY = canvasHeight / 2 + initYshiftPixels;\n    // @ts-ignore\n    model.setPosition(centerX, centerY);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/hooks/use-live2d-resize.ts\n");

/***/ }),

/***/ "(ssr)/./src/hooks/use-session.ts":
/*!**********************************!*\
  !*** ./src/hooks/use-session.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSession: () => (/* binding */ useSession)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _context_settings_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/context/settings-context */ \"(ssr)/./src/context/settings-context.tsx\");\n\n\nconst useSession = ()=>{\n    const { generalSettings } = (0,_context_settings_context__WEBPACK_IMPORTED_MODULE_1__.useSettings)();\n    const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('idle');\n    const [sessionId, setSessionId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Create a new session with the backend\n    const createSession = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useSession.useCallback[createSession]\": async (request)=>{\n            try {\n                setStatus('creating');\n                setError(null);\n                console.log('Creating session with request:', request);\n                console.log('Request JSON:', JSON.stringify(request, null, 2));\n                const response = await fetch(`${(0,_context_settings_context__WEBPACK_IMPORTED_MODULE_1__.getApiBaseUrl)()}/api/v1/sessions`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(request)\n                });\n                if (!response.ok) {\n                    if (response.status === 422) {\n                        // Handle validation errors\n                        const errorData = await response.json();\n                        console.log('422 Error details:', errorData); // Debug log\n                        const sessionError = {\n                            error: errorData.detail?.error || 'VALIDATION_ERROR',\n                            message: errorData.detail?.message || JSON.stringify(errorData)\n                        };\n                        setError(sessionError);\n                        setStatus('error');\n                        return null;\n                    } else {\n                        // Handle other HTTP errors\n                        const errorData = await response.text();\n                        console.log(`${response.status} Error:`, errorData); // Debug log\n                        const sessionError = {\n                            error: 'HTTP_ERROR',\n                            message: `Server responded with status ${response.status}: ${errorData}`\n                        };\n                        setError(sessionError);\n                        setStatus('error');\n                        return null;\n                    }\n                }\n                const data = await response.json();\n                if (!data.session_id) {\n                    const sessionError = {\n                        error: 'INVALID_RESPONSE',\n                        message: 'Server response missing session_id'\n                    };\n                    setError(sessionError);\n                    setStatus('error');\n                    return null;\n                }\n                setSessionId(data.session_id);\n                setStatus('created');\n                console.log('Session created successfully:', data.session_id);\n                return data.session_id;\n            } catch (err) {\n                console.error('Failed to create session:', err);\n                const sessionError = {\n                    error: 'NETWORK_ERROR',\n                    message: err instanceof Error ? err.message : 'Network error occurred'\n                };\n                setError(sessionError);\n                setStatus('error');\n                return null;\n            }\n        }\n    }[\"useSession.useCallback[createSession]\"], []);\n    // Reset session state\n    const resetSession = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useSession.useCallback[resetSession]\": ()=>{\n            setStatus('idle');\n            setSessionId(null);\n            setError(null);\n        }\n    }[\"useSession.useCallback[resetSession]\"], []);\n    return {\n        status,\n        sessionId,\n        error,\n        createSession,\n        resetSession\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/hooks/use-session.ts\n");

/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/dynamic-access-async-storage.external":
/*!***************************************************************************************!*\
  !*** external "next/dist/server/app-render/dynamic-access-async-storage.external.js" ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/dynamic-access-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "module":
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("module");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/is-bot":
/*!***********************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-bot" ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-bot");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/react-player","vendor-chunks/@heroicons","vendor-chunks/styled-jsx"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2FEthanLee%2FDesktop%2FAdvX%2FAI-Watch-Buddy%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=export&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();